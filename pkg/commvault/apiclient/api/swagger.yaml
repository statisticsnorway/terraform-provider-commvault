openapi: 3.0.1
info:
  title: Commvault REST API
  description: Commvault APIs
  contact:
    name: Commvault API
  version: LATEST
servers:
- url: "https://{ServerURL}/commandcenter/api"
  description: "Configure your API Endpoint: \n Replace {ServerURL} with the server\
    \ URL where the API is hosted."
  variables:
    ServerURL:
      description: Add your server url
      default: CommandCenterHostName
- url: https://api.metallic.io
  description: Metallic API Gateway Endpoint
- url: /commandcenter/api
  description: ""
security:
- token: []
- bearerToken: []
tags:
- name: Plan
  description: APIs for Plan Operations
- name: PlanRules
  description: APIs for Plan Rule Operations
- name: ServerPlan
  description: APIs for Server Plan Operations
- name: CDMPlan
  description: APIs for CDM Plan Operations
- name: ObjectStorePlan
  description: APIs for ObjectStore Plan Operations
- name: LaptopPlan
  description: APIs for Laptop Plan Operations
- name: ArchivePlan
  description: APIs for Archive Plan Operations
- name: DCPlan
  description: APIs for Data Classification Plan Operations
- name: User
  description: APIs for User Operations
- name: Company
  description: APIs for Company Operations
- name: ServerGroup
  description: APIs for ServerGroup Operations
- name: CommcellGroup
  description: APIs for CommcellGroup Operations
- name: CloudStorage
  description: APIs for Cloud Storage Pool Operations
- name: UserGroup
  description: APIs for UserGroup Operations
- name: Storage
  description: APIs for Storage Pool Operations
- name: DiskStorage
  description: APIs for Disk Storage Pool Operations
- name: HyperScaleStorage
  description: APIs for HyperScale Storage Pool Operations
- name: Roles
  description: APIs for Role Operations
- name: TapeStorage
  description: APIs for Tape Operations
- name: BigDataApps
  description: APIs for Big Data App Operations
- name: CloudApps
  description: APIs for Cloud Apps Operations
- name: DistributedStorage
  description: APIs for Distributed Storage Operations
- name: FileServers
  description: APIs for File Server Operations
- name: ArchiveFileServers
  description: APIs for Archive File Server Operations
- name: Instances
  description: APIs for Instance Operations
- name: InstantClones
  description: APIs for Database Instant Clone Operations
- name: Databases
  description: APIs for Databases Operations
- name: VirtualMachines
  description: APIs for Virtual Machines Operations
- name: ReplicationGroup
  description: APIs for Replication Group Operations
- name: FailoverGroups
  description: APIs for Failover Group Operations
- name: GCPSpanner
  description: APIs for GCPSpanner Operations
- name: Agent
  description: APIs for Agent Operations
- name: Subclient
  description: APIs for Subclient Operations
- name: MediaAgent
  description: APIs for MediaAgent Operations
- name: EpicServers
  description: APIs for EpicServer Operations
- name: Laptop
  description: APIs for Laptop Operations
- name: NetworkTopology
  description: APIs for Network Topology Operations
- name: Regions
  description: APIs for Regions Operations
- name: BlackoutWindows
  description: APIs for Blackout Window Operations
- name: ResourcePools
  description: APIs for Resource Pool Operations
- name: SNMP
  description: APIs for SNMP Configuration Operations
- name: IndexServers
  description: APIs for Index Server Operations
- name: HybridFileStores
  description: APIs for Hybrid File Stores Operations
- name: EmailServer
  description: APIs for SMTP Email Server Operations
- name: Commcell
  description: APIs for Commcell Operations
- name: ScrubLogs
  description: APIs for Scrub Log Operations
- name: Alerts
  description: APIs for Alerts Operations
- name: Servers
  description: APIs for Server Operations
- name: AdditionalSettings
  description: APIs for Additional Settings Operations
- name: CredentialManager
  description: APIs for Credential Manager Operations
- name: Recovery Point Stores
  description: APIs for RP Store Operations
- name: Solutions
  description: APIs for Workload Solutions Operations
- name: GlobalExceptions
  description: APIs for Global Exception Operations
- name: KeyManagementServer
  description: APIs for Key Management Server Operations
- name: RecoveryTarget
  description: APIs for Recovery Target Operations
- name: IdentityServers
  description: APIs for Identity Servers Operations
- name: SyslogServer
  description: APIs for Syslog Server Operations
- name: ServiceCommcells
  description: APIs for Service Commcells Operations
- name: MultiCommCell
  description: APIs for retrieving information about MultiCommCells
- name: RequestManager
  description: APIs for Request Manager Operations
- name: DistributedSystems
  description: APIs for Distributed systems Operations
- name: AccessControl
  description: APIs for Access Control Operations
- name: License
  description: APIs for License Operations
- name: Activate
  description: APIs for Activate Operations
- name: AnomalousConditions
  description: APIs for Anomalous Condition Operations
- name: ReplicationMonitor
  description: APIs for Replication Monitor Pair Operations
- name: LaptopOwnerMapping
  description: APIs for Laptop Owner Mapping Operations
- name: Schedule
  description: APIs for schedule and schedule policy operations
- name: GlobalSearch
  description: APIs for global search related operations
- name: EntityTag
  description: APIs for entity tags related operations
- name: InventoryManager
  description: APIs for Inventory Manager Operations
- name: VMProvisioning
  description: APIs for VM Provisioning Operations
- name: StorageArrays
  description: APIs for Storage Array Operations
- name: Office365
  description: APIs for Office 365 Operations
- name: Exchange
  description: APIs for Office 365 Exchange Operations
- name: OneDrive
  description: APIs for Office 365 OneDrive Operations
- name: Sharepoint
  description: APIs for Office 365 Sharepoint Operations
- name: Teams
  description: APIs for Office 365 Teams Operations
- name: Dynamics365
  description: APIs for Dynamics 365 Operations
- name: ActiveDirectory
  description: APIs for Active Directory Operations
- name: DeveloperTools
  description: APIs for Development Operations
- name: ActivityControl
  description: APIs to manage activity controls
- name: SoftwareCache
  description: APIs to manage Software Caches
- name: Kubernetes
  description: APIs to manage Kubernetes Workloads
- name: SnapshotManagement
  description: APIs to manage Storage snapshot
- name: Snapshot Configurations
  description: APIs to manage snapshot configurations
- name: Snapshot Operations
  description: APIs to manage snapshot operations
- name: Array Management
  description: APIs to manage storage arrays
- name: RecoveryGroup
  description: APIs to manage recovery groups
- name: RecoveryGroupEntities
  description: APIs to manage entities in recovery groups
- name: Cleanroom Targets
  description: APIs to manage cleanroom targets
- name: CVFS
  description: APIs to manage CVFS S3 bucket operations
- name: CyberResilience
  description: APIs for Cyber Resilience Operations
- name: DRBackup
  description: APIs for DR Backup Operations
- name: PSA
  description: APIs for PSA Operations
- name: CommServ
  description: APIs for CommServ Operations
paths:
  /V4/PlanIds:
    get:
      tags:
      - Plan
      summary: Get List of Plans
      description: Get All Plans as Name Id Pairs
      operationId: GetPlanIds
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityDetails"
        "404":
          description: Requested Details not found
  /V4/Plan/Summary:
    get:
      tags:
      - Plan
      summary: Get Summary of a Plan
      description: Get Summary of a Plan
      operationId: GetPlanSummary
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlanSummaryListResp"
        "404":
          description: Requested Details not found
  /V4/CDMPlan:
    post:
      tags:
      - CDMPlan
      summary: Create CDM Plan
      description: Create a CDM Plan
      operationId: CreateCDMPlan
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateCDMPlan"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlanResp"
        "404":
          description: Requested Details not found
  /V4/ObjectStorePlan:
    post:
      tags:
      - ObjectStorePlan
      summary: Create ObjectStore Plan
      description: Create a ObjectStore Plan
      operationId: CreateObjectStorePlan
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateObjectStorePlan"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlanResp"
        "404":
          description: Requested Details not found
  /V4/ObjectStorePlan/{planId}:
    get:
      tags:
      - ObjectStorePlan
      summary: Get Object Store Plan Details
      description: 'Get Object Store Plan details '
      operationId: GetObjectStorePlanId
      parameters:
      - name: planId
        in: path
        description: Id of the object store plan to fetch details
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ObjectStorePlan"
        "404":
          description: Requested Details not found
    put:
      tags:
      - ObjectStorePlan
      summary: Update the object store plan
      description: Used to modify an exsiting ObjectStore plan
      operationId: ModifyObjectStorePlan
      parameters:
      - name: planId
        in: path
        description: Id of the Plan to update
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateObjectStorePlan"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "404":
          description: Requested Details not found
    delete:
      tags:
      - ObjectStorePlan
      summary: Delete Object Store Plan
      description: Used to delete an existing server plan
      operationId: DeleteObjectStorePlan
      parameters:
      - name: planId
        in: path
        description: Id of the object store plan to delete
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "404":
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/ServerPlan:
    post:
      tags:
      - ServerPlan
      summary: Create Server Plan
      description: Create a Server Plan
      operationId: CreateServerPlan
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateServerPlan"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlanResp"
        "404":
          description: Requested Details not found
      x-terraform-resource: Plan_Server
  /V4/Global/ServerPlan:
    post:
      tags:
      - GlobalServerPlan
      summary: Create Global Server Plan
      description: Create a Global Server Plan
      operationId: CreateGlobalServerPlan
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateGlobalServerPlan"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlanResp"
        "404":
          description: Requested Details not found
      x-terraform-resource: Plan_Server
  /V4/DCPlan:
    post:
      tags:
      - DCPlan
      summary: Create a Data Classification Plan
      description: Create a Data Classification Plan
      operationId: CreateDCPlan
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateDCPlan"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlanResp"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "404":
          description: Requested Details not found
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
      x-terraform-resource: plan_v2
  /V4/ServerPlan/{planId}:
    get:
      tags:
      - ServerPlan
      summary: Get Server Plan Details
      description: 'Get Plan details '
      operationId: GetPlanById
      parameters:
      - name: planId
        in: path
        description: Id of the plan to fetch details
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
        x-terraform-id: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerPlan"
        "404":
          description: Requested Details not found
      x-terraform-resource: Plan_Server
    put:
      tags:
      - ServerPlan
      summary: Update the server plan
      description: Used to modify an exsiting server plan
      operationId: ModifyPlan
      parameters:
      - name: planId
        in: path
        description: Id of the Plan to update
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
        x-terraform-id: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateServerPlan"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "404":
          description: Requested Details not found
      x-terraform-resource: Plan_Server
    delete:
      tags:
      - ServerPlan
      summary: Delete a Server Plan
      description: Used to delete an existing server plan
      operationId: DeletePlan
      parameters:
      - name: planId
        in: path
        description: Id of the plan to delete
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
        x-terraform-id: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "404":
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
      x-terraform-resource: Plan_Server
  /V4/DCPlan/{planId}:
    get:
      tags:
      - DCPlan
      summary: Get Data Classification Plan By ID
      description: 'Get Data Classification Plan details '
      operationId: GetDCPlanById
      parameters:
      - name: planId
        in: path
        description: Id of the plan to fetch details
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DCPlanDetails"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "404":
          description: Requested Details not found
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
    put:
      tags:
      - DCPlan
      summary: Modify Data Classification Plan
      description: Used to modify an existing data classification plan
      operationId: ModifyDCPlan
      parameters:
      - name: planId
        in: path
        description: Id of the Plan to update
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateDCPlan"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "404":
          description: Requested Details not found
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
    delete:
      tags:
      - DCPlan
      summary: Delete Data Classification Plan
      description: Used to delete an existing data classification plan
      operationId: DeleteDCPlan
      parameters:
      - name: planId
        in: path
        description: Id of the plan to delete
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/ServerPlan/{planId}/BackupDestinations:
    get:
      tags:
      - ServerPlan
      summary: Get Backup Destination of Server Plan
      description: Get Backup Destinations for a Plan
      operationId: GetBackupDestinations
      parameters:
      - name: planId
        in: path
        description: Id of the Plan to retrieve backup destinations
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlanBackupDestinations"
        "404":
          description: Requested Details not found
  /V4/ServerPlan/{planId}/BackupContent:
    post:
      tags:
      - ServerPlan
      summary: Create Server Plan Backup Content
      description: API to create backup content on server plan
      operationId: CreateServerPlanBackupContent
      parameters:
      - name: planId
        in: path
        description: Id of the Plan to modify
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateServerPlanBackupContent"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateServerPlanBackupContentResponse"
        "404":
          description: Requested Details not found
  /V4/ServerPlan/{planId}/RPO:
    get:
      tags:
      - ServerPlan
      summary: Get Server Plan RPO
      description: API to fetch schedules responsible for server plan RPO
      operationId: GetServerPlanRPO
      parameters:
      - name: planId
        in: path
        description: Id of the Server Plan
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlanSchedules"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
    put:
      tags:
      - ServerPlan
      summary: Update Server Plan RPO
      description: API to modify RPO schedules on server plan
      operationId: UpdateServerPlanRPO
      parameters:
      - name: planId
        in: path
        description: Id of the Server Plan
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ServerPlanUpdateSchedules"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
    post:
      tags:
      - ServerPlan
      summary: Create Server Plan RPO
      description: API to create RPO schedules on server plan
      operationId: CreateServerPlanRPO
      parameters:
      - name: planId
        in: path
        description: Id of the Server Plan
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateServerPlanRPO"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateServerPlanRPOResponse"
        "404":
          description: Requested Details not found
  /V4/ServerPlan/{planId}/Retention/Synthfull:
    put:
      tags:
      - ServerPlan
      summary: Update the server plan retention based synthetic full
      description: Used to update synthetic full schedule on plan based on retention
        settings
      parameters:
      - name: planId
        in: path
        description: Id of the Plan to update
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
        x-terraform-id: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "404":
          description: Requested Details not found
  /V4/ServerPlan/{planId}/BackupDestination:
    post:
      tags:
      - ServerPlan
      summary: Create Backup Destination for Server Plan
      description: Create a Backup Destination for a Plan
      operationId: CreateBackupDestination
      parameters:
      - name: planId
        in: path
        description: Id of the Plan to modify
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreatePlanBackupDestinations"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlanBackupDestinationResp"
        "404":
          description: Requested Details not found
  /V4/ServerPlan/{planId}/BackupDestination/{BackupDestinationId}:
    put:
      tags:
      - ServerPlan
      summary: Modify ServerPlan BackupDestination
      description: Modify Backup Destination for a Plan
      operationId: ModifyBackupDestination
      parameters:
      - name: planId
        in: path
        description: Id of the Plan to modify
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: BackupDestinationId
        in: path
        description: Id of the backupDestination to be modified
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdatePlanBackupDestination"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlanBackupDestinationResp"
        "404":
          description: Requested Details not found
    delete:
      tags:
      - ServerPlan
      summary: Delete ServerPlan BackupDestination
      description: Delete Backup Destination for a Plan
      operationId: DeleteBackupDestination
      parameters:
      - name: planId
        in: path
        description: Id of the Plan to modify
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: BackupDestinationId
        in: path
        description: Id of the backupDestination to be deleted
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "404":
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "412":
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V5/ServerPlan/{planId}/BackupDestination/{BackupDestinationId}:
    get:
      tags:
      - ServerPlan
      summary: Get Backup Destination details of ServerPlan
      description: Get specific backup destination details for a server plan
      operationId: GetBackupDestinationDetails
      parameters:
      - name: planId
        in: path
        description: Id of the plan to retrieve backup destination
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: BackupDestinationId
        in: path
        description: Id of the backup destination
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlanBackupDestinationDetails"
        "404":
          description: Requested Details not found
    put:
      tags:
      - ServerPlan
      summary: Update Backup Destination details of ServerPlan
      description: Modify Backup Destination details for a Plan
      operationId: ModifyBackupDestinationDetails
      parameters:
      - name: planId
        in: path
        description: Id of the Plan to modify
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: BackupDestinationId
        in: path
        description: Id of the backupDestination to be modified
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdatePlanBackupDestinationDetails"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlanBackupDestinationResp"
        "404":
          description: Requested Details not found
  /V5/ServerPlan/{planId}/BackupDestination/SourceCopy/Eligible:
    get:
      tags:
      - ServerPlan
      summary: Gives a list of eligible source copies for given region id
      description: Gives a list of eligible source copies for given region id
      operationId: GetSourceCopiesForGivenServerPlanRegion
      parameters:
      - name: planId
        in: path
        description: Id of plan
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      - name: regionId
        in: query
        description: Region Id against which we want to check eligible source copies.
          Skip if no region present.
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: forSnapCopy
        in: query
        description: Get list of source copy eligible for snap copy in given region.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlanSourceCopies"
  /V4/ServerPlan/{planId}/storageRegion/{regionList}:
    delete:
      tags:
      - ServerPlan
      summary: Delete Server Plan Storage Region
      description: Delete Storage Region for an Elastic Plan
      operationId: DeleteStorageRegion
      parameters:
      - name: planId
        in: path
        description: Id of the Plan to modify
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: regionList
        in: path
        description: "List of region names/ids to be deleted. If region ids are passed,\
          \ set isRegionIdList=true"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isRegionIdList
        in: query
        description: Is regionList a list of region ids
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "404":
          description: Requested Details not found
  /V4/Global/ServerPlan/{planId}/storageRegion/{regionId}:
    delete:
      tags:
      - ServerPlan
      summary: Delete Global Server Plan Storage Region
      description: Delete Storage Region for a Global Plan
      operationId: DeleteStorageTagRegion
      parameters:
      - name: planId
        in: path
        description: Id of the Plan to modify
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: regionId
        in: path
        description: Region id to be deleted.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "404":
          description: Requested Details not found
  /V4/ServerPlan/{planId}/Backup/Enable:
    put:
      tags:
      - ServerPlan
      summary: Enable backup Schedule policies on server plan
      description: API to Enable backup schedule policies on server plan
      operationId: EnableBackupOnPlan
      parameters:
      - name: planId
        in: path
        description: Id of the Server Plan
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/ServerPlan/{planId}/Backup/Disable:
    put:
      tags:
      - ServerPlan
      summary: Disable Backup Schedule policies on serverplan
      description: API to Disable backup schedule policies on server plan
      operationId: DisableBackupOnPlan
      parameters:
      - name: planId
        in: path
        description: Id of the Server Plan
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/ServerPlan/{planId}/Backup:
    post:
      tags:
      - ServerPlan
      summary: Run backups on server plan associated entities
      description: Run backups on server plan associated entities
      operationId: BackupServerPlan
      parameters:
      - name: planId
        in: path
        description: Id of the Server Plan
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: backupLevel
        in: query
        description: Backup level of jobs
        required: true
        style: form
        explode: true
        schema:
          type: string
          enum:
          - INCREMENTAL
          - DIFFERENTIAL
          - FULL
          - SYNTHETIC_FULL
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateTaskRespforBackup"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/ServerPlan/{planId}/RPO/Run:
    post:
      tags:
      - ServerPlan
      summary: Run backups on server plan associated entities based on existing schedule
      description: Run backups on server plan associated entities
      operationId: BackupServerPlan
      parameters:
      - name: planId
        in: path
        description: Id of the Plan to modify
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ServerPlanBackupRequest"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateTaskRespforBackup"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /RecoveryEntity/{recoveryEntityId}:
    get:
      tags:
      - RecoveryGroupEntities
      summary: Get the details of a recovery entity
      description: Get the details of a recovery entity
      operationId: GetRecoveryEntity
      parameters:
      - name: recoveryEntityId
        in: path
        description: Recovery entity Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RecoveryEntity"
        "400":
          description: Unable to get recovery entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /RecoveryGroup/{recoveryGroupId}:
    get:
      tags:
      - RecoveryGroup
      summary: Get details for recovery group
      description: Get details for recovery group
      operationId: GetRecoveryGroup
      parameters:
      - name: recoveryGroupId
        in: path
        description: Recovery group Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      - name: getEntityDetails
        in: query
        description: Get the entity details with recovery group details
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetRecoveryGroupDetailsResp"
        "404":
          description: Recovery group could not be found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
    put:
      tags:
      - RecoveryGroup
      summary: Update Recovery Group
      description: Update Recovery Group
      operationId: UpdateRecoveryGroup
      parameters:
      - name: recoveryGroupId
        in: path
        description: Recovery group Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RecoveryGroup"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateRecoveryGroupResp"
            application/xml:
              schema:
                type: object
                properties: {}
    delete:
      tags:
      - RecoveryGroup
      summary: Delete recovery group
      description: Delete recovery group
      operationId: DeleteRecoveryGroup
      parameters:
      - name: recoveryGroupId
        in: path
        description: Recovery group Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateRecoveryGroupResp"
            application/xml:
              schema:
                type: object
                properties: {}
  /RecoveryGroup/{recoveryGroupId}/Entity:
    put:
      tags:
      - RecoveryGroupEntities
      summary: Update recovery entities in a recovery group
      description: Updating recovery entities in the recovery group
      operationId: UpdateRecoveryEntities
      parameters:
      - name: recoveryGroupId
        in: path
        description: Recovery group Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddUpdateRecoveryEntityRequest"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "400":
          description: Entity cannot be created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
    post:
      tags:
      - RecoveryGroupEntities
      summary: Create entities in a recovery group
      description: Create entities in the recovery group
      operationId: CreateRecoveryEntities
      parameters:
      - name: recoveryGroupId
        in: path
        description: Recovery group Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddUpdateRecoveryEntityRequest"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "400":
          description: Entity cannot be created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
    delete:
      tags:
      - RecoveryGroupEntities
      summary: Delete recovery entities for a group
      description: Delete recovery entities for a group
      operationId: DeleteRecoveryEntities
      parameters:
      - name: recoveryGroupId
        in: path
        description: Recovery group Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteRecoveryEntityReq"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /RecoveryGroup/{recoveryGroupId}/Entity/{entityId}:
    put:
      tags:
      - RecoveryGroupEntities
      summary: Update recovery entity in a recovery group
      description: Updating the entity in the recovery group
      operationId: UpdateRecoveryEntity
      parameters:
      - name: recoveryGroupId
        in: path
        description: Recovery group Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      - name: entityId
        in: path
        description: Recovery entity Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RecoveryEntity"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "400":
          description: Entity cannot be updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /RecoveryGroups:
    get:
      tags:
      - RecoveryGroup
      summary: Get the list of Recovery groups
      description: Get the list of Recovery groups
      operationId: GetRecoveryGroups
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RecoveryGroupListResp"
        "501":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /RecoveryGroup:
    post:
      tags:
      - RecoveryGroup
      summary: Create Recovery Group
      description: Create Recovery group
      operationId: CreateRecoveryGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RecoveryGroup"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateRecoveryGroupResp"
  /RecoveryGroup/{recoveryGroupId}/Recover:
    post:
      tags:
      - RecoveryGroup
      summary: Launching recovery action for a recovery group
      description: Launching recovery action for a recovery group
      operationId: RecoveryGroupRecover
      parameters:
      - name: recoveryGroupId
        in: path
        description: Recovery group Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RecoveryActionRequest"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/JobIdResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /RecoveryGroup/CleanupRecovery:
    post:
      tags:
      - RecoveryGroup
      summary: Launching cleanup recovery action for a recovery group
      description: Cleanup recovery action will delete the recovered entities for
        a recovery group
      operationId: RecoveryGroupCleanupRecovery
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RecoveryActionRequest"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/JobIdResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /LicenseUsage:
    get:
      tags:
      - RecoveryGroup
      summary: Get license usage details for a license type
      description: Get license usage details for a license type
      operationId: GetLicenseUsage
      parameters:
      - name: licenseType
        in: query
        description: License type for which usage details are required
        required: true
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/LicenseType"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LicenseUsageDetails"
        "404":
          description: License type is not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/LaptopPlan:
    post:
      tags:
      - LaptopPlan
      summary: Create Laptop Plan
      description: Create Laptop Plan
      operationId: CreateLaptopPlan
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/V4_LaptopPlan_body"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/LaptopPlan/{planId}:
    get:
      tags:
      - LaptopPlan
      summary: Get Laptop Plan details
      description: Get Laptop Plan details
      operationId: GetLaptopPlanById
      parameters:
      - name: planId
        in: path
        description: Id of the plan
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LaptopPlanDetails"
        "404":
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
    put:
      tags:
      - LaptopPlan
      summary: ' Modify existing laptop plan details'
      description: Modify existing laptop plan details
      operationId: ModifyLaptopPlanById
      parameters:
      - name: planId
        in: path
        description: Id of the plan
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateLaptopPlan"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "404":
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
    delete:
      tags:
      - LaptopPlan
      summary: Delete existing laptop plan
      description: Delete existing laptop plan
      operationId: DeleteLaptopPlanById
      parameters:
      - name: planId
        in: path
        description: Id of the plan
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "404":
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/LaptopPlan/{planId}/BackupDestinations:
    get:
      tags:
      - LaptopPlan
      summary: Get LaptopPlan BackupDestinations
      description: Get Backup Destinations for a Plan
      operationId: GetLaptopBackupDestinations
      parameters:
      - name: planId
        in: path
        description: Id of the Laptop Plan to retrieve backup destinations
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlanBackupDestinations"
        "404":
          description: Requested Details not found
  /V4/LaptopPlan/{planId}/BackupDestination:
    post:
      tags:
      - LaptopPlan
      summary: Create a LaptopPlan BackupDestination
      description: Create a Backup Destination for a Plan
      operationId: CreateLaptopBackupDestination
      parameters:
      - name: planId
        in: path
        description: Id of the Plan to modify
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreatePlanBackupDestinations"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlanBackupDestinationResp"
        "404":
          description: Requested Details not found
  /V4/LaptopPlan/{planId}/BackupDestination/{BackupDestinationId}:
    put:
      tags:
      - LaptopPlan
      summary: Update LaptopPlan BackupDestination
      description: Modify Backup Destination for a Plan
      operationId: ModifyLaptopBackupDestination
      parameters:
      - name: planId
        in: path
        description: Id of the Plan to modify
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: BackupDestinationId
        in: path
        description: Id of the backupDestination to be modified
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdatePlanBackupDestination"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlanBackupDestinationResp"
        "404":
          description: Requested Details not found
    delete:
      tags:
      - LaptopPlan
      summary: Delete LaptopPlan BackupDestination
      description: Delete Backup Destination for a Plan
      operationId: DeleteLaptopBackupDestination
      parameters:
      - name: planId
        in: path
        description: Id of the Plan to modify
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: BackupDestinationId
        in: path
        description: Id of the backupDestination to be deleted
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "404":
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "412":
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/LaptopPlan/{planId}/storageRegion/{regionList}:
    delete:
      tags:
      - LaptopPlan
      summary: Delete Storage Region of LaptopPlan
      description: Delete Storage Region for a laptop Plan
      operationId: DeleteStorageRegionForLaptopPlan
      parameters:
      - name: planId
        in: path
        description: Id of the Laptop Plan to modify
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: regionList
        in: path
        description: "List of region names/ids to be deleted. If region ids are passed,\
          \ set isRegionIdList=true"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isRegionIdList
        in: query
        description: Is regionList a list of region ids
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "404":
          description: Requested Details not found
  /V4/ArchivePlan:
    post:
      tags:
      - ArchivePlan
      summary: Create Archive Plan
      description: Create Archive Plan
      operationId: CreateArchivePlan
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ArchivePlan"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlanResp"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/ArchivePlan/{planId}:
    get:
      tags:
      - ArchivePlan
      summary: Get Archive Plan details
      description: Get Archive Plan details
      operationId: GetArchivePlanById
      parameters:
      - name: planId
        in: path
        description: Id of the plan
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ArchivePlanDetails"
        "404":
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
    put:
      tags:
      - ArchivePlan
      summary: Modify existing archive plan details
      description: Modify existing archive plan details
      operationId: ModifyArchivePlanById
      parameters:
      - name: planId
        in: path
        description: Id of the plan
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateArchivePlan"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "404":
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
    delete:
      tags:
      - ArchivePlan
      summary: Delete existing archive plan
      description: Delete existing archive plan
      operationId: DeleteArchivePlanById
      parameters:
      - name: planId
        in: path
        description: Id of the plan
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "404":
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/ArchivePlan/{planId}/BackupDestinations:
    get:
      tags:
      - ArchivePlan
      description: Get Backup Destinations for a Plan
      operationId: GetArchiveBackupDestinations
      parameters:
      - name: planId
        in: path
        description: Id of the Archive Plan to retrieve backup destinations
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ArchivePlanBackupDestinations"
        "404":
          description: Requested Details not found
  /V4/ArchivePlan/{planId}/BackupDestination:
    post:
      tags:
      - ArchivePlan
      description: Create a Backup Destination for a Plan
      operationId: CreateArchiveBackupDestination
      parameters:
      - name: planId
        in: path
        description: Id of the Plan to modify
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateArchivePlanBackupDestinations"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlanBackupDestinationResp"
        "404":
          description: Requested Details not found
  /V4/ArchivePlan/{planId}/BackupDestination/{BackupDestinationId}:
    put:
      tags:
      - ArchivePlan
      description: Modify Backup Destination for a Plan
      operationId: ModifyArchiveBackupDestination
      parameters:
      - name: planId
        in: path
        description: Id of the Plan to modify
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: BackupDestinationId
        in: path
        description: Id of the backupDestination to be modified
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateArchivePlanBackupDestination"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlanBackupDestinationResp"
        "404":
          description: Requested Details not found
    delete:
      tags:
      - ArchivePlan
      description: Delete Backup Destination for a Plan
      operationId: DeleteArchiveBackupDestination
      parameters:
      - name: planId
        in: path
        description: Id of the Plan to modify
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: BackupDestinationId
        in: path
        description: Id of the backupDestination to be deleted
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "404":
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "412":
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/ArchivePlan/{planId}/storageRegion/{regionList}:
    delete:
      tags:
      - ArchivePlan
      description: Delete Storage Region for a archive Plan
      operationId: DeleteStorageRegionForArchivePlan
      parameters:
      - name: planId
        in: path
        description: Id of the Archive Plan to modify
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: regionList
        in: path
        description: "List of region names/ids to be deleted. If region ids are passed,\
          \ set isRegionIdList=true"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isRegionIdList
        in: query
        description: Is regionList a list of region ids
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "404":
          description: Requested Details not found
  /V4/DRBackup/BackupDestinations:
    get:
      tags:
      - DRBackup
      summary: Get backup destinations for CommServe DR Backups
      description: Get backup destinations for CommServe DR Backups
      operationId: GetDRBackupDestinations
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlanBackupDestinations"
        "404":
          description: Requested Details not found
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
    post:
      tags:
      - DRBackup
      summary: Create a backup destination for CommServe DR Backups
      description: Create a backup destination for CommServe DR Backups
      operationId: CreateDRBackupDestination
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreatePlanBackupDestinations"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlanBackupDestinationResp"
        "404":
          description: Requested Details not found
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/DRBackup/BackupDestination/SourceCopy/Eligible:
    get:
      tags:
      - DRBackup
      summary: Gives a list of eligible source copies for CommServe DR storage policy
      description: Gives a list of eligible source copies for CommServe DR storage
        policy
      operationId: GetSourceCopiesForDRBackup
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlanSourceCopies"
  /V4/DRBackup/BackupDestination/{BackupDestinationId}:
    get:
      tags:
      - DRBackup
      summary: Get Backup Destination details of DR backup destination
      description: Get specific backup destination details for Commserve DR Backups
      operationId: GetDRBackupDestinationDetails
      parameters:
      - name: BackupDestinationId
        in: path
        description: Id of the backup destination
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlanBackupDestinationDetails"
        "404":
          description: Requested Details not found
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
    put:
      tags:
      - DRBackup
      summary: Update Backup Destination details of DR backup destination
      description: Modify Backup Destination details for CommServe DR backups
      operationId: ModifyDRBackupDestinationDetails
      parameters:
      - name: BackupDestinationId
        in: path
        description: Id of the backupDestination to be modified
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdatePlanBackupDestinationDetails"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlanBackupDestinationResp"
        "404":
          description: Requested Details not found
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
    delete:
      tags:
      - DRBackup
      summary: Delete Backup Destination of Commserve DR backup
      description: Delete DR Backup Destination for Commserve DR backup
      operationId: DeleteDRBackupDestination
      parameters:
      - name: BackupDestinationId
        in: path
        description: Id of the backupDestination to be deleted
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "404":
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "412":
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/DRBackup/StoragePolicy:
    get:
      tags:
      - DRBackup
      summary: Get details of DR backup storage policy
      description: Get DR backup storage policy details
      operationId: GetDRBackupStoragePolicy
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IdName"
        "404":
          description: Requested Details not found
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/user:
    get:
      tags:
      - User
      summary: Get Users
      description: Get All Users
      operationId: GetUsers
      parameters:
      - name: laptopUsers
        in: query
        description: Returns only laptop users when set to true. This param is only
          effective when EdgeMode header is passed.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: userGroupId
        in: query
        description: Returns the list of users associated to the userGroupId provided.
        required: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserListResp"
        "404":
          description: Requested Details not found
      x-hidden-description: |
        This api can be used to get all users present in the commcell
    post:
      tags:
      - User
      description: Create a User
      operationId: CreateUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateUsers"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateUserResp"
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      x-terraform-resource: User_V2
      x-hidden-description: |
        This api can be used to create a new commcell user
  /V4/user/action/delete:
    put:
      tags:
      - User
      summary: Delete Multiple Users
      description: Delete multiple users
      operationId: DeleteMultipleUsers
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteMultipleUsers"
            examples:
              Delete multiple users:
                value:
                  users:
                  - skipOwnerTransfer: true
                    newUser:
                      id: 0
                      name: string
                    user:
                      id: 0
                      name: string
                  - skipOwnerTransfer: true
                    newUserGroup:
                      id: 0
                      name: string
                    user:
                      id: 0
                      name: string
                  - skipOwnerTransfer: false
                    user:
                      id: 0
                      name: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "400":
          description: Bad Request
        "404":
          description: Requested Details not found
      x-hidden-description: |
        This api can be used to delete multiple commcell users
  /V4/user/{userId}:
    get:
      tags:
      - User
      summary: Get User Details
      description: Get details of a User based on id
      operationId: GetUserDetails
      parameters:
      - name: userId
        in: path
        description: Id of the User whose details have to be fetched
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
        x-terraform-id: true
      - name: mode
        in: header
        required: false
        style: simple
        explode: false
        schema:
          $ref: "#/components/schemas/Mode"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "404":
          description: Requested Details not found
      x-terraform-resource: User_V2
      x-hidden-description: |
        This api can be get the details of a commcell user from its id
    put:
      tags:
      - User
      summary: Update existing user
      description: Used to modify an existing user
      operationId: ModifyUser
      parameters:
      - name: userId
        in: path
        description: Id of the User to update
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
        x-terraform-id: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateUser"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "400":
          description: Bad Request
        "404":
          description: Requested Details not found
      x-hidden-description: |
        This api can be update the details of a commcell user
      x-terraform-resource: User_V2
      x-terraform-function: handler.UpdateUserRequest
    delete:
      tags:
      - User
      summary: Delete an User
      description: Used to delete a user
      operationId: DeleteUser
      parameters:
      - name: userId
        in: path
        description: Id of the user to delete
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
        x-terraform-id: true
      - name: skipOwnerShipTransfer
        in: query
        description: If user properties needn't be transferred to other user or usergroup
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: transferToUser
        in: query
        description: If user properties needs to be transferred to other user
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: transfertoUserGroup
        in: query
        description: If user properties needs to be transferred to other userGroup
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "404":
          description: Requested Details not found
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
      x-hidden-description: |
        This api can be delete a commcell user
      x-terraform-resource: User_V2
  /V4/user/{userId}/authenticationMethods:
    get:
      tags:
      - HIDDEN
      description: Used to fetch authentication methods of an existing user
      operationId: getUserauthenticationMethods
      parameters:
      - name: userId
        in: path
        description: Id of the User whose authentication method details have to be
          fetched
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: fetchAvailableMethodsOnly
        in: query
        description: Set as true to fetch the list of available authentication methods
          for the user
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserAuthenticationMethods"
        "404":
          description: Requested Details not found
      x-hidden-description: |
        Can be used to fetch auth methods of an existing commcell user
  /V4/company:
    get:
      tags:
      - Company
      summary: Get Companies
      description: Get All Companies
      operationId: GetCompanies
      parameters:
      - name: includeDeletedCompanies
        in: query
        description: "If true, companies marked for deletion are included in the response"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CompanyListResponse"
        "404":
          description: Requested Details not found
      x-hidden-description: |
        Can be used to get the id of a company/organization
    post:
      tags:
      - Company
      summary: Create a Company
      description: Create a Company
      operationId: CreateCompany
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateCompany"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IdName"
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
  /V4/company/{companyId}:
    get:
      tags:
      - Company
      summary: Get Company Details
      description: Get details of a company based on id
      operationId: GetCompanyDetails
      parameters:
      - name: companyId
        in: path
        description: Id of the Company whose details have to be fetched
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: showInheritedAssociation
        in: query
        description: Show inherited security association
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Company"
        "404":
          description: Requested Details not found
    put:
      tags:
      - Company
      summary: Update the properties of existing company
      description: Modify the properties of an existing company
      operationId: ModifyCompany
      parameters:
      - name: companyId
        in: path
        description: Id of the company to update
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateCompany"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "400":
          description: Bad Request
        "404":
          description: Requested Details not found
    delete:
      tags:
      - Company
      summary: Delete a company
      description: Used to delete a company which has been deactivated
      operationId: DeleteCompany
      parameters:
      - name: companyId
        in: path
        description: Id of the company to delete
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "404":
          description: Requested Details not found
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/Company/{companyId}/Servers/Timezone:
    put:
      tags:
      - Company
      summary: Update the company Timezone for servers
      description: Assigns company's timezone as the timezone for servers with no
        packages installed
      operationId: UpdateCompanyTimezoneForServers
      parameters:
      - name: companyId
        in: path
        description: Id of the company whose timezone is used to update timezone of
          servers (with no packages)
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateTimezoneForClientsReq"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/Company/{companyId}/LocalAuthentication:
    get:
      tags:
      - HIDDEN
      description: Fetch local authentication details of the company
      operationId: FetchLocalAuthenticationDetilsOfCompany
      parameters:
      - name: companyId
        in: path
        description: Id of the company
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LocalAuthenticationDetailsResponse"
  /V4/Company/{companyId}/LocalAuthentication/Action/Enable:
    put:
      tags:
      - HIDDEN
      description: Enable local authentication for the company
      operationId: EnableLocalAuthenticationForCompany
      parameters:
      - name: companyId
        in: path
        description: Id of the company
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LocalAuthenticationDetails"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/Company/{companyId}/LocalAuthentication/Action/Disable:
    put:
      tags:
      - HIDDEN
      description: Disable local authentication for the company
      operationId: DisableLocalAuthenticationForCompany
      parameters:
      - name: companyId
        in: path
        description: Id of the company
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/UserGroup:
    get:
      tags:
      - UserGroup
      summary: Get UserGroups
      description: Get a list of existing user groups.
      operationId: GetUserGroups
      parameters:
      - name: mode
        in: header
        required: false
        style: simple
        explode: false
        schema:
          $ref: "#/components/schemas/Mode"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserGroupListResponse"
        "404":
          description: Requested Details not found
      x-hidden-description: |
        Can be used to fetch list of existing commcell user groups
    post:
      tags:
      - UserGroup
      summary: Create User group
      description: Create a new user-group
      operationId: CreateUserGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateUserGroup"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IdNameGUID"
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      x-terraform-resource: UserGroup
      x-hidden-description: |
        Can be used to create a new commcell user group
  /V4/UserGroup/action/delete:
    put:
      tags:
      - UserGroup
      summary: Delete user groups
      description: Delete multiple userGroups
      operationId: DeleteMultipleUserGroups
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteMultipleUserGroups"
            examples:
              Delete multiple usergroups:
                value:
                  userGroups:
                  - skipOwnerTransfer: true
                    newUser:
                      id: 0
                      name: string
                    userGroup:
                      id: 0
                      name: string
                  - skipOwnerTransfer: true
                    newUserGroup:
                      id: 0
                      name: string
                    userGroup:
                      id: 0
                      name: string
                  - skipOwnerTransfer: false
                    userGroup:
                      id: 0
                      name: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "400":
          description: Bad Request
        "404":
          description: Requested Details not found
      x-hidden-description: |
        Can be used to delete multiple commcell user group
  /V4/UserGroup/{userGroupId}:
    get:
      tags:
      - UserGroup
      summary: Get User Group Details
      description: Get details of a user-group based on id
      operationId: GetUserGroupDetails
      parameters:
      - name: userGroupId
        in: path
        description: Id of the user-group whose details have to be fetched
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
        x-terraform-id: true
      - name: mode
        in: header
        required: false
        style: simple
        explode: false
        schema:
          $ref: "#/components/schemas/Mode"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserGroup"
        "404":
          description: Requested Details not found
      x-terraform-resource: UserGroup
      x-terraform-query: ?additionalproperties=true
      x-hidden-description: |
        Get details of a commcell user group from its id
    put:
      tags:
      - UserGroup
      summary: Update User Group Details
      description: Modify the properties of an existing user-group
      operationId: ModifyUserGroup
      parameters:
      - name: userGroupId
        in: path
        description: Id of the user-group to update
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
        x-terraform-id: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateUserGroup"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "400":
          description: Bad Request
        "404":
          description: Requested Details not found
      x-terraform-resource: UserGroup
      x-hidden-description: |
        This can be used to enable two-factor authentication at user group level
        Update propertiers of a commcell user group
    delete:
      tags:
      - UserGroup
      summary: Delete User Group
      description: Used to delete a user-group
      operationId: DeleteUserGroup
      parameters:
      - name: userGroupId
        in: path
        description: Id of the user-group to delete
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
        x-terraform-id: true
      - name: skipOwnerShipTransfer
        in: query
        description: If user group properties needn't be transferred to other user
          or usergroup
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: transferToUser
        in: query
        description: If user group properties needs to be transferred to other user
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: transfertoUserGroup
        in: query
        description: If user group properties needs to be transferred to other userGroup
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "404":
          description: Requested Details not found
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
      x-hidden-description: |
        delete a commcell user group
      x-terraform-resource: UserGroup
  /V4/Storage/{storagePoolId}/associatedCopies:
    get:
      tags:
      - Storage
      description: Get associated copies and plan which are utilizing this storage.
      operationId: GetStorageAssociatedCopies
      parameters:
      - name: storagePoolId
        in: path
        description: Id of the storage pool whose associated copies have to be fetched
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StorageAssociatedCopies"
        "404":
          description: Requested Details not found
        "500":
          description: Internal Server Error
  /V4/Storage/Disk:
    get:
      tags:
      - DiskStorage
      summary: Get Disk Storage
      description: Get a list of disk storage pools
      operationId: GetDiskStorages
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StorageListResponse"
        "404":
          description: Requested Details not found
    post:
      tags:
      - DiskStorage
      summary: Create a disk storage pool
      description: Create a new disk storage pool
      operationId: CreateDiskStorage
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateDiskStorage"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IdName"
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      x-terraform-resource: Storage_Disk
  /V4/Storage/Disk/{storagePoolId}:
    get:
      tags:
      - DiskStorage
      summary: Get Disk Storage Details
      description: Get details of a disk storage pool based on id
      operationId: GetDiskStorageDetails
      parameters:
      - name: storagePoolId
        in: path
        description: Id of the disk storage pool whose details have to be fetched
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
        x-terraform-id: true
      - name: showInheritedAssociation
        in: query
        description: Show inherited security association
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DiskStorage"
        "404":
          description: Requested Details not found
        "500":
          description: Internal Server Error
      x-terraform-resource: Storage_Disk
    put:
      tags:
      - DiskStorage
      summary: Update Disk Storage Properties
      description: Modify the properties of an existing disk storage pool
      operationId: ModifyDiskStorage
      parameters:
      - name: storagePoolId
        in: path
        description: Id of the disk storage to update
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
        x-terraform-id: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateDiskStorage"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "400":
          description: Bad Request
        "404":
          description: Requested Details not found
      x-terraform-resource: Storage_Disk
    delete:
      tags:
      - DiskStorage
      summary: Delete Disk Storage
      description: Used to delete a disk storage pool
      operationId: DeleteDiskStorage
      parameters:
      - name: storagePoolId
        in: path
        description: Id of the disk storage pool to delete
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
        x-terraform-id: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "404":
          description: Requested Details not found
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
      x-terraform-resource: Storage_Disk
  /V4/Storage/Disk/{storagePoolId}/BackupLocation:
    post:
      tags:
      - DiskStorage
      summary: Create Backup Location
      description: Create a new backup location
      operationId: CreateBackupLocation
      parameters:
      - name: storagePoolId
        in: path
        description: Id of the disk storage to update
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateBackupLocation"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IdName"
        "400":
          description: Bad Request
        "404":
          description: Requested Details not found
        "500":
          description: Internal Server Error
      x-terraform-resource: Storage_Disk_Backup_Location
  /V4/Storage/Disk/{storagePoolId}/BackupLocation/{backupLocationId}:
    get:
      tags:
      - DiskStorage
      summary: Get Backup location details
      description: Used to fetch mount path details of the disk storage pool
      operationId: GetBackupLocationDetails
      parameters:
      - name: storagePoolId
        in: path
        description: Id of the disk storage pool whose details have to be fetched
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: backupLocationId
        in: path
        description: Id of the backup location whose details have to be fetched
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
        x-terraform-id: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackupLocationDetails"
        "404":
          description: Requested Details not found
      x-terraform-resource: Storage_Disk_Backup_Location
    put:
      tags:
      - DiskStorage
      summary: Update Backup Location properties
      description: Modify the properties of an existing mount path
      operationId: ModifyBackupLocation
      parameters:
      - name: storagePoolId
        in: path
        description: Id of the disk storage to update
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: backupLocationId
        in: path
        description: Id of the backup location to update
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
        x-terraform-id: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateBackupLocation"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "400":
          description: Bad Request
        "404":
          description: Requested Details not found
      x-terraform-resource: Storage_Disk_Backup_Location
    delete:
      tags:
      - DiskStorage
      summary: Delete Backup Location
      description: Modify the properties of an existing mount path
      operationId: DeleteBackupLocation
      parameters:
      - name: storagePoolId
        in: path
        description: Id of the disk storage to whose backup location has to be deleted
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: backupLocationId
        in: path
        description: Id of the backup location to delete
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
        x-terraform-id: true
      - name: forceDelete
        in: query
        description: Force deletes a backup location.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "400":
          description: Bad Request
        "404":
          description: Requested Details not found
      x-terraform-resource: Storage_Disk_Backup_Location
  /V4/Storage/Disk/{storagePoolId}/BackupLocation/{backupLocationId}/AccessPath/MediaAgents:
    get:
      tags:
      - DiskStorage
      description: Used to fetch available media agents which can be added as access
        paths for disk storage
      operationId: DiskGetEligibleMediaAgentsForAccessPath
      parameters:
      - name: storagePoolId
        in: path
        description: Id of the disk storage pool whose media agent has to be shared
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: backupLocationId
        in: path
        description: Id of the back up location of which media agent has to be shared
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MediaAgentList"
        "404":
          description: Requested Details not found
  /V4/Storage/Disk/{storagePoolId}/BackupLocation/{backupLocationId}/AccessPath:
    post:
      tags:
      - DiskStorage
      summary: Add Media Agent to Disk Path
      description: Used to add a media agent to a disk access path
      operationId: AddMediaAgent
      parameters:
      - name: storagePoolId
        in: path
        description: Id of the disk storage pool whose details have to be fetched
          to add a new access path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: backupLocationId
        in: path
        description: Id of the backup location whose details have to be fetched to
          add a new access path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddDiskAccessPath"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "404":
          description: Requested Details not found
        "500":
          description: Internal Server Error
      x-terraform-resource: Disk_AccessPath
      x-terraform-id-function: handler.RetrieveBackupLocationAccessPathId
  /V4/Storage/Disk/{storagePoolId}/BackupLocation/{backupLocationId}/AccessPath/{accessPathId}:
    put:
      tags:
      - DiskStorage
      summary: Modify a disk access path
      description: Used to modify a disk access path
      operationId: ModifyDiskAccessPath
      parameters:
      - name: storagePoolId
        in: path
        description: Id of the disk storage pool whose access path has to be modified
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: backupLocationId
        in: path
        description: Id of the mount path whose access path has to be modified
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: accessPathId
        in: path
        description: Id of the mount path whose access path has to be modified
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
        x-terraform-id: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateDiskAccessPath"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "404":
          description: Requested Details not found
      x-terraform-resource: Disk_AccessPath
    delete:
      tags:
      - DiskStorage
      summary: Delete Media Agent to Disk Path
      description: Used to delete a media agent to a disk access path
      operationId: DeleteDiskAccessPath
      parameters:
      - name: storagePoolId
        in: path
        description: Id of the disk storage pool whose access path has to be deleted
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: backupLocationId
        in: path
        description: Id of the mount path whose access path has to be deleted
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: accessPathId
        in: path
        description: Id of the mount path whose access path has to be deleted
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
        x-terraform-id: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "404":
          description: Requested Details not found
      x-terraform-resource: Disk_AccessPath
  /V4/Storage/Local:
    get:
      tags:
      - LocalStorage
      summary: Get All Local Storage
      description: Get a list of Local storage pools
      operationId: GetLocalStorages
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StorageListResponse"
        "404":
          description: Requested Details not found
    post:
      tags:
      - LocalStorage
      summary: Create a local storage pool
      description: Create a new Local storage pool
      operationId: CreateLocalStorage
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateLocalStorage"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IdName"
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
  /V4/Storage/Local/{storagePoolId}:
    get:
      tags:
      - LocalStorage
      summary: Get Local Storage Details
      description: Get details of a local storage pool based on id.
      operationId: GetLocalStorageDetails
      parameters:
      - name: storagePoolId
        in: path
        description: Id of the local storage pool whose details have to be fetched
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: showInheritedAssociation
        in: query
        description: Show inherited security association
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LocalStorage"
        "404":
          description: Requested Details not found
        "500":
          description: Internal Server Error
    put:
      tags:
      - LocalStorage
      summary: Update Local Storage Properties
      description: Modify the properties of an existing local storage pool
      operationId: ModifyLocalStorage
      parameters:
      - name: storagePoolId
        in: path
        description: Id of the local storage to update
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateLocalStorage"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "400":
          description: Bad Request
        "404":
          description: Requested Details not found
    delete:
      tags:
      - LocalStorage
      summary: Delete Local Storage
      description: Used to delete a local storage pool
      operationId: DeleteLocalStorage
      parameters:
      - name: storagePoolId
        in: path
        description: Id of the local storage pool to delete
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "404":
          description: Requested Details not found
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/Storage/Local/{storagePoolId}/BackupLocation:
    post:
      tags:
      - LocalStorage
      summary: Create a backup location for local storage
      description: Create a new backup location for local storage.
      operationId: CreateLocalBackupLocation
      parameters:
      - name: storagePoolId
        in: path
        description: Id of the local storage pool to update
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateBackupLocation"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IdName"
        "400":
          description: Bad Request
        "404":
          description: Requested Details not found
        "500":
          description: Internal Server Error
  /V4/Storage/Local/{storagePoolId}/BackupLocation/{backupLocationId}:
    get:
      tags:
      - LocalStorage
      summary: Get Backup location details of local storage
      description: Used to fetch mount path details of the local storage pool
      operationId: GetLocalBackupLocationDetails
      parameters:
      - name: storagePoolId
        in: path
        description: Id of the local storage pool whose details have to be fetched
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: backupLocationId
        in: path
        description: Id of the backup location whose details have to be fetched
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackupLocationDetails"
        "404":
          description: Requested Details not found
    put:
      tags:
      - LocalStorage
      summary: Update Backup Location properties of local storage
      description: Modify the properties of an existing mount path of local storage
        pool
      operationId: ModifyLocalBackupLocation
      parameters:
      - name: storagePoolId
        in: path
        description: Id of the local storage pool to update
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: backupLocationId
        in: path
        description: Id of the backup location to update
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateBackupLocation"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "400":
          description: Bad Request
        "404":
          description: Requested Details not found
    delete:
      tags:
      - LocalStorage
      summary: Delete Backup Location of local storage
      description: Delete an existing mount path of local storage pool.
      operationId: DeleteLocalBackupLocation
      parameters:
      - name: storagePoolId
        in: path
        description: Id of the local storage pool to whose backup location has to
          be deleted.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: backupLocationId
        in: path
        description: Id of the backup location to delete
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: forceDelete
        in: query
        description: Force deletes a backup location.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "400":
          description: Bad Request
        "404":
          description: Requested Details not found
  /V4/Storage/Local/{storagePoolId}/BackupLocation/{backupLocationId}/AccessPath/MediaAgents:
    get:
      tags:
      - LocalStorage
      summary: fetch media agents which can be added as access paths for local storage
      description: Used to fetch available media agents which can be added as access
        paths for local storage
      operationId: LocalGetEligibleMediaAgentsForAccessPath
      parameters:
      - name: storagePoolId
        in: path
        description: Id of the local storage pool whose media agent has to be shared
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: backupLocationId
        in: path
        description: Id of the backup location of which media agent has to be shared
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MediaAgentList"
        "404":
          description: Requested Details not found
  /V4/Storage/Local/{storagePoolId}/BackupLocation/{backupLocationId}/AccessPath:
    post:
      tags:
      - LocalStorage
      summary: Add Media Agent to Local Storage Path
      description: Used to add a media agent to a local storage pool access path
      operationId: AddLocalAccessPath
      parameters:
      - name: storagePoolId
        in: path
        description: Id of the local storage pool whose details have to be fetched
          to add a new access path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: backupLocationId
        in: path
        description: Id of the backup location whose details have to be fetched to
          add a new access path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddLocalAccessPath"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "404":
          description: Requested Details not found
        "500":
          description: Internal Server Error
  /V4/Storage/Local/{storagePoolId}/BackupLocation/{backupLocationId}/AccessPath/{accessPathId}:
    put:
      tags:
      - LocalStorage
      summary: Modify a local storage access path
      description: Used to modify a local storage access path
      operationId: ModifyLocalAccessPath
      parameters:
      - name: storagePoolId
        in: path
        description: Id of the Local storage pool whose access path has to be modified
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: backupLocationId
        in: path
        description: Id of the mount path whose access path has to be modified
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: accessPathId
        in: path
        description: Id of the mount path whose access path has to be modified
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateLocalAccessPath"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "404":
          description: Requested Details not found
    delete:
      tags:
      - LocalStorage
      summary: Delete Media Agent to Local Storage Path
      description: Used to delete a media agent to a local storage access path
      operationId: DeleteLocalAccessPath
      parameters:
      - name: storagePoolId
        in: path
        description: Id of the local storage pool whose access path has to be deleted
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: backupLocationId
        in: path
        description: Id of the mount path whose access path has to be deleted
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: accessPathId
        in: path
        description: Id of the mount path whose access path has to be deleted
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "404":
          description: Requested Details not found
  /V4/CommcellGroup:
    get:
      tags:
      - CommcellGroup
      summary: Get Commcell Groups
      description: Get All Commcell Groups
      operationId: GetCommcellGroups
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetCommcellGroupsResp"
        "404":
          description: Requested Details not found
    post:
      tags:
      - CommcellGroup
      summary: Create a Commcell Group
      description: Create Commcell group
      operationId: CreateCommcellGroups
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateCommcellGroupReq"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateCommcellGroupResp"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "404":
          description: Requested Details not found
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/ServerGroup:
    get:
      tags:
      - ServerGroup
      summary: Get Server Groups
      description: Get All Server Groups
      operationId: GetServerGroups
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetServerGroupsResp"
        "404":
          description: Requested Details not found
    post:
      tags:
      - ServerGroup
      summary: Create a Server Group
      description: Create Server group
      operationId: CreateServerGroups
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateServerGroup"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateServerGroupResp"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "404":
          description: Requested Details not found
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/ServerGroup/Preview:
    post:
      tags:
      - ServerGroup
      summary: Server Group Preview
      description: Get a preview of servers affected with create server group operation
      operationId: ServerGroupsCreationPreview
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AutomaticServerGroupAssociationDetails"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateServerGroupPreviewResp"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/CommcellGroup/{commcellGroupId}:
    get:
      tags:
      - CommcellGroup
      summary: Get Commcell Group Details
      description: Get details of a commcellGroup based on id
      operationId: GetCommcellGroupIdDetails
      parameters:
      - name: commcellGroupId
        in: path
        description: Id of the commcellGroupId whose details have to be fetched
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: mode
        in: header
        required: false
        style: simple
        explode: false
        schema:
          $ref: "#/components/schemas/Mode"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommcellGroupInfo"
        "404":
          description: Requested Details not found
    put:
      tags:
      - CommcellGroup
      summary: Update the commcell group
      description: Used to update commcell associations for a server group
      operationId: UpdateCommcellGroupAssociation
      parameters:
      - name: commcellGroupId
        in: path
        description: Id of the commcellGroupId whose details have to be fetched
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateCommcellGroupReq"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "404":
          description: Requested Details not found
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
    delete:
      tags:
      - CommcellGroup
      summary: Delete a CommcellGroup
      description: Used to delete a commcellGroup
      operationId: DeleteCommcellGroup
      parameters:
      - name: commcellGroupId
        in: path
        description: Id of the commcellGroup to delete
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "404":
          description: Requested Details not found
  /V4/ServerGroup/{serverGroupId}:
    get:
      tags:
      - ServerGroup
      summary: Get Server Group Details
      description: Get details of a serverGroup based on id
      operationId: GetServerGroupIdDetails
      parameters:
      - name: serverGroupId
        in: path
        description: Id of the serverGroupId whose details have to be fetched
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: mode
        in: header
        required: false
        style: simple
        explode: false
        schema:
          $ref: "#/components/schemas/Mode"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerGroup"
        "404":
          description: Requested Details not found
    put:
      tags:
      - ServerGroup
      summary: Update the server group
      description: Used to update server associations for a server group
      operationId: UpdateServerGroupAssociation
      parameters:
      - name: serverGroupId
        in: path
        description: Id of the serverGroupId whose details have to be fetched
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateServerGroup"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "404":
          description: Requested Details not found
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
    delete:
      tags:
      - ServerGroup
      summary: Delete a ServerGroup
      description: Used to delete a serverGroup
      operationId: DeleteServerGroup
      parameters:
      - name: serverGroupId
        in: path
        description: Id of the serverGroup to delete
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "404":
          description: Requested Details not found
  /V4/ServerGroup/{serverGroupId}/Refresh:
    put:
      tags:
      - ServerGroup
      summary: Refresh the server group associations
      description: Used to immediately refresh automatic server associations for a
        server group
      operationId: RefreshServerGroupAssociation
      parameters:
      - name: serverGroupId
        in: path
        description: Id of the serverGroup whose associations has to be refreshed
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
  /V4/ServerGroup/{serverGroupId}/Restore/Action/Disable:
    put:
      tags:
      - ServerGroup
      summary: Disable Restore for servergroup
      description: Used to disable restore property for a server group
      operationId: DisableRestoreServerGroup
      parameters:
      - name: serverGroupId
        in: path
        description: Id of the serverGroup to modify
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: enableAfterADelay
        in: query
        description: Provide UTC time in unix format.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
      x-hidden-description: |
        This is used to disable activity control on a server group
  /V4/ServerGroup/{serverGroupId}/Backup/Action/Disable:
    put:
      tags:
      - ServerGroup
      summary: Disable backups for ServerGroup
      description: Used to disable backup property for a server group
      operationId: DisableBackupServerGroup
      parameters:
      - name: serverGroupId
        in: path
        description: Id of the serverGroup to modify
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: enableAfterADelay
        in: query
        description: Provide UTC time in unix format.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
      x-hidden-description: |
        This is used to disable activity control on a server group
  /V4/ServerGroup/{serverGroupId}/DataAging/Action/Disable:
    put:
      tags:
      - ServerGroup
      summary: Disable dataaging for ServerGroup
      description: Used to disable data aging property for a server group
      operationId: DisableDataAgingServerGroup
      parameters:
      - name: serverGroupId
        in: path
        description: Id of the serverGroup to modify
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: enableAfterADelay
        in: query
        description: Provide UTC time in unix format.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
      x-hidden-description: |
        This is used to disable activity control on a server group
  /V4/ServerGroup/{serverGroupId}/Restore/Action/Enable:
    put:
      tags:
      - ServerGroup
      summary: Enable restore for ServerGroup
      description: Used to enable restore property for a server group
      operationId: EnableRestoreServerGroup
      parameters:
      - name: serverGroupId
        in: path
        description: Id of the serverGroup to modify
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
      x-hidden-description: |
        This is used to enable activity control on a server group
  /V4/ServerGroup/{serverGroupId}/Backup/Action/Enable:
    put:
      tags:
      - ServerGroup
      summary: Enable Backup for ServerGroup
      description: Used to enable backup property for a server group
      operationId: EnableBackupServerGroup
      parameters:
      - name: serverGroupId
        in: path
        description: Id of the serverGroup to modify
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
      x-hidden-description: |
        This is used to enable activity control on a server group
  /V4/ServerGroup/{serverGroupId}/DataAging/Action/Enable:
    put:
      tags:
      - ServerGroup
      summary: Enable Data aging for Server Group
      description: Used to enable data aging property for a server group
      operationId: EnableDataAgingServerGroup
      parameters:
      - name: serverGroupId
        in: path
        description: Id of the serverGroup to modify
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
      x-hidden-description: |
        This is used to enable activity control on a server group
  /CommcellGroup:
    get:
      tags:
      - CommcellGroup
      summary: Get Commcell Groups
      description: Get Commcell Groups info
      operationId: GetCommcellGroups
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetCommcellGroupsResp"
        "404":
          description: Requested Details not found
  /V4/Server/{serverId}/Agent/{agentId}/Backup/Action/Disable:
    put:
      tags:
      - Agent
      summary: Disable Backup Property for an Agent
      description: |-
        Used to disable backup property for an agent.
        Types of available agentIds are:
        41-Active Directory,
        21-AIX File System,
        64-Big Data Apps,
        134-Cloud Apps,
        37-DB2,
        103-DB2 MultiNode,
        62-DB2 on Unix,
        128-Documentum,
        90-Domino Mailbox Archiver,
        91-DPM,
        67-Exchange Compliance Archiver,
        53-Exchange Database,
        45-Exchange Mailbox,
        54-Exchange Mailbox (Classic),
        56-Exchange Mailbox Archiver,
        82-Exchange PF Archiver,
        35-Exchange Public Folder,
        73-File Share Archiver,
        33-File System,
        74-FreeBSD,
        71-GroupWise DB,
        17-HP-UX Files System,
        65-Image Level,
        75-Image Level On Unix,
        76-Image Level ProxyHost,
        87-Image Level ProxyHost on Unix,
        3-Informix Database,
        29-Linux File System,
        89-MS SharePoint Archiver,
        104-MySQL,
        13-NAS,
        83-Netware File Archiver,
        12-Netware File System,
        10-Novell Directory Services,
        124-Object Link,
        131-Object Store,
        86-OES File System on Linux,
        22-Oracle,
        80-Oracle RAC,
        130-Other External Agent,
        125-PostgreSQL,
        38-Proxy Client File System,
        87-ProxyHost on Unix,
        61-SAP for Oracle,
        135-SAP HANA,
        78-SharePoint Server,
        20-Solaris 64bit File System,
        19-Solaris File System,
        81-SQL Server,
        5-Sybase Database,
        66-Unix File Archiver,
        36-Unix Tru64 64-bit File System,
        106-Virtual Server,
        58- Windows File Archiver
      operationId: DisableBackupAgent
      parameters:
      - name: serverId
        in: path
        description: Id of the server to modify
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: agentId
        in: path
        description: Id of the agent to be modified
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: enableAfterADelay
        in: query
        description: Provide UTC time in unix format.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Internal Server Error
  /V4/Server/{serverId}/Agent/{agentId}/Restore/Action/Disable:
    put:
      tags:
      - Agent
      summary: Disable restore property for an agent
      description: |-
        Used to disable restore property for an agent
        Types of available agentIds are:
        41-Active Directory,
        21-AIX File System,
        64-Big Data Apps,
        134-Cloud Apps,
        37-DB2,
        103-DB2 MultiNode,
        62-DB2 on Unix,
        128-Documentum,
        90-Domino Mailbox Archiver,
        91-DPM,
        67-Exchange Compliance Archiver,
        53-Exchange Database,
        45-Exchange Mailbox,
        54-Exchange Mailbox (Classic),
        56-Exchange Mailbox Archiver,
        82-Exchange PF Archiver,
        35-Exchange Public Folder,
        73-File Share Archiver,
        33-File System,
        74-FreeBSD,
        71-GroupWise DB,
        17-HP-UX Files System,
        65-Image Level,
        75-Image Level On Unix,
        76-Image Level ProxyHost,
        87-Image Level ProxyHost on Unix,
        3-Informix Database,
        29-Linux File System,
        89-MS SharePoint Archiver,
        104-MySQL,
        13-NAS,
        83-Netware File Archiver,
        12-Netware File System,
        10-Novell Directory Services,
        124-Object Link,
        131-Object Store,
        86-OES File System on Linux,
        22-Oracle,
        80-Oracle RAC,
        130-Other External Agent,
        125-PostgreSQL,
        38-Proxy Client File System,
        87-ProxyHost on Unix,
        61-SAP for Oracle,
        135-SAP HANA,
        78-SharePoint Server,
        20-Solaris 64bit File System,
        19-Solaris File System,
        81-SQL Server,
        5-Sybase Database,
        66-Unix File Archiver,
        36-Unix Tru64 64-bit File System,
        106-Virtual Server,
        58- Windows File Archiver
      operationId: DisableRestoreAgent
      parameters:
      - name: serverId
        in: path
        description: Id of the server to modify
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: agentId
        in: path
        description: Id of the agent to be modified
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: enableAfterADelay
        in: query
        description: Provide UTC time in unix format.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Internal Server Error
  /V4/Server/{serverId}/Agent/{agentId}/Backup/Action/Enable:
    put:
      tags:
      - Agent
      summary: Enable Backup Property for an Agent
      description: |-
        Used to enable backup property for an agent
        Types of available agentIds are:
        41-Active Directory,
        21-AIX File System,
        64-Big Data Apps,
        134-Cloud Apps,
        37-DB2,
        103-DB2 MultiNode,
        62-DB2 on Unix,
        128-Documentum,
        90-Domino Mailbox Archiver,
        91-DPM,
        67-Exchange Compliance Archiver,
        53-Exchange Database,
        45-Exchange Mailbox,
        54-Exchange Mailbox (Classic),
        56-Exchange Mailbox Archiver,
        82-Exchange PF Archiver,
        35-Exchange Public Folder,
        73-File Share Archiver,
        33-File System,
        74-FreeBSD,
        71-GroupWise DB,
        17-HP-UX Files System,
        65-Image Level,
        75-Image Level On Unix,
        76-Image Level ProxyHost,
        87-Image Level ProxyHost on Unix,
        3-Informix Database,
        29-Linux File System,
        89-MS SharePoint Archiver,
        104-MySQL,
        13-NAS,
        83-Netware File Archiver,
        12-Netware File System,
        10-Novell Directory Services,
        124-Object Link,
        131-Object Store,
        86-OES File System on Linux,
        22-Oracle,
        80-Oracle RAC,
        130-Other External Agent,
        125-PostgreSQL,
        38-Proxy Client File System,
        87-ProxyHost on Unix,
        61-SAP for Oracle,
        135-SAP HANA,
        78-SharePoint Server,
        20-Solaris 64bit File System,
        19-Solaris File System,
        81-SQL Server,
        5-Sybase Database,
        66-Unix File Archiver,
        36-Unix Tru64 64-bit File System,
        106-Virtual Server,
        58- Windows File Archiver
      operationId: EnableBackupAgent
      parameters:
      - name: serverId
        in: path
        description: Id of the server to modify
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: agentId
        in: path
        description: Id of the agent to be modified
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Internal Server Error
  /V4/Server/{serverId}/Agent/{agentId}/Restore/Action/Enable:
    put:
      tags:
      - Agent
      summary: Enable restore property for an agent
      description: |-
        Used to enable restore property for an agent
        Types of available agentIds are:
        41-Active Directory,
        21-AIX File System,
        64-Big Data Apps,
        134-Cloud Apps,
        37-DB2,
        103-DB2 MultiNode,
        62-DB2 on Unix,
        128-Documentum,
        90-Domino Mailbox Archiver,
        91-DPM,
        67-Exchange Compliance Archiver,
        53-Exchange Database,
        45-Exchange Mailbox,
        54-Exchange Mailbox (Classic),
        56-Exchange Mailbox Archiver,
        82-Exchange PF Archiver,
        35-Exchange Public Folder,
        73-File Share Archiver,
        33-File System,
        74-FreeBSD,
        71-GroupWise DB,
        17-HP-UX Files System,
        65-Image Level,
        75-Image Level On Unix,
        76-Image Level ProxyHost,
        87-Image Level ProxyHost on Unix,
        3-Informix Database,
        29-Linux File System,
        89-MS SharePoint Archiver,
        104-MySQL,
        13-NAS,
        83-Netware File Archiver,
        12-Netware File System,
        10-Novell Directory Services,
        124-Object Link,
        131-Object Store,
        86-OES File System on Linux,
        22-Oracle,
        80-Oracle RAC,
        130-Other External Agent,
        125-PostgreSQL,
        38-Proxy Client File System,
        87-ProxyHost on Unix,
        61-SAP for Oracle,
        135-SAP HANA,
        78-SharePoint Server,
        20-Solaris 64bit File System,
        19-Solaris File System,
        81-SQL Server,
        5-Sybase Database,
        66-Unix File Archiver,
        36-Unix Tru64 64-bit File System,
        106-Virtual Server,
        58- Windows File Archiver
      operationId: EnableRestoreAgent
      parameters:
      - name: serverId
        in: path
        description: Id of the server to modify
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: agentId
        in: path
        description: Id of the agent to be modified
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Internal Server Error
  /V4/Subclient/{subclientId}/Backup/Action/Disable:
    put:
      tags:
      - Subclient
      description: Used to disable backup property for a subclient
      operationId: DisableBackupSubclient
      parameters:
      - name: subclientId
        in: path
        description: Id of the subclient to modify
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: enableAfterADelay
        in: query
        description: Provide UTC time in unix format.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/Subclient/{subclientId}/Backup/Action/Enable:
    put:
      tags:
      - Subclient
      description: Used to enable backup property for an subclient
      operationId: EnableBackupSubclient
      parameters:
      - name: subclientId
        in: path
        description: Id of the subclient to modify
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/Storage/Cloud:
    get:
      tags:
      - CloudStorage
      summary: Get All Cloud Storage
      description: Get All Cloud Storage
      operationId: GetCloudStorageList
      parameters:
      - name: storageSubType
        in: query
        description: Filter cloud storage list to given subtype.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - ALL
          - IBMi_VTL
          - ALL_EXCEPT_IBMi_VTL
          - HEDVIG
          - METALLIC
          - METALLIC_CLOUD_STORAGE
          - ALL_INCLUDING_METALLIC_CLOUD_STORAGE
          - ALL_EXCEPT_METALLIC_CLOUD_STORAGE
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_1"
        "404":
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
    post:
      tags:
      - CloudStorage
      summary: Create a Cloud Storage
      description: Create a Cloud Storage
      operationId: CreateCloudStorage
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Storage_Cloud_body"
            examples:
              Amazon S3:
                value:
                  name: string
                  cloudType: Amazon S3
                  mediaAgent:
                    name: string
                    id: 0
                  serviceHost: "s3.[region].amazonaws.com"
                  authentication: Access and secret keys
                  credentials:
                    name: string
                    id: 0
                  bucket: string
                  storageClass: Standard
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CloudStorageResp"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
      x-terraform-resource: Storage_Cloud
      x-terraform-oneof-map:
      - schema: AmazonS3
        resource: S3
      - schema: MicrosoftAzure
        resource: Azure
  /V4/Storage/Cloud/{cloudStorageId}:
    get:
      tags:
      - CloudStorage
      description: Get Cloud Storage Details
      operationId: GetCloudStorageById
      parameters:
      - name: cloudStorageId
        in: path
        description: Id of cloud Storage
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
        x-terraform-id: true
      - name: showInheritedAssociation
        in: query
        description: Set to true if want to show inherited security associations
        required: false
        allowEmptyValue: false
        style: form
        explode: false
        schema:
          type: string
          enum:
          - "true"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_2"
        "404":
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Internal Server Error
      x-terraform-resource: Storage_Cloud
    put:
      tags:
      - CloudStorage
      description: "Modify details like name, encryption, security of a specific cloud\
        \ storage"
      operationId: ModifyCloudStorageById
      parameters:
      - name: cloudStorageId
        in: path
        description: Id of cloud Storage
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
        x-terraform-id: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateCloudStorage"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "404":
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
      x-terraform-resource: Storage_Cloud
    delete:
      tags:
      - CloudStorage
      description: Delete existing cloud storage
      operationId: DeleteCloudStorageById
      parameters:
      - name: cloudStorageId
        in: path
        description: Id of cloud Storage
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
        x-terraform-id: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "404":
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
      x-terraform-resource: Storage_Cloud
  /V4/Storage/Cloud/{cloudStorageId}/MetadataCache:
    post:
      tags:
      - CloudStorage
      description: Add metadata cache paths to storage
      operationId: CreateCloudStorageMetaDataCache
      parameters:
      - name: cloudStorageId
        in: path
        description: Id of cloud Storage
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateMetadataCacheConfigurations"
            examples:
              For a local mediaAgent:
                value:
                  mediaAgent:
                    id: 0
                    name: string
                  path: string
              'For a network mediaAgent with saved credentials  ':
                value:
                  mediaAgent:
                    id: 0
                    name: string
                  savedCredentials:
                    id: 0
                    name: string
                  path: string
              For a network mediaAgent with credentials:
                value:
                  mediaAgent:
                    id: 0
                    name: string
                  credentials:
                    name: string
                    password: string
                  path: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "404":
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/Storage/Cloud/{cloudStorageId}/MetadataCache/{metadataCacheId}:
    get:
      tags:
      - CloudStorage
      description: Get details of metadata Cache of a cloud storage based on Id
      operationId: GetCloudStorageMetaDataCacheById
      parameters:
      - name: cloudStorageId
        in: path
        description: Id of cloud Storage
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: metadataCacheId
        in: path
        description: Id of metadata cache
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MetadataCacheConfiguration"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
    put:
      tags:
      - CloudStorage
      description: Modify details like credentials and path for metadata Cache of
        a cloud storage based on Id
      operationId: ModifyCloudStorageMetaDataCacheById
      parameters:
      - name: cloudStorageId
        in: path
        description: Id of cloud Storage
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: metadataCacheId
        in: path
        description: Id of metadata cache
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateMetadataCacheConfiguration"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "404":
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
    delete:
      tags:
      - CloudStorage
      description: Delete metadata cache of an existing cloud storage
      operationId: DeleteCloudStorageMetadataCacheById
      parameters:
      - name: cloudStorageId
        in: path
        description: Id of cloud Storage
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: metadataCacheId
        in: path
        description: Id of metadata cache
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "404":
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/Storage/Cloud/{cloudStorageId}/Bucket:
    post:
      tags:
      - CloudStorage
      summary: Create a new bucket for a specific cloud storage
      description: Create a new bucket for a specific cloud storage
      operationId: CreateBucketforCloudStorage
      parameters:
      - name: cloudStorageId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/cloudStorageId_Bucket_body"
            examples:
              Amazon S3:
                value:
                  cloudType: Amazon S3
                  mediaAgent:
                    name: string
                  serviceHost: "s3.[region].amazonaws.com"
                  authentication: Access and secret keys
                  credentials:
                    name: string
                    id: 0
                  bucket: string
                  storageClass: Standard
                  proxyAddress: string
                  port: 0
                  username: string
                  password: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_3"
        "400":
          description: Bad Request
        "404":
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Internal Server Error
      x-terraform-resource: Storage_Cloud_Bucket
      x-terraform-oneof-map:
      - schema: AmazonS3Bucket
        resource: S3
      - schema: MicrosoftAzureBucket
        resource: Azure
  /V4/Storage/Cloud/{cloudStorageId}/Bucket/{bucketId}:
    get:
      tags:
      - CloudStorage
      description: Get details of a specific bucket of a cloud storage
      operationId: GetBucketDetailsOfCloudStorage
      parameters:
      - name: cloudStorageId
        in: path
        description: Id of cloud Storage
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: bucketId
        in: path
        description: Id of Bucket
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
        x-terraform-id: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_4"
        "404":
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
      x-terraform-resource: Storage_Cloud_Bucket
      x-terraform-oneof-map:
      - schema: AmazonS3BucketContentResp
        resource: S3
      - schema: MicrosoftAzureBucketContentResp
        resource: Azure
    put:
      tags:
      - CloudStorage
      description: Modify configuration of a specific bucket of a specific cloud storage
      operationId: ModifyBucketOfCloudStorage
      parameters:
      - name: cloudStorageId
        in: path
        description: Id of cloud Storage
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: bucketId
        in: path
        description: Id of Bucket
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
        x-terraform-id: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Bucket_bucketId_body"
            examples:
              BucketConfiguration:
                value:
                  cloudType: Amazon S3
                  mediaAgent:
                    name: string
                    id: 0
                  configuration:
                    enable: true
                    disableBackupLocationForFutureBackups: false
                    prepareForRetirement: false
                    storageAcceleratorCredentials:
                      name: string
                      id: 0
              Amazon S3:
                value:
                  cloudType: Amazon S3
                  mediaAgent:
                    name: string
                    id: 0
                  serviceHost: "s3.[region].amazonaws.com"
                  authentication: Access and secret keys
                  credentials:
                    name: string
                    id: 0
                  bucket: string
                  storageClass: Standard
                  proxyAddress: string
                  port: 0
                  username: string
                  password: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
      x-terraform-resource: Storage_Cloud_Bucket
      x-terraform-oneof-map:
      - schema: AmazonS3BucketContent
        resource: S3
      - schema: MicrosoftAzureBucketContent
        resource: Azure
    delete:
      tags:
      - CloudStorage
      description: Delete the specified bucket of the cloud storage
      operationId: DeleteBucketOfCloudStorage
      parameters:
      - name: cloudStorageId
        in: path
        description: Id of cloud Storage
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: bucketId
        in: path
        description: Id of Bucket
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
        x-terraform-id: true
      - name: forceDelete
        in: query
        description: Force deletes the bucket when physical deletion of data not possible.
          It will do DB cleanup only.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
      x-terraform-resource: Storage_Cloud_Bucket
  /V4/Storage/Cloud/{cloudStorageId}/Bucket/{bucketId}/AccessPath/MediaAgents:
    get:
      tags:
      - CloudStorage
      description: Used to fetch available media agents which can be added as access
        paths for cloud storage
      operationId: CloudGetEligibleMediaAgentsForAccessPath
      parameters:
      - name: cloudStorageId
        in: path
        description: Id of the cloud storage pool for which media agent has to be
          added
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: bucketId
        in: path
        description: Id of the access path of which media agent has to be shared
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MediaAgentList"
        "404":
          description: Requested Details not found
  /V4/Storage/Cloud/{cloudStorageId}/Bucket/{bucketId}/AccessPath:
    post:
      tags:
      - CloudStorage
      description: Add a new Access path (mediaAgent) to a specific bucket of a specific
        cloud storage
      operationId: CreateAccessPathForBucketOfCloudStorage
      parameters:
      - name: cloudStorageId
        in: path
        description: Id of cloud Storage
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: bucketId
        in: path
        description: Id of Bucket
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/bucketId_AccessPath_body"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "400":
          description: Bad Request
        "404":
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Internal Server Error
      x-terraform-resource: Storage_Cloud_AccessPath
      x-terraform-id-function: handler.RetrieveBucketAccessPathId
  /V4/Storage/Cloud/{cloudStorageId}/Bucket/{bucketId}/AccessPath/{accessPathId}:
    put:
      tags:
      - CloudStorage
      description: Modify access path details of specific bucket of a specific cloud
        storage
      operationId: ModifyAccessPathOfBucketOfCloudStorage
      parameters:
      - name: cloudStorageId
        in: path
        description: Id of cloud Storage
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: bucketId
        in: path
        description: Id of Bucket
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: accessPathId
        in: path
        description: Id of access path (can be fetched from GET Bucket Details API)
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
        x-terraform-id: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CloudStorageAdvanced"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "404":
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
    delete:
      tags:
      - CloudStorage
      description: Disassociate a MediaAgent (cloud Access Path) from a bucket of
        a cloud storage
      operationId: DeleteAccessPathForBucketOfCloudStorage
      parameters:
      - name: cloudStorageId
        in: path
        description: Id of cloud Storage
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: bucketId
        in: path
        description: Id of Bucket
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: accessPathId
        in: path
        description: Id of access path (can be fetched from GET Bucket Details API)
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
        x-terraform-id: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "404":
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
      x-terraform-resource: Storage_Cloud_AccessPath
  /V4/Storage/HyperScale:
    get:
      tags:
      - HyperScaleStorage
      summary: Get All HyperScale Storage
      description: Get All HyperScale Storage
      operationId: GetHyperScaleStorageList
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_5"
        "404":
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
    post:
      tags:
      - HyperScaleStorage
      summary: Create HyperScaleStorage
      description: Create a HyperScale Storage
      operationId: CreateHyperScaleStorage
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/HyperScaleStorage"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HyperScaleStorageResp"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/Storage/HyperScale/{hyperScaleStorageId}:
    get:
      tags:
      - HyperScaleStorage
      summary: Get details of a specific HyperScale Storage
      description: Get details of a specific HyperScale Storage
      operationId: GetHyperScaleStorageById
      parameters:
      - name: hyperScaleStorageId
        in: path
        description: Id of hyperscale storage
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: showInheritedAssociation
        in: query
        description: Set to true if want to show inherited security associations
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - "true"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HyperScaleStorageDetails"
        "404":
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Internal Server Error
    put:
      tags:
      - HyperScaleStorage
      summary: Modify HyperScaleStorage ById
      description: "Modify details like name, encryption, security of a specific hyperscale\
        \ storage"
      operationId: ModifyHyperScaleStorageById
      parameters:
      - name: hyperScaleStorageId
        in: path
        description: Id of hyperscale storage
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateHyperScaleStorage"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "404":
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
    delete:
      tags:
      - HyperScaleStorage
      summary: Delete HyperScaleStorage ById
      description: Delete existing hyperscale storage
      operationId: DeleteHyperScaleStorageById
      parameters:
      - name: hyperScaleStorageId
        in: path
        description: Id of hyperscale storage
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "404":
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/Storage/HyperScale/{hyperScaleStorageId}/Nodes:
    post:
      tags:
      - HyperScaleStorage
      summary: Create Node for Hyper ScaleStorage
      description: Add nodes for a specific hyperscale storage
      operationId: CreateNodeforHyperScaleStorage
      parameters:
      - name: hyperScaleStorageId
        in: path
        description: Id of hyperscale storage
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/hyperScaleStorageId_Nodes_body"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "400":
          description: Bad Request
        "404":
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Internal Server Error
  /V4/Storage/HyperScale/{hyperScaleStorageId}/Node/{nodeId}:
    get:
      tags:
      - HyperScaleStorage
      summary: Get NodeDetails Of HyperScaleStorage
      description: Get details of a specific node of a hyperscale storage
      operationId: GetNodeDetailsOfHyperScaleStorage
      parameters:
      - name: hyperScaleStorageId
        in: path
        description: Id of hyperscale storage
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: nodeId
        in: path
        description: Id of node
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HyperScaleNodeDetails"
        "404":
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/Storage/HyperScale/{hyperScaleStorageId}/Node/{nodeId}/Refresh:
    put:
      tags:
      - HyperScaleStorage
      summary: Refresh Node Of HyperScaleStorage
      description: Refresh a specific node of HyperScale
      operationId: RefreshNodeOfHyperScaleStorage
      parameters:
      - name: hyperScaleStorageId
        in: path
        description: Id of hyperscale storage
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: nodeId
        in: path
        description: Id of node
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "400":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/Role:
    get:
      tags:
      - Roles
      summary: Get a list of all the roles
      description: Get a list of all the roles
      operationId: GetListOfRoles
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RoleListResponse"
        "404":
          description: Requested Details not found
    post:
      tags:
      - Roles
      summary: Create a Role
      description: Create a new role
      operationId: CreateNewRole
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateRole"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IdNameGUID"
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      x-terraform-resource: Role
  /V4/Permissions:
    get:
      tags:
      - Roles
      summary: Get Permissions
      description: Get a list of categories and permissions in each category
      operationId: GetPermissionResponse
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PermissionListResp"
        "404":
          description: Requested Details not found
  /V4/Role/{roleId}:
    get:
      tags:
      - Roles
      summary: Get a details of the role whose role id has been provided
      description: Get a details of the role whose role id has been provided
      operationId: GetRoleDetails
      parameters:
      - name: roleId
        in: path
        description: Role Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
        x-terraform-id: true
      - name: showInheritedAssociation
        in: query
        description: Shows inherited security associations
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Role"
        "404":
          description: Requested Details not found
      x-terraform-resource: Role
    put:
      tags:
      - Roles
      summary: Update the Role
      description: Modify the properties of an existing role
      operationId: ModifyRole
      parameters:
      - name: roleId
        in: path
        description: Role Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
        x-terraform-id: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateRole"
            examples:
              Updating a role:
                value:
                  newName: modifying_name
                  visibleToAll: true
                  enabled: true
                  permissionList:
                  - permission:
                      id: 151
                      name: Create Alert
                    category:
                      id: 117
                      name: Alert
                  - permission:
                      id: 134
                      name: File Analytics
                  - category:
                      id: 120
                      name: Billing
                  security:
                  - userGroup:
                      name: master
                    role:
                      id: 4
                  - user:
                      id: 1
                    role:
                      name: compliance
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "400":
          description: Bad Request
        "404":
          description: Requested Details not found
      x-terraform-resource: Role
    delete:
      tags:
      - Roles
      summary: Delete a role
      description: Used to delete a role
      operationId: DeleteRoles
      parameters:
      - name: roleId
        in: path
        description: Role Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
        x-terraform-id: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "404":
          description: Requested Details not found
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
      x-terraform-resource: Role
  /V4/Storage/Tape:
    get:
      tags:
      - TapeStorage
      summary: Get Tape Storage
      description: This endpoint is used to return the list of tape storages.
      operationId: ReturnListOfTapes
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TapeListResp"
        "404":
          description: Requested Details not found
      x-excludedfrom-saas: true
  /V4/Storage/Tape/Locations:
    get:
      tags:
      - TapeStorage
      operationId: ReturnListOfLocations
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LocationListResp"
        "404":
          description: Requested Details not found
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
      x-excludedfrom-saas: true
  /V4/Storage/Tape/{libraryId}:
    get:
      tags:
      - TapeStorage
      description: Fetches tape details based on the tape library Id provided
      operationId: FetchTapeDetails
      parameters:
      - name: libraryId
        in: path
        description: Id of the library to view the data
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TapeDetails"
        "404":
          description: Requested Details not found
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
      x-excludedfrom-saas: true
  /V4/Storage/Tape/{libraryId}/Media:
    get:
      tags:
      - TapeStorage
      description: Fetch tape media details based on the tape library Id
      operationId: FetchTapeMediaDetails
      parameters:
      - name: libraryId
        in: path
        description: Id of the library to view the data
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TapeMediaDetails"
        "404":
          description: Requested Details not found
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
      x-excludedfrom-saas: true
    post:
      tags:
      - TapeStorage
      summary: Perform operation on Tape media
      description: API to perform various media level operations on a Tape Storage
      operationId: PerformTapeMediaOperation
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TapeMediaOperationsReq"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
      x-excludedfrom-saas: true
  /V4/Storage/Tape/{libraryId}/SpareGroup/{spareGroupId}:
    get:
      tags:
      - TapeStorage
      summary: Fetches properties of a Spare group
      description: API to fetch properties of a Spare Group
      operationId: GetSpareGroupProperties
      parameters:
      - name: spareGroupId
        in: path
        description: "Id of the Spare group whose properties need to be fetched. spareGroupId\
          \ can be fetched from GET V4/Storage/Tape/{libraryId}/MediaType"
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: libraryId
        in: path
        description: Library ID of the Tape Storage
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetSpareGroupProperties"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
      x-excludedfrom-saas: true
  /V4/Storage/Tape/{libraryId}/MediaType:
    get:
      tags:
      - TapeStorage
      summary: Get Info for Discover Media Operation
      description: API to fetch all required details for performing Discover Media
        operation
      operationId: GetInfoForDiscoverMedia
      parameters:
      - name: libraryId
        in: path
        description: Library ID of the Tape Storage
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DiscoverMediaInfoResp"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
      x-excludedfrom-saas: true
  /V4/Plan/{planId}/MediaAgents:
    get:
      tags:
      - Plan
      summary: Get associated media agents detail for a Plan
      description: Get list of associated media agents detail for a Plan
      operationId: GetAssocMAsForPlan
      parameters:
      - name: planId
        in: path
        description: Plan id of the plan
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: packageName
        in: query
        description: Provide the name of the package that needs to be checked if installed
          on the Media Agents. isPackageInstalled will be populated accordingly. By
          default it checks for Media agent package. Refer to packageName list.
        required: false
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/packageName"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AssociatedMAsForPlanResp"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
  /V4/Storage/Tape/{libraryId}/SpareGroups:
    get:
      tags:
      - TapeStorage
      summary: List of Spare Group Details
      description: API to fetch information of Spare Groups of a particular type for
        a Storage
      operationId: GetSpareGroupDetails
      parameters:
      - name: libraryId
        in: path
        description: Library ID of the Tape Storage
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: SpareGroupType
        in: query
        description: Get all spare groups of given SpareGroupType
        required: true
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/SpareGroupTypes"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetSpareGroupListResp"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
      x-excludedfrom-saas: true
  /V4/Storage/Tape/{libraryId}/Drive/{driveId}:
    get:
      tags:
      - TapeStorage
      description: This endpoint is used to return the details of Drive Pool.
      operationId: ReturnDrivePoolDetails
      parameters:
      - name: libraryId
        in: path
        description: Id of the Tape of which the drive details has to be displayed
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: driveId
        in: path
        description: Id of the Drive of which the drive details has to be displayed
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DrivePoolDetailsResp"
        "404":
          description: Requested Details not found
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
      x-excludedfrom-saas: true
  /V4/FileServers:
    get:
      tags:
      - FileServers
      summary: Get File Servers
      description: This endpoint is used to return the list of file servers.
      operationId: GetFileServers
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FileServerListResp"
        "404":
          description: Requested Details not found
      x-hidden-description: |
        When top largest servers are asked for, this api can be used since it has the size (applicationSize) in its return response.
  /V4/MMConfiguration/Unlock:
    put:
      tags:
      - TapeStorage
      description: To unlock a configuration
      operationId: CreatelunlockConfiguration
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericRespWithWarning"
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      x-excludedfrom-saas: true
  /V4/MMConfiguration/Lock:
    put:
      tags:
      - TapeStorage
      description: To lock a configuration
      operationId: CreatelockConfiguration
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericRespWithWarning"
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      x-excludedfrom-saas: true
  /V4/ArchiveFileServers:
    get:
      tags:
      - ArchiveFileServers
      summary: List of Archive file servers.
      description: This endpoint is used to return the list of Archive file servers.
      operationId: GetArchiveFileServers
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FileServerListResp"
        "404":
          description: Requested Details not found
  /V4/EpicServers:
    get:
      tags:
      - EpicServers
      summary: Get EpicServers
      description: This endpoint is used to return the list of epic servers.
      operationId: GetEpicServers
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FileServerListResp"
        "404":
          description: Requested Details not found
  /V4/BigDataApps:
    get:
      tags:
      - BigDataApps
      - HIDDEN
      description: This endpoint is used to return the list of big data apps.
      operationId: GetBigDataList
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BigDataAppListResp"
        "404":
          description: Requested Details not found
  /V4/CRD/CloudAccounts:
    get:
      tags:
      - CloudApps
      summary: Get cloud accounts for Cloud Resource Discovery operation
      description: This endpoint is used to return the list of cloud accounts for
        Cloud Resource Discovery operation.
      operationId: GetCRDCloudAccounts
      parameters:
      - name: vendor
        in: query
        description: |
          Type of the cloud vendor. Cloud accounts for the specified cloud vendor will be returned.
          Supported Vendor type:
          3-Azure
        required: true
        style: form
        explode: true
        schema:
          type: integer
      - name: targetApp
        in: query
        description: |
          App type for which the Cloud Resorce Discovery instance is being configured.
          Supported App type:
          134-Cloud Apps
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: targetInstance
        in: query
        description: |
          Cloud apps instance type for which the Cloud Resorce Discovery instance is being configured.
          Supported Cloud apps instance type:
          6-Azure Blob
        required: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetCRDCloudAccountsResponse"
        "404":
          description: Requested Details not found
  /V4/DistributedSystems:
    get:
      tags:
      - DistributedSystems
      - HIDDEN
      description: This endpoint is used to return the list of distributed systems.
      operationId: GetDistributedSystems
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DistributedSystemsListResp"
        "404":
          description: Requested Details not found
  /V4/Instances:
    get:
      tags:
      - Instances
      summary: Get DB Instances
      description: This endpoint is used to return the list of instances.
      operationId: GetInstances
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InstanceListResp"
        "404":
          description: Requested Details not found
  /V4/Instance/{instanceId}/Restore/Action/Disable:
    put:
      tags:
      - Instances
      summary: Disable Restore for an Instance
      description: Used to disable restore property for an instance
      operationId: DisableRestoreInstance
      parameters:
      - name: instanceId
        in: path
        description: Id of the instance to modify
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: enableAfterADelay
        in: query
        description: Provide UTC time in unix format.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/Instance/{instanceId}/Backup/Action/Disable:
    put:
      tags:
      - Instances
      summary: Disable Backup for a Database Instance
      description: Used to disable backup property for an instance
      operationId: DisableBackupInstance
      parameters:
      - name: instanceId
        in: path
        description: Id of the instance to modify
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: enableAfterADelay
        in: query
        description: Provide UTC time in unix format.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/Instance/{instanceId}/SLA/Exclude:
    put:
      tags:
      - Instances
      summary: Exclude Instance from the SLA
      description: Used to exclude instance from SLA. Applicable for Salesforce &
        Office365
      operationId: ExcludeSLAInstance
      parameters:
      - name: instanceId
        in: path
        description: Id of the instance to modify
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/Instance/{instanceId}/Restore/Action/Enable:
    put:
      tags:
      - Instances
      summary: Enable restore for an Instance
      description: Used to enable restore property for an instance
      operationId: EnableRestoreInstance
      parameters:
      - name: instanceId
        in: path
        description: Id of the instance to modify
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/Instance/{instanceId}/Backup/Action/Enable:
    put:
      tags:
      - Instances
      summary: Enable Backups for an Instance
      description: Used to enable backup property for an instance
      operationId: EnableBackupInstance
      parameters:
      - name: instanceId
        in: path
        description: Id of the instance to modify
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/Instance/{instanceId}/SLA/Include:
    put:
      tags:
      - Instances
      summary: Include Instance in SLA
      description: Used to include instance in SLA. Applicable for Salesforce
      operationId: IncludeSLAInstance
      parameters:
      - name: instanceId
        in: path
        description: Id of the instance to modify
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/InstantClones:
    get:
      tags:
      - InstantClones
      summary: Get all instant clones
      description: Get all instant clones
      operationId: getInstantClones
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InstantClonesListResp"
        "404":
          description: Requested Details not found
  /V4/Databases:
    get:
      tags:
      - Databases
      summary: Get all databases
      description: Get all databases
      operationId: GetDatabases
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DatabaseListResp"
  /V4/ReplicationGroup:
    get:
      tags:
      - ReplicationGroup
      summary: Get list of replication groups
      description: Get all replication groups
      operationId: getReplicationGroups
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReplicationGroupListResp"
        "404":
          description: Requested details not found
    post:
      tags:
      - ReplicationGroup
      summary: Create replication group
      description: Create a replication group
      operationId: CreateReplicationGroup
      requestBody:
        description: Provide the options for one of the vendors to create a replication
          group
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/V4_ReplicationGroup_body"
            examples:
              Amazon as Destination:
                value:
                  destVendor: Amazon
                  name: string
                  sourceHypervisor:
                    id: 0
                    name: string
                  vms:
                  - GUID: string
                    name: string
                  frequencyInMinutes: 240
                  recoveryTarget:
                    id: 0
                    name: string
                  storage:
                  - storagePool:
                      id: 0
                      name: string
                    isDedupe: true
                  advancedOptions:
                    validateDestinationVM: true
                    unconditionalOverwrite: false
                  overrideReplicationOptions:
                  - sourceVM:
                      GUID: string
                      name: string
                    instanceName: string
                    regionName: string
                    availabilityZone: string
                    volumeType: string
                    encryptionKey: string
                    network:
                      vpc: string
                      subnetId: string
                      network: string
                    securityGroups:
                    - id: string
                      name: string
                    instanceType: string
                    computerName: string
                    userName: string
              Azure as Destination:
                value:
                  name: string
                  sourceHypervisor:
                    id: 0
                    name: string
                  vms:
                  - GUID: string
                    name: string
                  frequencyInMinutes: 240
                  recoveryTarget:
                    id: 0
                    name: string
                  storage:
                  - storagePool:
                      id: 0
                      name: string
                    isDedupe: true
                  destVendor: Azure
                  advancedOptions:
                    unconditionalOverwrite: false
                    deployVmOnlyDuringfailover: true
                  overrideReplicationOptions:
                  - sourceVM:
                      GUID: string
                      name: string
                    vmDisplayName: string
                    resourceGroup: string
                    region: string
                    storageAccount: string
                    vmSizeId: string
                    diskTypeId: string
                    virtualNetwork:
                    - subnetId: string
                      network: string
                    securityGroup:
                      id: string
                      name: string
                    createPublicIP: true
                    restoreAsManagedVM: true
              HyperV as Destination:
                value:
                  name: string
                  sourceHypervisor:
                    id: 0
                    name: string
                  vms:
                  - GUID: string
                    name: string
                  frequencyInMinutes: 240
                  recoveryTarget:
                    id: 0
                    name: string
                  storage:
                  - storagePool:
                      id: 0
                      name: string
                    isDedupe: true
                  destVendor: HyperV
                  advancedOptions:
                    validateDestinationVM: true
                    unconditionalOverwrite: false
                  overrideReplicationOptions:
                  - sourceVM:
                      GUID: string
                      name: string
                    vmDisplayName: string
                    registerVMWithFailoverCluster: true
                    networkName: string
              VMWare as Destination:
                value:
                  name: string
                  sourceHypervisor:
                    id: 0
                    name: string
                  vms:
                  - GUID: string
                    name: string
                  frequencyInMinutes: 240
                  recoveryTarget:
                    id: 0
                    name: string
                  storage:
                  - storagePool:
                      id: 0
                      name: string
                    isDedupe: true
                  destVendor: VMware
                  replicationType: Periodic
                  advancedOptions:
                    validateDestinationVM: true
                    diskProvisioning: ORIGINAL
                    transportMode: AUTO
                    unconditionalOverwrite: false
                    SnapshotsToRetain: 0
                  snapEngine:
                    id: 0
                    name: string
                  overrideReplicationOptions:
                  - sourceVM:
                      GUID: string
                      name: string
                    vmDisplayName: string
                    destinationHost: string
                    datastore: string
                    resourcePool: string
                    vmFolder: string
                    networkSettings:
                    - source: string
                      destination: string
                    ipAddressSettings:
                    - sourceIP: string
                      sourceSubnetMask: string
                      sourceDefaultGateway: string
                      useDhcp: false
                      destinationIP: string
                      destinationSubnetMask: string
                      destinationdefaultGateway: string
                      destinationPreferredDNS: string
                      destinationAlternateDNS: string
                      destinationPreferredWINS: string
                      destinationAlternateWINS: string
                      hostname: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IdName"
        "400":
          description: Bad Request
        "500":
          description: Internal server error
  /V4/ReplicationGroup/{replicationGroupId}:
    get:
      tags:
      - ReplicationGroup
      summary: Get replication group details
      description: Get details of a replication group based on replicationGroupId
      operationId: getReplicationGroupDetails
      parameters:
      - name: replicationGroupId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: viewReplicationOptions
        in: query
        description: Set to true if want to show replication options for a continuous
          replication group
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: overrideReplicationOptions
        in: query
        description: Set to true if you want to see override replication options for
          a periodic replication group
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_6"
              examples:
                VMWare as destination:
                  value:
                    id: 0
                    name: string
                    summary:
                      source: string
                      recoveryTarget: string
                      destinationVendor: VMware
                      replicationType: Periodic
                      state: Enabled
                    rpo:
                      replicationFrequency: 240
                    storage:
                      copies:
                      - name: string
                        storagePool:
                          id: 0
                          name: string
                        retention: 0
                      copyForReplication: string
                    advancedOption:
                      validateDestinationVM: true
                      diskProvisioning: Auto
                      transportMode: Auto
                      unconditionalOverwrite: false
                      SnapshotsToRetain: 0
                    replicationConfiguration:
                    - sourceVM: string
                      destinationVM: string
                      destinationHost: string
                      datastore: string
                      overrideReplicationOptions:
                        vmDisplayName: string
                        destinationHost: string
                        datastore: string
                        resourcePool: string
                        vmFolder: string
                        networkSettings:
                        - source: string
                          destination: string
                        ipAddressSettings:
                        - sourceIp: string
                          subnetMask: string
                          defaultGateway: string
                          useDhcp: true
                          hostName: string
                          destinationIp: string
                          SubnetMaskNoDhcp: string
                          defaultGatewayNoDhcp: string
                    vendor: VMware
                Amazon as Destination:
                  value:
                    id: 0
                    name: string
                    summary:
                      source: string
                      recoveryTarget: string
                      destinationVendor: Amazon
                      replicationType: Periodic
                      state: Enabled
                    rpo:
                      replicationFrequency: 240
                    storage:
                      copies:
                      - name: string
                        storagePool:
                          id: 0
                          name: string
                        retention: 0
                      copyForReplication: string
                    advancedOption:
                      validateDestinationVM: true
                      unconditionalOverwrite: false
                    replicationConfiguration:
                    - sourceVM: string
                      destinationVM: string
                      availabilityZone: string
                      instanceType: string
                      overrideReplicationOptions:
                        instanceName: string
                        availabilityZone: string
                        volumeType: string
                        encryptionKey: string
                        network:
                          networkDisplayName: string
                          networkName: string
                          subnetId: string
                        autoSelectSecurityGroup:
                        - id: string
                          name: string
                        instanceType: string
                        computerName: string
                        userName: string
                    vendor: Amazon
                HyperV as destination:
                  value:
                    id: 0
                    name: string
                    summary:
                      source: string
                      recoveryTarget: string
                      destinationVendor: HyperV
                      replicationType: Periodic
                      state: Enabled
                    rpo:
                      replicationFrequency: 240
                    storage:
                      copies:
                      - name: string
                        storagePool:
                          id: 0
                          name: string
                        retention: 0
                      copyForReplication: string
                    advancedOption:
                      validateDestinationVM: true
                      unconditionalOverwrite: false
                    replicationConfiguration:
                    - sourceVM: string
                      destinationVM: string
                      hypervHost: string
                      destinationVolume: string
                      overrideReplicationOptions:
                        vmDisplayName: string
                        registerVMWithFailoverCluster: string
                        networkAdapter:
                        - networkName: string
                    vendor: HyperV
                Azure as Destination:
                  value:
                    id: 0
                    name: string
                    summary:
                      source: string
                      recoveryTarget: string
                      destinationVendor: Azure
                      replicationType: Periodic
                      state: Enabled
                    rpo:
                      replicationFrequency: 240
                    storage:
                      copies:
                      - name: string
                        storagePool:
                          id: 0
                          name: string
                        retention: 0
                      copyForReplication: string
                    advancedOption:
                      unconditionalOverwrite: false
                      deployVmOnlyDuringfailover: true
                    replicationConfiguration:
                    - sourceVM: string
                      destinationVM: string
                      resourceGroup: string
                      storageAccount: string
                      vmSize: string
                      createPublicIP: true
                      restoreAsManagedVm: true
                      overrideReplicationOptions:
                        vmDisplayName: string
                    vendor: Azure
        "404":
          description: Requested details not Found
    put:
      tags:
      - ReplicationGroup
      summary: Modify ReplicationGroup
      description: Modify the properties of an existing replication group
      operationId: ModifyReplicationGroup
      parameters:
      - name: replicationGroupId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateReplicationGroup"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "400":
          description: Bad Request
        "404":
          description: Requested Details not found
        "500":
          description: Internal Server Error
  /V4/GCPSpanner/instances:
    get:
      tags:
      - GCPSpanner
      summary: To get the list of instances for GCP
      description: To get the list of instances for GCP
      operationId: getGCPSpannerInstanceList
      parameters:
      - name: cloudAccountId
        in: query
        description: the google cloud hypervisor account id
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GCPInstanceList"
  /V4/FailoverGroups:
    get:
      tags:
      - FailoverGroups
      summary: Get Failover groups
      description: This end point return the list of failover groups
      operationId: ListFailoverGroups
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_7"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/FailoverGroups/{failoverGroupId}:
    get:
      tags:
      - FailoverGroups
      summary: Get Failover group details
      description: API to fetch failover group information
      operationId: GetFailoverGroupDetails
      parameters:
      - name: failoverGroupId
        in: path
        description: Id of the failover group
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailoverGroupDetails"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
    put:
      tags:
      - FailoverGroups
      summary: Modify the failover group
      description: API to modify failover group
      operationId: ModifyFailoverGroup
      parameters:
      - name: failoverGroupId
        in: path
        description: Id of the failover group
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ModifyFailoverGroupRequest"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
    delete:
      tags:
      - FailoverGroups
      summary: Delete failover group
      description: API to delete failover group
      operationId: DeleteFailoverGroup
      parameters:
      - name: failoverGroupId
        in: path
        description: Id of the failover group
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/FailoverGroups/{failoverGroupId}/Schedules:
    post:
      tags:
      - FailoverGroups
      summary: Create failover group DR operation schedule
      description: API to create failover group DR operation schedule
      operationId: CreateFailoverGroupSchedule
      parameters:
      - name: failoverGroupId
        in: path
        description: Id of the failover group
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PlanSchedule"
      responses:
        "200":
          description: Failover group DR operation schedule created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlanSchedule"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/FailoverGroups/{failoverGroupId}/Schedules/{scheduleId}:
    put:
      tags:
      - FailoverGroups
      summary: Modify failover group DR operation schedule
      description: API to create failover group DR operation schedule
      operationId: ModifyFailoverGroupSchedule
      parameters:
      - name: failoverGroupId
        in: path
        description: Id of the failover group
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: scheduleId
        in: path
        description: ID of the DR operation schedule
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PlanSchedule"
      responses:
        "200":
          description: Failover group DR operation schedule created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
    delete:
      tags:
      - FailoverGroups
      summary: Delete failover group DR operation schedule
      description: API to delete failover group DR operation schedule
      operationId: DeleteFailoverGroupSchedule
      parameters:
      - name: failoverGroupId
        in: path
        description: Id of the failover group
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: scheduleId
        in: path
        description: ID of the DR operation schedule
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Failover group DR operation schedule deleted
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/FailoverGroups/{failoverGroupId}/Action/{drOperation}:
    put:
      tags:
      - FailoverGroups
      summary: Perform failover group DR operation
      description: API to perform planned failover for failover group
      operationId: PlannedFailoverFailoverGroup
      parameters:
      - name: failoverGroupId
        in: path
        description: Id of the failover group
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: drOperation
        in: path
        description: Name of DR operation. Case insensitive
        required: true
        style: simple
        explode: false
        schema:
          $ref: "#/components/schemas/DROperation"
      - name: skipDisableNetworkAdapter
        in: query
        description: Whether to skip disabling network adapter in DR job
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: replicationId
        in: query
        description: Replication ID of particular VM in group to perform DR job on
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Job initiated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/JobId"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/FailoverGroups/{failoverGroupId}/TestFailoverMachines:
    get:
      tags:
      - FailoverGroups
      summary: Get test failover VMs list
      description: API to get test failover machines for failover group
      operationId: GetTestFailoverMachinesFailoverGroup
      parameters:
      - name: failoverGroupId
        in: path
        description: Id of the failover group
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_8"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/FailoverGroups/EligibleMachines:
    get:
      tags:
      - FailoverGroups
      summary: Get list of eligible machines that can be added to failover groups
      description: API to get list of machines eligible to be added to failover group
      operationId: GetEligibleMachinesFailoverGroup
      parameters:
      - name: sourceEntityId
        in: query
        description: The ID of the source entity. This is the ID for client or client
          group
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: failoverGroupSource
        in: query
        description: The type of failover group source. Default value is 'REPLICATION'
        required: false
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/FailoverGroupSource"
      - name: sourceEntityType
        in: query
        description: The type of source entity. It can be 'CLIENT' or 'CLIENT_ENTITY'.
          Default value is 'CLIENT'
        required: false
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/FailoverGroupHypervisorType"
      - name: destinationClientId
        in: query
        description: The client ID of the destination
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_9"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/GCPSpanner/databases:
    get:
      tags:
      - GCPSpanner
      summary: Get database list for GCP
      description: Get database list for GCP
      operationId: getGCPSpannerDatabases
      parameters:
      - name: cloudAccountId
        in: query
        description: the id of the node where the browse request is sent
        required: true
        style: form
        explode: true
        schema:
          type: integer
      - name: projectName
        in: query
        description: google cloud project the instance belongs to
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: instanceName
        in: query
        description: the google spanner instance name
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GCPDatabaseList"
  /V4/GCPSpanner/permissions:
    get:
      tags:
      - GCPSpanner
      summary: Check permission on a project for a cloud account
      description: Get permission status for a cloudAccount on a GCP project
      operationId: getGCPSpannerPermissions
      parameters:
      - name: cloudAccountId
        in: query
        description: the id of the node where the browse request is sent
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: projectName
        in: query
        description: google cloud project the instance belongs to
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StatusModel"
              examples:
                When account has permission:
                  value:
                    status: true
                When account doesn't have permission:
                  value:
                    status: false
  /V4/VMGroup:
    post:
      tags:
      - VM Group Operations
      summary: Create a VM Group
      description: Create a VM Group
      operationId: CreateVMGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreatevmGroupReq"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateVMGroupResp"
        "400":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
      x-terraform-resource: VMGroup_V2
      x-hidden-description: "When the user says configure vmware vcenter backups,\
        \ they mean create a vmgroup and a hypervisor with vms of type vmware. When\
        \ the user says onboard azure vm backups, they mean create a vmgroup and a\
        \ hypervisor of type azure. To store it in a different storage media like\
        \ azure storage, create a storagepool of that type first."
      x-dependency:
      - "List all hypervisors, a hypervisor id and name is needed to create vm group"
      - "List all serverplans, a plan id and name is used in vm group request"
      - List storages
      - Create a storagepool with /storagepool
  /V4/VMGroups:
    get:
      tags:
      - VM Group Operations
      summary: Get VM Groups
      description: Get the details of all vmGroup
      operationId: GetAllVMGroups
      parameters:
      - name: hypervisorId
        in: query
        description: Id of the hypervisor to list vm groups
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_10"
        "404":
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/VmGroup/{VmGroupId}:
    get:
      tags:
      - VM Group Operations
      summary: Get VM Group Details
      description: Get the details of  vmGroup
      operationId: GetVMGroup
      parameters:
      - name: VmGroupId
        in: path
        description: Id of the VmGroup to get
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
        x-terraform-id: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetVMGroupResp"
        "404":
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
      x-terraform-resource: VMGroup_V2
    put:
      tags:
      - VM Group Operations
      summary: Modify VM Group Details
      description: Updates the VM Group
      operationId: UpdateVMGroup
      parameters:
      - name: VmGroupId
        in: path
        description: Id of the VMgroup to update
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
        x-terraform-id: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdatevmGroupReq"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericRespWithWarning"
        "400":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
      x-terraform-resource: VMGroup_V2
      x-hidden-description: |
        This can be used to update the properties of virtual machine group. can be used to answer queries like "Associate new plan to a vm group"
        or "disable backup or restore jobs on a vm group" or "enable backup or restore jobs on a vm group"
    delete:
      tags:
      - VM Group Operations
      description: delete an existing vm group
      operationId: DeleteVMGroup
      parameters:
      - name: VmGroupId
        in: path
        description: Id of the vmgroup to delete
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
        x-terraform-id: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/vmgroupdeleteResponse"
        "404":
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
      x-terraform-resource: VMGroup_V2
      x-hidden-description: |
        This can be used to delete a virtual machine group by using its id. Deleting a vm inside vm group is not required to delete a vm group.
      x-dependency:
      - Get list of virtual machine groups.
  /V4/VM/{vmGuid}/restore:
    post:
      tags:
      - VirtualMachines
      summary: VM Restore Operation
      description: To restore a virtual machine
      operationId: VMRestore
      parameters:
      - name: vmGuid
        in: path
        description: GUID of VM to backup
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: mediaAgentName
        in: query
        description: Media agent name
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: mediaAgentId
        in: query
        description: Media agent id
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: fromTime
        in: query
        description: "Restore window UTC from time. Valid Formats: yyyy-MM-ddTHH:mm:ss\
          \ or yyyy-MM-ddTHH:mm:sszzz or yyyy-MM-dd"
        required: false
        allowEmptyValue: true
        style: form
        explode: true
        schema:
          type: string
          example: 2012-10-01T09:45:00
      - name: toTime
        in: query
        description: "Restore window UTC to time. Valid Formats: yyyy-MM-ddTHH:mm:ss\
          \ or yyyy-MM-ddTHH:mm:sszzz or yyyy-MM-dd"
        required: false
        allowEmptyValue: true
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VMGroupRestoreRequest"
            examples:
              Azure Inplace Restore:
                value:
                  inPlaceRestore: true
                  accessNode:
                    id: 25
                    name: azure-access-node
                  vmDestinationInfo:
                    azure:
                      azureVMInfoList:
                      - sourceVMGuid: e4bfbde5-ded2-468f-8a30-4896c5349a52
                        storageAccount: azureStroage
              Azure Out Of Place Restore:
                value:
                  inPlaceRestore: false
                  backupSource: 2
                  destination:
                    id: 4
                    name: azure-hypervisor
                  accessNode:
                    id: 25
                    name: azure-access-node
                  vmDestinationInfo:
                    azure:
                      azureVMInfoList:
                      - sourceVMGuid: 92e15a8a-0f7a-11ee-be56-0242ac120002
                        name: azure-vm-2
                        resourceGroup: azureResourceGroup
                        region: westus3
                        availabilityZone: None
                        storageAccount: azureStroage
                        vmSize: Standard_A1
                        diskType: Standard_LRS
                        createPublicIP: false
                        restoreAsManagedVM: true
                        securityGroupId: /subscriptions/b077d7b8-0fa2-11ee-be56-0242ac120002/resourceGroups/azureResourceGroup/providers/Microsoft.Network/networkSecurityGroups/securityGroupName
                        diskEncryptionSetTypeId: EncryptionAtRestWithCustomerKey
                        diskEncryptionSetId: /subscriptions/b077d7b8-0fa2-11ee-be56-0242ac120002/resourceGroups/azureResourceGroup/providers/Microsoft.Compute/diskEncryptionSets/diskEncryptionSetName
                        nics:
                        - networkId: /subscriptions/b077d7b8-0fa2-11ee-be56-0242ac120002/resourceGroups/resourceGroupName/providers/Microsoft.Network/virtualNetworks/networkName
                          subnetId: /subscriptions/b077d7b8-0fa2-11ee-be56-0242ac120002/resourceGroups/resourceGroupName/providers/Microsoft.Network/virtualNetworks/networkName/subnets/subnetName
                          privateIpAddress: 10.2.12.22
                          publicIpAddress: 192.168.0.1
                          publicIpAddressId: /subscriptions/b077d7b8-0fa2-11ee-be56-0242ac120002/resourceGroups/resourceGroupName/providers/Microsoft.Network/publicIPAddresses/publicIPAddressName
                        vmTags:
                        - name: tagName
                          value: tagValue
                  transportMode: Auto
                  restoreFlavour: VIRTUAL_MACHINE
                  notifyOnJobCompletion: true
                  reuseVMClient: true
              GCP Inplace Restore:
                value:
                  inPlaceRestore: true
                  accessNode:
                    id: 25
                    name: azure-access-node
                  vmDestinationInfo:
                    googleCloud:
                      googleCloudVMInfoList:
                      - instanceId: "123456789123456"
              GCP Out Of Place Restore:
                value:
                  inPlaceRestore: false
                  backupSource: 2
                  destination:
                    id: 4
                    name: GCP-hypervisor
                  accessNode:
                    id: 25
                    name: gcp-access-node
                  vmDestinationInfo:
                    googleCloud:
                      googleCloudVMInfoList:
                      - instanceId: "123456789123456"
                        name: gcp-vm
                        projectId: gcp-project-Id
                        zone: us-central1-c
                        region: us-central1
                        machineType: e2-micro
                        createPublicIP: false
                        networkInterfaces:
                        - name: https://www.googleapis.com/compute/v1/projects/project-name/global/networks/default
                          networkName: default
                          subnetId: https://www.googleapis.com/compute/v1/projects/project-name/regions/us-central1/subnetworks/default
                          networkId: https://www.googleapis.com/compute/v1/projects/project-name/global/networks/default+https://www.googleapis.com/compute/v1/projects/project-name/regions/us-central1/subnetworks/default
                          internalIP: 10.128.15.19
                          externalIP: 10.138.16.19
                        customMetadata:
                        - name: metadataName
                          value: metadataValue
                        nodeAffinities:
                        - name: string
                          value: string
                        serviceAccount:
                          id: "1142330163833163"
                          name: serviceaccountName
                          email: serviceaccount@project-name.iam.gserviceaccount.com
                        encryptionKey: kmsKeyName:projects/projectName/locations/global/keyRings/enc-key/cryptoKeys/enc-key-name
                        keyProtectionLevel: SOFTWARE
                  transportMode: Auto
                  restoreFlavour: VIRTUAL_MACHINE
                  notifyOnJobCompletion: true
                  reuseVMClient: true
              AWS Inplace Restore:
                value:
                  inPlaceRestore: true
                  accessNode:
                    id: 25
                    name: aws-access-node
                  vmDestinationInfo:
                    aws:
                      awsInstanceInfoList:
                      - instanceId: i-0f90bef70bd90c9e0
              AWS Out Of Place Restore:
                value:
                  inPlaceRestore: false
                  backupSource: 2
                  destination:
                    id: 4
                    name: aws-hypervisor
                  accessNode:
                    id: 25
                    name: aws-access-node
                  vmDestinationInfo:
                    aws:
                      awsInstanceInfoList:
                      - instanceId: i-0f90bef70bd90c9e0
                        instanceName: instance-name
                        zone: us-east1-a
                        region: us-east-1
                        instanceSize: t2.micro
                        volumeType: string
                        encryptionKey:
                          isEncrypted: true
                          encryptionKey: arn:aws:kms:us-east-1:63829106:key/d3bc59d8-43fc-891d-6b38e0bfbb51
                        nics:
                        - vpcId: vpc-02fbd4b022f1c7331
                          networkName: xyz-vpc\\xyz-subnet\\New-Network-Interface
                          subnetId: subnet-0fe12aab7f5c6ac67
                          eniId: New-Network-Interface
                        securityGroups:
                        - groupId: sg-09b2ac7e61433b1ef
                          groupName: rohith-sg
                        vmTags:
                        - name: tagName
                          value: tagValue
                        restoreSourceVMTags: true
                        keyPairs:
                        - keyId: KeyId
                          keyName: KeyValue
                        restoreSourceNetworkConfig: true
                  transportMode: Auto
                  restoreFlavour: VIRTUAL_MACHINE
                  notifyOnJobCompletion: true
                  reuseVMClient: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateTaskRespforBackup"
        "404":
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/VmGroup/{VmGroupId}/restore:
    post:
      tags:
      - VirtualMachines
      summary: VMGroup Restore Operation
      description: To restore the virtual machines in vmgroup
      operationId: VMGroupRestore
      parameters:
      - name: VmGroupId
        in: path
        description: Id of the VMgroup to backup
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: mediaAgentName
        in: query
        description: Media agent name
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: mediaAgentId
        in: query
        description: Media agent id
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: fromTime
        in: query
        description: "Restore window UTC from time. Valid Formats: yyyy-MM-ddTHH:mm:ss\
          \ or yyyy-MM-ddTHH:mm:sszzz or yyyy-MM-dd"
        required: false
        allowEmptyValue: true
        style: form
        explode: true
        schema:
          type: string
          example: 2012-10-01T09:45:00
      - name: toTime
        in: query
        description: "Restore window UTC to time. Valid Formats: yyyy-MM-ddTHH:mm:ss\
          \ or yyyy-MM-ddTHH:mm:sszzz or yyyy-MM-dd"
        required: false
        allowEmptyValue: true
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VMGroupRestoreRequest"
            examples:
              Azure Inplace Restore:
                value:
                  inPlaceRestore: true
                  accessNode:
                    id: 25
                    name: azure-access-node
                  vmDestinationInfo:
                    azure:
                      azureVMInfoList:
                      - sourceVMGuid: e4bfbde5-ded2-468f-8a30-4896c5349a52
                        storageAccount: azureStroageAccount1
                      - sourceVMGuid: 92e15a8a-0f7a-11ee-be56-0242ac120002
                        storageAccount: azureStroageAccount2
              Azure Out Of Place Restore:
                value:
                  inPlaceRestore: false
                  backupSource: 2
                  destination:
                    id: 4
                    name: azure-hypervisor
                  accessNode:
                    id: 25
                    name: azure-access-node
                  vmDestinationInfo:
                    azure:
                      azureVMInfoList:
                      - sourceVMGuid: 92e15a8a-0f7a-11ee-be56-0242ac120002
                        name: azure-vm-2
                        resourceGroup: azureResourceGroup
                        region: westus3
                        availabilityZone: None
                        storageAccount: azureStroage
                        vmSize: Standard_A1
                        diskType: Standard_LRS
                        createPublicIP: false
                        restoreAsManagedVM: true
                        securityGroupId: /subscriptions/b077d7b8-0fa2-11ee-be56-0242ac120002/resourceGroups/azureResourceGroup/providers/Microsoft.Network/networkSecurityGroups/securityGroupName
                        diskEncryptionSetTypeId: EncryptionAtRestWithCustomerKey
                        diskEncryptionSetId: /subscriptions/b077d7b8-0fa2-11ee-be56-0242ac120002/resourceGroups/azureResourceGroup/providers/Microsoft.Compute/diskEncryptionSets/diskEncryptionSetName
                        nics:
                        - networkId: /subscriptions/b077d7b8-0fa2-11ee-be56-0242ac120002/resourceGroups/resourceGroupName/providers/Microsoft.Network/virtualNetworks/networkName
                          subnetId: /subscriptions/b077d7b8-0fa2-11ee-be56-0242ac120002/resourceGroups/resourceGroupName/providers/Microsoft.Network/virtualNetworks/networkName/subnets/subnetName
                          privateIpAddress: 10.2.12.22
                          publicIpAddress: 192.168.0.1
                          publicIpAddressId: /subscriptions/b077d7b8-0fa2-11ee-be56-0242ac120002/resourceGroups/resourceGroupName/providers/Microsoft.Network/publicIPAddresses/publicIPAddressName
                        vmTags:
                        - name: tagName
                          value: tagValue
                  transportMode: Auto
                  restoreFlavour: VIRTUAL_MACHINE
                  notifyOnJobCompletion: true
                  reuseVMClient: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateTaskRespforBackup"
        "404":
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/VmGroup/{VmGroupId}/backup:
    post:
      tags:
      - VM Group Operations
      summary: Backup VM Group
      description: To Backup the virtual machines in vmgroup
      operationId: VMGroupBackup
      parameters:
      - name: VmGroupId
        in: path
        description: Id of the VMgroup to backup
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: backupLevel
        in: query
        description: "Backup level , Default :Incremental"
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - FULL
          - INCREMENTAL
          - DIFFERENTIAL
          - SYNTHETIC_FULL
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateTaskRespforBackup"
        "404":
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
      x-hidden-description: |
        If the request is to configure virtual machine, and not just to backup, then the vm to backup needs to be created first
      x-dependency:
      - Create credentials using POST /V4/Credentials
      - Create hypervisor using POST /V4/Hypervisor
      - Create server plan using POST /V4/ServerPlan
      - create virtual machine group POST /V4/VmGroup
  /V4/VirtualMachines:
    get:
      tags:
      - VirtualMachines
      summary: Get Virtual Machines
      description: Get all virtual machines
      operationId: GetVirtualMachines
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VirtualMachineListResp"
        "404":
          description: Requested Details not found
  /V4/VirtualMachines/{vmUUID}:
    get:
      tags:
      - VirtualMachines
      summary: Get Virtual Machine Details
      description: Get details for virtual machine
      operationId: GetVMDetails
      parameters:
      - name: vmUUID
        in: path
        description: The vmUUID can be obtained from GET /virtualMachines UUID property
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: showInheritedAssociation
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_11"
        "404":
          description: Requested Details not found
    put:
      tags:
      - VirtualMachines
      summary: Modify Virtual Machine Details
      description: Modify the properties of an existing virtual machine
      operationId: ModifyVirtualMachine
      parameters:
      - name: vmUUID
        in: path
        description: The vmUUID can be obtained from GET /virtualMachines UUID property
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateVMProperties"
      responses:
        "200":
          description: Success
        "401":
          description: Unauthorized
        "404":
          description: Requested Details not found
    delete:
      tags:
      - VirtualMachines
      summary: Delete a Virtual Machine
      description: Used to delete a virtual machine
      operationId: DeleteVirtualMachine
      parameters:
      - name: vmUUID
        in: path
        description: The vmUUID can be obtained from GET /virtualMachines UUID property
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "400":
          description: Requested Details not found
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/VirtualMachines/{vmUUID}/backup:
    post:
      tags:
      - VirtualMachines
      summary: Backup VM Group
      description: To Backup the virtual machines in vmgroup
      operationId: VirtualMachineBackup
      parameters:
      - name: vmUUID
        in: path
        description: Id of the Virtual Machine to backup
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: backupLevel
        in: query
        description: "Backup level , Default :Incremental"
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - FULL
          - INCREMENTAL
          - DIFFERENTIAL
          - SYNTHETIC_FULL
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateTaskRespforBackup"
        "404":
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
      x-hidden-description: |
        If the request is to configure virtual machine, and not just to backup, then the vm to backup needs to be created first
      x-dependency:
      - Create credentials
      - Create hypervisor
      - Create server plan
      - create virtual machine group
      - Create a virtual machine
  /V4/mediaAgent:
    get:
      tags:
      - MediaAgent
      summary: Get MediaAgents
      description: Get All Media Agents
      operationId: GetMediaAgents
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MediaAgentListResponse"
        "404":
          description: Requested Details not found
    post:
      tags:
      - MediaAgent
      summary: Create a Media Agent
      description: To install MediaAgent package on a server
      operationId: InstallMediaAgent
      requestBody:
        description: Server information where you want to install MediaAgent package.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InstallMediaAgent"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/JobId"
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
  /V4/DDB/MediaAgents:
    get:
      tags:
      - MediaAgent
      summary: Get MediaAgents for DDB
      description: Get All Media Agents for DDB
      operationId: GetMediaAgentsForDDB
      parameters:
      - name: fetchDDBDisks
        in: query
        description: If set to true then fetch the list of DDB disks hosted on each
          MediaAgent
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MediaAgentForDDBListResponse"
        "404":
          description: Requested Details not found
  /V4/mediaAgent/{mediaAgentId}:
    get:
      tags:
      - MediaAgent
      summary: Get Media Agent Details
      description: Get details of a media agent based on id
      operationId: GetMediaAgentDetails
      parameters:
      - name: mediaAgentId
        in: path
        description: Id of the Media Agent whose details have to be fetched
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: showInheritedAssociation
        in: query
        description: Show inherited security association
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MediaAgent"
        "404":
          description: Requested Details not found
    put:
      tags:
      - MediaAgent
      summary: Modify Media Agent Details
      description: Modify the properties of an existing media agent
      operationId: ModifyMediaAgent
      parameters:
      - name: mediaAgentId
        in: path
        description: Id of the mediaAgent to update
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateMediaAgent"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "400":
          description: Bad Request
        "404":
          description: Requested Details not found
    delete:
      tags:
      - MediaAgent
      summary: Delete Media Agent
      description: Used to delete a media agent.
      operationId: DeleteMediaAgent
      parameters:
      - name: mediaAgentId
        in: path
        description: Id of the media agent to delete
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "404":
          description: Requested Details not found
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/Hypervisor:
    get:
      tags:
      - Hypervisor Operations
      summary: Get all Hypervisor
      description: Get the details of all Hypervisor
      operationId: ListHypervisors
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListHypervisors"
        "404":
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
    post:
      tags:
      - Hypervisor Operations
      summary: Create a Hypervisor
      description: Create Hypervisor for that particular type
      operationId: CreateHypervisor
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/V4_Hypervisor_body"
            examples:
              VMWARE:
                value:
                  name: string
                  hypervisorType: VMW
                  accessNodes:
                  - id: 0
                    name: string
                    type: 3
                  credentials:
                    id: 0
                    name: string
                  vcenterHostName: string
              AZURE:
                value:
                  name: string
                  hypervisorType: AZURE_V2
                  accessNodes:
                  - id: 0
                    name: string
                    type: 3
                  credentials:
                    id: 0
                    name: string
                  subscriptionId: string
              AZURE_USE_MANAGED_IDENTITY:
                value:
                  name: string
                  hypervisorType: AZURE_V2
                  accessNodes:
                  - id: 0
                    name: string
                    type: 3
                  subscriptionId: string
                  useManagedIdentity: true
              HYPER-V:
                value:
                  name: string
                  hypervisorType: Hyper-V
                  accessNodes:
                  - id: 0
                    name: string
                    type: 3
                  credentials:
                    id: 0
                    name: string
                  serverName: string
              AWS_ACCESS_AND_SECRET_KEY:
                value:
                  name: string
                  hypervisorType: AMAZON
                  accessNodes:
                  - id: 0
                    name: string
                    type: 3
                  credentials:
                    id: 0
                    name: string
                  region: default
              AWS_IAM_ROLE:
                value:
                  name: string
                  hypervisorType: AMAZON
                  accessNodes:
                  - id: 0
                    name: string
                    type: 3
                  useIamRole: true
                  region: default
              AWS_STS_ASSUME_ROLE:
                value:
                  name: string
                  hypervisorType: AMAZON
                  accessNodes:
                  - id: 0
                    name: string
                    type: 3
                  credentials:
                    id: 0
                    name: string
                  isSTSAssumeRole: true
                  region: default
              NUTANIX:
                value:
                  name: string
                  hypervisorType: NUTANIX
                  accessNodes:
                  - id: 2
                    name: string
                    type: 3
                  password: string
                  userName: string
                  hostName: string
              OPENSTACK:
                value:
                  name: string
                  hypervisorType: OPENSTACK
                  accessNodes:
                  - id: 0
                    name: string
                    type: 3
                  openstackDomain: string
                  password: string
                  userName: string
                  keynoteAddress: string
              GCP:
                value:
                  name: string
                  hypervisorType: GOOGLE_CLOUD
                  accessNodes:
                  - id: 0
                    name: string
                    type: 3
                  credentials:
                    id: 0
                    name: string
              AZURE STACK:
                value:
                  name: string
                  hypervisorType: AZURE_STACK
                  accessNodes:
                  - id: 0
                    name: string
                    type: 3
                  ApplicationPassword: string
                  subscriptionId: string
                  resourceManagerURL: string
                  tenantId: string
                  ApplicationId: string
                  selectAuthenticationType:
                    name: Azure Active Directory
                    id: azureAD
                    selected: true
              OCI:
                value:
                  name: string
                  hypervisorType: ORACLE_CLOUD_INFRASTRUCTURE
                  accessNodes:
                  - id: 0
                    name: string
                    type: 3
                  credentials:
                    id: 0
                    name: string
                  regionName: string
              ALIBABA CLOUD:
                value:
                  name: string
                  hypervisorType: ALIBABA_CLOUD
                  accessNodes:
                  - id: 0
                    name: string
                    type: 3
                  secretKey: string
                  accessKey: string
              ORACLE VM:
                value:
                  name: string
                  hypervisorType: ORACLE_VM
                  accessNodes:
                  - id: 0
                    name: string
                    type: 3
                  password: string
                  userName: string
                  oracleVMManager: string
              RED HAT VIRTUALIZATION:
                value:
                  name: string
                  hypervisorType: REDHAT
                  accessNodes:
                  - id: 0
                    name: string
                    type: 3
                  password: string
                  userName: string
                  RhevMManager: string
              VCLOUD:
                value:
                  name: string
                  hypervisorType: VCLOUD
                  accessNodes:
                  - id: 0
                    name: string
                    type: 3
                  credentials:
                    id: 0
                    name: string
                  hostName: string
                  cloudTenantAccount: false
              VCLOUD_ORGANIZATION_ACCOUNT:
                value:
                  name: string
                  hypervisorType: VCLOUD
                  createOrgAccount: true
                  vCloudDirector: string
                  vOrganizationName: string
                  vOrganizationGuid: string
                  vcenterHostName: string
              Azure Stack HCI:
                value:
                  name: string
                  hypervisorType: AZURE_STACK_HCI
                  accessNodes:
                  - id: 0
                    name: string
                    type: 3
                  credentials:
                    id: 0
                    name: string
                  clusterName: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_12"
        "400":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
      x-terraform-resource: Hypervisor
      x-terraform-oneof-map:
      - schema: CreateHypervisorGroupAmazon
        resource: AWS
      - schema: CreateHypervisorGroupAzure
        resource: Azure
      x-dependency:
      - List access nodes
  /V4/Hypervisor/{hypervisorId}:
    get:
      tags:
      - Hypervisor Operations
      summary: Get Hypervisor Details
      description: Get the details of  HYpervisor
      operationId: GetHypervisors
      parameters:
      - name: hypervisorId
        in: path
        description: Id of the HYpervisor to get
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
        x-terraform-id: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HypervisorPropertiesResp"
        "404":
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
      x-terraform-resource: Hypervisor
    put:
      tags:
      - Hypervisor Operations
      summary: Update the Hypervisor details
      description: Updates the Hypervisors
      operationId: updateHypervisor
      parameters:
      - name: hypervisorId
        in: path
        description: Id of the Hypervisor to update
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
        x-terraform-id: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Hypervisor_hypervisorId_body"
            examples:
              VMware:
                description: ""
                value:
                  hypervisorType: VMW
                  accessNodes:
                  - id: 0
                    name: string
                  fbrUnixMediaAgent:
                    id: 0
                    name: string
                  activityControl:
                    enableBackup: true
                    enableRestore: true
                  newName: string
                  vcenterHostName: string
                  userName: string
                  password: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HypervisorPropertiesResp"
        "400":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
      x-terraform-resource: Hypervisor
      x-terraform-oneof-map:
      - schema: UpdateHypervisorGroupAmazon
        resource: AWS
      - schema: UpdateHypervisorGroupAzure
        resource: Azure
      x-hidden-description: |
        Can be used to disable or enable backup or restore jobs on a hypervisor using activityControl.
    delete:
      tags:
      - Hypervisor Operations
      summary: Delete a Hypervisor
      description: delete an existing Hypervisor
      operationId: DeleteHypervisor
      parameters:
      - name: hypervisorId
        in: path
        description: Id of the Hypervisor to delete
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
        x-terraform-id: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "404":
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
      x-terraform-resource: Hypervisor
      x-terraform-override: "/Client/{hypervisorId}/Retire"
  /V4/Hypervisor/{hypervisorId}/{InventoryEntityName}/Browse:
    get:
      tags:
      - Hypervisor Operations
      summary: Browse the Inventory of your hypervisor by hypervisor ID
      description: Browse the Inventory of your hypervisor
      operationId: BrowseHypervisorInventory
      parameters:
      - name: hypervisorId
        in: path
        description: Hypervisor client ID to browse
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: InventoryEntityName
        in: path
        description: Name of the inventory entity that needs to be browsed like ESX
          Host name in VCenter
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: InventoryType
        in: query
        description: Type of resource to browse in inventory
        required: false
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/VMContentType"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_13"
        "404":
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/Hypervisor/{hypervisorId}/Reconfigure:
    post:
      tags:
      - Hypervisor Operations
      summary: REconfigures and Renew License for  the hypervisor client
      description: REconfigures and Renew License for  the hypervisor client
      operationId: ReConfigureHypervisor
      parameters:
      - name: hypervisorId
        in: path
        description: Hypervisor client ID to reconfigure
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "404":
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/Hypervisor/{HypervisorId}/Credentials:
    put:
      tags:
      - Hypervisor Operations
      summary: Update Hypervisor Credentials
      description: Update Hypervisor's credentials information
      operationId: updateHypervisorCredentials
      parameters:
      - name: HypervisorId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/HypervisorId_Credentials_body"
            examples:
              Google Cloud:
                value:
                  hypervisorType: GOOGLE_CLOUD
                  userName: string
                  password: string
                  serviceAccountId: string
              VMware:
                value:
                  hypervisorType: VMW
                  vcenterHostName: string
                  userName: string
                  password: string
              vCloud:
                value:
                  hypervisorType: VCLOUD
                  hostName: string
                  userName: string
                  password: string
              Amazon:
                value:
                  hypervisorType: Amazon
                  accessKey: string
                  RoleARN: string
                  secretKey: string
                  Region: string
                  useIamRole: true
                  useServiceAccount: integer
              Azure_V2:
                value:
                  hypervisorType: AZURE_V2
                  tenantId: string
                  serverName: string
                  subscriptionId: string
                  userName: string
                  password: string
              Azure Stack:
                value:
                  hypervisorType: AZURE_STACK
                  tenantId: string
                  subscriptionId: string
                  useManagedIdentity: false
                  ApplicationId: string
                  ApplicationPassword: string
                  resourceManagerURL: string
              Hyper-v:
                value:
                  hypervisorType: Hyper-V
                  hostName: string
                  userName: string
                  password: string
              ALIBABA_CLOUD:
                value:
                  hypervisorType: ALIBABA_CLOUD
                  accessKey: string
                  secretKey: string
              ORACLE_CLOUD_INFRASTRUCTURE:
                value:
                  hypervisorType: ORACLE_CLOUD_INFRASTRUCTURE
                  tenancyOCId: string
                  userOCId: string
                  fingerPrint: string
                  privateKeyFileName: string
                  privateKeyPassword: string
                  regionName: string
              REDHAT:
                value:
                  hypervisorType: REDHAT
                  RhevMManager: string
                  userName: string
                  password: string
              OPENSTACK:
                value:
                  hypervisorType: OPENSTACK
                  userName: string
                  password: string
                  openstackDomain: string
                  keynoteAddress: string
              ORACLE_VM:
                value:
                  hypervisorType: ORACLE_VM
                  userName: string
                  password: string
                  oracleVMManager: string
              NUTANIX:
                value:
                  hypervisorType: NUTANIX
                  userName: string
                  password: string
                  hostName: string
              Azure Stack HCI:
                value:
                  hypervisorType: AZURE_STACK_HCI
                  clusterName: string
                  userName: string
                  password: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateHypervisorResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/Laptop:
    get:
      tags:
      - Laptop
      summary: Get Laptop Devices (New)
      description: Get list of laptops
      operationId: GetLaptopList
      parameters:
      - name: edgemode
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: additionalProperties
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LaptopsList"
    post:
      tags:
      - Laptop
      summary: create a laptop
      description: Simplified API to create a laptop
      operationId: postLaptop
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddLaptop"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AddLaptopResp"
        "400":
          description: Bad Request
        "404":
          description: Requested Details not found
  /V4/NetworkTopology:
    get:
      tags:
      - NetworkTopology
      summary: Get Network Topologies
      description: This endpoint is used to return the list of network topology.
      operationId: GETFirewallTopology
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_14"
        "404":
          description: Requested Details not found
    post:
      tags:
      - NetworkTopology
      summary: Create a Network Topology
      description: This endpoint is used to create network topology.
      operationId: POSTFirewallTopology
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FirewallTopologyCreateReq"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FirewallTopologyCreateResp"
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
  /V4/NetworkTopology/{topologyId}:
    get:
      tags:
      - NetworkTopology
      summary: Get Network Topology Details
      description: This endpoint is used to return the detail of network topology.
      operationId: GETFirewallTopologyDetails
      parameters:
      - name: topologyId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_15"
        "404":
          description: Requested Details not found
    put:
      tags:
      - NetworkTopology
      summary: Modify Network Topology details
      description: This endpoint is used to edit network topology.
      operationId: PUTFirewallTopology
      parameters:
      - name: topologyId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FirewallTopologyCreateReq"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "404":
          description: Requested details not found
        "500":
          description: Internal Server Error
    delete:
      tags:
      - NetworkTopology
      summary: Delete a Network Topology
      description: This endpoint is used to delete network topology.
      operationId: DELETEFirewallTopology
      parameters:
      - name: topologyId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "404":
          description: Requested Details not found
        "500":
          description: Internal Server Error
  /V4/Regions:
    get:
      tags:
      - Regions
      summary: Get Regions
      description: 'Get list of regions '
      operationId: GetRegions
      parameters:
      - name: type
        in: query
        description: Region type to be filtered
        required: false
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/RegionType"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RegionsListResp"
    post:
      tags:
      - Regions
      summary: Create Region
      description: Create a region
      operationId: CreateRegion
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateRegion"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IdNameGUID"
        "400":
          description: Bad Request
        "409":
          description: Region with same name already exists
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Internal Server Error
  /V4/Regions/{regionId}:
    get:
      tags:
      - Regions
      summary: Get Region Details
      description: Get details of the region
      operationId: GetRegionDetails
      parameters:
      - name: regionId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RegionDetails"
        "500":
          description: Internal Server Error
    put:
      tags:
      - Regions
      summary: Update Region
      description: Update details of the region
      operationId: UpdateRegion
      parameters:
      - name: regionId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Properties to be updated for the region
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateRegion"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Internal Server Error
    delete:
      tags:
      - Regions
      summary: Delete Region
      description: Delete the region
      operationId: DeleteRegion
      parameters:
      - name: regionId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "400":
          description: Region not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /v4/Plan/Summary/{planId}:
    get:
      tags:
      - Plan
      summary: Get Single Plan Summary
      description: Api to fetch summary of a plan.
      operationId: getSinglePlanSummary
      parameters:
      - name: planId
        in: path
        description: Id of the plan to get summary of
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SinglePlanSummary"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/Plan/BackupDestinations:
    post:
      tags:
      - Plan
      summary: Create backup destination (without Plan)
      description: |
        Create backup destination(s) for a plan before creating the plan.
        The primary backup destination can be then associated with the plan to associate all secondary copies also.
      operationId: CreateBackupDestinationWithoutPlanInfo
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateBackupDestinations"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreatePlanBackupDestinationResp"
        "400":
          description: Bad Request
      x-terraform-resource: Plan_BackupDestination
  /V4/Plan/BackupDestination/{BackupDestinationId}:
    get:
      tags:
      - Plan
      summary: Get details of a backup destination
      description: |
        Fetch details of a backup destination.
      operationId: GetBackupDestinationDetailsWithoutPlanInfo
      parameters:
      - name: BackupDestinationId
        in: path
        description: Id of the backupDestination for which details will be fetched.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
        x-terraform-id: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackupDestination"
        "400":
          description: Bad Request
      x-terraform-resource: Plan_BackupDestination
    put:
      tags:
      - Plan
      summary: Modify Backup Destination (Without a Plan)
      description: |-
        Modify Backup Destination. Only primary backup destination will be considered for region updation.
        If the primary backup destination is not associated with a plan, only then the region associaion can be modified.
      operationId: ModifyBackupDestinationWithoutPlanInfo
      parameters:
      - name: BackupDestinationId
        in: path
        description: Id of the backupDestination to be modified
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
        x-terraform-id: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateBackupDestination"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlanBackupDestinationResp"
        "404":
          description: Requested Details not found
      x-terraform-resource: Plan_BackupDestination
    delete:
      tags:
      - Plan
      summary: Delete backup destination
      description: "Delete Backup Destination. If trying to delete primary backup\
        \ destination which is not associated with any plan, it will delete all secondary\
        \ copies also."
      operationId: DeleteBackupDestinationWithoutPlanInfo
      parameters:
      - name: BackupDestinationId
        in: path
        description: Id of the backupDestination to be deleted
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
        x-terraform-id: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "404":
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "412":
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
      x-terraform-resource: Plan_BackupDestination
  /V4/Plan/Rule:
    get:
      tags:
      - PlanRules
      summary: Fetch plan rules list.
      description: Api to fetch plan rules list.
      operationId: getPlanRules
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlanEntityRuleList"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
    put:
      tags:
      - PlanRules
      summary: Update a Plan Rule
      description: "Api to update existing plan rules. Request body will suggest which\
        \ rule need to be updated and type of entities(workloads type, server groups,\
        \ regions and all) that need to be referenced for applying that rule against\
        \ a workload."
      operationId: updatePlanRule
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdatePlanEntityRule"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
    post:
      tags:
      - PlanRules
      summary: Create a Plan Rule
      description: "Api to create plan rules. Request body will suggest plan against\
        \ which rule need to be created and type of entities(workloads type, server\
        \ groups, regions and all) that need to be referenced for applying that rule\
        \ against a workload."
      operationId: createPlanRule
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreatePlanEntityRule"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IdName"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/Plan/Rule/{ruleId}:
    get:
      tags:
      - PlanRules
      summary: Api to fetch plan rules details.
      description: Api to fetch plan rules details.
      operationId: getPlanRuleDetails
      parameters:
      - name: ruleId
        in: path
        description: Id of the rule to update in Plan
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlanEntityRuleInfo"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
    delete:
      tags:
      - PlanRules
      summary: Delete selected plan rule
      description: Api to delete selected plan rule
      operationId: deletePlanRule
      parameters:
      - name: ruleId
        in: path
        description: Id of the rule to update in Plan
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "400":
          description: Bad Request(Rule not found)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "403":
          description: Forbidden(Access Denied)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Internal Server Error (in case of any error on Server while
            processing request)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/entity/{entityType}/{entityId}/region:
    get:
      tags:
      - Regions
      summary: Get Region Details of entity
      description: Api to fetch region details for an entity.
      operationId: getRegionForEntity
      parameters:
      - name: entityType
        in: path
        description: Type of the entity
        required: true
        style: simple
        explode: false
        schema:
          $ref: "#/components/schemas/EntityTypes"
      - name: entityId
        in: path
        description: Unique id for the entity
        required: true
        style: simple
        explode: false
        schema:
          minimum: 1
          type: integer
          format: int32
      - name: calculate
        in: query
        description: Flag for Enable/Disable Region Calculation
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: entityRegionType
        in: query
        description: Region Type Enum
        required: false
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/EntityRegionTypes"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IdNameDisplayName"
        "500":
          description: Internal Server Error
    put:
      tags:
      - Regions
      summary: Set Region for an entity
      description: Api to set region for an entity.
      operationId: setRegionForEntity
      parameters:
      - name: entityType
        in: path
        description: Type of the entity
        required: true
        style: simple
        explode: false
        schema:
          $ref: "#/components/schemas/EntityTypes"
      - name: entityId
        in: path
        description: Unique id for the entity
        required: true
        style: simple
        explode: false
        schema:
          minimum: 1
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EntityRegionInfo"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/entity/region:
    get:
      tags:
      - Regions
      summary: Get Region for entities
      description: Fetch region for multiple entity
      operationId: getRegionForEntities
      parameters:
      - name: entityType
        in: query
        description: Entity Type Enum
        required: true
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/EntityTypes"
        example: CLIENT
      - name: regionType
        in: query
        description: Region Type Enum
        required: false
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/EntityRegionTypes"
        example: BACKUP
      - name: entities
        in: query
        description: Comma Seprated Entity Ids
        required: true
        style: form
        explode: true
        schema:
          type: string
        example: "1,2,3"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetEntityRegionResp"
              examples:
                Region For Entities:
                  value:
                    regions:
                    - id: 43
                      name: South India
                      entityId: 1
                    - id: 5
                      name: North America
                      entityId: 2
                    - id: 4
                      name: Europe
                      entityId: 3
                    entityType: CLIENT
                    regionType: BACKUP
                    error:
                      errorCode: 0
                      errorMessage: ""
        "400":
          description: Bad Request
  /V5/BlackoutWindow:
    get:
      tags:
      - BlackoutWindows
      summary: Get Blackout Window
      description: Get All Blackout Windows
      operationId: GetBlackoutWindows
      parameters:
      - name: showOnlyCommcellLevel
        in: query
        description: Shows blackout window at commcell level if set to true.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: companyId
        in: query
        description: Shows blackout windows associated with the company whose id has
          been provided.
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: serverGroupId
        in: query
        description: Shows blackout windows associated with the server group whose
          id has been provided.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: commcellId
        in: query
        description: Shows blackout windows associated with the commcell whose id
          has been provided.
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BlackoutWindowsListResponse"
        "404":
          description: Requested Details not found
    post:
      tags:
      - BlackoutWindows
      summary: Create a Blackout Window
      description: Create a Blackout Window
      operationId: CreateBlackoutWindow
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateBlackoutWindow"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IdName"
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
  /V5/BlackoutWindow/{blackoutWindowId}:
    get:
      tags:
      - BlackoutWindows
      summary: Get Blackout Window Properties
      description: Get details of a blackout window based on id
      operationId: GetBlackoutWindowDetails
      parameters:
      - name: blackoutWindowId
        in: path
        description: Id of the Blackout Window whose details have to be fetched
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BlackoutWindow"
        "404":
          description: Requested Details not found
    put:
      tags:
      - BlackoutWindows
      summary: Modify Blackout Window properties
      description: Modify the properties of an existing Blackout Window
      operationId: ModifyBlackoutWindow
      parameters:
      - name: blackoutWindowId
        in: path
        description: Id of the Blackout Window to update
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateBlackoutWindow"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "400":
          description: Bad Request
        "404":
          description: Requested Details not found
  /V4/BlackoutWindow:
    get:
      tags:
      - BlackoutWindows
      summary: Get Blackout Windows List
      description: Get All Blackout Windows
      operationId: GetV4BlackoutWindows
      parameters:
      - name: showOnlyCommcellLevel
        in: query
        description: Shows blackout window at commcell level if set to true.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: companyId
        in: query
        description: Shows blackout windows associated with the company whose id has
          been provided.
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: serverGroupId
        in: query
        description: Shows blackout windows associated with the server group whose
          id has been provided.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: commcellId
        in: query
        description: Shows blackout windows associated with the commcell whose id
          has been provided.
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V4BlackoutWindowsListResponse"
        "404":
          description: Requested Details not found
    post:
      tags:
      - BlackoutWindows
      summary: Create new Blackout Window
      description: Create a Blackout Window
      operationId: CreateV4BlackoutWindow
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/V4CreateBlackoutWindow"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IdName"
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
  /V4/BlackoutWindow/{blackoutWindowId}:
    get:
      tags:
      - BlackoutWindows
      summary: Get Blackout Window Details
      description: Get details of a blackout window based on id
      operationId: GetV4BlackoutWindowDetails
      parameters:
      - name: blackoutWindowId
        in: path
        description: Id of the Blackout Window whose details have to be fetched
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V4BlackoutWindow"
        "404":
          description: Requested Details not found
    put:
      tags:
      - BlackoutWindows
      summary: Modify Blackout Window Details
      description: Modify the properties of an existing Blackout Window
      operationId: ModifyV4BlackoutWindow
      parameters:
      - name: blackoutWindowId
        in: path
        description: Id of the Blackout Window to update
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/V4UpdateBlackoutWindow"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "400":
          description: Bad Request
        "404":
          description: Requested Details not found
    delete:
      tags:
      - BlackoutWindows
      summary: Delete Blackout Window
      description: Used to delete a Blackout Window
      operationId: DeleteBlackoutWindow
      parameters:
      - name: blackoutWindowId
        in: path
        description: Id of the Blackout Window to delete
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "404":
          description: Requested Details not found
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/ResourcePool:
    get:
      tags:
      - ResourcePools
      summary: Get Resource Pools
      description: Get All Resource Pools
      operationId: GetResourcePools
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourcePoolListResponse"
        "404":
          description: Requested Details not found
  /V4/Snmp:
    get:
      tags:
      - SNMP
      summary: Get SNMP Servers
      description: Get list of SNMP hosts for alert notification
      operationId: GetSNMPhosts
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_16"
        "404":
          description: Requested Details not found
  /V4/IndexServers:
    get:
      tags:
      - IndexServers
      summary: Get Index Servers
      description: Get list of index servers
      operationId: GetIndexServers
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IndexServersListResp"
  /v4/HFSShare/{HFSShareId}/Status:
    get:
      tags:
      - HybridFileStores
      summary: Get Hybrid File Store Share Status
      description: API to get Hybrid File Store Share Status
      operationId: GetHybridFileStoreShareStatus
      parameters:
      - name: HFSShareId
        in: path
        description: Id of the HFS Share to fetch its status
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HFSShareStatusResp"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HFSShareStatusResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HFSShareStatusResp"
      x-excludedfrom-saas: true
  /V4/HybridFileStores:
    get:
      tags:
      - HybridFileStores
      summary: Get Hybrid File Stores
      description: Get list of hybrid file stores
      operationId: GetHybridFileStores
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HybridFileStoresListResp"
      x-excludedfrom-saas: true
  /V4/EmailServer:
    get:
      tags:
      - EmailServer
      summary: Get Email Server
      description: Retrieves SMTP server details
      operationId: GetEmailServer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetEmailServerDetails"
        "401":
          description: Unauthorized
    put:
      tags:
      - EmailServer
      summary: Update Email Server
      description: Update the SMTP server settings
      operationId: UpdateEmailServer
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateEmailServerReq"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
    post:
      tags:
      - EmailServer
      summary: Configure Email Server
      description: Configure SMTP server settings.
      operationId: ConfigureEmailServer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ConfigureSMTPServerReq"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
  /V4/EmailServer/Action/Test:
    post:
      tags:
      - EmailServer
      summary: Send Test Mail Req
      description: To test Email settings
      operationId: SendTestMailReq
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SendTestMailReq"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
  /V4/Servers:
    get:
      tags:
      - Servers
      summary: Get Servers
      description: This end point returns the list of servers
      operationId: GetServers
      parameters:
      - name: showOnlyInfrastructureMachines
        in: query
        description: "Returns only infrastructure machines if value is 1 if 0, it\
          \ returns all servers, default value is 1"
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 1
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServersListResp"
  /V4/Kubernetes/{clusterId}/Modifier:
    get:
      tags:
      - Kubernetes
      summary: Fetch all the modifiers
      description: Fetch all the modifiers
      parameters:
      - name: clusterId
        in: path
        description: Id of the cluster whose modifier has to be listed.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/K8sRestoreModifierAPIResp"
    post:
      tags:
      - Kubernetes
      summary: Create a Modifier
      description: Create a Modifier
      parameters:
      - name: clusterId
        in: path
        description: Id of the cluster whose modifier has to be created.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/K8sRestoreModifierAPIReq"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/Kubernetes/{clusterId}/Modifier/{ModifierName}:
    get:
      tags:
      - Kubernetes
      summary: Fetch(Read) Modfier details
      description: Fetch(Read) Modfier details
      parameters:
      - name: clusterId
        in: path
        description: Id of the cluster whose modifier has to be read.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: ModifierName
        in: path
        description: Name of the modifier to be read.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/K8sRestoreModifierAPIResp"
    put:
      tags:
      - Kubernetes
      summary: Edit a Restore modifier
      description: Edit a Restore modifier
      parameters:
      - name: clusterId
        in: path
        description: Id of the cluster whose modifier has to be modified.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: ModifierName
        in: path
        description: Name of the modifier to be modified.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/K8sRestoreModifierAPIReq"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
    delete:
      tags:
      - Kubernetes
      summary: Delete a Modifier
      description: Delete a Modifier
      parameters:
      - name: clusterId
        in: path
        description: Id of the cluster whose modifier has to be deleted.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: ModifierName
        in: path
        description: Name of the modifier to be deleted.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/Kubernetes/{clusterId}/Modifier/Test:
    post:
      tags:
      - Kubernetes
      summary: Test a Yaml paylod against a restore modfier
      description: Test a Yaml paylod against a restore modfier
      parameters:
      - name: clusterId
        in: path
        description: Id of the cluster whose modifier needs to be tested
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TestK8sModifierReq"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/K8sRestoreModifierAPIResp"
  /V4/Server/{serverId}/Restore/Action/Disable:
    put:
      tags:
      - Servers
      summary: Disable Restores for a Server
      description: Used to disable restore property for server
      operationId: DisableRestoreServer
      parameters:
      - name: enableAfterADelay
        in: query
        description: Provide UTC time in unix format.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: serverId
        in: path
        description: Id of the Server whose details have to be modified
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/Server/{serverId}/Restore/Action/Enable:
    put:
      tags:
      - Servers
      summary: Enable Restores for a Server
      description: Used to enable restore property for Server
      operationId: EnableRestoreServer
      parameters:
      - name: serverId
        in: path
        description: Id of the Server whose details have to be modified
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/Server/{serverId}/Backup/Action/Disable:
    put:
      tags:
      - Servers
      summary: Disable Backups for a server
      description: Used to disable backup property for server
      operationId: DisableBackupServer
      parameters:
      - name: enableAfterADelay
        in: query
        description: Provide UTC time in unix format.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: serverId
        in: path
        description: Id of the Server whose details have to be modified
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/Server/{serverId}/Backup/Action/Enable:
    put:
      tags:
      - Servers
      summary: Enable backup property for a server
      description: Used to enable backup property for Server
      operationId: EnableBackupServer
      parameters:
      - name: serverId
        in: path
        description: Id of the Server whose details have to be modified
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/Server/{serverId}/DataAging/Action/Disable:
    put:
      tags:
      - Servers
      summary: Disable Data Aging for a Server
      description: Used to disable Data Aging property for server
      operationId: DisableDataAgingServer
      parameters:
      - name: enableAfterADelay
        in: query
        description: Provide UTC time in unix format.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: serverId
        in: path
        description: Id of the Server whose details have to be modified
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/Server/{serverId}/DataAging/Action/Enable:
    put:
      tags:
      - Servers
      summary: Enable Data Aging for a Server
      description: Used to enable Data Aging property for Server
      operationId: EnableDataAgingServer
      parameters:
      - name: serverId
        in: path
        description: Id of the Server whose details have to be modified
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/scrubLogs/Action/Disable:
    put:
      tags:
      - ScrubLogs
      summary: Disable Log Scrubbing
      description: Used to disable log scrubbing
      operationId: DisableLogScrubbing
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/scrubLogs/Action/Enable:
    put:
      tags:
      - ScrubLogs
      summary: Enable Log Scrubbing
      description: Used to enable log scrubbing
      operationId: EnableLogScrubbing
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/Commcell/Restore/Action/Disable:
    put:
      tags:
      - Commcell
      summary: Disable Restore at Commcell Level
      description: Used to disable restore property for commcell
      operationId: DisableRestoreCommcell
      parameters:
      - name: enableAfterADelay
        in: query
        description: Provide UTC time in unix format.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/Commcell/Backup/Action/Disable:
    put:
      tags:
      - Commcell
      summary: Disable Backup at Commcell Level
      description: Used to disable backup property for commcell
      operationId: DisableBackupCommcell
      parameters:
      - name: enableAfterADelay
        in: query
        description: Provide UTC time in unix format.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/Commcell/Restore/Action/Enable:
    put:
      tags:
      - Commcell
      summary: Enable Restore at Commcell Level
      description: Used to enable restore property for commcell
      operationId: EnableRestoreCommcell
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/Commcell/Backup/Action/Enable:
    put:
      tags:
      - Commcell
      summary: Enable Backup at Commcell Level
      description: Used to enable backup property for commcell
      operationId: EnableBackupCommcell
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/Commcell/Scheduler/Action/Disable:
    put:
      tags:
      - Commcell
      summary: Disable Scheduler at Commcell Level
      description: Used to disable scheduler property for commcell
      operationId: DisableSchedulerCommcell
      parameters:
      - name: enableAfterADelay
        in: query
        description: Provide UTC time in unix format.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/Commcell/DataAging/Action/Disable:
    put:
      tags:
      - Commcell
      summary: Disable Data Aging at Commcell Level
      description: Used to disable data aging property for commcell
      operationId: DisableDataAgingCommcell
      parameters:
      - name: enableAfterADelay
        in: query
        description: Provide UTC time in unix format.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/Commcell/Scheduler/Action/Enable:
    put:
      tags:
      - Commcell
      summary: Enable Scheduler at Commcell Level
      description: Used to enable scheduler property for commcell
      operationId: EnableSchedulerCommcell
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/Commcell/DataAging/Action/Enable:
    put:
      tags:
      - Commcell
      summary: Enable Data Aging at commcell level
      description: Used to enable data aging property for commcell
      operationId: EnableDataAgingCommcell
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/Commcell/DDB/Action/Disable:
    put:
      tags:
      - Commcell
      summary: Disable DDB Backups at Commcell Level
      description: Used to disable DDB property for commcell
      operationId: DisableDDBCommcell
      parameters:
      - name: enableAfterADelay
        in: query
        description: Provide UTC time in unix format.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/Commcell/DataVerification/Action/Disable:
    put:
      tags:
      - Commcell
      summary: Disable Data Verification at Commcell Level
      description: Used to disable data verification property for commcell
      operationId: DisableDataVerificationCommcell
      parameters:
      - name: enableAfterADelay
        in: query
        description: Provide UTC time in unix format.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/Commcell/DDB/Action/Enable:
    put:
      tags:
      - Commcell
      summary: Enable DDB Backups at Commcell Level
      description: Used to enable DDB property for commcell
      operationId: EnableDDBCommcell
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/Commcell/AllJobActivity/Action/Enable:
    put:
      tags:
      - Commcell
      summary: Enable All Job Activity at Commcell Level
      description: Used to enable all job activity property for commcell
      operationId: EnableAllJobActivity
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/Commcell/AllJobActivity/Action/Disable:
    put:
      tags:
      - Commcell
      summary: Disable All Job Activity at Commcell Level
      description: Used to disable all job activity property for commcell
      operationId: DisableAllJobActivityCommcell
      parameters:
      - name: enableAfterADelay
        in: query
        description: Provide UTC time in unix format.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/Commcell/DataVerification/Action/Enable:
    put:
      tags:
      - Commcell
      summary: Enable Data Verification at Commcell Level
      description: Used to enable data verification property for commcell
      operationId: EnableDataVerificationCommcell
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/Commcell/AuxillaryCopy/Action/Disable:
    put:
      tags:
      - Commcell
      summary: Disable Auxillary copy Jobs at Commcell Level
      description: Used to disable auxillary copy property for commcell
      operationId: DisableAuxillaryCopyCommcell
      parameters:
      - name: enableAfterADelay
        in: query
        description: Provide UTC time in unix format.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/Commcell/ContentIndexing/Action/Disable:
    put:
      tags:
      - Commcell
      summary: Disable Context Indexing Jobs at Commcell Level
      description: Used to disable content indexing property for commcell
      operationId: DisableContentIndexingCommcell
      parameters:
      - name: enableAfterADelay
        in: query
        description: Provide UTC time in unix format.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/Commcell/AuxillaryCopy/Action/Enable:
    put:
      tags:
      - Commcell
      summary: Enable Auxillary Copy Jobs at Commcell Level
      description: Used to enable auxillary copy property for commcell
      operationId: EnableAuxillaryCopyCommcell
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/Commcell/ContentIndexing/Action/Enable:
    put:
      tags:
      - Commcell
      summary: Enable Content Indexing Jobs at Commcell Level
      description: Used to enable content indexing property for commcell
      operationId: EnableContentIndexingCommcell
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/DownloadSoftware:
    put:
      tags:
      - Commcell
      summary: Download or Copy Software
      description: Download or Copy Software
      operationId: DownloadOrCopySoftware
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DownloadOrCopySoftware"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/JobIdResponse"
  /V4/UpgradeSoftware:
    put:
      tags:
      - Commcell
      summary: Upgrade client and client group software
      description: Upgrade software for client and client group.
      operationId: UpgradeSoftware
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpgradeSoftware"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/JobIdResponse"
      x-hidden-description: |
        This can be used to upgrade hyperscale software to a specific version
        This can be used to upgrade/update software of a client (server) or client group (server group) to latest or specific version
  /V4/RepairSoftware:
    put:
      tags:
      - Commcell
      summary: Repair software
      description: Repair software for client and clients for the given client group(s).
      operationId: RepairSoftware
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RepairSoftware"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/JobIdResponse"
  /V4/TriggeredAlerts:
    get:
      tags:
      - Alerts
      summary: Get Alerts Triggered
      description: Get List Of Alerts Triggered
      operationId: GetAlertsTriggered
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AlertsTriggeredListResp"
        "404":
          description: Requested Details not found
  /Alert/CustomRule:
    get:
      tags:
      - Alerts
      summary: Get Alert Custom Rules List
      description: Get the list of alert custom rules
      operationId: getAlertCustomRulesList
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AlertRulesDetailsList"
        "500":
          description: Internal Server Error
  /Alert/CustomRule/{alertRuleId}:
    get:
      tags:
      - Alerts
      summary: Alert custom rule details
      description: Get the details of the custom alert rule by Id
      operationId: getAlertCustomRuleDetails
      parameters:
      - name: alertRuleId
        in: path
        description: Unique Id of the alert custom rule to get details
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          description: Unique Id of the alert custom rule
          format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AlertRulesDetailsList"
        "500":
          description: Internal Server Error
  /Alert/CustomRule/{alertRuleId}/Enable:
    put:
      tags:
      - Alerts
      summary: Enable Alert Custom Rule
      description: Enable the alert custom rule by using the given alert rule id
      operationId: enableAlertCustomRule
      parameters:
      - name: alertRuleId
        in: path
        description: Unique Id of the alert custom rule to enable it
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          description: Unique Id of the alert custom rule
          format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AlertRuleGenericResp"
        "500":
          description: Internal Server Error
  /Alert/CustomRule/{alertRuleId}/Disable:
    put:
      tags:
      - Alerts
      summary: Disable Alert Custom Rule
      description: Disable the alert custom rule by using the given alert rule id
      operationId: disableAlertCustomRule
      parameters:
      - name: alertRuleId
        in: path
        description: Unique Id of the alert custom rule to disable it
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          description: Unique Id of the alert custom rule
          format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AlertRuleGenericResp"
        "500":
          description: Internal Server Error
  /Alert/CustomRule/{alertRuleId}/Delete:
    put:
      tags:
      - Alerts
      summary: Delete Alert Custom Rule
      description: Delete the alert custom rule by using the given alert rule id
      operationId: deleteAlertCustomRule
      parameters:
      - name: alertRuleId
        in: path
        description: Unique Id of the alert custom rule to delete it
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          description: Unique Id of the alert custom rule
          format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AlertRuleGenericResp"
        "500":
          description: Internal Server Error
  /V4/AlertType:
    get:
      tags:
      - Alerts
      summary: Get Alert Type and Alert Custom Rules list
      description: Get the list of alert types and alert custom rules
      operationId: getAlertType
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AlertTypeResp"
        "500":
          description: Internal Server Error
  /V4/Solutions:
    get:
      tags:
      - Solutions
      summary: Get Solutions
      description: "API to fetch applicable workload solutions for the user like File\
        \ Server, Virtualization or Database"
      operationId: getSolutionsId
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SolutionsList"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/Plan/Rule/Entities:
    get:
      tags:
      - PlanRules
      summary: Get entities applicable for plan association
      description: API to fetch list of entities that are applicable for plan association
        via plan assignment rules.
      operationId: GetPlanRuleAssociatedEntities
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlanRuleApplicableEntitiesList"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
    put:
      tags:
      - PlanRules
      summary: Process list of entities against plan rules.
      description: API to send request to process plan rules against specific set
        of entities.
      operationId: PutPlanRuleAssociatedEntities
      requestBody:
        description: Request body will consist of entities that are need to be evaluated
          against plan rules.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ExecutePlanRules"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/{globalSearchEntity}/aggregate:
    get:
      tags:
      - GlobalSearch
      summary: Get Aggregate count of Entity
      description: Get aggregate count of entity
      operationId: GetAggregateOnEntity
      parameters:
      - name: globalSearchEntity
        in: path
        description: name of global search entity
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - SERVER
          - FILESERVER
          - ARCHIVESERVER
          - EPIC_CLIENT
          - DEVICE
          - USER
          - USERGROUP
          - ROLE
          - SERVERGROUP
          - PLAN
          - COMPANY
          - VMGROUPS
          - VM
          - HYPERVISOR
          - KUBERNETES_APPLICATION
          - KUBERNETES_APPLICATION_GROUP
          - KUBERNETES_CLUSTER
          - DATABASES
          - DBINSTANCE
      - name: fq
        in: query
        description: Filter criteria to filter out global search entities
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: groupBy
        in: query
        description: comma-separated list of entity response attributes based on which
          aggregate results would be grouped
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: func
        in: query
        description: aggregation function to be applied.
        required: true
        style: form
        explode: true
        schema:
          type: string
          enum:
          - COUNT
          - MIN
          - MAX
          - AVG
          - SUM
      - name: aggregateOn
        in: query
        description: attribute on which aggregation function would be applied.
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalEntityAggregationValueResp"
              examples:
                /V4/VM/aggregate?fq=vmStatusInfoList.vmStatus:eq:1&groupBy=vendor,slaStatus&func=COUNT:
                  value:
                    aggregation:
                    - funcValue: "3"
                      groupByVals:
                      - name: vendor
                        value: "4"
                      - name: slaStatus
                        value: "1"
                    - funcValue: "3"
                      groupByVals:
                      - name: vendor
                        value: "1"
                      - name: slaStatus
                        value: "1"
                    - funcValue: "2"
                      groupByVals:
                      - name: vendor
                        value: "1"
                      - name: slaStatus
                        value: "2"
        "404":
          description: requested details not found.
  /V4/GlobalSettings:
    get:
      tags:
      - AdditionalSettings
      summary: Get Global Settings
      description: Get list of global settings used to modify system default behaviour
      operationId: GetGlobalSettings
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalSettingsResponse"
              examples:
                Global settings:
                  value:
                    globalSettings:
                    - name: AccountLockDuration
                      description: 'Use this additional setting to set the number
                        of seconds a locked account remains locked. '
                      defaultValue: "0"
                      type: Integer
                      isRestartRequired: true
                      minValue: 0
                      maxValue: 2147483647
                      category: CommServDB.GxGlobalParam
                    - name: ActivateHPECatalyst
                      description: Use this additional setting to show or hide HP
                        Store Once library creation in the UI.
                      defaultValue: "False"
                      type: Boolean
                      isRestartRequired: false
                      value: "True"
                      isModified: true
                      comment: Needed to show HP store
                      category: CommServDB.GxGlobalParam
                    - name: AddDecisionPointInformation
                      description: Set to 1 to add debugging information to collect
                        file identifying reason entry was added and where in code
                        that decision was made Set to 0 to disable (default)
                      defaultValue: "0"
                      type: Integer
                      isRestartRequired: false
                      minValue: 0
                      maxValue: 1
                      acceptableValues:
                      - "0"
                      - "1"
                      category: CommServDB.GxGlobalParam
    put:
      tags:
      - AdditionalSettings
      - RecoveryGroup
      - HIDDEN
      summary: Add or Update Global Settings
      description: "This API allows you to add new global settings or update existing\
        \ ones, overriding the default configurations to customize the system's behavior."
      operationId: AddorUpdateGlobalSettings
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ModifyGlobalSettings"
            examples:
              Modify global settings:
                value:
                  globalSettings:
                  - name: AccountLockDuration
                    category: CommServDB.GxGlobalParam
                    type: Integer
                    newValue: "1000"
                    comment: Needed to change the account lock duration to 1000 seconds
              Reset global settings:
                value:
                  globalSettings:
                  - name: AccountLockDuration
                    category: CommServDB.GxGlobalParam
                    type: Integer
                    reset: true
              Set clean recovery point at Recovery group level:
                value:
                  globalSettings:
                  - name: cleanRecoveryPoint
                    category: CommServDB.GxGlobalParam
                    type: Integer
                    newValue: Epoch Time
                    comment: Clean Point for Recovery group
              Reset clean recovery point:
                value:
                  globalSettings:
                  - name: cleanRecoveryPoint
                    category: CommServDB.GxGlobalParam
                    type: Integer
                    reset: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/EntitySettings:
    get:
      tags:
      - AdditionalSettings
      - HIDDEN
      summary: Get Entity Settings
      description: Get list of entity settings used to modify default behaviour for
        linked entity like servers or server groups
      operationId: GetEntitySettings
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntitySettingsResponse"
              examples:
                Entity settings:
                  value:
                    entitySettings:
                    - name: 3dfsCfgClient_DEBUGLEVEL
                      description: 'Specifies the default debug level for application.
                        Note that if other means exist to set debug level  those will
                        probably override this method. '
                      defaultValue: "2"
                      values:
                      - value: "4"
                        comment: Needed to debug 3dfs application
                        entity:
                          name: oes2018_3
                          id: 4
                          type: Server
                      - value: "3"
                        comment: Needed to debug 3dfs application
                        entity:
                          name: amsterdam
                          id: 3
                          type: Server
                      type: Integer
                      isRestartRequired: false
                      minValue: 0
                      maxValue: 10
                      isModified: true
                      category: EventManager
                    - name: AllowEmptySubClientToSucceed
                      description: "By default, if a subclient is empty, the backup\
                        \ job fails. To allow backup jobs for empty subclients to\
                        \ complete, set the value to 1."
                      defaultValue: "0"
                      type: Integer
                      isRestartRequired: false
                      minValue: 0
                      maxValue: 1
                      category: MSExchangeDBAgent
    put:
      tags:
      - AdditionalSettings
      - RecoveryGroupEntities
      summary: Add or Update Entity Settings
      description: "This API allows you to add or update settings for linked entities,\
        \ such as servers or server groups. Use this endpoint to modify the default\
        \ behavior of these entities."
      operationId: AddorUpdateEntitySettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ModifyEntitySettings"
            examples:
              Modify entity setting:
                value:
                  entitySettings:
                  - name: AllowEmptyDefaultSubclient
                    category: VirtualServer
                    type: Boolean
                    value: "True"
                    comment: Needed to allow empty default subclients
                    entity:
                      id: 4
                      type: Server
              Reset entity setting:
                value:
                  entitySettings:
                  - name: AllowEmptyDefaultSubclient
                    category: VirtualServer
                    type: Boolean
                    reset: true
                    entity:
                      id: 4
                      type: Server
              Set clean recovery point in entity of Recovery group:
                value:
                  entitySettings:
                  - name: cleanRecoveryPoint
                    category: CommServDB.GxGlobalParam
                    type: Integer
                    newValue: Epoch time
                    comment: Clean Point for entity in Recovery group
                    entity:
                      id: 0
                      type: Server
              Reset clean recovery point:
                value:
                  entitySettings:
                  - name: cleanRecoveryPoint
                    category: CommServDB.GxGlobalParam
                    type: Boolean
                    reset: true
                    entity:
                      id: 0
                      type: Server
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/RecoveryPointStore/{rpsId}:
    get:
      tags:
      - Recovery Point Stores
      summary: Get Recovery Point Stores
      description: Fetch details about recovery point stores or library details
      operationId: GetRecoveryPointStores
      parameters:
      - name: rpsId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RecoveryPointStoreDetails"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
    delete:
      tags:
      - Recovery Point Stores
      summary: Delete Recovery Point Stores
      description: Delete a specific recovery point store
      operationId: DeleteRecoveryPointStores
      parameters:
      - name: rpsId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/GlobalExceptions:
    get:
      tags:
      - GlobalExceptions
      summary: Get GlobalExceptions
      description: Get list of global execptions
      operationId: GetGlobalExceptions
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetGlobalExceptions"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
    post:
      tags:
      - GlobalExceptions
      summary: Update GlobalExceptions
      description: Add/Edit/Delete global execptions
      operationId: UpdateGlobalExceptions
      requestBody:
        description: Request body to be passed to the POST API
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SetGlobalExceptions"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
  /V4/Kubernetes/ApplicationGroups:
    get:
      tags:
      - VirtualMachines
      summary: Get All Application Groups of Kubernetes
      description: Get the details of all applicationGroups
      operationId: GetAllAPllicationGroups
      parameters:
      - name: ClusterId
        in: query
        description: Id of the hypervisor to list application groups
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApplicationGroupListResp"
        "404":
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/Kubernetes/Applications:
    get:
      tags:
      - VirtualMachines
      summary: Get all application in Kubenetes cluster
      description: Get all application in Kubenetes cluster
      operationId: GetKubernetesApplication
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApplicationListResp"
        "404":
          description: Requested Details not found
  /V4/Kubernetes/cluster:
    get:
      tags:
      - VirtualMachines
      description: Get the details of all cluster
      operationId: ListKubernetesCluster
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListClusters"
        "404":
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
    post:
      tags:
      - VirtualMachines
      description: Create Kubernetes cluster
      operationId: CreateKubernetescluster
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateKubernetesCluster"
            examples:
              Kubernetes:
                value:
                  name: string
                  hypervisorType: KUBERNETES
                  accessNodes:
                  - id: 0
                    name: string
                  endpointurl: string
                  serviceName: string
                  secretKey: string
                  k8ServiceType: ONPREM
                  etcdProtection: true
                  planEntity:
                    id: 0
                    name: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateClusterResp"
        "400":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/SAML/{name}:
    get:
      tags:
      - IdentityServers
      summary: Get SAML Server
      description: Gets details of SAML app based on SAML app name
      operationId: GetSAMLApp
      parameters:
      - name: name
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SAML"
    put:
      tags:
      - IdentityServers
      summary: Modify SAML App Details
      description: Updates details of existing SAML app
      operationId: UpdateSAMLApp
      parameters:
      - name: name
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SAMLUpdate"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/SAML:
    post:
      tags:
      - IdentityServers
      summary: Create SAML App
      description: Creates SAML app
      operationId: CreateSAMLApp
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SAMLReq"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/Credential:
    get:
      tags:
      - CredentialManager
      summary: Get list of credentials
      description: List of Credentials
      operationId: GetCredentials
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CredentialManagerListResp"
        "404":
          description: Requested Details not found
    post:
      tags:
      - CredentialManager
      summary: Create Credential
      description: Create a new credential
      operationId: CreateCredential
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/V4_Credential_body"
            examples:
              Linux Account:
                value:
                  name: Credential1
                  accountType: LINUXACCOUNT
                  userAccount: xyz
                  password: UGFzc3dvcmQ=
                  description: This is a description
                  security:
                    owner:
                      user:
                        id: 1
                    associations:
                    - userGroup:
                        id: 12
                      permissions:
                        permissionId: 218
                      isCreatorAssociation: false
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IdType"
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      x-terraform-resource: Credential
      x-terraform-function: handler.ConfigureCredential
      x-terraform-oneof-map:
      - schema: AmazonCredentialInfo
        resource: AWS
      - schema: AmazonCredentialInfoWithRoleArn
        resource: AWSWithRoleArn
      - schema: AzureCredentialInfo
        resource: Azure
      - schema: AzureCredentialInfoWithTenantId
        resource: AzureWithTenantId
  /V4/Credential/{credentialName}:
    get:
      tags:
      - CredentialManager
      summary: Get Credential Details by name
      description: Get details of the credential whose credential name is provided
      operationId: GetCredentialDetailsByName
      parameters:
      - name: credentialName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_17"
        "404":
          description: Not Found
    put:
      tags:
      - CredentialManager
      summary: Update Credential By Name
      description: Edit credential whose name has been provided by credential owner
      operationId: UpdateCredentialByName
      parameters:
      - name: credentialName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Credential_credentialName_body"
            examples:
              Linux Account:
                value:
                  newName: New Credential name
                  accountType: LINUXACCOUNT
                  userAccount: xyz
                  newPassword: TmV3UGFzc3dvZA==
                  description: New description for credential
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                x-content-type: application/json
              examples:
                example-1:
                  value:
                    name: Credential1
                    accountType: LINUXACCOUNT
                    userAccount: xyz
                    newPassword: TmV3UGFzc3dvcmQ=
                    description: This is a description
                    security:
                      owner:
                        user:
                          id: 1
                      associations:
                      - userGroup:
                          id: 12
                        permissions:
                          permissionId: 218
                        isCreatorAssociation: false
                      - userGroup:
                          id: 30
                        permissions:
                          permissionId: 218
                        isCreatorAssociation: false
        "400":
          description: Bad Request
        "404":
          description: Not Found
    delete:
      tags:
      - CredentialManager
      summary: Delete Credential ByName
      description: Delete Credential whose name has been provided
      operationId: DeleteCredentialByName
      parameters:
      - name: credentialName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "404":
          description: Not Found
  /V5/Credential/{credentialId}:
    get:
      tags:
      - CredentialManager
      summary: Get Credential Details
      description: Get details of the credential whose credential id is provided
      operationId: GetCredentialDetails
      parameters:
      - name: credentialId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
        x-terraform-id: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_17"
        "404":
          description: Not Found
      x-terraform-resource: Credential
      x-terraform-oneof-map:
      - schema: AmazonCredentialInfo
        resource: AWS
      - schema: AmazonCredentialInfoWithRoleArn
        resource: AWSWithRoleArn
      - schema: AzureCredentialInfo
        resource: Azure
      - schema: AzureCredentialInfoWithTenantId
        resource: AzureWithTenantId
    put:
      tags:
      - CredentialManager
      summary: Update Credential
      description: Edit credential whose id has been provided by credential owner
      operationId: UpdateCredential
      parameters:
      - name: credentialId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
        x-terraform-id: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Credential_credentialId_body"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                x-content-type: application/json
              examples:
                example-1:
                  value:
                    name: Credential1
                    accountType: LINUXACCOUNT
                    userAccount: xyz
                    newPassword: TmV3UGFzc3dvcmQ=
                    description: This is a description
                    security:
                      owner:
                        user:
                          id: 1
                      associations:
                      - userGroup:
                          id: 12
                        permissions:
                          permissionId: 218
                        isCreatorAssociation: false
                      - userGroup:
                          id: 30
                        permissions:
                          permissionId: 218
                        isCreatorAssociation: false
        "400":
          description: Bad Request
        "404":
          description: Not Found
      x-terraform-resource: Credential
      x-terraform-function: handler.UpdateCredential
      x-terraform-always-update: true
      x-terraform-oneof-map:
      - schema: AmazonCredentialContent
        resource: AWS
      - schema: AmazonCredentialContentWithRoleArn
        resource: AWSWithRoleArn
      - schema: AzureCredentialContent
        resource: Azure
      - schema: AzureCredentialContentWithTenantId
        resource: AzureWithTenantId
    delete:
      tags:
      - CredentialManager
      summary: Delete Credential
      description: Delete Credential whose id has been provided
      operationId: DeleteCredential
      parameters:
      - name: credentialId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
        x-terraform-id: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "404":
          description: Not Found
      x-terraform-resource: Credential
  /V4/Company/{companyId}/Servers:
    get:
      tags:
      - Company
      summary: ' API to get list of servers with no packages for a company'
      description: API to get list of servers with no packages for a company
      operationId: GetServersForCompany
      parameters:
      - name: companyId
        in: path
        description: Id of the Company whose servers(with no packages) have to be
          fetched
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetPseudoClientsForCompanyResp"
  /V4/Company/{companyId}/associations:
    get:
      tags:
      - Company
      summary: API to get list of association for a company
      description: API to get list of association for a company
      operationId: GetAssociationsForCompany
      parameters:
      - name: companyId
        in: path
        description: Id of the Company whose associations have to be fetched
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetAssociationsForCompanyResp"
              example:
                associatedEntities:
                - name: client1
                  id: 31
                - name: client2
                  id: 443
        "400":
          description: Bad Request
        "404":
          description: Requested Details not found
        "503":
          description: Service unavailable
  /V4/RecoveryTargets:
    get:
      tags:
      - RecoveryTarget
      - Cleanroom Targets
      summary: Get Recovery Target List
      description: Get the list of recovery targets
      operationId: GetRecoveryTargets
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetRecoveryTargetListResponse"
        "404":
          description: Requested details not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/RecoveryTarget/{recoveryTargetId}:
    get:
      tags:
      - RecoveryTarget
      - Cleanroom Targets
      summary: Get an existing recovery target details
      description: To get recovery target details by ID
      operationId: GetRecoveryTarget
      parameters:
      - name: recoveryTargetId
        in: path
        description: id of recovery target
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_18"
        "404":
          description: ' Not found - Unable to fetch recovery target details'
        "503":
          description: Service Unavailable
    delete:
      tags:
      - RecoveryTarget
      - Cleanroom Targets
      summary: Delete existing Recovery Target
      description: To delete an exisitng recovery target
      operationId: DeleteRecoveryTarget
      parameters:
      - name: recoveryTargetId
        in: path
        description: id of recovery target
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "404":
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "503":
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/VM/{vmGUID}/Action/Renew:
    post:
      tags:
      - VMProvisioning
      - HIDDEN
      summary: Renew provisioned virtual machine
      description: Renew the VM with the provided timestamp.
      operationId: PostVmActionRenew
      parameters:
      - name: vmGUID
        in: path
        description: GUID of the Provisioned VM
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: The renewal timestamp has to be provided in unix format.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Action_Renew_body"
            examples:
              example-1:
                value:
                  time: 1650538241
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
              examples:
                example-1:
                  value:
                    errorMessage: ""
                    errorCode: 0
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
              examples:
                example-1:
                  value:
                    errorMessage: "Unable to find VM details for guid [5036d065-b189-526a-156c-ad1b905cbfbb]"
                    errorCode: -1
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
              examples:
                example-1:
                  value:
                    errorMessage: Virtual machine provisioning operation failed with
                      unknown error. Try this operation after some time.
                    errorCode: -1
                example-2:
                  value:
                    errorMessage: No expiration time provided for renew operation
                    errorCode: -1
  /V4/VM/{vmGUID}/Action/Refresh:
    post:
      tags:
      - VMProvisioning
      - HIDDEN
      summary: Refresh the provisioned virtual machine
      description: Refreshes the VM.
      operationId: PostVmActionRefresh
      parameters:
      - name: vmGUID
        in: path
        description: GUID of the Provisioned VM
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
              examples:
                example-1:
                  value:
                    errorMessage: ""
                    errorCode: 0
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
              examples:
                example-1:
                  value:
                    errorMessage: "Unable to find VM details for guid [5036d065-b189-526a-156c-ad1b905cbfbb]"
                    errorCode: -1
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
              examples:
                example-1:
                  value:
                    errorMessage: Virtual machine provisioning operation failed with
                      unknown error. Try this operation after some time.
                    errorCode: -1
  /V4/VM/{vmGUID}/Action/Delete:
    post:
      tags:
      - VMProvisioning
      - HIDDEN
      summary: Delete the provisioned virtual machine
      description: Deletes the VM.
      operationId: PostVmActionDelete
      parameters:
      - name: vmGUID
        in: path
        description: GUID of the Provisioned VM
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
              examples:
                example-1:
                  value:
                    errorMessage: ""
                    errorCode: 0
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
              examples:
                example-1:
                  value:
                    errorMessage: "Unable to find VM details for guid [5036d065-b189-526a-156c-ad1b905cbfbb]"
                    errorCode: -1
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
              examples:
                example-1:
                  value:
                    errorMessage: Virtual machine provisioning operation failed with
                      unknown error. Try this operation after some time.
                    errorCode: -1
  /V4/IdentityServers:
    get:
      tags:
      - IdentityServers
      summary: Get Identity Servers
      description: Get identity servers list
      operationId: GetIdentityServers
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IdentityServersListResp"
  /V4/LDAP/{domainId}:
    get:
      tags:
      - IdentityServers
      summary: Get AD/LDAP Details
      description: Get detail of the AD/LDAP domain
      operationId: GetADLDAPDetails
      parameters:
      - name: domainId
        in: path
        description: ID of the AD/LDAP domain
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ADLDAPDetails"
              examples:
                Active Directory:
                  value:
                    id: 85
                    name: domain.com
                    domainName: domain
                    directoryType: ACTIVE_DIRECTORY
                    credentials: username
                    company:
                      id: 0
                      name: Commcell
                    users: 0
                    userGroups: 1
                    baseDNForCardUsers: "CN=Name,OU=Sales,OU=Employees,DC=dn,DC=domain,DC=com"
                    useSecureLDAP: false
                    enableSSO: true
                    accessViaClient: false
                Apple Directory Service:
                  value:
                    id: 85
                    name: domain.com
                    domainName: domain
                    directoryType: APPLE_DIRECTORY_SERVICE
                    credentials: username
                    company:
                      id: 0
                      name: Commcell
                    users: 10
                    userGroups: 2
                    accessViaClient: false
                LDAP Server:
                  value:
                    id: 74
                    name: domain.com
                    domainName: domain
                    directoryType: LDAP_SERVER
                    credentials: "uid=admin,cn=users,cn=compat,dc=domain,dc=com"
                    company:
                      id: 0
                      name: Commcell
                    users: 10
                    userGroups: 5
                    accessViaClient: true
                    proxies:
                    - id: 2
                      name: client2
                    LDAPQueryParameters:
                    - id: 6
                      name: User group filter
                      value: (objectClass=groupofnames)
                      defaultValue: (objectClass=group)
                      isOverridden: true
                    - id: 7
                      name: User filter
                      value: (objectClass=posixaccount)
                      defaultValue: (&(objectCategory=User)(sAMAccountName=*))
                      isOverridden: true
                    - id: 9
                      name: Unique identifier
                      value: uid
                      defaultValue: sAMAccountName
                      isOverridden: true
                    - id: 10
                      name: base DN
                      value: "cn=accounts,dc=domain,dc=com"
                      defaultValue: baseDN
                      isOverridden: true
                    attributeMap:
                    - id: 1
                      name: Object class
                      value: objectClass
                      defaultValue: objectClass
                      isOverridden: false
                    - id: 2
                      name: Common name
                      value: common name
                      defaultValue: cn
                      isOverridden: true
                    - id: 3
                      name: Email
                      value: mail
                      defaultValue: mail
                      isOverridden: false
                    - id: 4
                      name: GUID
                      value: objectGUID
                      defaultValue: objectGUID
                      isOverridden: false
                    - id: 5
                      name: Dns
                      value: dnsroot
                      defaultValue: dnsroot
                      isOverridden: false
                    - id: 11
                      name: Member user group
                      value: member
                      defaultValue: member
                      isOverridden: false
                    - id: 12
                      name: Member unique identifier
                      value: memberuid
                      defaultValue: memberuid
                      isOverridden: false
                Open LDAP:
                  value:
                    id: 58
                    name: domain.com
                    domainName: domain
                    directoryType: OPEN_LDAP
                    credentials: "cn=user,dc=domain,dc=com"
                    company:
                      id: 1
                      name: Company1
                    users: 0
                    userGroups: 0
                    accessViaClient: true
                    proxies:
                    - id: 115
                      name: client115
                    - id: 2
                      name: client2
                Oracle Directory:
                  value:
                    id: 56
                    name: ODS.domain.com
                    domainName: domain
                    directoryType: ORACLE_DIRECTORY
                    credentials: "cn=ODSUser1,dc=domain,dc=com"
                    company:
                      id: 2
                      name: Company2
                    users: 0
                    userGroups: 0
                    accessViaClient: false
    put:
      tags:
      - IdentityServers
      summary: Update AD/LDAP
      description: Update an AD/LDAP domain
      operationId: UpdateADLDAP
      parameters:
      - name: domainId
        in: path
        description: ID of the AD/LDAP domain
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        description: Properties of the domain to be updated
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateADLDAP"
            examples:
              Active Directory:
                value:
                  directoryType: ACTIVE_DIRECTORY
                  NETBIOSName: domain
                  name: domain.com
                  username: username
                  password: cGFzc3dvcmQ=
                  baseDNForCardUsers: "CN=Name,OU=Sales,OU=Employees,DC=dn,DC=domain,DC=com"
                  useSecureLDAP: true
                  enableSSO: true
                  accessViaClient: true
                  proxies:
                  - id: 1
                    name: client1
              Apple Directory Service:
                value:
                  directoryType: APPLE_DIRECTORY_SERVICE
                  OSXServerName: domain
                  name: domain.com
                  username: username
                  password: cGFzc3dvcmQ=
                  accessViaClient: false
              LDAP Server:
                value:
                  directoryType: LDAP_SERVER
                  host: domain
                  name: domain.com
                  username: username
                  password: cGFzc3dvcmQ=
                  accessViaClient: true
                  proxies:
                  - id: 1
                    name: client
                  LDAPQueryParameters:
                  - id: 6
                    name: User group filter
                    value: (objectClass=groupofnames)
                  - id: 7
                    name: User filter
                    value: (objectClass=posixaccount)
                  - id: 9
                    name: Unique identifier
                    value: sAMAccountName
                  - id: 10
                    name: base DN
                    value: "cn=accounts,dc=domain,dc=com"
                  attributeMap:
                  - id: 2
                    name: Common name
                    value: common name
              Open LDAP:
                value:
                  directoryType: OPEN_LDAP
                  NETBIOSName: domain
                  name: domain.com
                  username: "cn=user,dc=domain,dc=com"
                  password: cGFzc3dvcmQ=
                  accessViaClient: false
              Oracle Directory:
                value:
                  directoryType: ORACLE_DIRECTORY
                  NETBIOSName: ods
                  name: ods.domain.com
                  username: "cn=user,dc=example,dc=com"
                  password: cGFzc3dvcmQ=
                  accessViaClient: false
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "400":
          description: Request body is empty or format is invalid.
    delete:
      tags:
      - IdentityServers
      summary: Delete AD/LDAP
      description: Delete an AD/LDAP domain
      operationId: DeleteADLDAP
      parameters:
      - name: domainId
        in: path
        description: ID of the AD/LDAP domain
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: transferToUserId
        in: query
        description: Optionally transfer the ownership to user
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: transferToUserGroupId
        in: query
        description: Optionally transfer the ownership to user group
        required: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/LDAP:
    post:
      tags:
      - IdentityServers
      summary: Create LDAP/Active directory for user authentication
      description: Create LDAP/Active directory for user authentication
      operationId: CreateLDAP
      requestBody:
        description: LDAP body request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/V4_LDAP_body"
            examples:
              Active directory:
                value:
                  directoryType: ACTIVE_DIRECTORY
                  NETBIOSName: TEST_NETBIOS
                  name: TEST_NETBIOS.company.com
                  username: testing_username
                  password: cGFzc3dvcmQK
                  useSecureLdap: false
                  enableSSO: false
              Apple directory service:
                value:
                  directoryType: APPLE_DIRECTORY_SERVICE
                  OSXServerName: HOST_NAME
                  name: TEST_NETBIOS.company.com
                  username: testing_username
                  password: cGFzc3dvcmQK
              LDAP server:
                value:
                  directoryType: LDAP_SERVER
                  host: HOST_NAME
                  username: testing_username
                  password: cGFzc3dvcmQK
                  LDAPQueryParameters:
                    baseDN: baseDN
                    uniqueIdentifier: sAMAccountName
                    userFilter: (&(objectCategory=User)(sAMAccountName=*))
                    userGroupFilter: (objectClass=group)
              Open LDAP:
                value:
                  directoryType: OPEN_LDAP
                  NETBIOSName: HOST_NAME
                  name: TEST_NETBIOS.company.com
                  username: testing_username
                  password: cGFzc3dvcmQK
                  proxies:
                  - id: 1
                    name: client1
                  - id: 2
                    name: client2
                  - id: 3
                    name: client3
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/syslogServer:
    get:
      tags:
      - SyslogServer
      summary: Get Syslog Server Status
      description: This endpoint returns the details of a syslog server.
      operationId: GetSyslogStatus
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SyslogStatus"
        "503":
          description: Service Unavailable
    post:
      tags:
      - SyslogServer
      summary: Configure Syslog Server
      description: This endpoint configures a syslog server.
      operationId: ConfigureSyslogStatus
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SyslogConfigure"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
  /V4/ServiceCommcells:
    get:
      tags:
      - ServiceCommcells
      summary: Get serviceCommcells
      description: Returns a list of Service Commcells
      operationId: GetServiceCommcells
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_19"
        "503":
          description: Service Unavailable
  /V4/RequestManager/Request:
    get:
      tags:
      - RequestManager
      - HIDDEN
      description: Retrieves the list of Requests
      operationId: RequestManagerRequestList
      parameters:
      - name: createdFrom
        in: query
        description: Source application of the request
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - SDG
          - FSO
      - name: sourceEntityType
        in: query
        description: Entity type of the source from which data is gathered for the
          request
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - CLIENT_ENTITY
          - SEA_DATASOURCE_ENTITY
          - EDISCOVERY_PROJECT_ENTITY
      - name: sourceEntityId
        in: query
        description: Entity id of the source from which data is gathered for the request
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RMRequestList"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
    post:
      tags:
      - RequestManager
      - HIDDEN
      summary: RequestManager - Create Request Operation
      description: Creating a request for request manager
      operationId: RMCreateRequestOperation
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RMCreateRequest"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IdName"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/RequestManager/Request/{requestId}:
    get:
      tags:
      - RequestManager
      - HIDDEN
      summary: Retrieve details of an existing request
      description: Retrieve details of an existing request
      operationId: GetRequestDetails
      parameters:
      - name: requestId
        in: path
        description: Unique identifier for the request
        required: true
        style: simple
        explode: false
        schema:
          minimum: 1
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RMRequestDetails"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
    delete:
      tags:
      - RequestManager
      - HIDDEN
      description: Deleting an existing request
      operationId: DeleteRequestManagerRequest
      parameters:
      - name: requestId
        in: path
        description: Unique identifier for the request
        required: true
        style: simple
        explode: false
        schema:
          minimum: 1
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/Plan/Rule/Rank:
    put:
      tags:
      - PlanRules
      summary: Update rank for multiple rules at a time.
      description: API to update rank for multiple rules at a time.
      operationId: updatePlanRuleRank
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdatePlanEntityRuleRanks"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/Activate/Entity/{entityType}/{entityId}/Audit:
    get:
      tags:
      - Activate
      summary: Get Activate Entity Audit
      description: |-
        Retrieve the audit details for activate entities like clients, data sources, requests.
        Available entity types:
        3 - Client
        132 - Data source
        9515 - Request
      operationId: GetActivateEntityAuditList
      parameters:
      - name: entityType
        in: path
        description: Type of the entity
        required: true
        style: simple
        explode: false
        schema:
          minimum: 1
          type: integer
          format: int32
      - name: entityId
        in: path
        description: Unique id for the entity
        required: true
        style: simple
        explode: false
        schema:
          minimum: 1
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityAuditList"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/KeyManagementServers:
    get:
      tags:
      - KeyManagementServer
      summary: Get Key Management Servers
      description: Get key management servers
      operationId: GetKeyManagementServers
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_20"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/KeyManagementServers/{kmsId}:
    delete:
      tags:
      - KeyManagementServer
      summary: Delete Key Management Server
      description: Delete key management server based on Id
      operationId: DeleteKeyManagementServers
      parameters:
      - name: kmsId
        in: path
        description: Id of Key Management Server
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "404":
          description: Requested Details not found
  /V4/ArrayReplicationMonitor:
    get:
      tags:
      - ReplicationMonitor
      summary: Get replication monitor information for array replication
      description: Get Array Replication Pair information
      operationId: GetArrayReplicationMonitor
      parameters:
      - name: failoverGroupId
        in: query
        description: The ID of the failover group associated to array replication
          pairs
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: replicationId
        in: query
        description: The ID of the array replication pair
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ArrayReplicationMonitorResp"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/ReplicationMonitor/{pairId}:
    get:
      tags:
      - ReplicationMonitor
      summary: Get continuous replication pair details
      description: Get Continuous Replication Pair Details
      operationId: GetReplicationMonitorPairId
      parameters:
      - name: pairId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: additionalProperties
        in: query
        description: To get extra meta data details for the api
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReplicationMonitorDetail"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/ReplicationMonitor/{replicationPairId}/testFailoverMachines:
    get:
      tags:
      - ReplicationMonitor
      summary: Get testFailover machines from replication monitor
      description: View all TestFailover Machines of the replication pair using replicationPairId
      operationId: GetTestFailoverMachines
      parameters:
      - name: replicationPairId
        in: path
        description: Replication pair id of the Pair
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_21"
              examples:
                View test failover:
                  value:
                    virtualMachines:
                    - operatingSystem: Microsoft Windows Server 2012 (64-bit)
                      userCapabilities: 65535
                      numberOfDisks: 2
                      memory: 4096
                      flags: 101
                      isVirtualLabGateway: false
                      vmAllocPolicyId: 7
                      numberOfCPUs: 1
                      vmState: 0
                      modifiedTime: 1706545860
                      proxyClient:
                        clientId: 10
                      ipAddress:
                        subnet: 0
                        address: ""
                        family: 32
                      vmLocation:
                        hostName: hostname
                        dataCenterName: datacentername
                        vCenter: vCenterName
                      expirationTime: 1706549461
                      vm:
                        hostName: hostname
                        clientName: test_rpstore15DRVM-Clone-7970
                        vmName: test_rpstore15DRVM-Clone-7970
                        clientId: 50
                        vmGUID: 8503c555-e8fa-4612-8295-bfaf2cca74de
                      creationTime: 1706545859
                      lastPowerOnTime: 0
                      creator:
                        userGUID: 78E3E37C-CA88-4AD4-85E4-AEF48E943D73
                        userName: Tempadmin
                        userId: 12
                      instanceTypeEntity: ""
                      advancedProperties:
                        connectionString: ""
                        additionalFlags: 3
                      entity:
                        instanceId: 3
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/AccessControl:
    get:
      tags:
      - AccessControl
      summary: Get Access Control Details
      description: Gets owner permissions and laptop ownership details
      operationId: getAccessControl
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessControl"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
    put:
      tags:
      - AccessControl
      summary: Modify Access Control
      description: Updates owner permissions and/or automatic laptop ownership assignment
      operationId: putAccessControl
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AccessControl"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/License:
    get:
      tags:
      - License
      summary: Get License Info
      description: This endpoint returns license information
      operationId: GetLicenseInfo
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LicenseInfo"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/RequestManager/Request/{requestId}/Projects:
    get:
      tags:
      - RequestManager
      - HIDDEN
      description: Retrieve list of projects for the request
      operationId: GetProjectsForRequest
      parameters:
      - name: requestId
        in: path
        description: Unique request id
        required: true
        style: simple
        explode: false
        schema:
          minimum: 1
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RMProjectsList"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/RequestManager/Request/{requestId}/Configure:
    put:
      tags:
      - RequestManager
      - HIDDEN
      summary: RequestManager - Configure Request Operation
      description: Configure a created request
      operationId: RMConfigureRequestOperation
      parameters:
      - name: requestId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          minimum: 1
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RMConfigureRequest"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/Hypervisor/{hypervisorId}/AccessNode:
    put:
      tags:
      - Hypervisor Operations
      summary: Change the Access Node for Hypervisor
      description: Endpoint to Change the Access Node
      operationId: setHypervisorAccessNode
      parameters:
      - name: hypervisorId
        in: path
        description: Hypervisor ID to update the Access Node
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/hypervisorId_AccessNode_body"
      responses:
        "200":
          description: OK
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/Hypervisor/{hypervisorId}/FBR:
    put:
      tags:
      - VirtualMachines
      description: Endpoint to set FBR
      operationId: SetHypervisorFBR
      parameters:
      - name: hypervisorId
        in: path
        description: Linux Media Agent to set as FBR for  linux File based restores
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/hypervisorId_FBR_body"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateHypervisorResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/AccessNodes:
    get:
      tags:
      - VirtualMachines
      summary: Get Access Nodes
      description: Endpoint to get the list of access nodes
      operationId: getAccessNodes
      parameters:
      - name: vendor
        in: query
        description: Vendor Name to be filtered
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: userId
        in: query
        description: user id to be filtered
        required: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/accessNodesList"
  /V4/Servers/{serverId}/Role/MediaAgent:
    put:
      tags:
      - Servers
      summary: Add Media Agent License for a Client
      description: Put call to consume ma license for a client
      operationId: addMediaAgentRole
      parameters:
      - name: serverId
        in: path
        description: serverId of the client for which the MA role needs to be added
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: MA role added
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/Plan/Rule/Entities/Associate:
    put:
      tags:
      - PlanRules
      summary: Associate workloads to selected plan and plan rule
      description: API to associate workloads to selected plan and plan rule
      operationId: PutPlanRuleEntitiesAssociate
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssociatePlanRuleEntityList"
      responses:
        "200":
          description: OK
        "500":
          description: Internal Server Error in case of any failure
  /V4/Plan/Rule/Entities/Include:
    put:
      tags:
      - PlanRules
      summary: Include workloads to be applicable for plan rule evaluation.
      description: API to include workloads to be applicable for plan rule evaluation.
      operationId: PutPlanRuleEntitiesInclude
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/IncludeEntitiesForPlanRuleEvaluation"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "403":
          description: Forbidden in case of no access
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Internal Server Error in case of any error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/Plan/Rule/Entities/Exclude:
    get:
      tags:
      - PlanRules
      summary: Get excluded workloads from plan rule evaluation framework
      description: API to get excluded workloads from plan rule evaluation framework
      operationId: GetPlanRuleEntitiesExclude
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlanRuleExcludedEntitiesList"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
    put:
      tags:
      - PlanRules
      summary: Exclude workloads from plan rule evaluation framework
      description: API to exclude workloads from plan rule evaluation framework
      operationId: PutPlanRuleEntitiesExclude
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ExcludeEntitiesFromPlanRuleEvaluation"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "403":
          description: Forbidden in case of no access
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Internal Server Error in case of any error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/Plan/Rule/Settings:
    get:
      tags:
      - PlanRules
      summary: Fetch plan rule execution settings
      description: Fetch plan rule execution settings
      operationId: GetPlanRuleSettings
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlanRuleExecutionSettings"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
    put:
      tags:
      - PlanRules
      summary: Put PlanRuleSettings
      description: API to set plan rule execution settings
      operationId: PutPlanRuleSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PlanRuleExecutionSettings"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Internal Server Error in case of wrong value being supplied.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/VmGroup/Preview:
    post:
      tags:
      - VM Group Operations
      summary: Preview VM Group
      description: Preview of the vm to be protected in VMGroup
      operationId: vmGroupPreview
      parameters:
      - name: hypervisorId
        in: query
        description: Hypervisor Id of VMGroup
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: vmgroupId
        in: query
        description: Id of VMGroup
        required: false
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/vmGroupPreviewReq"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/vmGroupPreviewResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericRespWithWarning"
  /V4/Storage/DistributedStorage:
    get:
      tags:
      - DistributedStorage
      - HIDDEN
      summary: Get Distributed Storages
      description: Get the list of distributed storages
      operationId: GetDistributedStorages
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DistributedStorageListResp"
  /V4/AlertDefinitions:
    get:
      tags:
      - Alerts
      summary: Get the list of Alert Definitions
      description: Get the list of Alert Definitions
      operationId: GetAlertDefinitionsList
      parameters:
      - name: additionalProperties
        in: query
        description: To get extra meta data details for the api
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AlertDefinitionsList"
        "500":
          description: Internal Server Error
    post:
      tags:
      - Alerts
      summary: Create Alert Definitions
      description: Create Alert Definitions
      operationId: CreateAlertDefinitions
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AlertDefinitonsCreate"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IdNameGUID"
        "500":
          description: Internal Server Error
  /V4/TriggeredAlerts/{id}:
    get:
      tags:
      - Alerts
      summary: Get details of triggered alert
      description: Get details of triggered alert
      operationId: GetTriggeredAlertDetails
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TriggeredAlertsDetails"
        "500":
          description: Internal Server Error
    delete:
      tags:
      - Alerts
      summary: Delete Triggered Alerts
      description: Delete Triggered Alerts
      operationId: DeleteTriggeredAlerts
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Internal Server Error
  /V4/TriggeredAlerts/{id}/Pin:
    put:
      tags:
      - Alerts
      summary: Pin TriggeredAlerts
      description: Pin triggered alerts
      operationId: PinTriggeredAlerts
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Internal Server Error
  /V4/TriggeredAlerts/{id}/Unpin:
    put:
      tags:
      - Alerts
      summary: Unpin Triggered Alerts
      description: Unpin triggered alerts
      operationId: UnpinTriggeredAlerts
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Internal Server Error
  /V4/TriggeredAlerts/{id}/Read:
    put:
      tags:
      - Alerts
      summary: Read Triggered Alerts
      description: Mark a triggered alert as read
      operationId: ReadTriggeredAlerts
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Internal Server Error
  /V4/TriggeredAlerts/{id}/Unread:
    put:
      tags:
      - Alerts
      summary: Unread TriggeredAlerts
      description: Mark a triggered alert as unread
      operationId: UnreadTriggeredAlerts
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Internal Server Error
  /V4/TriggeredAlerts/{id}/Notes:
    put:
      tags:
      - Alerts
      summary: Modify Triggered AlertsNotes
      description: "Add, Modify and Delete notes for triggered alerts"
      operationId: ModifyTriggeredAlertsNotes
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateTriggeredAlertsNotes"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Internal Server Error
  /V4/AlertDefinitions/{id}:
    get:
      tags:
      - Alerts
      summary: Get Alert DefinitionsDetails
      description: Get details of alert definition
      operationId: GetAlertDefinitionsDetails
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: additionalProperties
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AlertDefinitionsDetails"
        "500":
          description: Internal Server Error
    put:
      tags:
      - Alerts
      summary: Edit Alert Definitions
      description: Edit Alert Definition details
      operationId: EditAlertDefinitions
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AlertDefinitionsEdit"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Internal Server Error
    delete:
      tags:
      - Alerts
      summary: Delete AlertDefinitions
      description: Delete alert definitions
      operationId: DeleteAlertDefinitions
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Internal Server Error
  /V4/AlertDefinitions/{id}/Enable:
    put:
      tags:
      - Alerts
      summary: Enable Alert Definitions
      description: Enable Alert Definitions
      operationId: EnableAlertDefinitions
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Internal Server Error
  /V4/AlertDefinitions/{id}/Disable:
    put:
      tags:
      - Alerts
      summary: Disable Alert Definitions
      description: Disable Alert Definition
      operationId: DisableAlertDefinitions
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Internal Server Error
  /V4/TriggeredAlerts/Action/Delete:
    put:
      tags:
      - Alerts
      summary: Delete Multiple Triggered alerts
      description: Delete multiple triggered alerts
      operationId: DeleteMultipleTriggeredalerts
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AlertIds"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Internal Server Error
  /V4/AnomalousConditions:
    get:
      tags:
      - AnomalousConditions
      - HIDDEN
      summary: get AnomalousConditions
      description: "Get various anomalous conditions like events, jobs, offline clients,\
        \ high CPU and memory loaded clients"
      operationId: get-AnomalousConditions
      parameters:
      - name: fromTime
        in: query
        description: unix time stamp denotes from which the anomalous events should
          be retrieved
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_22"
  /V4/SchedulePolicy/{schedulePolicyId}/Schedule/{scheduleId}/Pattern:
    put:
      tags:
      - Schedule
      summary: Modify Schedule Pattern of Schedule Policy
      description: API to update pattern for schedule in schedule policy
      operationId: modifySchedulePattern
      parameters:
      - name: schedulePolicyId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: scheduleId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PlanPattern"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/LaptopOwnerMapping:
    get:
      tags:
      - LaptopOwnerMapping
      - HIDDEN
      summary: Get LaptopOwner Mapping
      description: API to get the list of laptop owner mappings
      operationId: GetLaptopOwnerMapping
      parameters:
      - name: companyId
        in: query
        description: Id of the company for which the laptop owner mapping needs to
          be returned
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LaptopOwnerMapping"
              examples:
                example-1:
                  value:
                    laptopOwnerMapping:
                    - id: 1
                      serialNumber: D57946E7-02DB-4596-8B59-FA9D80C023ED
                      laptopName: laptop1
                      host: 1.1.1.1
                      ownerEmail: a@b.com
                      ownerUPN: string
                      osType: MAC
                      company:
                        id: 1
                        name: Company1
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
    put:
      tags:
      - LaptopOwnerMapping
      - HIDDEN
      summary: Update existing laptop owner mapping
      description: API to update existing laptop owner mapping
      operationId: PutLaptopOwnerMapping
      requestBody:
        description: List of laptop owner mappings to update.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LaptopOwnerMapping"
            examples:
              example-1:
                value:
                  laptopOwnerMapping:
                  - id: 21
                    serialNumber: D57946E7-02DB-4596-8B59-FA9D80C023ED
                    laptopName: laptop1
                    host: 1.1.1.1
                    ownerEmail: a@b.com
                    ownerUPN: a@b.com
                    osType: MAC
                    company:
                      id: 1
                      name: company1
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
    post:
      tags:
      - LaptopOwnerMapping
      - HIDDEN
      summary: Create laptop owner mappings
      description: API to create laptop owner mappings
      operationId: PostLaptopOwnerMapping
      requestBody:
        description: List of laptop owner mappings to be added
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateLaptopOwnerMapping"
            examples:
              example-1:
                value:
                  laptopOwnerMapping:
                  - serialNumber: D57946E7-02DB-4596-8B59-FA9D80C023EC
                    laptopName: laptop1
                    host: 1.1.1.1
                    ownerEmail: a@b.com
                    ownerUPN: string
                    osType: MAC
                    company:
                      id: 1
                      name: company1
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/LaptopOwnerMapping/action/Assign:
    put:
      tags:
      - LaptopOwnerMapping
      - HIDDEN
      summary: Put LaptopOwner Mapping Action Assign
      description: API to assign users specified in device owner mapping as owners
        of laptops presented in the request body.
      operationId: PutLaptopOwnerMappingActionAssign
      parameters:
      - name: companyId
        in: query
        description: Id of the company that this operation will be performed for
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      requestBody:
        description: Assign owners to laptops in the request.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssignLaptopOwnerMappingReq"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/LaptopOwnerMapping/action/delete:
    put:
      tags:
      - LaptopOwnerMapping
      - HIDDEN
      summary: delete multiple laptopowner mappings
      description: API is used to delete multiple laptopowner mappings
      operationId: DeleteBulkLaptopOwnerMappingActionDelete
      requestBody:
        description: List of laptop owner mappings ids which needs to be deleted
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteLaptopOwnerMapping"
            examples:
              example-1:
                value:
                  laptopOwnerMapping:
                  - 1
                  - 2
                  - 3
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/CommCell/Agents:
    get:
      tags:
      - Agent
      summary: Gets a list of all the agents configured for a user
      description: To get a list of all the agents configured for a user
      operationId: getConfiguredAgents
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetAllApplicableAgentResp"
              examples:
                example-1:
                  value:
                    agentDetails:
                    - appTypeId: 33
                      appTypeName: File System
        "500":
          description: Internal Server Error
  /V4/Tags/AssociatedEntities:
    get:
      tags:
      - EntityTag
      summary: Get list of tags and count of its associated entities
      description: Returns list of tags for the logged in user's default entity tag
        set along with count of associated entities
      operationId: getTagAssociatedEntities
      parameters:
      - name: tagId
        in: query
        description: Id of the tag whose associated entities details needs to be returned
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TagAssociatedEntitiesResponse"
              examples:
                example-1:
                  value:
                    tagSetInfo:
                      id: 738
                      GUID: 59DBD39D-26DE-435E-8EEA-F8E1A2E0A5CA
                      name: Default Tag set
                    tags:
                    - id: 742
                      name: BRAND
                      count: 1
                      associatedEntities:
                      - id: 20
                        name: CVLT
                        type: "61"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
              examples:
                example-1:
                  value:
                    errorMessage: Page not found
                    errorCode: 404
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
              examples:
                example-1:
                  value:
                    errorMessage: Service unavailable
                    errorCode: 503
  /V4/CompareXML:
    post:
      tags:
      - DeveloperTools
      - HIDDEN
      description: Compare old and new XMl or objects
      operationId: CompareXmls
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CompareXMLReq"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CompareXMLResp"
        "404":
          description: Comparision Details not found
  /V4/ServerGroup/{serverGroupId}/DCPlan:
    get:
      tags:
      - ServerGroup
      summary: Get ServerGroup DC Plan
      description: API to fetch DC plan associated to server group
      operationId: getServerGroupDCPlan
      parameters:
      - name: serverGroupId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IdName"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
    put:
      tags:
      - ServerGroup
      summary: Associate specific plan to servergroup
      description: API to associate data classification plan to servergroup
      operationId: putServerGroupDCPlan
      parameters:
      - name: serverGroupId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: DC Plan id and name
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/IdName"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
      x-hidden-description: |
        This is used to associated data classfiication plan to a servergroup. This can't be used for vm operations.
    delete:
      tags:
      - ServerGroup
      summary: Remove associated DC plan from server group
      description: Api to remove associated DC plan from server group
      operationId: deleteServerGroupDCPlan
      parameters:
      - name: serverGroupId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: removeChildAssociations
        in: query
        description: "Optional parameter. To be set only in case, if caller want to\
          \ leave child association as-is and decouple them from server group"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/Company/{companyId}/LaptopAdmins:
    get:
      tags:
      - Company
      summary: Get a company's laptop admins.
      description: Get a company's laptop admins.
      operationId: GetCompanyLaptopAdmins
      parameters:
      - name: companyId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetLaptopAdminsResp"
    put:
      tags:
      - Company
      description: Update a company's laptop admins.
      operationId: UpdateCompanyLaptopAdmins
      parameters:
      - name: companyId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: List of users or user groups and operation type
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateLaptopAdminsReq"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateLaptopAdminsResp"
  /V4/InventoryManager/Inventory:
    get:
      tags:
      - InventoryManager
      - HIDDEN
      summary: Retrieve the list of inventories
      description: Retrieve the list of inventories
      operationId: GetInventoryList
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InventoryList"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
    post:
      tags:
      - InventoryManager
      - HIDDEN
      summary: Creating a new inventory
      description: Creating a new inventory
      operationId: CreateInventory
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InventoryCreateRequest"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IdName"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/InventoryManager/Inventory/{inventoryId}/Assets:
    get:
      tags:
      - InventoryManager
      - HIDDEN
      summary: GetInventoryAssetList
      description: Get the list of assets associated to the inventory
      operationId: GetInventoryAssetList
      parameters:
      - name: inventoryId
        in: path
        description: Inventory id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InventoryAssetList"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
    put:
      tags:
      - InventoryManager
      - HIDDEN
      summary: Adding a new asset to the inventory
      description: Adding a new asset to the inventory
      operationId: AddInventoryAsset
      parameters:
      - name: inventoryId
        in: path
        description: Inventory id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/inventoryId_Assets_body"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/InventoryManager/{indexServerClientId}/Default:
    get:
      tags:
      - InventoryManager
      - HIDDEN
      summary: GetDefaultInventory
      description: Fetch the default inventory associated to the index server
      operationId: GetDefaultInventory
      parameters:
      - name: indexServerClientId
        in: path
        description: Pseudo client id of the index server
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: createIfAbsent
        in: query
        description: Create the default inventory if it is missing for the index server
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InventoryDetails"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
      x-internal: true
  /V4/InventoryManager/Inventory/{inventoryId}:
    get:
      tags:
      - InventoryManager
      - HIDDEN
      summary: Get inventory details
      description: Get inventory details
      operationId: GetInventoryDetails
      parameters:
      - name: inventoryId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InventoryDetails"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
    delete:
      tags:
      - InventoryManager
      - HIDDEN
      summary: Deleting an inventory
      description: Deleting an inventory
      operationId: DeleteInventory
      parameters:
      - name: inventoryId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/RecoveryPointStores:
    get:
      tags:
      - Recovery Point Stores
      summary: Get RecoveryPoint StoreList
      description: Get the list of recovery point stores.
      operationId: GetRecoveryPointStoreList
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RPStoreListResponse"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/InventoryManager/Inventory/{inventoryId}/Assets/{assetId}:
    get:
      tags:
      - InventoryManager
      - HIDDEN
      summary: GetInventoryAssetDetails
      description: Get the details of inventory asset
      operationId: GetInventoryAssetDetails
      parameters:
      - name: inventoryId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: assetId
        in: path
        description: FQDN of the asset
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InventoryAssetDetails"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
    delete:
      tags:
      - InventoryManager
      - HIDDEN
      summary: DeleteInventoryAsset
      description: Delete the inventory asset
      operationId: DeleteInventoryAsset
      parameters:
      - name: inventoryId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: assetId
        in: path
        description: FQDN of the asset
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/EntityTags/{tagId}:
    delete:
      tags:
      - EntityTag
      summary: Delete tag from the entity tag list
      description: Used to delete tag from the entity tag list
      operationId: DeleteEntityTag
      parameters:
      - name: tagId
        in: path
        description: Id of the tag to delete
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
              examples:
                example-1:
                  value:
                    errorMessage: ""
                    errorCode: 0
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/LaptopOwnerMapping/Preview:
    get:
      tags:
      - LaptopOwnerMapping
      - HIDDEN
      description: Gives list of valid laptop owner mapping in the response
      operationId: GetV4LaptopOwnerMappingPreview
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LaptopOwnerMapping"
              examples:
                example-1:
                  value:
                    laptopOwnerMapping:
                    - id: 0
                      serialNumber: 0f6f5c09-a58f-4b3e-aa00-fb94b3843101
                      laptopName: AbhiCV365Proxy2
                      host: AbhiCV365Proxy2
                      ownerEmail: a@b.com
                      ownerUPN: a@b.com
                      osType: MAC
                      company:
                        id: 0
                        name: Commcell
                    error:
                      errorMessage: ""
                      errorCode: 0
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
              examples:
                example-1:
                  value:
                    errorMessage: Bad request
                    errorCode: 400
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
              examples:
                example-1:
                  value:
                    errorMessage: Forbidden
                    errorCode: 403
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
              examples:
                example-1:
                  value:
                    errorMessage: Page not found
                    errorCode: 404
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
              examples:
                example-1:
                  value:
                    errorMessage: Services unavilable
                    errorCode: 0
  /V4/StorageArrays/{arrayId}/Snaps:
    get:
      tags:
      - Snapshot Operations
      summary: List Snapshots of Storage Array
      description: Listing Snapshot of a particular array
      operationId: ListSnapshots
      parameters:
      - name: arrayId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_23"
              examples:
                Example 1:
                  value:
                    snaps:
                    - smVolumeId: 8834
                      arrayId: 16
                      arrayName: xxx.xx.xx.xx
                      sourceClientId: 3
                      sourceClientName: Client_name
                      sourcePath: /path
                      mountHostId: 0
                      mountHostName: ""
                      mountPath: ""
                      appTypeId: 29
                      appTypeName: Linux File System
                      masterJobId: 0
                      jobId: 12345
                      creationTime: 123456789
                      mountStatusId: 98
                      mountStatusName: Failed to delete
                      mountStatusUpdateTime: 123456789
                      snapshotType: 1
                      capabilities: 1564369309
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
  /V4/StorageArrays/Job/{jobId}/Snaps:
    get:
      tags:
      - Snapshot Operations
      summary: Get Snaps for a Job
      description: API to list snaps for a particular Job Id
      operationId: SnapByJobs
      parameters:
      - name: jobId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: commcellId
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 2
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_23"
              examples:
                Example 1:
                  value:
                    snaps:
                    - smVolumeId: 8834
                      arrayId: 16
                      arrayName: xxx.xx.xx.xx
                      sourceClientId: 3
                      sourceClientName: Client_name
                      sourcePath: /path
                      mountHostId: 0
                      mountHostName: ""
                      mountPath: ""
                      appTypeId: 29
                      appTypeName: Linux File System
                      masterJobId: 0
                      jobId: 12345
                      creationTime: 123456789
                      mountStatusId: 98
                      mountStatusName: Failed to delete
                      mountStatusUpdateTime: 123456789
                      snapshotType: 1
                      capabilities: 1564369309
  /V4/StorageArrays:
    get:
      tags:
      - Array Management
      summary: List All Storage Arrays
      description: Get all storage arrays.
      operationId: GetArrays
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetArraysResp"
        "400":
          description: Bad Request
    post:
      tags:
      - Array Management
      summary: Add Storage Array
      description: Creating a Storage Array
      operationId: createArray
      requestBody:
        description: Request to create an Array
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateArray"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/StorageArrays/{arrayId}:
    get:
      tags:
      - Array Management
      summary: Get Storage Array Details
      description: Getting Array Details
      operationId: GetArrayDetails
      parameters:
      - name: arrayId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ArrayDetails"
              examples:
                Example 1:
                  value:
                    labels:
                      name: string
                      controlHost: string
                      userName: string
                      password: string
                    general:
                      snapVendor:
                        id: 0
                        name: string
                      array:
                        id: 0
                        name: string
                      controlHost: string
                      credential:
                        userName: string
                        password: string
                      savedCredential:
                        id: 0
                        name: string
                      region:
                        id: 0
                        name: string
                      flags: 0
                      enableNetAppCloudAccount: true
                      arrayType: 0
                      cloudVendorId: 0
                      uniqueIdentifier: string
                      description: string
                    security:
                      user:
                        id: 0
                        name: string
                      userGroup:
                        id: 0
                        name: string
                      externalUserGroup:
                        id: 0
                        name: string
                        providerId: 0
                        providerName: string
                      isCreatorAssociation: true
                      role:
                        id: 0
                        name: string
                      permissionList:
                      - permissionId: 0
                        permissionName: string
                        categoryId: 0
                        categoryName: string
                        type: ALL_CATEGORIES
                        exclude: true
                    accessNodes:
                    - id: 0
                      name: string
                      displayName: string
                      pruning: true
                    availableAccessNodes:
                    - id: 0
                      name: string
                      displayName: string
                    snapConfigurations:
                    - masterConfigId: 0
                      name: string
                      type: 1
                      value: string
                      values:
                      - id: 0
                        name: string
                      flags: 0
                      description: string
                      isEnabled: true
                    serverGroups:
                    - id: 0
                      name: string
                      mediaAgentCount: 0
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
    put:
      tags:
      - Array Management
      summary: Edit Storage Array
      description: Editing Array details
      operationId: EditArray
      parameters:
      - name: arrayId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EditArray"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
    delete:
      tags:
      - Array Management
      summary: Deleting a Storage Array
      description: Deleting a Storage Array
      operationId: DeleteArray
      parameters:
      - name: arrayId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
              examples:
                Example 1:
                  value:
                    errorCode: 0
                    errorMessage: Array has been successfully deleted
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
  /V4/StorageArrays/Vendors:
    get:
      tags:
      - Snapshot Configurations
      summary: List Snapshot Vendors
      description: Get all snap vendors
      operationId: GetVendors
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SnapVendors"
        "400":
          description: Bad Request
  /V4/StorageArrays/Vendors/{vendorId}:
    get:
      tags:
      - Snapshot Configurations
      summary: Get Snap Configs for storage Array vendor
      description: get snap config for vendor.
      operationId: GetSnapConfig
      parameters:
      - name: vendorId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetSnapConfig"
        "400":
          description: Bad Request
  /V4/StorageArrays/{arrayId}/Client/{clientId}/Snap/Configs:
    get:
      tags:
      - Snapshot Configurations
      summary: Get Snap Configs for Storage Array at Client
      description: API to fetch Snap configs for Storage Arrays at client level
      operationId: GetClientSnapConfigs
      parameters:
      - name: arrayId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: clientId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SnapConfigOverrideResp"
              examples:
                Example 1:
                  value:
                    copyId: 737181738171
                    subclientId: 737181738172
                    clientId: 737181738173
                    snapConfigurations:
                    - masterConfigId: 27
                      isOverridden: false
                      isEnabled: true
                      name: Mount Retry Interval (in seconds)
                      flags: 0
                      description: "<html><body><b>Name : </b>Mount Retry Interval\
                        \ (in seconds)<br/><b>Description : </b>\n\n             \
                        \                   Specifies the time interval (in seconds)\
                        \ after which the <br/>\n\n                              \
                        \  next mount operation will be attempted. \n\n          \
                        \                      The default value is 300.\n\n     \
                        \                           <br/>\n\n                    \
                        \            <b>Default Value : </b>300<br/><b>Range : </b>0\
                        \ - 3600</body></html>"
                      id: 131
                      type: 2
                      values:
                      - name: "1000"
    put:
      tags:
      - Snapshot Configurations
      summary: Edit Client Snap Configs for Storage Arrays
      description: API to edit Snap Configurations at Client Level
      operationId: EditClientSnapConfigs
      parameters:
      - name: arrayId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: clientId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SnapConfigOverrideEditReq"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/StorageArrays/{arrayId}/Snaps/Recon:
    put:
      tags:
      - Snapshot Operations
      summary: Reconcile Snapshots of Storage Array
      description: Starts a workflow snap reconcile for array
      operationId: SnapReconWorkflow
      parameters:
      - name: arrayId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SnapReconResp"
        "400":
          description: Bad Request
  /V4/Plan/BackupDestination/JobOperations:
    post:
      tags:
      - Plan
      summary: Job Operations
      description: Run different job operations for a plan backup destination
      operationId: RunJobOperationOnPlanBackupDestination
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/JobOperationOnCopyReq"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/JobOperationOnCopyResp"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/Plan/BackupDestination/{backupDestinationId}/Jobs:
    get:
      tags:
      - Plan
      summary: Get Jobs for a Backup Destination
      description: Get the list of Jobs for selected backupDestinationId.
      operationId: GetJobsOnBackupDestination
      parameters:
      - name: backupDestinationId
        in: path
        description: Id of the BackupDestination to fetch Job List.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: view
        in: query
        description: "Time period selection for which to fetch jobs. Accepted values\
          \ [last24Hours, lastWeek, lastMonth, last3Months, custom]. When custom is\
          \ selected Jobs are filtered based on values provided in other params."
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: last24Hours
      - name: clients
        in: query
        description: Comma separated Client Ids to filter the jobs based on clients
          associated
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: "2,3"
      - name: agedData
        in: query
        description: "Aged Jobs selection. Accepted values [ 0 to exclude aged jobs,\
          \ 1 to show only aged jobs, 2 to include aged jobs]."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: backupLvl
        in: query
        description: "Job backup type filter. Accepted values [1=Full, 2=Incremental,\
          \ 4=Differential, 8=All, 64=Synthetic full]."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: copyState
        in: query
        description: "Filter jobs by data status. Accepted values [0  = show all,\
          \ 1  = show available, 4  = show to be copied, 8  = show not to be copied,\
          \ 16 = show extended retained]."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: startTime
        in: query
        description: Start time of the time range.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      - name: endTime
        in: query
        description: End time of the time range.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      - name: minAppSizeMB
        in: query
        description: Minimum size of job in Megabytes for application size range filter
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      - name: maxAppSizeMB
        in: query
        description: Maximum size of job in Megabytes for application size range filter
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetJobsOnStorageResp"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/Plan/BackupDestination/{backupDestinationId}/Clients:
    get:
      tags:
      - Plan
      summary: Get clients associated with BackupDestination
      description: Get the list of clients associated with the BackupDestination.
      operationId: GetClientsForBackupDestination
      parameters:
      - name: backupDestinationId
        in: path
        description: Id of the BackupDestination.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientListForStorageResp"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/InventoryManager/Inventory/{inventoryId}/Crawl:
    put:
      tags:
      - InventoryManager
      - HIDDEN
      summary: Run Backup Copy Job For Plan's backupdestination
      description: To start the data collection job on inventory
      operationId: InventoryCrawl
      parameters:
      - name: inventoryId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/Server/{serverId}/Agent/{agentId}:
    delete:
      tags:
      - Agent
      summary: delete an agent from a server
      description: |-
        Used to delete an agent from a server
        It is expected that the agent has been deconfigured before performing delete operation.
        But internally if the agent is not deconfigured, then we force deconfigure it to proceed with delete operation
        Examples of supported agentIds are:
        33-File System,
        106-Virtual Server
      operationId: DeleteAgent
      parameters:
      - name: serverId
        in: path
        description: Id of the server to modify
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: agentId
        in: path
        description: Id of the agent to be modified
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/InventoryManager/Inventory/{inventoryId}/Assets/{assetId}/jobs:
    get:
      tags:
      - InventoryManager
      - HIDDEN
      summary: Retrieve job history for identity server asset
      description: Retrieve job history for identity server asset
      operationId: GetIdentityServerAssetJobHistory
      parameters:
      - name: inventoryId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: assetId
        in: path
        description: FQDN of the asset
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DatasourceJobHistory"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/StorageArrays/{arrayId}/Snaps/Mount:
    post:
      tags:
      - Snapshot Operations
      summary: Mount Storage Array Snapshot
      description: Mounting a snapshot from the Storage Array
      operationId: SnapMount
      parameters:
      - name: arrayId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MountReq"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SnapReconResp"
              examples:
                Example 1:
                  value:
                    jobId: 11785
                    errorCode: 0
                    errorMessage: ""
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
  /V4/StorageArrays/{arrayId}/Snaps/Unmount:
    post:
      tags:
      - Snapshot Operations
      summary: Unmount Snapshot of Storage Array
      description: Unmounting a mounted Snapshot from Storage Array
      operationId: SnapUnmount
      parameters:
      - name: arrayId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UnmountSnapReq"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SnapReconResp"
              examples:
                Example 1:
                  value:
                    jobId: 11786
                    errorCode: 0
                    errorMessage: ""
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
  /V4/StorageArrays/{arrayId}/Snaps/Delete:
    post:
      tags:
      - Snapshot Operations
      summary: Delete Storage Array Snapshot
      description: Deleting an unmounted or created snapshot from Storage Arrays
      operationId: SnapDelete
      parameters:
      - name: arrayId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteSnapReq"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SnapReconResp"
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
  /V4/StorageArrays/{arrayId}/Snaps/Revert:
    post:
      tags:
      - Snapshot Operations
      summary: Revert Snapshot of Storage Array
      description: Reverting a created or unmounted snapshot from the storage array
      operationId: SnapRevert
      parameters:
      - name: arrayId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SnapRevertReq"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SnapReconResp"
  /V4/Tags/{tagId}/Values:
    get:
      tags:
      - EntityTag
      summary: Get list of values for given tagId
      description: Gives list of values for given tagId
      operationId: getTagValuesForTagId
      parameters:
      - name: tagId
        in: path
        description: Id of the tag name whose value is requested
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TagValueResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
    put:
      tags:
      - EntityTag
      summary: Modify values for give tagId
      description: Modify values for give tagId
      operationId: putValuesForTagId
      parameters:
      - name: tagId
        in: path
        description: Id of the tag name whose value is requested
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateTagValueRequest"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/Tags/{tagId}/TagValues/{tagValue}:
    delete:
      tags:
      - EntityTag
      summary: Delete given tagValue for tagId
      description: Delete given tagValue for tagId
      operationId: deletagValueForTagId
      parameters:
      - name: tagId
        in: path
        description: tag id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: tagValue
        in: path
        description: tag value to delete
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/StorageArrays/{arrayId}/Subclient/{subclientId}/Snap/Configs:
    get:
      tags:
      - Snapshot Configurations
      summary: Get Snap Configs for Storage Array at Subclient
      description: API to fetch Snap configs for Storage Arrays at subclient level
      operationId: GetSubclientSnapConfigs
      parameters:
      - name: arrayId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: subclientId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SnapConfigOverrideResp"
    put:
      tags:
      - Snapshot Configurations
      summary: Edit Subclient Snap Configs for Storage Arrays
      description: API to edit Snap Configurations at Subclient level
      operationId: EditSubclientSnapConfigs
      parameters:
      - name: arrayId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: subclientId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SnapConfigOverrideEditReq"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/StorageArrays/Copy/{copyId}/Arrays/{arrayId}/Snap/Configs:
    get:
      tags:
      - Snapshot Configurations
      summary: Get Storage Array Snap Configs at Copy Level
      description: API to fetch snap configs for storage arrays at copy level
      operationId: GetCopyConfigs
      parameters:
      - name: copyId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: arrayId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SnapConfigOverrideResp"
    put:
      tags:
      - Snapshot Configurations
      summary: Edit Storage Array Snap Configs at Copy Level
      description: API to edit snap configurations for storage array at copy level
      operationId: EditCopySnapConfigs
      parameters:
      - name: copyId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: arrayId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SnapConfigOverrideEditReq"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/MountPath/Content:
    get:
      tags:
      - Storage
      summary: Get mount path content
      description: API to get mountpath content
      operationId: get-MountPath-Content
      parameters:
      - name: mountPathId
        in: query
        description: Mountpath Id
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: deviceId
        in: query
        description: Device Id
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetMountPathContentResp"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/StorageArrays/Client/Snap/Enabled:
    get:
      tags:
      - SnapshotManagement
      summary: List Intellisnap Enabled Clients
      description: API to get all IntelliSnap enabled Clients
      operationId: GetSnapClients
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/IntelliSnapClientsList"
                x-content-type: application/json
  /V4/StorageArrays/Client/{clientId}/subclient/Snap/Enabled:
    get:
      tags:
      - SnapshotManagement
      summary: List Intellisnap Enabled Subclients
      description: API to get all IntelliSnap enabled subclients for particular client
      operationId: GetSnapSubclients
      parameters:
      - name: clientId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/IntelliSnapSubclients"
                x-content-type: application/json
  /V4/StorageArrays/{arrayId}/Snap/Configs:
    put:
      tags:
      - Snapshot Configurations
      summary: Edit Snap Configs for Storage Array at Array levels
      description: API to edit Snap configs at a Array level
      operationId: EditSnapConfigs
      parameters:
      - name: arrayId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SnapConfigOverrideEditReq"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
              examples:
                Example 1:
                  value:
                    snapConfigurations:
                    - masterConfigId: 0
                      id: 0
                      name: string
                      type: 1
                      value: string
                      values:
                      - id: 0
                        name: string
                      flags: 0
                      isUpdated: true
                      isOverridden: true
  /V4/StorageArrays/{arrayId}/Snaps/MultiNode/Unmount:
    post:
      tags:
      - Snapshot Operations
      summary: Unmount Multi Node Snapshots of Storage Array
      description: API for snap multi node unmount operation
      operationId: MultiNodeUnmount
      parameters:
      - name: arrayId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SnapNodeReq"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SnapReconResp"
  /V4/PlatformUpgrade/Options:
    get:
      tags:
      - Servers
      summary: Get Platform Upgrade Options
      description: API to get eligibility for install job option at different entity
        level
      operationId: GetPlatformUpgradeOptions
      parameters:
      - name: option
        in: query
        description: "Specify the entity level for which to fetch install jobs options.\
          \ Accepted values [ 2 = Client, 3 = Client Group, 4 = Commcell]"
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: clientId
        in: query
        description: Id of the client or client group for which to fetch install job
          options
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetSetWindowsMSSQLPatchingMsg"
  /V4/StorageArrays/{arrayId}/Snaps/InstantClone/Delete:
    post:
      tags:
      - Snapshot Operations
      summary: Delete Instant Clone Snap
      description: API for snap instant clone delete operation
      operationId: InstantCloneDelete
      parameters:
      - name: arrayId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SnapNodeReq"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SnapReconResp"
  /V4/StorageArrays/{arrayId}/Snaps/MultiNode/Unmount/Force:
    post:
      tags:
      - Snapshot Operations
      summary: Force Unmount Multi Node Snapshots of Storage Array
      description: "API for snap multi node force unmount operation. Please be aware,\
        \ triggering this API will not physically unmount the clones from the storage\
        \ array or MA, so ensure that you unmapped the clones on the array and cleanup\
        \ the mount host and LVM before using this operation."
      operationId: MultiNodeForceUnmount
      parameters:
      - name: arrayId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SnapNodeReq"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SnapReconResp"
  /V4/StorageArrays/{arrayId}/Snaps/InstantClone/Delete/Force:
    post:
      tags:
      - Snapshot Operations
      summary: Force Delete Instant Clone Snapshot
      description: "API for snap instant clone force delete operation. Please be aware,\
        \ triggering this API will not delete the clones from the storage array, so\
        \ ensure that you delete clones on the array before using this operation."
      operationId: InstantCloneForceDelete
      parameters:
      - name: arrayId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SnapNodeReq"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SnapReconResp"
  /V4/StorageArrays/{arrayId}/Snaps/Unmount/Force:
    post:
      tags:
      - Snapshot Operations
      summary: Force Unmount Snapshot
      description: "Force unmounting a mounted Snapshot from Storage Array. Please\
        \ be aware, triggering this API will not physically unmount the snapshots\
        \ from the storage array or MA, so ensure that you unmapped the snapshots\
        \ on the array and cleanup the mount host and LVM before using this operation."
      operationId: SnapForceUnmount
      parameters:
      - name: arrayId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SnapForceReq"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SnapReconResp"
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
  /V4/StorageArrays/{arrayId}/Snaps/Delete/Force:
    post:
      tags:
      - Snapshot Operations
      summary: Delete Snapshot Force
      description: "Force deleting an unmounted or created snapshot from Storage Arrays.\
        \ Please be aware, triggering this API will not delete the snapshots from\
        \ the storage array, so ensure that you delete snapshots on the array before\
        \ using this operation."
      operationId: SnapForceDelete
      parameters:
      - name: arrayId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SnapForceReq"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SnapReconResp"
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
  /V4/Office365/{appId}/AzureApp:
    get:
      tags:
      - Office365
      summary: Get Office 365 Azure apps
      description: Get list of Office 365 Azure apps
      operationId: GetOffice365AzureApp
      parameters:
      - name: appId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetOffice365AzureAppResp"
    put:
      tags:
      - Office365
      summary: Add/Update Office365 Azure Apps
      description: Add list of Office365 Azure Apps
      operationId: AddOffice365AzureApp
      parameters:
      - name: appId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateOffice365AzureAppReq"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateOffice365AzureAppResp"
    delete:
      tags:
      - Office365
      summary: Delete Office365 Azure Apps
      description: Delete list of Office365 Azure Apps
      operationId: DeleteOffice365AzureApp
      parameters:
      - name: appId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteOffice365AzureAppReq"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateOffice365AzureAppResp"
  /V4/Office365:
    get:
      tags:
      - Office365
      summary: Get Office 365 apps
      description: Get list of Office 365 apps
      operationId: GetOffice365Client
      parameters:
      - name: pageNumber
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: pageSize
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: sort
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: desc:name
      - name: searchKey
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Office365AllClientsResp"
  /V4/Office365/Exchange:
    get:
      tags:
      - Exchange
      summary: Get Office 365 Exchange Online apps
      description: Get list of Office 365 Exchange Online apps
      operationId: GetExchangeClient
      parameters:
      - name: pageNumber
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: pageSize
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: sort
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: desc:name
      - name: searchKey
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Office365ClientsResp"
    post:
      tags:
      - Exchange
      summary: Create Office 365 Exchange Online app
      description: Create Office 365 Exchange Online app
      operationId: CreateExchangeClient
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateExchangeClient"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IdName"
        "409":
          description: Conflict
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
              examples:
                example:
                  value:
                    errorMessage: An instance by this name already exists.
                    errorCode: 3
        "500":
          description: Internal Server Error
  /V4/Office365/OneDrive:
    get:
      tags:
      - OneDrive
      summary: Get Office 365 Onedrive for Business apps
      description: Get list of Office 365 Onedrive for Business apps
      operationId: GetOnedriveClient
      parameters:
      - name: pageNumber
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: pageSize
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: sort
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: desc:name
      - name: searchKey
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Office365ClientsResp"
    post:
      tags:
      - OneDrive
      summary: Create Office 365 Onedrive for Business app
      description: Create Office 365 Onedrive for Business app
      operationId: CreateOnedriveClient
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateOnedriveClient"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IdName"
        "409":
          description: Conflict
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
              examples:
                example:
                  value:
                    errorMessage: An instance by this name already exists.
                    errorCode: 3
        "500":
          description: Internal Server Error
  /V4/Office365/SharePoint:
    get:
      tags:
      - Sharepoint
      summary: Get Office 365 Sharepoint Online apps
      description: Get list of Office 365 Sharepoint Online apps
      operationId: GetSharepointClient
      parameters:
      - name: pageNumber
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: pageSize
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: sort
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: desc:name
      - name: searchKey
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Office365ClientsResp"
    post:
      tags:
      - Sharepoint
      summary: Create Office 365 SharePoint Online
      description: Create Office 365 SharePoint Online app
      operationId: CreateSharepointClient
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateSharepointClient"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IdName"
        "409":
          description: Conflict
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
              examples:
                example:
                  value:
                    errorMessage: An instance by this name already exists.
                    errorCode: 3
        "500":
          description: Internal Server Error
  /V4/Office365/Teams:
    get:
      tags:
      - Teams
      summary: Get Office 365 Teams apps
      description: Get list of Office 365 Teams apps
      operationId: GetTeamsClient
      parameters:
      - name: pageNumber
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: pageSize
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: sort
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: desc:name
      - name: searchKey
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Office365ClientsResp"
    post:
      tags:
      - Teams
      summary: Create Office 365 Teams app
      description: Create Office 365 Teams app
      operationId: CreateTeamsClient
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateTeamsClient"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IdName"
        "409":
          description: Conflict
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
              examples:
                example:
                  value:
                    errorMessage: An instance by this name already exists.
                    errorCode: 3
        "500":
          description: Internal Server Error
  /v4/Dynamics365:
    post:
      tags:
      - Dynamics365
      summary: Create D365 Client
      description: Create Dynamics 365 app
      operationId: CreateD365Client
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateDynamics365Client"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IdName"
        "500":
          description: Internal Server Error
  /v4/ActiveDirectory/AzureAD:
    post:
      tags:
      - ActiveDirectory
      - HIDDEN
      summary: Create Azure Active Directory app
      description: Create Azure Active Directory app
      operationId: CreateAzureADClient
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateAzureADClient"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IdName"
        "500":
          description: Internal Server Error
  /V4/ActiveDirectory/Apps:
    get:
      tags:
      - ActiveDirectory
      summary: Get Azure and OnPrem Active Directory clients with their file system
        state
      operationId: GetActiveDirectoryClientsV2
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ActiveDirectoryClientsV2Resp"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/SoftwareCache:
    get:
      tags:
      - SoftwareCache
      summary: Get all software caches details
      operationId: GetSoftwareCachesDetails
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SoftwareCacheDetailListResp"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
    post:
      tags:
      - SoftwareCache
      summary: Create a new software cache
      operationId: AddSoftwareCache
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SoftwareCacheDetail"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/SoftwareCache/{clientId}:
    get:
      tags:
      - SoftwareCache
      summary: Get software cache details for specific server
      operationId: GetSoftwareCacheDetailsForServer
      parameters:
      - name: clientId
        in: path
        description: Software cache client id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SoftwareCacheDetail"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
    put:
      tags:
      - SoftwareCache
      summary: Modify software cache details
      operationId: ModifySoftwareCacheDetails
      parameters:
      - name: clientId
        in: path
        description: Software cache client id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ModifySoftwareCacheDetails"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
    delete:
      tags:
      - SoftwareCache
      summary: Delete software cache for server
      operationId: DeleteSoftwareCacheServer
      parameters:
      - name: clientId
        in: path
        description: Software cache client id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/SoftwareCache/QualifiedServers:
    get:
      tags:
      - SoftwareCache
      summary: Get Qualified servers for software cache creation
      description: Get qualified server list to create a new software cache
      operationId: GetQualifiedServersForSoftwareCache
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SoftwareCacheDetailListResp"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/Office365/Exchange/{appId}/Content:
    get:
      tags:
      - Exchange
      summary: Get Office 365 Exchange Online Content
      description: Get Office 365 Exchange Online Content
      operationId: GetExchangeContent
      parameters:
      - name: appId
        in: path
        description: Commvault exchange app id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: pageNumber
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: pageSize
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: sort
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: desc:name
      - name: searchKey
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Office365ExchangeContentResp"
    put:
      tags:
      - Exchange
      summary: Add Content to Office 365 Exchange Online app
      description: Add Content to Office 365 Exchange Online app
      operationId: AddExchangeContent
      parameters:
      - name: appId
        in: path
        description: Commvault exchange app id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ExchangeContentReq"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/Office365/OneDrive/{appId}/Content:
    get:
      tags:
      - OneDrive
      summary: Get Office 365 Onedrive for Business Content
      description: Get Office 365 Onedrive for Business Content
      operationId: GetOnedriveContent
      parameters:
      - name: appId
        in: path
        description: Commvault onedrive app id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: pageNumber
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: pageSize
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: sort
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: desc:name
      - name: searchKey
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Office365OnedriveContentResp"
    put:
      tags:
      - OneDrive
      summary: Add content to Office 365 OneDrive for Business app
      description: Add content to Office 365 OneDrive for Business app
      operationId: AddOnedriveContent
      parameters:
      - name: appId
        in: path
        description: Commvault onedrive app id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OnedriveContentReq"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/Office365/SharePoint/{appId}/Content:
    get:
      tags:
      - Sharepoint
      summary: Get Office 365 Sharepoint Online Content
      description: Get Office 365 Sharepoint Online Content
      operationId: GetSharepointContent
      parameters:
      - name: appId
        in: path
        description: Commvault sharepoint app id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: pageNumber
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: pageSize
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: sort
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: desc:name
      - name: searchKey
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Office365SharepointContentResp"
    put:
      tags:
      - Sharepoint
      summary: Add content to Office 365 SharePoint Online app
      description: Add content to Office 365 SharePoint Online app
      operationId: AddSharepointContent
      parameters:
      - name: appId
        in: path
        description: Commvault sharepoint app id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SharepointContentReq"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/Office365/Teams/{appId}/Content:
    get:
      tags:
      - Teams
      summary: Get Office 365 Teams Content
      description: Get Office 365 Teams Content
      operationId: GetTeamsContent
      parameters:
      - name: appId
        in: path
        description: Commvault teams app id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: pageNumber
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: pageSize
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: sort
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: desc:name
      - name: searchKey
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Office365TeamsContentResp"
    put:
      tags:
      - Teams
      summary: Add content to Office 365 Teams app
      description: Add content to Office 365 Teams app
      operationId: AddTeamsContent
      parameters:
      - name: appId
        in: path
        description: Commvault teams app id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TeamsContentReq"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/Dynamics365/{appId}/Content:
    put:
      tags:
      - Dynamics365
      summary: Add content to Dynamics 365 app
      description: Add content to Dynamics 365 app
      operationId: AddD365Content
      parameters:
      - name: appId
        in: path
        description: Commvault dynamics 365 app id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Dynamics365ContentReq"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/Office365/Exchange/{appId}/Mailboxes:
    get:
      tags:
      - Exchange
      summary: Get Office 365 Exchange Online Mailboxes
      description: Get Office 365 Exchange Online Mailboxes
      operationId: GetExchangeMailboxes
      parameters:
      - name: appId
        in: path
        description: Commvault exchange app id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: propertyLevel
        in: query
        description: Optional parameter. Set it to BasicProperties or AllProperties
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: pageNumber
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: pageSize
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: sort
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: desc:name
      - name: searchKey
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Office365MailboxesResp"
    put:
      tags:
      - Exchange
      summary: Add Office 365 Exchange Online Mailboxes List
      description: Add Office 365 Exchange Online Mailboxes List
      operationId: AddExchangeMailboxesList
      parameters:
      - name: appId
        in: path
        description: Commvault exchange app id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Office365MailboxesReq"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/Office365/Onedrive/{appId}/Users:
    get:
      tags:
      - OneDrive
      summary: Get Office 365 Onedrive for Business Users
      description: Get Office 365 Onedrive for Business Users
      operationId: GetOnedriveUsers
      parameters:
      - name: appId
        in: path
        description: Commvault onedrive app id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: propertyLevel
        in: query
        description: Optional parameter. Set it to BasicProperties or AllProperties
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: pageNumber
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: pageSize
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: sort
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: desc:name
      - name: searchKey
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Office365OnedriveUsersResp"
    put:
      tags:
      - OneDrive
      summary: Add Office 365 Onedrive Users List
      description: Add Office 365 Onedrive Users List
      operationId: AddOnedriveUsersList
      parameters:
      - name: appId
        in: path
        description: Commvault onedrive app id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Office365OnedriveUsersReq"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/Office365/Sharepoint/{appId}/Sites:
    get:
      tags:
      - Sharepoint
      summary: Get Office 365 Sharepoint Online Sites
      description: Get Office 365 Sharepoint Online Sites
      operationId: GetSharepointSites
      parameters:
      - name: appId
        in: path
        description: Commvault sharepoint app id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: propertyLevel
        in: query
        description: Optional parameter. Set it to BasicProperties or AllProperties
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: pageNumber
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: pageSize
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: sort
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: desc:name
      - name: searchKey
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Office365SitesResp"
    put:
      tags:
      - Sharepoint
      summary: Add Office 365 Sharepoint sites
      description: Add sites to Office 365 SharePoint Online app
      operationId: AddSharepointSitesList
      parameters:
      - name: appId
        in: path
        description: Commvault sharepoint app id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Office365SitesReq"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/Office365/Teams/{appId}/Teams:
    get:
      tags:
      - Teams
      summary: Get Office 365 Teams List
      description: Get Office 365 Teams List
      operationId: GetTeamsList
      parameters:
      - name: appId
        in: path
        description: Commvault teams app id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: propertyLevel
        in: query
        description: Optional parameter. Set it to BasicProperties or AllProperties
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: pageNumber
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: pageSize
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: sort
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: desc:name
      - name: searchKey
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Office365TeamsResp"
    put:
      tags:
      - Teams
      summary: Add Office 365 Teams List
      description: Add Office 365 Teams List
      operationId: AddTeamsList
      parameters:
      - name: appId
        in: path
        description: Commvault teams app id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Office365TeamsReq"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/Office365/Teams/{appId}/Users:
    get:
      tags:
      - Teams
      summary: Get Office 365 Teams Users List
      description: Get Office 365 Teams Users List
      operationId: GetTeamsUsersList
      parameters:
      - name: appId
        in: path
        description: Commvault teams app id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: propertyLevel
        in: query
        description: Optional parameter. Set it to BasicProperties or AllProperties
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: pageNumber
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: pageSize
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: sort
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: desc:name
      - name: searchKey
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Office365TeamsUsersResp"
    put:
      tags:
      - Teams
      summary: Add Office 365 Teams Users List
      description: Add Office 365 Teams Users List
      operationId: AddTeamsUsersList
      parameters:
      - name: appId
        in: path
        description: Commvault teams app id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Office365TeamsUsersReq"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/Office365/Exchange/{appId}/Content/CustomCategory:
    put:
      tags:
      - Exchange
      summary: Add Office 365 Exchange Custom Category
      description: Add Office 365 Exchange Custom Category
      operationId: AddExchangeCustomCategory
      parameters:
      - name: appId
        in: path
        description: Commvault Exchange app id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Office365ExchangeCustomCategoryReq"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/Office365/OneDrive/{appId}/Content/CustomCategory:
    put:
      tags:
      - OneDrive
      summary: Add Office 365 OneDrive Custom Category
      description: Add Office 365 OneDrive Custom Category
      operationId: AddOneDriveCustomCategory
      parameters:
      - name: appId
        in: path
        description: Commvault OneDrive app id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Office365OnedriveCustomCategoryReq"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/Office365/SharePoint/{appId}/Content/CustomCategory:
    put:
      tags:
      - Sharepoint
      summary: Add Office 365 Sharepoint Custom Category
      description: Add Office 365 Sharepoint Custom Category
      operationId: AddSharepointCustomCategory
      parameters:
      - name: appId
        in: path
        description: Commvault Sharepoint app id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Office365SharepointCustomCategoryReq"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/Office365/Teams/{appId}/Content/CustomCategory:
    put:
      tags:
      - Teams
      summary: Add Office 365 Teams Custom Category
      description: Add Office 365 Teams Custom Category
      operationId: AddTeamsCustomCategory
      parameters:
      - name: appId
        in: path
        description: Commvault Teams app id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Office365TeamsCustomCategoryReq"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/Office365/Exchange/{appId}/Backup:
    post:
      tags:
      - Exchange
      summary: Perform Office 365 Exchange Backup
      description: Perform Office 365 Exchange Backup
      operationId: PerformExchangeBackup
      parameters:
      - name: appId
        in: path
        description: Commvault Exchange app id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Office365ExchangeBackupReq"
            examples:
              App Level Backup:
                value:
                  totalRunningTime: 500
                  type: ALL_MAILBOXES
              Content Selection Backup:
                value:
                  totalRunningTime: 500
                  mailboxes:
                  - GUID: 3443c243-76fd-4658-bba2-62be7cf032f2
                    name: MailBox Name
                  content:
                  - type: ALL_MAILBOXES
                    name: Exchange Content Name
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateTaskRespforBackup"
  /V4/Office365/Exchange/{appId}/Restore:
    post:
      tags:
      - Exchange
      summary: Perform Office 365 Exchange Restore
      description: Perform Office 365 Exchange Restore
      operationId: PerformExchangeRestore
      parameters:
      - name: appId
        in: path
        description: Commvault Exchange app id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Office365ExchangeRestoreReq"
            examples:
              Restore Mailboxes:
                value:
                  ifMessageExists: SKIP
                  deletedItems: false
                  matchEmailAddress: false
                  mailboxes:
                  - GUID: 3443c243-76fd-4658-bba2-62be7cf032f2
                    name: MailBox Name
                    emailAddress: MailBox Address
              Restore Groups:
                value:
                  ifMessageExists: SKIP
                  deletedItems: false
                  matchEmailAddress: false
                  groups:
                  - GUID: 3443c243-76fd-4658-bba2-62be7cf032f2
                    name: Group Name
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateTaskRespforBackup"
  /V4/Office365/OneDrive/{appId}/Backup:
    post:
      tags:
      - OneDrive
      summary: Perform Office 365 Onedrive Backup
      description: Perform Office 365 Onedrive Backup
      operationId: PerformOnedriveBackup
      parameters:
      - name: appId
        in: path
        description: Commvault Onedrive app id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Office365OnedriveBackupReq"
            examples:
              App Level Backup:
                value:
                  totalRunningTime: 500
                  type: ALL_USERS
              Content Selection Backup:
                value:
                  totalRunningTime: 500
                  users:
                  - GUID: 3443c243-76fd-4658-bba2-62be7cf032f2
                    name: Name of the Onedrive User
                  content:
                  - type: ALL_USERS
                    name: Onedrive Content Name
                    GUID: 3443c243-76fd-4658-bba2-62be7cf032f2
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateTaskRespforBackup"
  /V4/Office365/OneDrive/{appId}/Restore:
    post:
      tags:
      - OneDrive
      summary: Perform Office 365 Onedrive Restore
      description: Perform Office 365 Onedrive Restore
      operationId: PerformOnedriveRestore
      parameters:
      - name: appId
        in: path
        description: Commvault Onedrive app id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Office365OnedriveRestoreReq"
            examples:
              Restore Users:
                value:
                  ifFileExists: SKIP
                  deletedItems: false
                  matchEmailAddress: false
                  skipFilePermissions: true
                  users:
                  - GUID: 3443c243-76fd-4658-bba2-62be7cf032f2
                    name: Name of Onedrive User
              Restore Groups:
                value:
                  ifFileExists: SKIP
                  deletedItems: false
                  matchEmailAddress: false
                  skipFilePermissions: true
                  groups:
                  - GUID: 3443c243-76fd-4658-bba2-62be7cf032f2
                    name: Group Name
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateTaskRespforBackup"
  /V4/Office365/Sharepoint/{appId}/Backup:
    post:
      tags:
      - Sharepoint
      summary: Perform Office 365 Sharepoint Backup
      description: Perform Office 365 Sharepoint Backup
      operationId: PerformSharepointBackup
      parameters:
      - name: appId
        in: path
        description: Commvault Sharepoint app id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Office365SharepointBackupReq"
            examples:
              App Level Backup:
                value:
                  totalRunningTime: 500
                  type: ALL_SITES
              Content Selection Backup:
                value:
                  totalRunningTime: 500
                  sites:
                  - GUID: 3443c243-76fd-4658-bba2-62be7cf032f2
                    name: Site Name
                    type: SITE
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateTaskRespforBackup"
  /V4/Office365/Sharepoint/{appId}/Restore:
    post:
      tags:
      - Sharepoint
      summary: Perform Office 365 Sharepoint Restore
      description: Perform Office 365 Sharepoint Restore
      operationId: PerformSharepointRestore
      parameters:
      - name: appId
        in: path
        description: Commvault Sharepoint app id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Office365SharepointRestoreReq"
            examples:
              Restore Sites:
                value:
                  ifDocumentExists: SKIP
                  deletedItems: false
                  additionalRestoreOption: RESTORE_ACLS_ONLY
                  latestVersion: true
                  skipLookupMetadata: false
                  sites:
                  - GUID: 3443c243-76fd-4658-bba2-62be7cf032f2
                    name: Site Name
                    type: SITE
              Restore using Custom Category:
                value:
                  ifDocumentExists: SKIP
                  deletedItems: false
                  additionalRestoreOption: RESTORE_ACLS_ONLY
                  latestVersion: true
                  skipLookupMetadata: false
                  category:
                    GUID: 3443c243-76fd-4658-bba2-62be7cf032f2
                    conditions:
                    - ruleOperator: CONTAINS
                      ruleValue: Value to match condition
                      ruleName: SITE_DESCRIPTION
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateTaskRespforBackup"
  /V4/Office365/Teams/{appId}/Backup:
    post:
      tags:
      - Teams
      summary: Perform Office 365 Teams Backup
      description: Perform Office 365 Teams Backup
      operationId: PerformTeamsBackup
      parameters:
      - name: appId
        in: path
        description: Commvault Teams app id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Office365TeamsBackupReq"
            examples:
              App Level Backup:
                value:
                  totalRunningTime: 500
                  type: ALL_TEAMS
              Content Selection Backup:
                value:
                  totalRunningTime: 500
                  teams:
                  - GUID: 3443c243-76fd-4658-bba2-62be7cf032f2
                    name: Team Name
                  users:
                  - GUID: 3443c243-76fd-4658-bba2-62be7cf032f2
                    name: Teams User Name
                  content:
                  - type: CUSTOM_CATEGORY
                    name: Custom Category Name
                    GUID: 3443c243-76fd-4658-bba2-62be7cf032f2
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateTaskRespforBackup"
  /V4/Office365/Teams/{appId}/Restore:
    post:
      tags:
      - Teams
      summary: Perform Office 365 Teams Restore
      description: Perform Office 365 Teams Restore
      operationId: PerformTeamsRestore
      parameters:
      - name: appId
        in: path
        description: Commvault Teams app id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Office365TeamsRestoreReq"
            examples:
              Restore Teams:
                value:
                  ifFileExists: SKIP
                  deletedItems: false
                  teams:
                  - GUID: 3443c243-76fd-4658-bba2-62be7cf032f2
                    name: Team Name
              Restore Teams Users:
                value:
                  ifFileExists: SKIP
                  deletedItems: false
                  users:
                  - GUID: 3443c243-76fd-4658-bba2-62be7cf032f2
                    name: Teams User Name
                  destinationUserInfo:
                    emailAddress: Onedrive User Email Address
                    GUID: 3443c243-76fd-4658-bba2-62be7cf032f1
              Restore using Custom Category:
                value:
                  ifFileExists: SKIP
                  deletedItems: false
                  category:
                    GUID: 3443c243-76fd-4658-bba2-62be7cf032f2
                    conditions:
                    - ruleOperator: CONTAINS
                      ruleValue: Value to match condition
                      ruleName: TEAM_DISPLAY_NAME
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateTaskRespforBackup"
  /V4/Storage/HyperScale/{storagePoolId}/Extend:
    put:
      tags:
      - HyperScaleStorage
      summary: Allow Backup operation On HyperScale X StoragePool
      description: |-
        This operation is applicable only for HyperScale X Storage Pool.
        When the storage utilization is above 85%, it will be marked read only on next Tuesday.
        As long as utilization is below 90%, this API can be used to allow backup operation on the storage for an additional week.
      operationId: AllowBackupOpOnHyperScaleXStoragePool
      parameters:
      - name: storagePoolId
        in: path
        description: Id of the HyperScale X storage pool
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
  /V4/StoragePool/{StoragePoolId}/maintenance/Enable:
    put:
      tags:
      - Storage
      summary: Enable maintenance for a storage pool
      description: |-
        API is used to enable maintenance for a storage pool.
        It will put the libraries associated to storage pool in maintenance mode and if the storage pool is HyperScale, then same would be applied to the nodes associated to the storage pool.
        When a storage pool is in maintenance, it will not be used by any upcoming jobs.
      operationId: EnableMaintenanceForStoragePool
      parameters:
      - name: StoragePoolId
        in: path
        description: Id of storage pool
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: suspendRunningJobs
        in: query
        description: Suspend the jobs running to the storage pool
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
  /V4/StoragePool/{StoragePoolId}/maintenance/Disable:
    put:
      tags:
      - Storage
      summary: Disable maintenance for a storage pool
      description: |-
        API is used to disable maintenance for a storage pool.
        It will take the libraries associated to storage pool out maintenance mode and if the storage pool is HyperScale, then same would be applied to the nodes associated to the storage pool.
        Storage pool will be marked availabe for upcoming jobs.
      operationId: DisableMaintenanceForStoragePool
      parameters:
      - name: StoragePoolId
        in: path
        description: Id of storage pool
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
  /V4/StoragePool/{storagePoolId}/runningJobs:
    get:
      tags:
      - Storage
      summary: Get running jobs for a storage pool
      description: API to get jobs running to a storage pool.
      operationId: GetRunningJobsForStoragePool
      parameters:
      - name: storagePoolId
        in: path
        description: Id of storage pool
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: jobType
        in: query
        description: Type of job
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: All
          enum:
          - All
          - Admin
          - Backup
          - Restore
      - name: ignoreSuspendedJobs
        in: query
        description: To include/exlude suspended jobs in the response
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetRunningJobsIdList"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
  /V4/Client/{clientId}/Retire:
    put:
      tags:
      - Servers
      summary: Retire ClientPackages
      description: Selectively uninstall packages from given client
      operationId: RetireClientPackages
      parameters:
      - name: clientId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RetireClientRequest"
            examples:
              RetireTwoPackages:
                value:
                  retireClient: false
                  packages:
                  - id: 353
                    name: iDA for MSSQL Server
                  - id: 358
                    name: MySQL iDataAgent
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RetireClientResponse"
  /V4/Client/{clientId}/RetireInformation:
    get:
      tags:
      - HIDDEN
      summary: Get ClientInfo ForRetire
      description: API to get client information that retire operation concerns
      operationId: GetClientInfoForRetire
      parameters:
      - name: clientId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientInfoForRetire"
  /V4/StorageArrays/Client/{clientId}/Arrays:
    get:
      tags:
      - Array Management
      summary: List Storage Arrays of a Client
      description: API to get all arrays at client level
      operationId: GetClientLvlArrays
      parameters:
      - name: clientId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetArraysResp"
              examples:
                Example 1:
                  value:
                    arrays:
                    - assocFlag: true
                      vendor: string
                      name: string
                      flags: 0
                      controlHost: string
                      userName: string
                      VSVendor: NONE
                      id: 0
                      description: string
  /V4/StorageArrays/Client/{clientId}/Subclient/{subclientId}/Arrays:
    get:
      tags:
      - Array Management
      summary: List Storage Arrays of a Subclient
      description: API to get all arrays at Subclient Level
      operationId: GetSubclientLvlArrays
      parameters:
      - name: clientId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: subclientId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetArraysResp"
  /V4/StorageArrays/Copy/{copyId}/Arrays:
    get:
      tags:
      - Array Management
      summary: Get Storage Arrays for Copy
      description: API to get arrays list at copy level
      operationId: GetCopytLvlArrays
      parameters:
      - name: copyId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetArraysResp"
  /V4/AccessNode:
    post:
      tags:
      - VirtualMachines
      summary: Deploy Access Node
      description: API to deploy Access Node
      operationId: AccessNode
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AccessNodeDeployment"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateTaskRespforBackup"
        "404":
          description: Not Found
  /V4/InventoryManager/Inventory/{inventoryId}/DataSources:
    get:
      tags:
      - InventoryManager
      - HIDDEN
      summary: Get Inventory Associated DataSource List
      description: Get the list of data sources associated to the inventory
      operationId: GetInventoryAssociatedDataSourceList
      parameters:
      - name: inventoryId
        in: path
        description: Inventory Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InventoryAssociatedDatasourceList"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/Office365/Plans:
    get:
      tags:
      - Office365
      summary: Get Office365 Plans for Dashboard
      description: Returns all Office365 active plans with number of entities associated
        to the plan per workload
      operationId: GetOffice365PlanDashboard
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Office365PlanSummaryListResp"
              examples:
                success:
                  value:
                    o365Plans:
                    - plan:
                        id: 18
                        name: Office365 Standard Plan
                      planTier: STANDARD
                      contentIndexingEnabled: false
                      mailboxes: 24
                      users: 15
                      sites: 32
                      teams: 9
                      totalEntities: 80
                    totalO365Plans: 1
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
              examples:
                bad request:
                  value:
                    errorMessage: Invalid parameters
                    errorCode: 1
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
              examples:
                internal server error:
                  value:
                    errorMessage: Internal error
                    errorCode: 1
  /V4/Entity/{entityType}/{entityId}/ActivityControl/{activityType}/Action/Enable:
    put:
      tags:
      - ActivityControl
      summary: Enable Activity Control For Entity
      description: |-
        API to enable activity control for an entity
        Available activityType are
        1 - Backup,
        2 - Restore,
        16 - Archieve pruning/ data aging
        128 - All Job Activity,
        256 - Scheduler
      operationId: EnableActivityControlForEntity
      parameters:
      - name: entityType
        in: path
        description: |-
          Entity type to enable activity control like subclient, instance, server, server group.
          Available entityType are
          3 - server
          4 - Application type
          5 - instance
          7 - subclient
          28 - server group
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: entityId
        in: path
        description: "Entity Id to enable activity control like subclient, instance,\
          \ server, server group."
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: activityType
        in: path
        description: denotes the activity type being considered
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: clientId
        in: query
        description: clientId is mandatory when application entity type is passed
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
      x-hidden-description: |
        This can be used to resume or enable various operations on a client entity. For example, backup, restore, copy, aging activity.
        Eg: Resume copy activity on client xyz
  /V4/Entity/{entityType}/{entityId}/ActivityControl/{activityType}/Action/Disable:
    put:
      tags:
      - ActivityControl
      summary: Disable Activity Control For Entity
      description: |-
        API to disable activity control for an entity.
        Available activityType are
        1 - Backup,
        2 - Restore,
        16 - Archieve pruning/ data aging
        128 - All Job Activity,
        256 - Scheduler
      operationId: Disable Activity Control For Entity
      parameters:
      - name: entityType
        in: path
        description: |-
          Entity type to enable activity control like subclient, instance, server, server group.
          Available entityType are
          3 - server
          4 - Application type
          5 - instance
          7 - subclient
          28 - server group
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: entityId
        in: path
        description: "Entity Id to disable activity control like subclient, instance,\
          \ server, server group."
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: activityType
        in: path
        description: denotes the activity type being considered.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: clientId
        in: query
        description: clientId is mandatory when application entity type is passed.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: enableAfterDelayTime
        in: query
        description: epoch timestamp on which activity control should be automatically
          enabled back
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: enableAfterDelayTimeZone
        in: query
        description: timezone ID
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
      x-hidden-description: |
        This can be used to suspend or disable various operations on a client entity. For example, backup, restore, copy, aging activity.
        Eg: Suspend copy activity on client xyz
      x-dependency:
      - Get list of client to get client (entity) id for
  /V5/Kubernetes/Cluster:
    get:
      tags:
      - Kubernetes
      summary: Get all Kubernetes clusters
      description: API to get all Kubernetes clusters
      operationId: GetAllKubernetesClustersOp
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetClusterResp"
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
    post:
      tags:
      - Kubernetes
      summary: Create a new Kubernetes cluster client
      description: API to create new Kubernetes cluster client
      operationId: CreateKubernetesClusterOp
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateKubernetesClusterRequest"
            examples:
              Create new Kubernetes Cluster with ETCD Protection enabled:
                value:
                  apiServer: https://kubernetes-cluster-prod.commvault.com:443
                  name: kubernetes-prod-cluster
                  serviceAccount: cvadmin
                  serviceToken: redacted-secret-token
                  accessNodes:
                  - id: 306
                    name: bastionan01
                  etcdProtection:
                    enabled: true
                    plan:
                      id: 1
                      name: CSPlan
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateKubernetesClusterResponse"
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
      x-terraform-resource: Kubernetes_Cluster
  /V5/Kubernetes/Cluster/{clusterId}:
    get:
      tags:
      - Kubernetes
      summary: Get details of a Kubernetes Cluster client
      description: API to get details of a Kubernetes clusters with clusterId
      operationId: GetKubernetesClusterDetails
      parameters:
      - name: clusterId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
        x-terraform-id: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetClusterDetailsResp"
        "404":
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
      x-terraform-resource: Kubernetes_Cluster
    put:
      tags:
      - Kubernetes
      summary: Update properties of a Kubernetes cluster client
      description: API to update the properties of a Kubernetes cluster with clusterId
      operationId: UpdateKubernetesProperties
      parameters:
      - name: clusterId
        in: path
        description: clusterId is the ID of the Kubernetes cluster client
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
        x-terraform-id: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateKubernetesClusterRequest"
            examples:
              Update service account and token:
                value:
                  serviceAccount: cvadmin2
                  serviceToken: redacted-new-token
              Update access nodes:
                value:
                  accessNodes:
                  - name: bastion-proxy
                    id: 4
                  - name: bastion-proxy-2
                    id: 6
              Update cluster properties:
                value:
                  options:
                    jobStepWaitTime:
                      workerPodStartup: 1
                      resourceCleanup: 2
                      snapshotReady: 3
                      snapshotCleanup: 4
                    imageRegistry:
                      url: cv-registry.cv.com:5000
                      pullSecret: dockercred
                    configNamespace: cv-config-namespace
              Update ETCD Protection for the cluster:
                value:
                  etcdProtection:
                    id: 697
                    enabled: true
                    plan:
                      id: 2
                      name: TestPlan
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "404":
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
      x-terraform-resource: Kubernetes_Cluster
    delete:
      tags:
      - Kubernetes
      summary: Delete a deconfigured Kubernetes cluster client
      description: API to delete a deconfigured Kubernetes cluster with clusterId
      operationId: DeleteDeconfiguredKubernetesCluster
      parameters:
      - name: clusterId
        in: path
        description: clusterId is the ID of the Kubernetes cluster client
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
        x-terraform-id: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "404":
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V5/Kubernetes/Cluster/{clusterId}/Retire:
    delete:
      tags:
      - Kubernetes
      summary: Retire and release license of a Kubernetes clueter client
      description: API to retire a Kubernetes cluster with clusterId
      operationId: RetireKubernetesCluster
      parameters:
      - name: clusterId
        in: path
        description: clusterId is the ID of the Kubernetes cluster client
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
        x-terraform-id: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "404":
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
      x-terraform-resource: Kubernetes_Cluster
  /V5/Kubernetes/Cluster/{clusterId}/Reconfigure:
    put:
      tags:
      - Kubernetes
      summary: Reconfigure a retired Kubernetes cluster client
      description: API to reconfigure a Kubernetes cluster with clusterId
      operationId: ReconfigureKubernetesCluster
      parameters:
      - name: clusterId
        in: path
        description: clusterId is the ID of the Kubernetes cluster client
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericRespWithWarning"
        "404":
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V5/Kubernetes/Cluster/{clusterId}/Content/Namespace:
    get:
      tags:
      - Kubernetes
      summary: Browse all namespaces of a Kubernetes cluster
      description: API to get all namespaces of a Kubernetes cluster with clusterId
      operationId: BrowseKubernetesNamespaces
      parameters:
      - name: clusterId
        in: path
        description: clusterId is the ID of the Kubernetes cluster client
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KubernetesBrowseClusterResp"
        "404":
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V5/Kubernetes/Cluster/{clusterId}/Content/StorageClass:
    get:
      tags:
      - Kubernetes
      summary: Browse all storage classes of a Kubernetes cluster
      description: API to get all StorageClasses of a Kubernetes cluster with clusterId
      operationId: BrowseKubernetesStorageClass
      parameters:
      - name: clusterId
        in: path
        description: clusterId is the ID of the Kubernetes cluster client
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KubernetesBrowseClusterResp"
        "404":
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V5/Kubernetes/Cluster/{clusterId}/Content/Namespace/{nameSpace}/Applications:
    get:
      tags:
      - Kubernetes
      summary: Content browse applications in a namespace
      description: API to browse applications in a namespace
      operationId: BrowseNamespaceApplications
      parameters:
      - name: clusterId
        in: path
        description: clusterId is the ID of the Kubernetes cluster client
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: nameSpace
        in: path
        description: Name of the namespace to browse for content
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: ""
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KubernetesBrowseClusterResp"
        "404":
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V5/Kubernetes/Cluster/{clusterId}/Content/Namespace/{nameSpace}/Volumes:
    get:
      tags:
      - Kubernetes
      summary: Content browse volumes in a namespace
      description: API to browse volumes in a namespace
      operationId: BrowseNamespaceVolumes
      parameters:
      - name: clusterId
        in: path
        description: clusterId is the ID of the Kubernetes cluster client
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: nameSpace
        in: path
        description: Name of the namespace to browse for content
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: ""
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KubernetesBrowseClusterResp"
        "404":
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V5/Kubernetes/Cluster/{clusterId}/Content/Namespace/{nameSpace}/Labels:
    get:
      tags:
      - Kubernetes
      summary: Content browse labels in a namespace
      description: API to browse labels in a namespace
      operationId: BrowseNamespaceLabels
      parameters:
      - name: clusterId
        in: path
        description: clusterId is the ID of the Kubernetes cluster client
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: nameSpace
        in: path
        description: Name of the namespace to browse for content
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: ""
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KubernetesBrowseClusterResp"
        "404":
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V5/Kubernetes/ApplicationGroup:
    get:
      tags:
      - Kubernetes
      summary: Get all Kubernetes application groups
      description: API to get all Kubernetes application groups
      operationId: GetAllKubernetesAppGroups
      parameters:
      - name: clusterId
        in: query
        description: clusterId is the ID of the Kubernetes cluster client to filter
          Application Groups for
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetApplicationGroupsList"
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
    post:
      tags:
      - Kubernetes
      summary: Create a new Kubernetes application group
      description: API to create new Kubernetes application group
      operationId: CreateKubernetesApplicationGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateApplicationGroupRequest"
            examples:
              Create Application Group with application and label selector content:
                value:
                  cluster:
                    id: 7
                    name: kubernetes-prod-cluster
                  name: AppGroup01
                  content:
                    applications:
                    - GUID: non-namespaced`Namespace`pod`65a3778c-410d-4cd5-ae64-42bf801a41ae
                      type: NAMESPACE
                    - GUID: default`Deployment`nginx`51a2378b-782r-4cd1-aa64-42bf823a62a3
                      type: APPLICATION
                    labelSelectors:
                    - selectorLevel: Application
                      selectorValue: backup=yes --all-namespaces
                  filters:
                    skipStatelessApps: true
                    labelSelectors:
                    - selectorLevel: Namespace
                      selectorValue: backup=no --all-namespaces
                  plan:
                    id: 1
                    name: CSPlan
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IdName"
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
      x-terraform-resource: Kubernetes_Appgroup
  /V5/Kubernetes/ApplicationGroup/{applicationGroupId}:
    get:
      tags:
      - Kubernetes
      summary: Get details of a Kubernetes application group
      description: API to get details of a Kubernetes application group with applicationGroupId
      operationId: GetApplicationGroupDetails
      parameters:
      - name: applicationGroupId
        in: path
        description: applicationGroupId is the ID of the Kubernetes application group
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
        x-terraform-id: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetApplicationGroupDetails"
      x-terraform-resource: Kubernetes_Appgroup
    put:
      tags:
      - Kubernetes
      summary: Update properties of a Kubernetes application group
      description: API to update properties of a Kubernetes application group
      operationId: UpdateKubernetesAppGroupOp
      parameters:
      - name: applicationGroupId
        in: path
        description: applicationGroupId is the ID of the Kubernetes application group
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
        x-terraform-id: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateApplicationGroupRequest"
            examples:
              Update application group to rename and set new content and filter:
                value:
                  name: AppGroup01-renamed
                  content:
                    overwrite: true
                    applications:
                    - GUID: non-namespaced`Namespace`pod-2`65a3778c-410d-4cd5-ae64-42bf801a41ae
                      type: NAMESPACE
                    - GUID: default`Deployment`nginx-test`51a2378b-782r-4cd1-aa64-42bf823a62a3
                      type: APPLICATION
                  filters:
                    overwrite: true
                    skipStatelessApps: true
                    labelSelectors:
                    - selectorLevel: Namespace
                      selectorValue: backup=yes --all-namespaces
              Update application group to use different plan and set properties:
                value:
                  options:
                    onSnapFailureFallbackToLiveVolume: false
                    scheduleWorkerToConfigNamespace: true
                    workerResources:
                      cpuLimits: "0.6"
                      cpuRequests: "0.2"
                      memoryLimits: 13Gi
                      memoryRequests: 12Mi
                  plan:
                    id: 24
                    name: CSPlan-New
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
      x-terraform-resource: Kubernetes_Appgroup
    delete:
      tags:
      - Kubernetes
      summary: Delete a Kubernetes application group
      description: API to delete a Kubernetes application group with applicationGroupId
      operationId: DeleteKubernetesAppGroup
      parameters:
      - name: applicationGroupId
        in: path
        description: applicationGroupId is the ID of the Kubernetes application group
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
        x-terraform-id: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
      x-terraform-resource: Kubernetes_Appgroup
  /V5/Kubernetes/ApplicationGroup/{applicationGroupId}/Backup:
    post:
      tags:
      - Kubernetes
      summary: Run backup for an application group
      description: API to run backup for an application group
      operationId: RunApplicationGroupBackup
      parameters:
      - name: applicationGroupId
        in: path
        description: applicationGroupId is the ID of the Kubernetes application group
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: backupLevel
        in: query
        description: "Backup level , Default :Incremental"
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - FULL
          - INCREMENTAL
          - DIFFERENTIAL
          - SYNTHETIC_FULL
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateTaskRespforBackup"
        "404":
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V5/Kubernetes/ApplicationGroup/Preview:
    post:
      tags:
      - Kubernetes
      summary: Preview application group content for discovery of applications
      description: API to preview application content
      operationId: PreviewApplicationGroup
      parameters:
      - name: clusterId
        in: query
        description: clusterId of the Kubernetes client to do a Preview
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/KubernetesApplicationGroupPreviewReq"
            examples:
              Preview example:
                value:
                  content:
                    applications:
                    - GUID: non-namespaced`Namespace`4140-test`5e2ad874-d9d2-43d2-9a0f-2e1f1d60d172
                      type: NAMESPACE
                    labelSelectors:
                    - selectorLevel: Application
                      selectorValue: backup=yes --all-namespaces
                  filters:
                    applications:
                    - GUID: 4140-test`Pod`nginx-storage`26566faf-07ec-4e9e-a414-5eb5bc3f1f56
                      type: APPLICATION
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KubernetesApplicationGroupPreviewResp"
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V5/Kubernetes/Application:
    get:
      tags:
      - Kubernetes
      summary: Get all Kubernetes applications
      description: API to get all Kubernetes applications
      operationId: GetAllKubernetesApps
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetApplicationsList"
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V5/Kubernetes/Application/{appGUID}:
    get:
      tags:
      - Kubernetes
      summary: Get Kubernetes applications details
      description: API to get details of a Kubernetes application
      operationId: GetKubernetesAppDetails
      parameters:
      - name: appGUID
        in: path
        description: GUID of the Application to get details
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: ""
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KubernetesApplicationDetails"
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V5/Kubernetes/Application/{appGUID}/Backup:
    post:
      tags:
      - Kubernetes
      summary: Run backup for an application
      description: API to run backup for an application
      operationId: RunApplicationBackup
      parameters:
      - name: appGUID
        in: path
        description: GUID of the Application to run backup for
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: ""
      - name: backupLevel
        in: query
        description: "Backup level , Default :Incremental"
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - FULL
          - INCREMENTAL
          - DIFFERENTIAL
          - SYNTHETIC_FULL
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateTaskRespforBackup"
        "404":
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V5/Kubernetes/ApplicationGroup/{applicationGroupId}/Browse/Namespace:
    get:
      tags:
      - Kubernetes
      summary: Browse backed up Namespaces of the application group
      description: API to browse backed up namespaces for an application group
      operationId: DoNamespaceBrowse
      parameters:
      - name: applicationGroupId
        in: path
        description: ID of the application group to browse for
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: page
        in: query
        description: Page number for number of results in pagination
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
        example: 0
      - name: limit
        in: query
        description: Page limit for number of results in pagination
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
        example: 100
      - name: fromTime
        in: query
        description: Browse from a specific time (in epochs)
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
        example: 1693193428
      - name: toTime
        in: query
        description: Browse till a specific time (in epochs)
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
        example: 1693193901
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KubernetesAppGroupNamespaceBrowseResp"
              examples:
                Example response:
                  value:
                    items:
                    - name: simple-depl
                      GUID: simple-depl`Namespace`simple-depl`85f12c05-ecfb-4045-9bf5-7a70816d3e3d
                      kind: Namespace
                      applicationSize: 0
                      modificationTime: 1692588994
                      path: \simple-depl`Namespace`simple-depl`85f12c05-ecfb-4045-9bf5-7a70816d3e3d
                      backupJob:
                        jobId: 400561
                        time: 1692588994
        "404":
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V5/Kubernetes/ApplicationGroup/{applicationGroupId}/Browse/Application:
    get:
      tags:
      - Kubernetes
      summary: Browse backed up Applications of the application group
      description: API to browse backed up applications for an application group
      operationId: DoApplicationBrowse
      parameters:
      - name: applicationGroupId
        in: path
        description: ID of the application group to browse for
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: page
        in: query
        description: Page number for number of results in pagination
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
        example: 0
      - name: limit
        in: query
        description: Page limit for number of results in pagination
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
        example: 100
      - name: fromTime
        in: query
        description: Browse from a specific time (in epochs)
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
        example: 1693193428
      - name: toTime
        in: query
        description: Browse till a specific time (in epochs)
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
        example: 1693193901
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KubernetesAppGroupApplicationBrowseResp"
              examples:
                Example response:
                  value:
                    items:
                    - name: my-deployment-same-app
                      nameSpace: simple-depl
                      GUID: simple-depl`Deployment`my-deployment-same-app`26aeacdb-96f3-4e93-9118-07c1345ea133
                      kind: Deployment
                      applicationSize: 1073741824
                      modificationTime: 1692589013
                      path: \simple-depl`Deployment`my-deployment-same-app`26aeacdb-96f3-4e93-9118-07c1345ea133
                      backupJob:
                        jobId: 400562
                        time: 1692589013
        "404":
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V5/Kubernetes/ApplicationGroup/{applicationGroupId}/Restore/Application:
    post:
      tags:
      - Kubernetes
      summary: Full Application Restore - Restore backed up Applications of the application
        group
      description: API to run Full Application Restore for an application group
      operationId: DoApplicationRestore
      parameters:
      - name: applicationGroupId
        in: path
        description: ID of the application group to restore from
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/KubernetesAppGroupApplicationRestore"
            examples:
              In-Place Restore of all Applications:
                value:
                  inPlace: true
              In-Place Restore of all Applications with modifier specified:
                value:
                  inPlace: true
                  modifier: "apiVersion: v1\\r\\nkind: List\\r\\nitems:\\r\\n  - apiVersion:\
                    \ k8s.cv.io/v1\\r\\n    kind: RestoreModifier\\r\\n    metadata:\\\
                    r\\n      name: test-mod\\r\\n      namespace: cv-config\\r\\\
                    n    spec:\\r\\n      modifiers:\\r\\n        - action: Add\\\
                    r\\n          parameters: Exact\\r\\n          path: /new\\r\\\
                    n          selectorId: 9fb3a4a2-0f03-4dc0-93d4-4eabffe31b35\\\
                    r\\n          value: value\\r\\n      selectors:\\r\\n       \
                    \ - id: 9fb3a4a2-0f03-4dc0-93d4-4eabffe31b35\\r\\n          name:\
                    \ Pod\\r\\n\\r\\n"
              Out-of-place restore of specific application using different access node:
                value:
                  inPlace: false
                  destinationCluster:
                    id: 3
                    name: source-cluster
                  accessNode:
                    id: 4
                    name: bastionan01
                  applications:
                  - GUID: simple-depl`Deployment`my-deployment-same-app`26aeacdb-96f3-4e93-9118-07c1345ea133
              Cross-Cluster restore of specific application with rename and overwrite and different storage class:
                value:
                  inPlace: false
                  destinationCluster:
                    id: 5
                    name: destination-cluster
                  accessNode:
                    id: 4
                    name: bastionan01
                  applications:
                  - GUID: simple-depl`Deployment`my-deployment-same-app`26aeacdb-96f3-4e93-9118-07c1345ea133
                    name: my-deployment-renamed
                    nameSpace: simple-depl-rst
                    storageClass: azure-disk-csi
                  overwrite: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateTaskRespforBackup"
        "404":
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V5/Kubernetes/ApplicationGroup/{applicationGroupId}/Restore/Namespace:
    post:
      tags:
      - Kubernetes
      summary: Namespace Level Restore - Restore backed up Namespaces of the application
        group
      description: API to run Namespace Level Restore for an application group
      operationId: DoNamespaceRestore
      parameters:
      - name: applicationGroupId
        in: path
        description: ID of the application group to restore from
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/KubernetesAppGroupNamespaceRestore"
            examples:
              In-Place Restore of all Namespaces:
                value:
                  inPlace: true
              In-Place Restore of all Namespaces with modifier specified and not restoring Applications:
                value:
                  inPlace: true
                  restoreApplications: false
                  modifier: "apiVersion: v1\\r\\nkind: List\\r\\nitems:\\r\\n  - apiVersion:\
                    \ k8s.cv.io/v1\\r\\n    kind: RestoreModifier\\r\\n    metadata:\\\
                    r\\n      name: test-mod\\r\\n      namespace: cv-config\\r\\\
                    n    spec:\\r\\n      modifiers:\\r\\n        - action: Add\\\
                    r\\n          parameters: Exact\\r\\n          path: /new\\r\\\
                    n          selectorId: 9fb3a4a2-0f03-4dc0-93d4-4eabffe31b35\\\
                    r\\n          value: value\\r\\n      selectors:\\r\\n       \
                    \ - id: 9fb3a4a2-0f03-4dc0-93d4-4eabffe31b35\\r\\n          name:\
                    \ Pod\\r\\n\\r\\n"
              Out-of-place restore of specific namespace using different access node and restoring Applications:
                value:
                  inPlace: false
                  restoreApplications: true
                  destinationCluster:
                    id: 3
                    name: source-cluster
                  accessNode:
                    id: 4
                    name: bastionan01
                  namespaces:
                  - GUID: simple-depl`Namespace`simple-depl`85f12c05-ecfb-4045-9bf5-7a70816d3e3d
              Cross-Cluster restore of specific namespace with rename and overwrite:
                value:
                  inPlace: false
                  restoreApplications: true
                  destinationCluster:
                    id: 5
                    name: destination-cluster
                  namespaces:
                  - GUID: simple-depl`Deployment`my-deployment-same-app`26aeacdb-96f3-4e93-9118-07c1345ea133
                    name: simple-depl-rst
                  overwrite: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateTaskRespforBackup"
        "404":
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/Plan/{planId}/BackupDestination/{backupDestionationId}/BackupCopy/Run:
    post:
      tags:
      - Plan
      summary: RunBackupCopyForPlan
      description: Run Backup copy job for a backupdestination
      operationId: RunBackupCopy
      parameters:
      - name: planId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: backupDestionationId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateTaskRespforBackup"
        "409":
          description: Conflict
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/Plan/{planId}/BackupDestination/{backupDestinationId}/Associations:
    get:
      tags:
      - Plan
      summary: Get all the associated entities of backupdestination.
      description: |
        Get all the associated server/server groups and included/excluded entities of backupdestination. It will also return summary of all the entities that will be auxcopied for backupdestination.
      operationId: GetBackupDestinationClientAssociations
      parameters:
      - name: planId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: backupDestinationId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: entityType
        in: query
        description: It is to further filter and get all the child entities of given
          entityType/entityId associated with backupdestination.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: entityId
        in: query
        description: It is to further filter and get all the child entities of given
          entityType/entityId associated with backupdestination.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackupDestinationAssociationsResp"
        "404":
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
    put:
      tags:
      - Plan
      summary: Update all the included/excluded entities of backupdestination.
      description: Update all the included/excluded entities of backupdestination.
      operationId: UpdateBackupDestinationAssociations
      parameters:
      - name: planId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: backupDestinationId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateBackupDestinationAssociationsReq"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "404":
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/Plan/{planId}/BackupDestination/{backupDestinationId}/AuxCopy/Run:
    post:
      tags:
      - Plan
      summary: Run aux copy for backup destination(s) of a plan
      description: Run aux copy job for backup destination(s) of a plan.
      operationId: RunAuxCopyForPlan
      parameters:
      - name: planId
        in: path
        description: Id of the Plan
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: backupDestinationId
        in: path
        description: Id of Backup Destination.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: includeAllCopies
        in: query
        description: "Primary backupDestinationId can be passed in backupDestinationId\
          \ Path param when includeAllCopies is set to true, this will trigger the\
          \ aux copy on all supported backup destinations of a region"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateTaskRespforBackup"
  /V4/Servers/Retire:
    put:
      tags:
      - Servers
      summary: Retire Multiple Servers
      description: Retire multiple servers
      operationId: RetireServers
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RetireServersRequest"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RetireServersResponse"
        "500":
          description: Internal Server Error
  /V4/mediaAgent/{mediaAgentId}/DDB/Disks:
    get:
      tags:
      - MediaAgent
      - HIDDEN
      summary: Get MediaAgent DDBDisks
      description: Fetch the list of DDB disks hosted on the MediaAgent
      operationId: GetMediaAgentDDBDisks
      parameters:
      - name: mediaAgentId
        in: path
        description: Id of the MediaAgent
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MADDBDiskMgmtResp"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
    put:
      tags:
      - MediaAgent
      - HIDDEN
      summary: Perform DDB disk management operations on MediaAgent
      description: Perform DDB disk management operations on MediaAgent
      operationId: MediaAgentDDBDiskMgmt
      parameters:
      - name: mediaAgentId
        in: path
        description: Id of the MediaAgent
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MADDBDiskMgmtReq"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MADDBDiskMgmtResp"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/StoragePool/{storagePoolId}/MediaAgent:
    put:
      tags:
      - Storage
      - HIDDEN
      summary: Associate DDB or storage MediaAgent with the Storage Pool
      description: API to manage MediaAgents associated with the Storage Pool
      operationId: AssociateMAWithStoragePool
      parameters:
      - name: storagePoolId
        in: path
        description: Id of the Storage Pool
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: mediaAgentId
        in: query
        description: Id of the MediaAgent
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: action
        in: query
        description: Action to performed on the MediaAgent
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: int32
          enum:
          - ADD_DDB_ROLE
          - ADD_STORAGE_ROLE
          - ADD_DDB_STORAGE_ROLE
          - REMOVE_DDB_ROLE
          - REMOVE_STORAGE_ROLE
          - REMOVE_DDB_STORAGE_ROLE
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/ServerGroup/{serverGroupId}/Retire:
    put:
      tags:
      - Servers
      summary: Retire Servers of a Server group
      description: Retire servers in given server group
      operationId: RetireServerGroup
      parameters:
      - name: serverGroupId
        in: path
        description: Id of the serverGroup in which servers need to be retired
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RetireServerGroupResp"
        "404":
          description: Requested details not found
        "500":
          description: Internal Server Error
  /V4/AnomalousAudits:
    get:
      tags:
      - AnomalousConditions
      summary: gets anomalous audits
      description: Get anomalous audits in the specified time
      operationId: GetAnomalousAudits
      parameters:
      - name: fromTime
        in: query
        description: Anomalous audits from a specific time (in epochs)
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
        example: 1693193428
      - name: toTime
        in: query
        description: Anomalous audits till a specific time (in epochs)
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
        example: 1693193901
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AnomalousAuditsResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
  /V4/ServiceMesh:
    get:
      tags:
      - ServiceMesh
      - HIDDEN
      summary: Get Service Mesh details
      description: Gets the Service mesh and it's related properties configured for
        this Commcell
      operationId: GetServiceMeshDetails
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetServiceMeshDetailsResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
    post:
      tags:
      - ServiceMesh
      - HIDDEN
      summary: Create Service Mesh
      description: Create a Service mesh client representation
      operationId: CreateServiceMeshClient
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateServiceMeshReq"
      responses:
        "200":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IdName"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/ServiceMesh/{clientId}:
    put:
      tags:
      - ServiceMesh
      - HIDDEN
      summary: Update properties of Service mesh client
      description: Update properties of a Service mesh client representation
      operationId: UpdateServiceMeshClientProperties
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateServiceMeshReq"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
    delete:
      tags:
      - Service Mesh
      - HIDDEN
      summary: Delete Service Mesh Client
      description: Delete Service Mesh client representation from the commcell
      operationId: DeleteServiceMeshClient
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/Snaps/Subclients:
    get:
      tags:
      - SnapshotManagement
      summary: Get Subclients for Snap Engine
      description: Get subclients configured with a particular snap engine
      operationId: GetSubclientsForSnapEngine
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetSubclientForSnapEngine"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
            application/xml:
              schema:
                type: object
                properties: {}
  /V4/AddedGlobalSettings:
    get:
      tags:
      - AdditionalSettings
      summary: Get Added Global Settings
      description: Get list of global settings used to modify system default behaviour
      operationId: ListAddedGlobalSettings
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListAddedGlobalSettings"
              examples: {}
  /V4/LookupSettings:
    get:
      tags:
      - AdditionalSettings
      summary: Get all available settings
      description: List all available settings that can be added to entity or global
      operationId: ListAvailableSettings
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListAdditionalSettings"
  /V4/StoragePool/{storagePoolId}/Airgap:
    put:
      tags:
      - Storage
      - HIDDEN
      summary: Enable Airgap on StoragePool
      description: "This API enables Airgap on StoragePool and all its associated\
        \ MediaAgents. This action is irreversible, once enabled Airgap cannot be\
        \ disabled on the StoragePool."
      operationId: EnableAirgapOnStoragePool
      parameters:
      - name: storagePoolId
        in: path
        description: Id of the StoragePool
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/AddedEntitySettings:
    get:
      tags:
      - AdditionalSettings
      summary: List added entity settings
      description: 'Returns a list of all entity settings added '
      operationId: ListAddedEntitySettings
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListAddedEntitySettings"
  /CloudApps/TestCloudConnection:
    post:
      tags:
      - CloudApps
      summary: Verify Cloud Resource Connectivity
      description: Verifies cloud resource connectivity from a list of backup gateways
        to given hostname and port
      operationId: TestCloudConnection
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TestCloudConnectionReq"
      responses:
        "200":
          description: "An 'errorCode' of 1 denotes a successful connection, while\
            \ 0 indicates failure with details provided in 'errorMessage'"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "400":
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
                example: Request body is empty or format is invalid.
                x-content-type: text/plain
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "404":
          description: Requested details not found
        "500":
          description: Internal Server Error
      x-stoplight:
        id: pkvpr05cdb353
  /V4/CVFS/S3Bucket:
    post:
      tags:
      - CVFS
      summary: Create CVFS S3 Bucket of given properties
      description: Used to create CVFS S3 bucket and assigns READ-WRITE permission
        to the requesting user
      operationId: CreateCVFS-S3Bucket
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateCVFSS3Bucket"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateCVFSS3BucketResp"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        "500":
          description: Internal Server Eror
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
  /V4/CVFS/S3Bucket/{id}:
    get:
      tags:
      - CVFS
      summary: Fetch existing CVFS S3 Bucket details
      description: Fetches the details of the given CVFS bucket
      operationId: GetCVFS-S3Bucket
      parameters:
      - name: id
        in: path
        description: ID of the bucket
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetCVFSS3BucketResp"
        "404":
          description: Requested bucket does not exist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
    put:
      tags:
      - CVFS
      summary: Update exsiting CVFS S3 Bucket properties and User Access
      description: Used to update CVFS S3 Bucket properties and User Access
      operationId: UpdateCVFS-S3Bucket
      parameters:
      - name: id
        in: path
        description: ID of the bucket
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateCVFSS3Bucket"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        "404":
          description: Requested bucket to update does not exist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
    delete:
      tags:
      - CVFS
      summary: Delete existing CVFS S3 Bucket
      description: Used to delete an existing CVFS S3 Bucket
      operationId: DeleteCVFS-S3Bucket
      parameters:
      - name: id
        in: path
        description: ID of the bucket
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        "404":
          description: Requested bucket to update does not exist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
  /V4/CVFS/S3Bucket/{id}/Clone:
    get:
      tags:
      - CVFS
      summary: Fetch the list of clones
      description: Fetches the list of clones for the given bucket id
      operationId: GetListS3BucketClone
      parameters:
      - name: id
        in: path
        description: ID of the bucket
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListCVFSS3BucketCloneResp"
        "404":
          description: No Clones Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        "500":
          description: Internal Server Eror
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
    post:
      tags:
      - CVFS
      summary: Create the bucket clone
      description: Create the bucket clone of the given bucket id
      operationId: CreateS3BucketClone
      parameters:
      - name: id
        in: path
        description: ID of the bucket
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateCVFSS3BucketClone"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateCVFSS3BucketCloneResponse"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        "500":
          description: Internal Server Eror
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
  /V4/CVFS/S3Bucket/{id}/Clone/{cloneId}:
    get:
      tags:
      - CVFS
      summary: Fetch the CVFS S3 Clone Details
      description: Fetch the details of the clone of the given ID
      operationId: GetS3BucketCloneDetails
      parameters:
      - name: id
        in: path
        description: ID of the bucket
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: cloneId
        in: path
        description: ID of the cloned bucket
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetCVFSS3BucketCloneDetailsResp"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        "500":
          description: Internal Server Eror
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
    put:
      tags:
      - CVFS
      summary: Update the bucket clone properties
      description: Update the bucket clone properties
      operationId: UpdateS3BucketCloneExpiry
      parameters:
      - name: id
        in: path
        description: ID of the bucket
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: cloneId
        in: path
        description: ID of the cloned bucket
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateCVFSS3CloneReq"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        "500":
          description: Internal Server Eror
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
    delete:
      tags:
      - CVFS
      summary: Delete the S3 Clone
      description: Delete the clone with the given ID before the expiry time
      operationId: DeleteS3BucketClone
      parameters:
      - name: id
        in: path
        description: ID of the bucket
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: cloneId
        in: path
        description: ID of the cloned bucket
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        "500":
          description: Internal Server Eror
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
  /V4/User/S3AccessKey:
    get:
      tags:
      - CVFS
      summary: Fetch the S3AccessKey for the logged in user
      description: Get the S3 Access Key for the logged in user on email
      operationId: GetS3AccessKey
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        "500":
          description: Internal Server Eror
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
    put:
      tags:
      - CVFS
      summary: Rotate the S3AccessKey for the logged in user
      description: rotates the S3AccessKey for the logged in user
      operationId: RotateS3AccessKey
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        "500":
          description: Internal Server Eror
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
  /V4/User/{id}/S3AccessKey:
    get:
      tags:
      - CVFS
      summary: Request the S3 Access Key for the given User Id
      description: Get the S3 Access Key for the given user on their email
      operationId: GetUserS3AccessKey
      parameters:
      - name: id
        in: path
        description: ID of the user
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        "500":
          description: Internal Server Eror
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
    put:
      tags:
      - CVFS
      summary: Rotate the S3AccessKey for the given User Id
      description: Rotate the S3AccessKey for the given User Id
      operationId: RotateUserS3AccessKey
      parameters:
      - name: id
        in: path
        description: ID of the user
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        "500":
          description: Internal Server Eror
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
  /V4/CyberResilience:
    post:
      tags:
      - CyberResilience
      summary: Configure Cyber Resilience
      description: Configures Cyber Resilience in the environment
      operationId: ConfigureCyberResilience
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CyberResilienceConfigureRequest"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CyberResilienceGenericResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CyberResilienceGenericResponse"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CyberResilienceGenericResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CyberResilienceGenericResponse"
  /V4/CyberResilience/Credentials:
    get:
      tags:
      - CyberResilience
      summary: Get Cyber Resilience Credentials
      description: Retrieve the list of credentials for Cyber Resilience
      operationId: GetCyberResilienceCredentials
      parameters:
      - name: retrieveConfiguredOnly
        in: query
        description: "If set to true, retrieve only the credentials that are configured"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CyberResilienceCredentials"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CyberResilienceGenericResponse"
    put:
      tags:
      - CyberResilience
      summary: Manage Cyber Resilience Credentials
      description: Manage Credentials configured for Cyber Resilience
      operationId: ManageCyberResilienceCredentials
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CyberResilienceManageCredentials"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CyberResilienceGenericResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CyberResilienceGenericResponse"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CyberResilienceGenericResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CyberResilienceGenericResponse"
  /v4/hypervisor/{hypervisorId}/filter:
    get:
      tags:
      - Hypervisor Operations
      summary: Get hypervisor filters
      description: Get hypervisor filters
      operationId: GetHypervisorFilter
      parameters:
      - name: hypervisorId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: backupsetId
        in: query
        description: if not specified the default backupset will be fetched
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetHypervisorFilterResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
    put:
      tags:
      - Hypervisor Operations
      summary: Update hypervisor filters
      description: Update hypervisor filter details
      operationId: UpdateHypervisorFilter
      parameters:
      - name: hypervisorId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateHypervisorFilterReq"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/VaultTrackerAction/Operation:
    post:
      tags:
      - TapeStorage
      summary: Operations for VaultTracker Actions
      description: Perform VaultTracker Operations
      operationId: VaultTrackerOperation
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VaultTrackerOperationReq"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
      x-excludedfrom-saas: true
  /V4/Library/{libraryId}/Media:
    get:
      tags:
      - TapeStorage
      summary: Get Media List for a Library
      description: Get the list of media for given library.
      operationId: GetMediaListForLibrary
      parameters:
      - name: libraryId
        in: path
        description: Id of Library
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: filterMediaType
        in: query
        description: Filter media list to given FilterMediaType
        required: true
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/FilterMediaType"
      - name: isExported
        in: query
        description: List "Media In Library" only if isExported is set to false otherwise
          list "Exported Media"
        required: true
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetMediaListResp"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
      x-excludedfrom-saas: true
  /V4/Library/{libraryId}/Slot:
    get:
      tags:
      - TapeStorage
      summary: Get Slot List for a Library
      description: Get the list of slot for given library.
      operationId: GetSlotListForLibrary
      parameters:
      - name: libraryId
        in: path
        description: Id of Library
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: slotType
        in: query
        description: Filter slot list to given SlotTypes
        required: true
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/SlotTypes"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetSlotListResp"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
      x-excludedfrom-saas: true
  /V4/VaultTrackerAction:
    get:
      tags:
      - TapeStorage
      summary: Get Vault Tracker Action List
      description: Get the list of vault tracker actions.
      operationId: GetVaultTackerActionList
      parameters:
      - name: view
        in: query
        description: "Time period selection for which to fetch actions. Accepted values\
          \ [lastHour, last24Hours, lastWeek, lastMonth, last3Months, last6Months,\
          \ lastYear, custom]. When custom is selected Actions are filtered based\
          \ on values provided in other params."
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: lastHour
      - name: libraryId
        in: query
        description: Filter by libraryId
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 0
      - name: policyId
        in: query
        description: Filter by policyId
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 0
      - name: startTime
        in: query
        description: Start time of the time range.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      - name: endTime
        in: query
        description: End time of the time range.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetVaultTrackerActionListResp"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
      x-excludedfrom-saas: true
  /V4/VaultTracker/Media:
    get:
      tags:
      - TapeStorage
      summary: Get Vault Tracker Media Details either by actionId or by policyId or
        by containerId or by locationId
      description: Get the details of vault tracker media.
      operationId: GetVaultTrackerMediaDetails
      parameters:
      - name: actionId
        in: query
        description: List Media by actionId
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 0
      - name: policyId
        in: query
        description: List Media by policyId
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 0
      - name: containerId
        in: query
        description: List Media by containerId
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 0
      - name: locationId
        in: query
        description: List Media by locationId
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 0
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetVaultTrackerMediaDetailsResp"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
      x-excludedfrom-saas: true
  /V4/StoragePool/{storagePoolId}/DDB/Verify:
    put:
      tags:
      - Storage
      summary: DDB Verification operation on Storage pool
      description: API to run DDB verification jobs on SIDB Stores associated storage
        pool
      operationId: DDBVerificationOnStoragePool
      parameters:
      - name: storagePoolId
        in: path
        description: Id of the Storage Pool
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: DDBVerificationLevel
        in: query
        description: Deduplication Database and Disk Data Verification Level
        required: true
        style: form
        explode: true
        schema:
          type: string
          enum:
          - QUICK_DDB_VERIFICATION
          - DDB_AND_DATA_VERIFICATION
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ArchiveCheckOperationResp"
  /V4/StoragePool/{storagePoolId}/DDB/SpaceReclaim:
    put:
      tags:
      - Storage
      summary: DDB Space Reclamation operation on Storage pool
      description: API to run DDB Space Reclamation jobs on SIDB Stores associated
        storage pool
      operationId: DDBSpaceReclaimOnStoragePool
      parameters:
      - name: storagePoolId
        in: path
        description: Id of the Storage Pool
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: DDBVerificationLevel
        in: query
        description: Deduplication Database and Disk Data Verification Level
        required: true
        style: form
        explode: true
        schema:
          type: string
          enum:
          - DDB_DEFRAGMENTATION
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ArchiveCheckOperationResp"
  /V4/Snaps/snapEngine/{snapEngineId}/Plan/{planId}/Subclients:
    get:
      tags:
      - Snapshot Operations
      summary: Get subclients for replication
      description: Get subclients for requested snapEngineId for requested planId
        and copyId.
      operationId: GetSubclientsForReplication
      parameters:
      - name: planId
        in: path
        description: plan Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: snapEngineId
        in: path
        description: Snap Engine Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: copyId
        in: query
        description: Copy Id
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetSubclientForSnapEngine"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/Plan/{planId}/BackupDestination/{backupDestinationId}/SnapCatalog/Jobs:
    put:
      tags:
      - Plan
      summary: pick or unpick jobs for snapshot catalog
      description: Send job details to pick or unpick jobs for snapshot catalog
      operationId: PickUnpickJobsForCatalog
      parameters:
      - name: planId
        in: path
        description: plan Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: backupDestinationId
        in: path
        description: Backup Destination Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        description: Job details for unpicking jobs for snapshot catalog.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/JobsForSnapCatalog"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/CyberResilience/Credentials/Sync:
    put:
      tags:
      - CyberResilience
      summary: Sync Cyber Resilience Credentials
      description: Sync the Credentials configured for Cyber Resilience with latest
        information
      operationId: SyncCyberResilienceCredentials
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CyberResilienceGenericResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CyberResilienceGenericResponse"
  /V4/Plan/{planId}/BackupDestination/{backupDestionationId}/SnapCatalog/Run:
    post:
      tags:
      - Plan
      summary: RunSnapCatalogForPlan
      description: Run deferred snap catalog job for a backupdestination
      operationId: RunSnapCatalog
      parameters:
      - name: planId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: backupDestionationId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateTaskRespforBackup"
        "409":
          description: Conflict
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/CyberResilience/Credentials/Sync/Status:
    get:
      tags:
      - CyberResilience
      summary: Get Cyber Resilience Sync Status
      description: Retrieve the sync status for configured credentials
      operationId: GetCyberResilienceSyncStatus
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CyberResilienceSyncStatus"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CyberResilienceGenericResponse"
  /V4/CyberResilience/TCO:
    post:
      tags:
      - CyberResilience
      summary: Calculate Total Cost Of Ownership
      description: Calculate the Total Cost Of Ownership for AZURE or AWS in comparison
        to Commvault Cloud
      operationId: CalculateTotalCostOfOwnership
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TCOCalculateRequest"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TCOCalculateResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CyberResilienceGenericResponse"
  /VirtualLabs:
    get:
      tags:
      - VMProvisioning
      summary: List of Virtual Labs
      description: Get List of Virtual Labs
      operationId: getVirtualLabs
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VMLabList"
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
  /VirtualLab/VirtualMachines:
    get:
      tags:
      - VMProvisioning
      summary: List of VMs in Lab
      description: List of virtual machines created under lab
      operationId: getLabVMs
      parameters:
      - name: id
        in: query
        description: Lab Id
        required: false
        style: form
        explode: true
        schema:
          type: number
      - name: name
        in: query
        description: Lab Name
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VMList"
        "401":
          description: Unauthorized
        "404":
          description: Lab Not Found
        "500":
          description: Internal Server Error
  /VMProvisioning/VirtualMachine/{vmGUID}:
    get:
      tags:
      - VMProvisioning
      summary: VM Details By GUID
      description: Get Virtual Machine Details by GUID
      operationId: getVMDetailsByGUID
      parameters:
      - name: vmGUID
        in: path
        description: GUID of Virtual Machine
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VMDetails"
        "401":
          description: Unauthorized
        "404":
          description: VM Not Found
        "500":
          description: Internal Server Error
  /VMProvisioning/VirtualMachines/Action:
    post:
      tags:
      - VMProvisioning
      summary: Perform Virtual Machine Operations
      description: "Perform VM operations :- PowerOn, PowerOff, Delete, Reset, Edit\
        \ Owners, Edit Creators"
      operationId: postVMProvisioningVMAction
      requestBody:
        description: VMs list request body
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VMActionReq"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
  /V4/MultiCommCell:
    get:
      tags:
      - MultiCommCell
      summary: Retrieves a list of MultiCommCells names along with their associated
        id and GUID. This endpoint provides an overview of all communication cells
        within the system.
      description: Retrieve List of MultiCommCells
      operationId: GetMultiCommCellInfo
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MultiCommCellInfoResp"
        "404":
          description: Requested details not found.
  /VMProvisioning/VirtualMachine/{vmGUID}/Snapshots:
    get:
      tags:
      - VMProvisioning
      summary: Get Snapshots for Virtual Machine
      description: Get snapshots for virtual machine
      operationId: getvirtualmachinesnapshots
      parameters:
      - name: vmGUID
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VMSnapshotResp"
        "404":
          description: Virtual Machine Not Found
        "500":
          description: Internal Server Error
  /V4/Schedule/list:
    post:
      tags:
      - Schedule
      summary: Endpoint to get schedules based on filters
      description: API to get non plan schedules based on various filters
      operationId: getschedules
      requestBody:
        description: Filter options for the result set
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TaskListRequest"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TaskListResponse"
  /V4/SchedulePolicy/list:
    post:
      tags:
      - Schedule
      summary: Endpoint to get schedule policies
      description: API to fetch non plan schedule policies
      operationId: GetSchedulePolicies
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TaskListRequest"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TaskListResponse"
  /V4/CommServ/HostName:
    put:
      tags:
      - CommServ
      summary: Change CommServ hostname
      description: Send new hostname for CommServ
      operationId: ChangeCommServHostName
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChangeCommServHostNameReq"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
  /V4/Servers/Domain:
    get:
      tags:
      - Servers
      summary: Get domain for servers
      description: Get list of servers and respective domains
      operationId: GetServerDomain
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetServerDomainResp"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
    put:
      tags:
      - Servers
      summary: Change domain for servers
      description: Change domain for list of servers
      operationId: ChangeServerDomain
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChangeServerDomainReq"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResp"
components:
  schemas:
    IdName:
      type: object
      properties:
        id:
          type: integer
          format: int32
          x-terraform-set-key: true
        name:
          type: string
          nullable: true
      example:
        name: name
        id: 0
    IdNameFullName:
      title: IdNameFullName
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        fullName:
          type: string
      example:
        name: name
        fullName: fullName
        id: 0
    IdNameCompany:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        company:
          $ref: "#/components/schemas/IdName"
      example:
        name: name
        company: null
        id: 1
    IdNameGUID:
      type: object
      properties:
        id:
          type: integer
          format: int32
        GUID:
          type: string
        name:
          type: string
      example:
        GUID: GUID
        name: name
        id: 0
    IdNameProvider:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        provider:
          $ref: "#/components/schemas/IdName"
      example:
        provider: null
        name: name
        id: 5
    IdNameStatus:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        status:
          type: string
      example:
        name: name
        id: 2
        status: status
    IdNameDisplayName:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        displayName:
          type: string
          nullable: true
      example:
        displayName: displayName
        name: name
        id: 2
    IdNameDisplayNameCompany:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        displayName:
          type: string
          nullable: true
        company:
          $ref: "#/components/schemas/IdName"
      example:
        displayName: displayName
        name: name
        company:
          name: name
          id: 0
        id: 1
    IdNameType:
      type: object
      properties:
        id:
          type: integer
          format: int32
          x-terraform-set-key: true
        name:
          type: string
        type:
          type: string
          x-terraform-set-key: true
      example:
        name: name
        id: 1
        type: type
    IdNameGUIDType:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        GUID:
          type: string
        type:
          type: string
    IdNameCount:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        count:
          type: integer
          format: int32
      example:
        name: name
        count: 4
        id: 1
    IdNameValue:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        value:
          type: string
      example:
        name: name
        id: 5
        value: value
    NameGUID:
      type: object
      properties:
        GUID:
          type: string
        name:
          type: string
      example:
        GUID: GUID
        name: name
    EntityDetails:
      type: object
      properties:
        entities:
          type: array
          nullable: true
          items:
            $ref: "#/components/schemas/IdName"
      example:
        entities:
        - name: name
          id: 0
        - name: name
          id: 0
    PlanIdNameType:
      title: ""
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        subType:
          $ref: "#/components/schemas/SubTypes"
      example:
        name: name
        subType: ANY
        id: 6
    DayOfTheWeek:
      type: string
      description: Specific day of the week
      format: ""
      enum:
      - SUNDAY
      - MONDAY
      - TUESDAY
      - WEDNESDAY
      - THURSDAY
      - FRIDAY
      - SATURDAY
    DayOfWeek:
      type: string
      format: ""
      enum:
      - SUNDAY
      - MONDAY
      - TUESDAY
      - WEDNESDAY
      - THURSDAY
      - FRIDAY
      - SATURDAY
      - DAY
      - WEEKDAY
      - WEEKEND_DAYS
    ListOpType:
      type: string
      description: Operation type for the list
      format: ""
      enum:
      - ADD
      - MODIFY
      - DELETE
      - NONE
      - OVERWRITE
    ListOperationType:
      type: string
      description: List operation type
      format: ""
      enum:
      - NONE
      - OVERWRITE
      - ADD
      - DELETE
      - CLEAR
    BasicListOpType:
      type: string
      description: Basic operation types
      format: ""
      enum:
      - ADD
      - DELETE
    DayAndTime:
      type: object
      properties:
        dayOfWeek:
          type: array
          nullable: true
          items:
            $ref: "#/components/schemas/DayOfTheWeek"
        startTime:
          type: integer
          description: Time in seconds since the beginning of the day
          format: int64
          x-terraform-omitempty: false
        endTime:
          type: integer
          description: Time in seconds since the beginning of the day
          format: int64
      example:
        dayOfWeek:
        - null
        - null
        startTime: 1
        endTime: 2
    WeekOfMonth:
      type: string
      format: ""
      enum:
      - FIRST
      - SECOND
      - THIRD
      - FOURTH
      - LAST
      - EVERY
    WeekOfTheMonth:
      type: string
      description: Specific week of a month
      format: ""
      enum:
      - FIRST
      - SECOND
      - THIRD
      - FOURTH
      - LAST
    MonthOfYear:
      type: string
      format: ""
      enum:
      - JANUARY
      - FEBRUARY
      - MARCH
      - APRIL
      - MAY
      - JUNE
      - JULY
      - AUGUST
      - SEPTEMBER
      - OCTOBER
      - NOVEMBER
      - DECEMBER
    PlanPattern:
      type: object
      properties:
        minuteFrequency:
          minimum: 1
          type: integer
          description: Frequency in minutes
          format: int32
        hourlyFrequency:
          minimum: 1
          type: integer
          description: "Frequency in hours per day. Precedence is hourly, daily, weekly\
            \ and monthly, in that order."
          format: int32
        dailyFrequency:
          minimum: 1
          type: integer
          description: Frequency in days
          format: int32
        weeklyFrequency:
          minimum: 1
          type: integer
          description: Frequency in weeks. Only for incremental backup frequency.
          format: int32
        weeklyFrequencyDays:
          type: array
          description: Days of the week for weekly frequency
          items:
            $ref: "#/components/schemas/DayOfTheWeek"
        monthlyFrequency:
          minimum: 1
          type: integer
          description: Frequency in months. Only for incremental backup frequency.
          format: int32
        monthlyFrequencyWeekOfMonth:
          $ref: "#/components/schemas/WeekOfTheMonth"
        monthlyFrequencyDayOfWeek:
          $ref: "#/components/schemas/DayOfWeek"
        monthlyFrequencyDayOfMonth:
          maximum: 31
          minimum: 1
          type: integer
          description: Only available for incremental backup frequency
          format: int32
        yearlyFrequencyWeekOfMonth:
          $ref: "#/components/schemas/WeekOfTheMonth"
        yearlyFrequencyDayOfWeek:
          $ref: "#/components/schemas/DayOfWeek"
        yearlyFrequencyDayOfMonth:
          maximum: 31
          minimum: 1
          type: integer
          description: Only available for incremental backup frequency
          format: int32
        yearlyFrequencyMonthOfYear:
          $ref: "#/components/schemas/MonthOfYear"
        startTime:
          type: integer
          description: "Time in seconds from the beginning of the day when the backup\
            \ starts. This is a mandatory field for daily, weekly, monthly, yearly\
            \ frequencies"
          format: int32
      description: "If updating pattern, the value which needs to be retained also\
        \ needs to be provided along with the updated value"
    ServerBackupPlanRPO:
      type: object
      properties:
        backupFrequency:
          $ref: "#/components/schemas/PlanSchedules"
        backupWindow:
          type: array
          description: Backup window for incremental backup
          nullable: true
          items:
            $ref: "#/components/schemas/DayAndTime"
        fullBackupWindow:
          type: array
          description: Backup window for full backup
          nullable: true
          items:
            $ref: "#/components/schemas/DayAndTime"
      description: Recovery Point Objective (RPO) is the maximum amount of time that
        data can be lost during a service disruption. Your RPO determines the frequency
        of your backup jobs.
      example:
        fullBackupWindow:
        - null
        - null
        backupFrequency:
          schedules:
          - scheduleName: scheduleName
            scheduleOption:
              daysBetweenAutoConvert: 8
              logsDiskUtilizationPercent: 6
              minBackupIntervalInMins: 6
              logFilesThreshold: 3
              commitFrequencyInHours: 6
              jobRunningTimeInMins: 9
              o365ItemSelectionOption: SELECT_ALL
              useDiskCacheForLogBackups: true
            policyId: 4
            isRetentionBasedSyntheticFull: false
            isAuxCopySchedule: false
            vmOperationType: PLANNED_FAILOVER
            forDatabasesOnly: false
            additionalInfo: additionalInfo
            scheduleOperation: MODIFY
            schedulePattern:
              endDate: 1
              maxBackupIntervalInMins: 9
              timezone: null
              weekOfMonth: FIRST
              daysBetweenSyntheticFulls: 6
              exceptions:
              - onWeekOfTheMonth:
                - null
                - null
                onDates:
                - 16
                - 16
                onDayOfTheWeek:
                - null
                - null
              - onWeekOfTheMonth:
                - null
                - null
                onDates:
                - 16
                - 16
                onDayOfTheWeek:
                - null
                - null
              frequency: 1
              weeklyDays:
              - SUNDAY
              - SUNDAY
              repeatUntilTime: 0
              monthOfYear: JANUARY
              dayOfWeek: SUNDAY
              dayOfMonth: 4
              scheduleFrequencyType: MINUTES
              startTime: 6
              noOfTimes: 4
              repeatIntervalInMinutes: 1
              startDate: 7
            scheduleId: 2
            backupType: FULL
          - scheduleName: scheduleName
            scheduleOption:
              daysBetweenAutoConvert: 8
              logsDiskUtilizationPercent: 6
              minBackupIntervalInMins: 6
              logFilesThreshold: 3
              commitFrequencyInHours: 6
              jobRunningTimeInMins: 9
              o365ItemSelectionOption: SELECT_ALL
              useDiskCacheForLogBackups: true
            policyId: 4
            isRetentionBasedSyntheticFull: false
            isAuxCopySchedule: false
            vmOperationType: PLANNED_FAILOVER
            forDatabasesOnly: false
            additionalInfo: additionalInfo
            scheduleOperation: MODIFY
            schedulePattern:
              endDate: 1
              maxBackupIntervalInMins: 9
              timezone: null
              weekOfMonth: FIRST
              daysBetweenSyntheticFulls: 6
              exceptions:
              - onWeekOfTheMonth:
                - null
                - null
                onDates:
                - 16
                - 16
                onDayOfTheWeek:
                - null
                - null
              - onWeekOfTheMonth:
                - null
                - null
                onDates:
                - 16
                - 16
                onDayOfTheWeek:
                - null
                - null
              frequency: 1
              weeklyDays:
              - SUNDAY
              - SUNDAY
              repeatUntilTime: 0
              monthOfYear: JANUARY
              dayOfWeek: SUNDAY
              dayOfMonth: 4
              scheduleFrequencyType: MINUTES
              startTime: 6
              noOfTimes: 4
              repeatIntervalInMinutes: 1
              startDate: 7
            scheduleId: 2
            backupType: FULL
          operationType: ADD
        backupWindow:
        - dayOfWeek:
          - null
          - null
          startTime: 1
          endTime: 2
        - dayOfWeek:
          - null
          - null
          startTime: 1
          endTime: 2
    ServerPlanRPO:
      type: object
      properties:
        backupFrequency:
          $ref: "#/components/schemas/PlanSchedules"
        backupWindow:
          type: array
          description: Backup window for incremental backup
          nullable: true
          items:
            $ref: "#/components/schemas/DayAndTime"
        fullBackupWindow:
          type: array
          description: Backup window for full backup
          nullable: true
          items:
            $ref: "#/components/schemas/DayAndTime"
        SLA:
          $ref: "#/components/schemas/SLAOptions"
      description: Recovery Point Objective (RPO) is the maximum amount of time that
        data can be lost during a service disruption. Your RPO determines the frequency
        of your backup jobs.
      example:
        fullBackupWindow:
        - null
        - null
        SLA:
          exclusionReason: exclusionReason
          inheritedSLAPeriod: 6
          useSystemDefaultSLA: true
          enableAfterDelay: 5
          logSLAMinutes: 6
          inheritedFrom: COMMCELL
          excludeFromSLA: true
          SLAPeriod: 6
        backupFrequency:
          schedules:
          - scheduleName: scheduleName
            scheduleOption:
              daysBetweenAutoConvert: 8
              logsDiskUtilizationPercent: 6
              minBackupIntervalInMins: 6
              logFilesThreshold: 3
              commitFrequencyInHours: 6
              jobRunningTimeInMins: 9
              o365ItemSelectionOption: SELECT_ALL
              useDiskCacheForLogBackups: true
            policyId: 4
            isRetentionBasedSyntheticFull: false
            isAuxCopySchedule: false
            vmOperationType: PLANNED_FAILOVER
            forDatabasesOnly: false
            additionalInfo: additionalInfo
            scheduleOperation: MODIFY
            schedulePattern:
              endDate: 1
              maxBackupIntervalInMins: 9
              timezone: null
              weekOfMonth: FIRST
              daysBetweenSyntheticFulls: 6
              exceptions:
              - onWeekOfTheMonth:
                - null
                - null
                onDates:
                - 16
                - 16
                onDayOfTheWeek:
                - null
                - null
              - onWeekOfTheMonth:
                - null
                - null
                onDates:
                - 16
                - 16
                onDayOfTheWeek:
                - null
                - null
              frequency: 1
              weeklyDays:
              - SUNDAY
              - SUNDAY
              repeatUntilTime: 0
              monthOfYear: JANUARY
              dayOfWeek: SUNDAY
              dayOfMonth: 4
              scheduleFrequencyType: MINUTES
              startTime: 6
              noOfTimes: 4
              repeatIntervalInMinutes: 1
              startDate: 7
            scheduleId: 2
            backupType: FULL
          - scheduleName: scheduleName
            scheduleOption:
              daysBetweenAutoConvert: 8
              logsDiskUtilizationPercent: 6
              minBackupIntervalInMins: 6
              logFilesThreshold: 3
              commitFrequencyInHours: 6
              jobRunningTimeInMins: 9
              o365ItemSelectionOption: SELECT_ALL
              useDiskCacheForLogBackups: true
            policyId: 4
            isRetentionBasedSyntheticFull: false
            isAuxCopySchedule: false
            vmOperationType: PLANNED_FAILOVER
            forDatabasesOnly: false
            additionalInfo: additionalInfo
            scheduleOperation: MODIFY
            schedulePattern:
              endDate: 1
              maxBackupIntervalInMins: 9
              timezone: null
              weekOfMonth: FIRST
              daysBetweenSyntheticFulls: 6
              exceptions:
              - onWeekOfTheMonth:
                - null
                - null
                onDates:
                - 16
                - 16
                onDayOfTheWeek:
                - null
                - null
              - onWeekOfTheMonth:
                - null
                - null
                onDates:
                - 16
                - 16
                onDayOfTheWeek:
                - null
                - null
              frequency: 1
              weeklyDays:
              - SUNDAY
              - SUNDAY
              repeatUntilTime: 0
              monthOfYear: JANUARY
              dayOfWeek: SUNDAY
              dayOfMonth: 4
              scheduleFrequencyType: MINUTES
              startTime: 6
              noOfTimes: 4
              repeatIntervalInMinutes: 1
              startDate: 7
            scheduleId: 2
            backupType: FULL
          operationType: ADD
        backupWindow:
        - dayOfWeek:
          - null
          - null
          startTime: 1
          endTime: 2
        - dayOfWeek:
          - null
          - null
          startTime: 1
          endTime: 2
    ServerPlanUpdateRPO:
      type: object
      properties:
        backupFrequency:
          $ref: "#/components/schemas/PlanSchedules"
        backupWindow:
          type: array
          description: Backup window for incremental backup
          nullable: true
          items:
            $ref: "#/components/schemas/DayAndTime"
        fullBackupWindow:
          type: array
          description: Backup window for full backup
          nullable: true
          items:
            $ref: "#/components/schemas/DayAndTime"
        SLA:
          $ref: "#/components/schemas/SLAUpdateOptions"
      description: Recovery Point Objective (RPO) is the maximum amount of time that
        data can be lost during a service disruption. Your RPO determines the frequency
        of your backup jobs.
    ServerPlanUpdateSchedules:
      type: object
      properties:
        backupFrequency:
          $ref: "#/components/schemas/PlanSchedules"
      description: Modify the schedules for the backup jobs.
    PlanSchedules:
      title: PlanSchedules
      type: object
      properties:
        schedules:
          type: array
          nullable: true
          items:
            $ref: "#/components/schemas/PlanSchedule"
          x-terraform-list: true
          x-terraform-sort: handler.SortPlanSchedules
        operationType:
          $ref: "#/components/schemas/ListOpType"
      example:
        schedules:
        - scheduleName: scheduleName
          scheduleOption:
            daysBetweenAutoConvert: 8
            logsDiskUtilizationPercent: 6
            minBackupIntervalInMins: 6
            logFilesThreshold: 3
            commitFrequencyInHours: 6
            jobRunningTimeInMins: 9
            o365ItemSelectionOption: SELECT_ALL
            useDiskCacheForLogBackups: true
          policyId: 4
          isRetentionBasedSyntheticFull: false
          isAuxCopySchedule: false
          vmOperationType: PLANNED_FAILOVER
          forDatabasesOnly: false
          additionalInfo: additionalInfo
          scheduleOperation: MODIFY
          schedulePattern:
            endDate: 1
            maxBackupIntervalInMins: 9
            timezone: null
            weekOfMonth: FIRST
            daysBetweenSyntheticFulls: 6
            exceptions:
            - onWeekOfTheMonth:
              - null
              - null
              onDates:
              - 16
              - 16
              onDayOfTheWeek:
              - null
              - null
            - onWeekOfTheMonth:
              - null
              - null
              onDates:
              - 16
              - 16
              onDayOfTheWeek:
              - null
              - null
            frequency: 1
            weeklyDays:
            - SUNDAY
            - SUNDAY
            repeatUntilTime: 0
            monthOfYear: JANUARY
            dayOfWeek: SUNDAY
            dayOfMonth: 4
            scheduleFrequencyType: MINUTES
            startTime: 6
            noOfTimes: 4
            repeatIntervalInMinutes: 1
            startDate: 7
          scheduleId: 2
          backupType: FULL
        - scheduleName: scheduleName
          scheduleOption:
            daysBetweenAutoConvert: 8
            logsDiskUtilizationPercent: 6
            minBackupIntervalInMins: 6
            logFilesThreshold: 3
            commitFrequencyInHours: 6
            jobRunningTimeInMins: 9
            o365ItemSelectionOption: SELECT_ALL
            useDiskCacheForLogBackups: true
          policyId: 4
          isRetentionBasedSyntheticFull: false
          isAuxCopySchedule: false
          vmOperationType: PLANNED_FAILOVER
          forDatabasesOnly: false
          additionalInfo: additionalInfo
          scheduleOperation: MODIFY
          schedulePattern:
            endDate: 1
            maxBackupIntervalInMins: 9
            timezone: null
            weekOfMonth: FIRST
            daysBetweenSyntheticFulls: 6
            exceptions:
            - onWeekOfTheMonth:
              - null
              - null
              onDates:
              - 16
              - 16
              onDayOfTheWeek:
              - null
              - null
            - onWeekOfTheMonth:
              - null
              - null
              onDates:
              - 16
              - 16
              onDayOfTheWeek:
              - null
              - null
            frequency: 1
            weeklyDays:
            - SUNDAY
            - SUNDAY
            repeatUntilTime: 0
            monthOfYear: JANUARY
            dayOfWeek: SUNDAY
            dayOfMonth: 4
            scheduleFrequencyType: MINUTES
            startTime: 6
            noOfTimes: 4
            repeatIntervalInMinutes: 1
            startDate: 7
          scheduleId: 2
          backupType: FULL
        operationType: ADD
    PlanContentDataReaders:
      type: object
      properties:
        useOptimal:
          type: boolean
          description: "Set optimal number of data readers. if it is set to true,\
            \ count will be ignored."
        count:
          minimum: 1
          type: integer
          description: Number of data readers.
          format: int32
      example:
        count: 1
        useOptimal: true
    PlanContent:
      type: object
      properties:
        windowsIncludedPaths:
          type: array
          description: Paths to include for Windows
          nullable: true
          items:
            type: string
          x-terraform-statecopy: true
        windowsExcludedPaths:
          type: array
          description: Paths to exclude for Windows
          nullable: true
          items:
            type: string
          x-terraform-statecopy: true
        windowsFilterToExcludePaths:
          type: array
          description: Paths that are exception to excluded paths for Windows
          nullable: true
          items:
            type: string
          x-terraform-statecopy: true
        backupSystemState:
          type: boolean
          description: Do you want to back up the system state? Applicable only for
            Windows
        backupSystemStateOnlyWithFullBackup:
          type: boolean
          description: Do you want to back up system state only with full backup?
            Applicable only if the value of backupSystemState is true
          default: false
        useVSSForSystemState:
          type: boolean
          description: Do you want to back up system state with VSS? Applicable only
            if the value of backupSystemState is true
        windowsNumberOfDataReaders:
          $ref: "#/components/schemas/PlanContentDataReaders"
        macIncludedPaths:
          type: array
          description: Paths to include for Mac
          nullable: true
          items:
            type: string
          x-terraform-statecopy: true
        macExcludedPaths:
          type: array
          description: Paths to exclude for Mac
          nullable: true
          items:
            type: string
          x-terraform-statecopy: true
        macFilterToExcludePaths:
          type: array
          description: Paths that are exception to excluded paths for Mac
          nullable: true
          items:
            type: string
          x-terraform-statecopy: true
        unixNumberOfDataReaders:
          $ref: "#/components/schemas/PlanContentDataReaders"
        unixIncludedPaths:
          type: array
          description: Paths to include for UNIX
          nullable: true
          items:
            type: string
          x-terraform-statecopy: true
        unixExcludedPaths:
          type: array
          description: Paths to exclude for UNIX
          nullable: true
          items:
            type: string
          x-terraform-statecopy: true
        unixFilterToExcludePaths:
          type: array
          description: Paths that are exception to excluded paths for Unix
          nullable: true
          items:
            type: string
          x-terraform-statecopy: true
        macNumberOfDataReaders:
          $ref: "#/components/schemas/PlanContentDataReaders"
        forceUpdateProperties:
          type: boolean
          description: Do you want to sync properties on associated subclients even
            if properties are overriden at subclient level?
      description: This feature applies only to file system agents
      example:
        windowsIncludedPaths:
        - windowsIncludedPaths
        - windowsIncludedPaths
        unixIncludedPaths:
        - unixIncludedPaths
        - unixIncludedPaths
        macExcludedPaths:
        - macExcludedPaths
        - macExcludedPaths
        macFilterToExcludePaths:
        - macFilterToExcludePaths
        - macFilterToExcludePaths
        macIncludedPaths:
        - macIncludedPaths
        - macIncludedPaths
        unixExcludedPaths:
        - unixExcludedPaths
        - unixExcludedPaths
        unixNumberOfDataReaders: null
        backupSystemState: true
        backupSystemStateOnlyWithFullBackup: false
        windowsExcludedPaths:
        - windowsExcludedPaths
        - windowsExcludedPaths
        useVSSForSystemState: true
        windowsNumberOfDataReaders:
          count: 1
          useOptimal: true
        macNumberOfDataReaders: null
        windowsFilterToExcludePaths:
        - windowsFilterToExcludePaths
        - windowsFilterToExcludePaths
        unixFilterToExcludePaths:
        - unixFilterToExcludePaths
        - unixFilterToExcludePaths
        forceUpdateProperties: true
    ServerPlanDatabaseOptions:
      type: object
      properties:
        logBackupRPOMins:
          type: integer
          description: Log backup RPO in minutes
          format: int32
        useDiskCacheForLogBackups:
          type: boolean
          description: Use disk cache for log backups
        commitFrequencyInHours:
          type: integer
          description: Commit frequency in hours
          format: int32
      description: This feature applies only to database agents
    ServerPlanDatabaseOptionsInfo:
      type: object
      properties:
        logBackupRPOMins:
          type: integer
          description: Log backup RPO in minutes
          format: int32
        runFullBackupEvery:
          type: integer
          description: Full backup frequency in days
          format: int32
        useDiskCacheForLogBackups:
          type: boolean
          description: Use disk cache for log backups
        commitFrequencyInHours:
          type: integer
          description: Commit frequency in hours
          format: int32
      description: This feature applies only to database agents
      example:
        logBackupRPOMins: 7
        runFullBackupEvery: 9
        commitFrequencyInHours: 3
        useDiskCacheForLogBackups: true
    ServerPlanSettings:
      title: ""
      type: object
      properties:
        fileSearch:
          $ref: "#/components/schemas/PlanFileSearch"
        enableAdvancedView:
          type: boolean
          description: Setting to suggest plan has some advanced settings present.
            Setting is OEM specific and not applicable for all cases.
        deviceStreams:
          type: integer
          description: "For each region, the data to backup is divided into these\
            \ many streams while writing to backup destination."
          format: int32
          default: 100
        upgradedFromStoragePolicy:
          type: boolean
          description: "Setting to suggest plan was created from PolicyToPlan workflow.\
            \ If true, editing RPO is not allowed."
      example:
        enableAdvancedView: true
        deviceStreams: 7
        fileSearch:
          enabled: true
          statusMessage: statusMessage
          errors:
          - errorMessage: errorMessage
            errorCode: 6
            storage: null
          - errorMessage: errorMessage
            errorCode: 6
            storage: null
          status: NOT_APPLICABLE
        upgradedFromStoragePolicy: true
    PlanFileSearch:
      title: ""
      type: object
      properties:
        enabled:
          type: boolean
          description: Flag for enabling indexing
        status:
          $ref: "#/components/schemas/IndexingStatusType"
        statusMessage:
          type: string
          description: "Tells what is happening behind the scene, so that user can\
            \ knows why indexing is not enabled or if its in progress"
          nullable: true
        errors:
          type: array
          description: File search was enabled on plan but failed to process some
            of the storage pool(s) with these errors
          nullable: true
          items:
            $ref: "#/components/schemas/PlanFileSearchSetupError"
          x-terraform-include: false
      description: "This feature applies to file servers and virtualization. Enabling\
        \ this feature allows you to search for backed-up files using the global search\
        \ bar, and creates resource pools with required infrastructure entities."
      example:
        enabled: true
        statusMessage: statusMessage
        errors:
        - errorMessage: errorMessage
          errorCode: 6
          storage: null
        - errorMessage: errorMessage
          errorCode: 6
          storage: null
        status: NOT_APPLICABLE
    PlanFileSearchSetupError:
      title: PlanFileSearchSetupError
      type: object
      properties:
        storage:
          $ref: "#/components/schemas/IdName"
        errorCode:
          type: integer
          format: int32
        errorMessage:
          type: string
          description: Tells about the error occured during file search setup for
            given storage pool
      example:
        errorMessage: errorMessage
        errorCode: 6
        storage: null
    ServerPlanInheritSettings:
      title: ServerPlanInheritSettings
      type: object
      properties:
        basePlan:
          $ref: "#/components/schemas/IdName"
        storagePool:
          $ref: "#/components/schemas/PlanOverridenOptions"
        RPO:
          $ref: "#/components/schemas/PlanOverridenOptions"
        backupContent:
          $ref: "#/components/schemas/PlanOverridenOptions"
      example:
        RPO: null
        backupContent: null
        basePlan: null
        storagePool:
          overrideBase: null
          overridden: true
    LaptopPlanInheritSettings:
      title: LaptopPlanInheritSettings
      type: object
      properties:
        basePlan:
          $ref: "#/components/schemas/IdName"
        storagePool:
          $ref: "#/components/schemas/PlanOverridenOptions"
        RPO:
          $ref: "#/components/schemas/PlanOverridenOptions"
        backupContent:
          $ref: "#/components/schemas/PlanOverridenOptions"
        retention:
          $ref: "#/components/schemas/PlanOverridenOptions"
      example:
        RPO: null
        backupContent: null
        basePlan: null
        storagePool:
          overrideBase: null
          overridden: true
        retention: null
    PlanOverridenOptions:
      title: PlanOverridenOptions
      type: object
      properties:
        overrideBase:
          $ref: "#/components/schemas/PlanOverrideOptions"
        overridden:
          type: boolean
          description: Flag telling if this setting is currently being overriden
      example:
        overrideBase: null
        overridden: true
    PlanOverrideInheritSetting:
      title: PlanOverrideInheritSetting
      type: object
      properties:
        backupDestination:
          type: boolean
          description: "Flag to specify if parent or derived plan backupDestination\
            \ should be used when inherit mode is optional. True - derived, False\
            \ - Base."
        rpo:
          type: boolean
          description: "Flag to specify if parent or derived plan rpo should be used\
            \ when inherit mode is optional. True - derived, False - Base."
        backupContent:
          type: boolean
          description: "Flag to specify if parent or derived plan backupContent should\
            \ be used when inherit mode is optional. True - derived, False - Base."
      description: This feature applies to derived plans when inherit mode is optional.Provides
        user to set entity preference between parent and derived plan.
    PlanFullBackupType:
      type: string
      description: "All_JOBS means SYNCHRONOUS copy type, others are applicable for\
        \ SELECTIVE copy Type only."
      format: ""
      enum:
      - All_JOBS
      - ALL_FULLS
      - HOURLY_FULLS
      - DAILY_FULLS
      - WEEKLY_FULLS
      - MONTHLY_FULLS
      - QUARTERLY_FULLS
      - HALF_YEARLY_FULLS
      - YEARLY_FULLS
      - ADVANCED
    PlanRetentionRule:
      type: object
      properties:
        isInfiniteRetention:
          type: boolean
          description: "If this is set as true, no need to specify retentionPeriodDays."
        retentionPeriodDays:
          type: integer
          description: "If this is set, no need to specify isInfiniteRetention as\
            \ false."
          format: int32
        type:
          $ref: "#/components/schemas/PlanFullBackupType"
      example:
        isInfiniteRetention: true
        retentionPeriodDays: 3
        type: null
    ExtendedRetentionRules:
      title: ExtendedRetentionRules
      type: object
      properties:
        firstExtendedRetentionRule:
          $ref: "#/components/schemas/PlanRetentionRule"
        secondExtendedRetentionRule:
          $ref: "#/components/schemas/PlanRetentionRule"
        thirdExtendedRetentionRule:
          $ref: "#/components/schemas/PlanRetentionRule"
      description: "If you want to update, specify the whole object. Extended retention\
        \ rules should be bigger than retention period."
      example:
        thirdExtendedRetentionRule: null
        firstExtendedRetentionRule:
          isInfiniteRetention: true
          retentionPeriodDays: 3
          type: null
        secondExtendedRetentionRule: null
    RetentionRuleTypes:
      title: RententionRuleTypes
      type: string
      description: Which type of retention rule should be used for the given backup
        destination
      enum:
      - RETENTION_PERIOD
      - SNAP_RECOVERY_POINTS
    CreatePlanBackupDestination:
      required:
      - backupDestinationName
      type: object
      properties:
        backupDestinationName:
          type: string
          description: Backup destination details. Enter the name during creation.
          nullable: true
          x-terraform-required: false
        storagePool:
          $ref: "#/components/schemas/IdName"
        storageTemplateTags:
          type: array
          description: It is used in Global config template plan creation. Needs in
            plan creation on global commcell
          items:
            $ref: "#/components/schemas/IdNameValue"
        storageType:
          $ref: "#/components/schemas/StorageType"
        netAppCloudTarget:
          type: boolean
          description: Only for snap copy. Enabling this changes SVM Mapping  to NetApp
            cloud targets only.
        isConfiguredForReplication:
          type: boolean
          description: Used if the copy is used for replication group
        isSnapCopy:
          type: boolean
          description: "Is this a snap copy? If isMirrorCopy is not set, then default\
            \ is Vault/Replica."
        isMirrorCopy:
          type: boolean
          description: Is this a mirror copy? Only considered when isSnapCopy is true.
        region:
          $ref: "#/components/schemas/IdNameGUID"
        sourceCopy:
          $ref: "#/components/schemas/IdName"
        backupsToCopy:
          $ref: "#/components/schemas/PlanFullBackupType"
        fullBackupTypesToCopy:
          $ref: "#/components/schemas/PlanFullBackupTypeToCopy"
        backupStartTime:
          type: integer
          description: Backup start time in seconds. The time is provided in unix
            time format.
          format: int32
        optimizeForInstantClone:
          type: boolean
          description: Flag to specify if primary storage is copy data management
            enabled.
        overrideRetentionSettings:
          type: boolean
          description: Tells if this copy should use storage pool retention period
            days or the retention defined for this copy. Set as true to use retention
            defined on this copy.
        retentionRuleType:
          $ref: "#/components/schemas/RetentionRuleTypes"
        retentionPeriodDays:
          maximum: 9999
          minimum: 1
          type: integer
          description: "Retention period in days. -1 can be specified for infinite\
            \ retention. If this and snapRecoveryPoints both are not specified, this\
            \ takes  precedence."
          format: int32
          default: 30
        snapRecoveryPoints:
          minimum: 1
          type: integer
          description: Number of snap recovery points for snap copy for retention.
            Can be specified instead of retention period in Days for snap copy.
          format: int32
        useExtendedRetentionRules:
          type: boolean
          description: Use extended retention rules
        extendedRetentionRules:
          $ref: "#/components/schemas/ExtendedRetentionRules"
        mappings:
          type: array
          items:
            $ref: "#/components/schemas/SnapshotCopyMapping"
      oneOf:
      - required:
        - storagePool
      - required:
        - storageTemplateTags
    CreateBackupDestination:
      required:
      - planBackupDestination
      - storagePool
      type: object
      properties:
        name:
          type: string
          description: Name of backup destination
        storagePool:
          $ref: "#/components/schemas/IdName"
        storageType:
          $ref: "#/components/schemas/StorageType"
        netAppCloudTarget:
          type: boolean
          description: Only for snap copy. Enabling this changes SVM Mapping  to NetApp
            cloud targets only.
        isSnapCopy:
          type: boolean
          description: "Is this a snap copy? If isMirrorCopy is not set, then default\
            \ is Vault/Replica."
        isMirrorCopy:
          type: boolean
          description: Is this a mirror copy? Only considered when isSnapCopy is true.
        region:
          $ref: "#/components/schemas/IdName"
        sourceCopy:
          $ref: "#/components/schemas/IdName"
        backupsToCopy:
          $ref: "#/components/schemas/PlanFullBackupType"
        fullBackupTypesToCopy:
          $ref: "#/components/schemas/PlanFullBackupTypeToCopy"
        backupStartTime:
          type: integer
          description: Backup start time in seconds. The time is provided in unix
            time format.
          format: int32
        optimizeForInstantClone:
          type: boolean
          description: Flag to specify if primary storage is copy data management
            enabled.
        overrideRetentionSettings:
          type: boolean
          description: Tells if this copy should use storage pool retention period
            days or the retention defined for this copy. Set as true to use retention
            defined on this copy.
        retentionRuleType:
          $ref: "#/components/schemas/RetentionRuleTypes"
        retentionPeriodDays:
          maximum: 9999
          minimum: 1
          type: integer
          description: "Retention period in days. -1 can be specified for infinite\
            \ retention. If this and snapRecoveryPoints both are not specified, this\
            \ takes  precedence."
          format: int32
          default: 30
        snapRecoveryPoints:
          minimum: 1
          type: integer
          description: Number of snap recovery points for snap copy for retention.
            Can be specified instead of retention period in Days for snap copy.
          format: int32
        useExtendedRetentionRules:
          type: boolean
          description: Use extended retention rules
        extendedRetentionRules:
          $ref: "#/components/schemas/ExtendedRetentionRules"
        mappings:
          type: array
          items:
            $ref: "#/components/schemas/SnapshotCopyMapping"
    UpdateBackupDestination:
      title: ""
      type: object
      properties:
        id:
          type: integer
          description: Id of backup destination
          format: int32
          x-terraform-include: false
        name:
          type: string
          description: Name of backup destination
        region:
          $ref: "#/components/schemas/IdName"
        sourceCopy:
          $ref: "#/components/schemas/IdName"
        backupsToCopy:
          $ref: "#/components/schemas/PlanFullBackupType"
        backupStartTime:
          type: integer
          description: Specify the Backup start time in seconds. The time is provided
            in unix time format.
          format: int32
        enableDataAging:
          type: boolean
          description: Tells if this copy has data aging enabled
        overrideRetentionSettings:
          type: boolean
          description: Tells if this copy should use storage pool retention period
            days or the retention defined for this copy. Set as true to use retention
            defined on this copy.
        retentionRuleType:
          $ref: "#/components/schemas/RetentionRuleTypes"
        retentionPeriodDays:
          maximum: 9999
          minimum: 1
          type: integer
          description: Retention period in days. -1 can be specified for infinite
            retention.
          format: int32
        snapRecoveryPoints:
          minimum: 1
          type: integer
          description: Number of snap recovery points for snap copy for retention.
            Can be specified instead of retention period in Days for snap copy.
          format: int32
        useExtendedRetentionRules:
          type: boolean
          description: Use extended retention rules. Must specify if updating extended
            retention rules.
        extendedRetentionRules:
          $ref: "#/components/schemas/ExtendedRetentionRules"
        mappings:
          type: array
          items:
            $ref: "#/components/schemas/SnapshotCopyMapping"
      description: Region can be modified only when the backup destination does not
        belong to a region already
    BackupDestination:
      type: object
      properties:
        id:
          type: integer
          description: Id of backup destination
          format: int32
        name:
          type: string
          description: Name of backup destination
        netAppCloudTarget:
          type: boolean
          description: Only for snap copy. Tells if the snap copy supports SVM Mapping
            to NetApp cloud targets only.
        isDefault:
          type: boolean
          description: Is this a default backup destination?
        isSnapCopy:
          type: boolean
          description: Is this a snap copy?
        isMirrorCopy:
          type: boolean
          description: Is this a mirror copy?
        copyType:
          $ref: "#/components/schemas/PlanCopyType"
        copyTypeName:
          $ref: "#/components/schemas/PlanCopyTypeName"
        copyPrecedence:
          type: integer
          description: Order of backup destinaion copy created in storage policy
          format: int32
        storagePool:
          $ref: "#/components/schemas/StoragePool"
        storageType:
          $ref: "#/components/schemas/StorageType"
        sourceCopy:
          $ref: "#/components/schemas/IdName"
        region:
          $ref: "#/components/schemas/IdNameDisplayName"
        backupsToCopy:
          $ref: "#/components/schemas/PlanFullBackupType"
        fullBackupTypesToCopy:
          $ref: "#/components/schemas/PlanFullBackupTypeToCopy"
        backupStartTime:
          type: integer
          description: Backup start time in number of seconds. The time is provided
            in unix time format.
          format: int32
        enableDataAging:
          type: boolean
          description: Tells if this copy has data aging enabled
        overrideRetentionSettings:
          type: boolean
          description: Tells if this copy should use storage pool retention period
            days or the retention defined for this copy. Set as true to use retention
            defined on this copy.
        retentionRuleType:
          $ref: "#/components/schemas/RetentionRuleTypes"
        retentionPeriodDays:
          maximum: 9999
          minimum: 1
          type: integer
          description: Retention period in days
          format: int32
        snapRecoveryPoints:
          type: integer
          description: Number of snap recovery points for snap copy for retention
          format: int32
        useExtendedRetentionRules:
          type: boolean
          description: Should extended retention rules be used
        extendedRetentionRules:
          $ref: "#/components/schemas/ExtendedRetentionRules"
        mappings:
          type: array
          items:
            $ref: "#/components/schemas/SnapshotCopyMapping"
      description: This can be used to fetch info of a backup destination created
        seperately from plan
      example:
        isMirrorCopy: true
        copyPrecedence: 6
        retentionPeriodDays: 5961
        copyTypeName: DEFAULT_MIRROR
        backupsToCopy: All_JOBS
        extendedRetentionRules:
          thirdExtendedRetentionRule: null
          firstExtendedRetentionRule:
            isInfiniteRetention: true
            retentionPeriodDays: 3
            type: null
          secondExtendedRetentionRule: null
        retentionRuleType: RETENTION_PERIOD
        snapRecoveryPoints: 5
        sourceCopy:
          name: name
          id: 0
        fullBackupTypesToCopy: FIRST
        useExtendedRetentionRules: true
        backupStartTime: 1
        overrideRetentionSettings: true
        netAppCloudTarget: true
        isDefault: true
        mappings:
        - vendor: NETAPP
          mappingType: DEFAULT_MAPPING
          targetVendor: null
          source: null
          subclients:
          - null
          - null
          sourceVendor: null
          target: null
        - vendor: NETAPP
          mappingType: DEFAULT_MAPPING
          targetVendor: null
          source: null
          subclients:
          - null
          - null
          sourceVendor: null
          target: null
        isSnapCopy: true
        name: name
        copyType: SYNCHRONOUS
        storageType: ALL
        enableDataAging: true
        id: 0
        region:
          displayName: displayName
          name: name
          id: 2
        storagePool:
          deviceType:
            name: DEFAULT
            id: 5
          isArchiveStorage: true
          storageClass: DEFAULT
          retentionPeriodDays: 1
          wormStoragePoolFlag: 5
          name: name
          id: 6
          type: DEDUPLICATION
          region:
            displayName: displayName
            name: name
            id: 2
    CreateBackupDestinations:
      required:
      - backupDestinations
      type: object
      properties:
        backupDestinations:
          type: array
          description: List of backup destinations to create
          items:
            $ref: "#/components/schemas/CreateBackupDestination"
          x-terraform-flatten: true
    BackupCopyFullBackupType:
      title: BackupCopyFullBackupType
      type: string
      description: Backup type to copy for backup copy operation
      format: ""
      enum:
      - All_JOBS
      - ALL_FULLS
      - HOURLY_FULLS
      - DAILY_FULLS
      - WEEKLY_FULLS
      - MONTHLY_FULLS
      - QUARTERLY_FULLS
      - HALF_YEARLY_FULLS
      - YEARLY_FULLS
    BackupCopyOptions:
      type: object
      properties:
        backupTypeToCopy:
          $ref: "#/components/schemas/BackupCopyFullBackupType"
        backupFullToCopy:
          $ref: "#/components/schemas/PlanFullBackupTypeToCopy"
        startTime:
          type: integer
          description: "Snapshots to be copied from a particular time in unix time\
            \ format. By default, 0 means since the inception of the snap copy."
          format: int32
          example: 1706110498
          default: 0
        enableAlert:
          type: boolean
          description: Flag to enable backup copy fallen behind alert
        alertInHours:
          type: integer
          description: Alert to throw when backup copy falls behind in hours
          format: int32
          default: 48
        action:
          title: backupCopyFallenBehindAction
          type: string
          description: Which type of action should be followed if backup copy falls
            behind
          enum:
          - BASED_ON_RETENTION
          - SKIP_IF_PENDING
          - WAIT_FOR_COMPLETION
        skipAfterThresholdDays:
          type: integer
          description: The allowable delay in days before a backup copy job is considered
            overdue
          format: int32
          default: 14
      description: Options for snap management with backup copy
      example:
        backupFullToCopy: null
        enableAlert: true
        backupTypeToCopy: All_JOBS
        alertInHours: 1
        skipAfterThresholdDays: 1
        action: BASED_ON_RETENTION
        startTime: 1706110498
    CreatePlanSnapshotOptions:
      type: object
      properties:
        snapRecoveryPoints:
          minimum: 1
          type: integer
          description: Number of snap recovery points for default snap copy for retention.
            Can be specified instead of retention period in Days for default snap
            copy.
          format: int32
          x-terraform-include: false
        retentionPeriodDays:
          type: integer
          description: "Retention period in days. -1 can be specified for infinite\
            \ retention. If this and snapRecoveryPoints both are not specified, this\
            \ takes precedence."
          format: int32
          default: 30
          x-terraform-include: false
        enableBackupCopy:
          type: boolean
          description: Flag to enable backup copy
        backupCopyRPOMins:
          type: integer
          description: Backup copy RPO in minutes
          format: int32
          default: 240
        enableSnapCatalog:
          type: boolean
          description: Flag to enable deferred snapshot cataloging
        backupCopyOptions:
          $ref: "#/components/schemas/BackupCopyOptions"
      description: This feature applies only to File System Agents
    PlanSnapshotOptions:
      title: ""
      type: object
      properties:
        enableBackupCopy:
          type: boolean
          description: Flag to enable backup copy
        backupCopyRPOMins:
          type: integer
          description: Backup copy RPO in minutes
          format: int32
        backupCopyFrequency:
          $ref: "#/components/schemas/BackupFrequencyPattern"
        enableSnapCatalog:
          type: boolean
          description: Flag to enable deferred snapshot cataloging
        backupCopyOptions:
          $ref: "#/components/schemas/BackupCopyOptions"
        syncError:
          type: string
          description: Error message to indicate the cause of sync issue (if any)
            between CommServ DB and Command center with respect to snapshot options.
      description: This feature applies only to File System Agents
      example:
        backupCopyFrequency:
          weeklyDays:
          - SUNDAY
          - SUNDAY
          monthOfYear: JANUARY
          dayOfWeek: SUNDAY
          dayOfMonth: 23
          scheduleFrequencyType: DAILY
          weekOfMonth: FIRST
          startTime: 1
          frequency: 1
        backupCopyOptions:
          backupFullToCopy: null
          enableAlert: true
          backupTypeToCopy: All_JOBS
          alertInHours: 1
          skipAfterThresholdDays: 1
          action: BASED_ON_RETENTION
          startTime: 1706110498
        syncError: syncError
        enableBackupCopy: true
        enableSnapCatalog: true
        backupCopyRPOMins: 2
    PlanOverrideOptions:
      type: string
      format: ""
      enum:
      - OPTIONAL
      - MUST
      - NOT_ALLOWED
    PlanOverrideSettings:
      type: object
      properties:
        backupContent:
          $ref: "#/components/schemas/PlanOverrideOptions"
        storagePool:
          $ref: "#/components/schemas/PlanOverrideOptions"
        RPO:
          $ref: "#/components/schemas/PlanOverrideOptions"
      description: "To allow the derived plans that use this plan as the base plan\
        \ to override the settings, property allowPlanOverride must be true, and then\
        \ select one of the options for Storage pool, RPO and backup Content."
      example:
        RPO: null
        backupContent: OPTIONAL
        storagePool: null
    WorkloadGroup:
      title: WorkloadGroup
      type: string
      description: Type of workload Group
      enum:
      - FILE_SERVER
      - LAPTOP
      - HYPERVISOR
    PlanWorkloads:
      title: PlanWorkloads
      type: object
      properties:
        workloadTypes:
          type: array
          items:
            $ref: "#/components/schemas/IdName"
        workloadGroupTypes:
          type: array
          items:
            $ref: "#/components/schemas/WorkloadGroup"
        solutions:
          type: array
          items:
            $ref: "#/components/schemas/IdName"
      example:
        workloadTypes:
        - null
        - null
        workloadGroupTypes:
        - FILE_SERVER
        - FILE_SERVER
        solutions:
        - null
        - null
    CreateServerPlan:
      required:
      - planName
      type: object
      properties:
        planName:
          type: string
          description: Name of the new plan
          x-terraform-setter: Plan.Name
        backupDestinations:
          type: array
          description: Backup destinations for the plan. Specify where you want to
            store your backup data.
          items:
            $ref: "#/components/schemas/CreatePlanBackupDestination"
        backupDestinationIds:
          type: array
          description: Primary Backup Destination Ids (which were created before plan
            creation). This is only considered when backupDestinations array object
            is not defined.
          items:
            type: integer
            format: int32
        rpo:
          $ref: "#/components/schemas/ServerBackupPlanRPO"
        filesystemAddon:
          type: boolean
          description: flag to enable backup content association for applicable file
            system workload.
        backupContent:
          $ref: "#/components/schemas/PlanContent"
        snapshotOptions:
          $ref: "#/components/schemas/CreatePlanSnapshotOptions"
        databaseOptions:
          $ref: "#/components/schemas/ServerPlanDatabaseOptions"
        workload:
          $ref: "#/components/schemas/PlanWorkloads"
        allowPlanOverride:
          type: boolean
          description: Flag to enable overriding of plan. Plan cannot be overriden
            by default.
        overrideRestrictions:
          $ref: "#/components/schemas/PlanOverrideSettings"
        parentPlan:
          $ref: "#/components/schemas/IdName"
        additionalProperties:
          $ref: "#/components/schemas/PlanAdditionalProperties"
        settings:
          $ref: "#/components/schemas/ServerPlanSettings"
    CreateGlobalServerPlan:
      required:
      - planName
      type: object
      properties:
        plan:
          $ref: "#/components/schemas/CreateServerPlan"
        globalConfigInfo:
          $ref: "#/components/schemas/CreateGlobalConfigInfo"
    CreateCDMPlan:
      required:
      - backupDestinations
      - planName
      type: object
      properties:
        planName:
          type: string
          description: Name of the new plan
        backupDestinations:
          type: array
          description: Copy destinations for the plan. Specify where you want to store
            your data.
          items:
            $ref: "#/components/schemas/CreatePlanBackupDestination"
        rpo:
          $ref: "#/components/schemas/ServerBackupPlanRPO"
        snapshotOptions:
          $ref: "#/components/schemas/CreatePlanSnapshotOptions"
        databaseOptions:
          $ref: "#/components/schemas/ServerPlanDatabaseOptions"
    CreateObjectStorePlan:
      required:
      - backupDestinations
      - planName
      type: object
      properties:
        planName:
          type: string
          description: Name of the new plan
        backupDestinations:
          type: array
          description: Copy destinations for the plan. Specify where you want to store
            your data.
          items:
            $ref: "#/components/schemas/ObjectStorePlanBackupDestination"
        rpo:
          $ref: "#/components/schemas/ObjectStoreBackupPlanRPO"
    UpdateObjectStorePlan:
      type: object
      properties:
        name:
          type: string
          description: New plan name to update
        backupDestinations:
          type: array
          description: Copy destinations for the plan. Specify where you want to store
            your data.
          items:
            $ref: "#/components/schemas/ObjectStorePlanUpdateBkpDest"
        backupDestinationOperationType:
          $ref: "#/components/schemas/BkpDestOperation"
        rpo:
          $ref: "#/components/schemas/ObjectStorePlanUpdateRPO"
    ObjectStorePlan:
      type: object
      properties:
        plan:
          $ref: "#/components/schemas/IdName"
        backupDestinationIds:
          type: array
          description: Primary Backup Destination Ids associated to this plan.
          items:
            type: integer
            format: int32
        backupDestinations:
          type: array
          description: Backup destinations for the plan
          nullable: true
          items:
            $ref: "#/components/schemas/GetObjectStorePlanBackupDestination"
        rpo:
          $ref: "#/components/schemas/ObjectStorePlanRPO"
        permissions:
          type: array
          items:
            $ref: "#/components/schemas/IdName"
      example:
        rpo:
          fullBackupWindow:
          - dayOfWeek:
            - null
            - null
            startTime: 1
            endTime: 2
          - dayOfWeek:
            - null
            - null
            startTime: 1
            endTime: 2
          SLA:
            exclusionReason: exclusionReason
            inheritedSLAPeriod: 6
            useSystemDefaultSLA: true
            enableAfterDelay: 5
            logSLAMinutes: 6
            inheritedFrom: COMMCELL
            excludeFromSLA: true
            SLAPeriod: 6
          backupFrequency:
            schedules:
            - scheduleName: scheduleName
              scheduleOption:
                daysBetweenAutoConvert: 8
                logsDiskUtilizationPercent: 6
                minBackupIntervalInMins: 6
                logFilesThreshold: 3
                commitFrequencyInHours: 6
                jobRunningTimeInMins: 9
                o365ItemSelectionOption: SELECT_ALL
                useDiskCacheForLogBackups: true
              policyId: 4
              isRetentionBasedSyntheticFull: false
              isAuxCopySchedule: false
              vmOperationType: PLANNED_FAILOVER
              forDatabasesOnly: false
              additionalInfo: additionalInfo
              scheduleOperation: MODIFY
              schedulePattern:
                endDate: 1
                maxBackupIntervalInMins: 9
                timezone: null
                weekOfMonth: FIRST
                daysBetweenSyntheticFulls: 6
                exceptions:
                - onWeekOfTheMonth:
                  - null
                  - null
                  onDates:
                  - 16
                  - 16
                  onDayOfTheWeek:
                  - null
                  - null
                - onWeekOfTheMonth:
                  - null
                  - null
                  onDates:
                  - 16
                  - 16
                  onDayOfTheWeek:
                  - null
                  - null
                frequency: 1
                weeklyDays:
                - SUNDAY
                - SUNDAY
                repeatUntilTime: 0
                monthOfYear: JANUARY
                dayOfWeek: SUNDAY
                dayOfMonth: 4
                scheduleFrequencyType: MINUTES
                startTime: 6
                noOfTimes: 4
                repeatIntervalInMinutes: 1
                startDate: 7
              scheduleId: 2
              backupType: FULL
            - scheduleName: scheduleName
              scheduleOption:
                daysBetweenAutoConvert: 8
                logsDiskUtilizationPercent: 6
                minBackupIntervalInMins: 6
                logFilesThreshold: 3
                commitFrequencyInHours: 6
                jobRunningTimeInMins: 9
                o365ItemSelectionOption: SELECT_ALL
                useDiskCacheForLogBackups: true
              policyId: 4
              isRetentionBasedSyntheticFull: false
              isAuxCopySchedule: false
              vmOperationType: PLANNED_FAILOVER
              forDatabasesOnly: false
              additionalInfo: additionalInfo
              scheduleOperation: MODIFY
              schedulePattern:
                endDate: 1
                maxBackupIntervalInMins: 9
                timezone: null
                weekOfMonth: FIRST
                daysBetweenSyntheticFulls: 6
                exceptions:
                - onWeekOfTheMonth:
                  - null
                  - null
                  onDates:
                  - 16
                  - 16
                  onDayOfTheWeek:
                  - null
                  - null
                - onWeekOfTheMonth:
                  - null
                  - null
                  onDates:
                  - 16
                  - 16
                  onDayOfTheWeek:
                  - null
                  - null
                frequency: 1
                weeklyDays:
                - SUNDAY
                - SUNDAY
                repeatUntilTime: 0
                monthOfYear: JANUARY
                dayOfWeek: SUNDAY
                dayOfMonth: 4
                scheduleFrequencyType: MINUTES
                startTime: 6
                noOfTimes: 4
                repeatIntervalInMinutes: 1
                startDate: 7
              scheduleId: 2
              backupType: FULL
            operationType: ADD
        backupDestinations:
        - isDefault: true
          retentionPeriodDays: 7060
          copyPrecedence: 9
          planBackupDestination: null
          backupsToCopy: All_JOBS
          backupDestinationName: backupDestinationName
          isSnapCopy: true
          extendedRetentionRules:
            thirdExtendedRetentionRule: null
            firstExtendedRetentionRule:
              isInfiniteRetention: true
              retentionPeriodDays: 3
              type: null
            secondExtendedRetentionRule: null
          storageType: ALL
          enableDataAging: true
          storagePool:
            deviceType:
              name: DEFAULT
              id: 5
            isArchiveStorage: true
            storageClass: DEFAULT
            retentionPeriodDays: 1
            wormStoragePoolFlag: 5
            name: name
            id: 6
            type: DEDUPLICATION
            region:
              displayName: displayName
              name: name
              id: 2
          useExtendedRetentionRules: true
        - isDefault: true
          retentionPeriodDays: 7060
          copyPrecedence: 9
          planBackupDestination: null
          backupsToCopy: All_JOBS
          backupDestinationName: backupDestinationName
          isSnapCopy: true
          extendedRetentionRules:
            thirdExtendedRetentionRule: null
            firstExtendedRetentionRule:
              isInfiniteRetention: true
              retentionPeriodDays: 3
              type: null
            secondExtendedRetentionRule: null
          storageType: ALL
          enableDataAging: true
          storagePool:
            deviceType:
              name: DEFAULT
              id: 5
            isArchiveStorage: true
            storageClass: DEFAULT
            retentionPeriodDays: 1
            wormStoragePoolFlag: 5
            name: name
            id: 6
            type: DEDUPLICATION
            region:
              displayName: displayName
              name: name
              id: 2
          useExtendedRetentionRules: true
        permissions:
        - null
        - null
        backupDestinationIds:
        - 0
        - 0
        plan:
          name: name
          id: 0
    GenericResp:
      type: object
      properties:
        errorMessage:
          type: string
          nullable: true
        errorCode:
          type: integer
          format: int32
      example:
        errorMessage: errorMessage
        errorCode: 0
    GenericRespWithWarning:
      type: object
      properties:
        errorCode:
          type: integer
          format: int32
        errorMessage:
          type: string
          description: Tells about the error occured
        warningCode:
          type: integer
          format: int32
        warningMessage:
          type: string
          description: Tells about the warning occured
      example:
        warningCode: 6
        errorMessage: errorMessage
        errorCode: 0
        warningMessage: warningMessage
    vmgroupdeleteEntityResponse:
      type: object
      properties:
        subclientId:
          type: integer
          description: Vmgroup id of the deleted vm group
          format: int32
        subclientName:
          type: string
          description: Vmgroup name of the deleted vm group
        instanceName:
          type: string
          description: Instance name of the deleted vm group
        appName:
          type: string
          description: Agent name of the deleted vm group
        clientName:
          type: string
          description: client name of the deleted vm group
        backupsetName:
          type: string
          description: Backupset name of the deleted vm group
      example:
        subclientId: 6
        instanceName: instanceName
        clientName: clientName
        appName: appName
        backupsetName: backupsetName
        subclientName: subclientName
    vmgroupdeleteResponse:
      type: object
      properties:
        errorCode:
          type: integer
          format: int32
        entity:
          $ref: "#/components/schemas/vmgroupdeleteEntityResponse"
      example:
        errorCode: 0
        entity:
          subclientId: 6
          instanceName: instanceName
          clientName: clientName
          appName: appName
          backupsetName: backupsetName
          subclientName: subclientName
    PlanComponentError:
      type: object
      properties:
        component:
          type: string
          description: Plan Entity for which error occured
          nullable: true
        errorCode:
          type: integer
          description: Error Code for plan
          format: int32
        errorMessage:
          type: string
          description: Error message for plan
          nullable: true
      example:
        component: component
        errorMessage: errorMessage
        errorCode: 6
    PlanResp:
      type: object
      properties:
        plan:
          $ref: "#/components/schemas/IdNameGUID"
        errors:
          type: array
          nullable: true
          items:
            $ref: "#/components/schemas/PlanComponentError"
      example:
        plan:
          GUID: GUID
          name: name
          id: 0
        errors:
        - component: component
          errorMessage: errorMessage
          errorCode: 6
        - component: component
          errorMessage: errorMessage
          errorCode: 6
    LaptopPlanResp:
      title: LaptopPlanResponse CustomerManaged
      type: object
      properties:
        plan:
          $ref: "#/components/schemas/IdNameGUID"
        errors:
          type: array
          nullable: true
          items:
            $ref: "#/components/schemas/PlanComponentError"
    LaptopPlanRespSaaS:
      title: LaptopPlanResponse SaaS
      type: object
      properties:
        data:
          $ref: "#/components/schemas/PlanNameAndID"
    PlanNameAndID:
      type: object
      properties:
        planName:
          type: string
          description: Plan Name
        planId:
          type: integer
          description: Plan ID
          format: int32
    PlanBackupDestination:
      type: object
      properties:
        planBackupDestination:
          $ref: "#/components/schemas/IdName"
        netAppCloudTarget:
          type: boolean
          description: Only for snap copy. Tells if the snap copy supports SVM Mapping
            to NetApp cloud targets only.
        isImmutableSnapCopy:
          type: boolean
          description: Only for snap copy. Tells if the snap copy has immutable option
            enabled.
        isDefault:
          type: boolean
          description: Is this a default backup destination?
        isCopyInMaintenanceMode:
          type: boolean
          description: Is this copy in Maintenance mode?
        isCopyPromotionRequestSubmitted:
          type: boolean
          description: Is copy promotion request submitted for this copy?
        isConfiguredForReplication:
          type: boolean
          description: Used if the copy is used for replication group
        isSnapCopy:
          type: boolean
          description: Is this a snap copy?
        isMirrorCopy:
          type: boolean
          description: Is this a mirror copy?
        isAirgapCopy:
          type: boolean
          description: Set to true if this copy uses Airgap storage
        isSourceBackupCopy:
          type: boolean
          description: Is this the source snap copy for backup copy operations?
        copyType:
          $ref: "#/components/schemas/PlanCopyType"
        copyTypeName:
          $ref: "#/components/schemas/PlanCopyTypeName"
        copyPrecedence:
          type: integer
          description: Order of backup destinaion copy created in storage policy
          format: int32
        storagePool:
          $ref: "#/components/schemas/StoragePool"
        storageType:
          $ref: "#/components/schemas/StorageType"
        sourceCopy:
          $ref: "#/components/schemas/IdName"
        region:
          $ref: "#/components/schemas/IdNameDisplayName"
        backupsToCopy:
          $ref: "#/components/schemas/PlanFullBackupType"
        fullBackupTypesToCopy:
          $ref: "#/components/schemas/PlanFullBackupTypeToCopy"
        backupStartTime:
          type: integer
          description: Backup start time in number of seconds. The time is provided
            in unix time format.
          format: int32
        enableDataAging:
          type: boolean
          description: Tells if this copy has data aging enabled
        overrideRetentionSettings:
          type: boolean
          description: Tells if this copy should use storage pool retention period
            days or the retention defined for this copy. Set as true to use retention
            defined on this copy.
        retentionRuleType:
          $ref: "#/components/schemas/RetentionRuleTypes"
        retentionPeriodDays:
          maximum: 9999
          minimum: 1
          type: integer
          description: Retention period in days
          format: int32
        snapRecoveryPoints:
          type: integer
          description: Number of snap recovery points for snap copy for retention
          format: int32
        useExtendedRetentionRules:
          type: boolean
          description: Should extended retention rules be used
        extendedRetentionRules:
          $ref: "#/components/schemas/ExtendedRetentionRules"
        mappings:
          type: array
          items:
            $ref: "#/components/schemas/SnapshotCopyMapping"
        storageTemplateTags:
          type: array
          description: It is used in Global config template plan creation. Needs in
            plan creation on global commcell
          items:
            $ref: "#/components/schemas/IdNameValue"
      description: ""
      example:
        isMirrorCopy: true
        isImmutableSnapCopy: true
        retentionPeriodDays: 5961
        backupsToCopy: All_JOBS
        retentionRuleType: RETENTION_PERIOD
        isCopyInMaintenanceMode: true
        sourceCopy: null
        isSourceBackupCopy: true
        backupStartTime: 1
        overrideRetentionSettings: true
        netAppCloudTarget: true
        planBackupDestination: null
        copyType: SYNCHRONOUS
        storagePool:
          deviceType:
            name: DEFAULT
            id: 5
          isArchiveStorage: true
          storageClass: DEFAULT
          retentionPeriodDays: 1
          wormStoragePoolFlag: 5
          name: name
          id: 6
          type: DEDUPLICATION
          region:
            displayName: displayName
            name: name
            id: 2
        isCopyPromotionRequestSubmitted: true
        isAirgapCopy: true
        copyPrecedence: 6
        isConfiguredForReplication: true
        copyTypeName: DEFAULT_MIRROR
        extendedRetentionRules:
          thirdExtendedRetentionRule: null
          firstExtendedRetentionRule:
            isInfiniteRetention: true
            retentionPeriodDays: 3
            type: null
          secondExtendedRetentionRule: null
        snapRecoveryPoints: 5
        fullBackupTypesToCopy: FIRST
        useExtendedRetentionRules: true
        isDefault: true
        mappings:
        - vendor: NETAPP
          mappingType: DEFAULT_MAPPING
          targetVendor: null
          source: null
          subclients:
          - null
          - null
          sourceVendor: null
          target: null
        - vendor: NETAPP
          mappingType: DEFAULT_MAPPING
          targetVendor: null
          source: null
          subclients:
          - null
          - null
          sourceVendor: null
          target: null
        isSnapCopy: true
        storageType: ALL
        enableDataAging: true
        region:
          displayName: displayName
          name: name
          id: 2
        storageTemplateTags:
        - name: name
          id: 5
          value: value
        - name: name
          id: 5
          value: value
    UpdatePlanBackupDestination:
      title: ""
      type: object
      properties:
        newName:
          type: string
          description: New name for backup destination
        sourceCopy:
          $ref: "#/components/schemas/IdName"
        backupsToCopy:
          $ref: "#/components/schemas/PlanFullBackupType"
        backupStartTime:
          type: integer
          description: Specify the Backup start time in seconds. The time is provided
            in unix time format.
          format: int32
        enableDataAging:
          type: boolean
          description: Tells if this copy has data aging enabled
        overrideRetentionSettings:
          type: boolean
          description: Tells if this copy should use storage pool retention period
            days or the retention defined for this copy. Set as true to use retention
            defined on this copy.
        retentionRuleType:
          $ref: "#/components/schemas/RetentionRuleTypes"
        retentionPeriodDays:
          maximum: 9999
          minimum: 1
          type: integer
          description: Retention period in days. -1 can be specified for infinite
            retention.
          format: int32
        snapRecoveryPoints:
          minimum: 1
          type: integer
          description: Number of snap recovery points for snap copy for retention.
            Can be specified instead of retention period in Days for snap copy.
          format: int32
        useExtendedRetentionRules:
          type: boolean
          description: Use extended retention rules. Must specify if updating extended
            retention rules.
        extendedRetentionRules:
          $ref: "#/components/schemas/ExtendedRetentionRules"
        mappings:
          type: array
          items:
            $ref: "#/components/schemas/SnapshotCopyMapping"
    PlanBackupDestinationGeneralInfo:
      type: object
      properties:
        storage:
          $ref: "#/components/schemas/StoragePool"
        storageType:
          $ref: "#/components/schemas/StorageType"
        source:
          $ref: "#/components/schemas/IdName"
        netAppCloudTarget:
          type: boolean
          description: Only for snap copy. Tells if the snap copy supports SVM Mapping
            to NetApp cloud targets only.
        isImmutableSnapCopy:
          type: boolean
          description: Only for snap copy. Tells if the snap copy has immutable snap
            option enabled.
        isDefault:
          type: boolean
          description: Is this a default backup destination?
        isActive:
          type: boolean
          description: Is this an active backup destination?
        isCopyInMaintenanceMode:
          type: boolean
          description: Is this copy in Maintenance mode?
        isCopyPromotionRequestSubmitted:
          type: boolean
          description: Is copy promotion request submitted for this copy?
        complianceLock:
          type: boolean
          description: Is compliance lock enabled on backup destination?
        isSnapCopy:
          type: boolean
          description: Is this a snap copy?
        isMirrorCopy:
          type: boolean
          description: Is this a mirror copy?
        isAirgapCopy:
          type: boolean
          description: Set to true if this copy uses Airgap storage
        copyType:
          $ref: "#/components/schemas/PlanCopyType"
        snapCopyType:
          $ref: "#/components/schemas/PlanCopyTypeName"
        copyPrecedence:
          type: integer
          description: Order of backup destinaion copy created in storage policy
          format: int32
      description: ""
      example:
        isMirrorCopy: true
        isImmutableSnapCopy: true
        isAirgapCopy: true
        copyPrecedence: 0
        isCopyInMaintenanceMode: true
        storage:
          deviceType:
            name: DEFAULT
            id: 5
          isArchiveStorage: true
          storageClass: DEFAULT
          retentionPeriodDays: 1
          wormStoragePoolFlag: 5
          name: name
          id: 6
          type: DEDUPLICATION
          region:
            displayName: displayName
            name: name
            id: 2
        source: null
        isActive: true
        complianceLock: true
        snapCopyType: DEFAULT_MIRROR
        netAppCloudTarget: true
        isDefault: true
        isSnapCopy: true
        copyType: SYNCHRONOUS
        storageType: ALL
        isCopyPromotionRequestSubmitted: true
    PlanBackupDestinationGeneralInfoUpdate:
      type: object
      properties:
        source:
          $ref: "#/components/schemas/IdName"
        isActive:
          type: boolean
          description: Toggle to keep backup destination active
        complianceLock:
          type: boolean
          description: "Toggle to enable compliance lock on backup destination. One\
            \ time operation, once enabled cannot be disabled and if it is enabled\
            \ retention on backup destination cannot be lowered."
        isImmutableSnapCopy:
          type: boolean
          description: Toggle to enable immutable snap for snap copy
      description: ""
    PlanBackupDestinationSnapOptions:
      type: object
      properties:
        isSourceBackupCopy:
          type: boolean
          description: Is this the source snap copy for backup copy operations?
      description: ""
      example:
        isSourceBackupCopy: true
    PlanFullBackupTypeToCopy:
      title: PlanFullBackupTypeToCopy
      type: string
      description: Which type of backup type should be copied for the given backup
        destination when backup type is not all jobs. Default is LAST while adding
        new backup destination.
      enum:
      - FIRST
      - LAST
    PlanBackupDestinationBackupTypeInfo:
      type: object
      properties:
        backupTypesToCopy:
          $ref: "#/components/schemas/PlanFullBackupType"
        backupTypesCopiedFrom:
          type: integer
          description: "Tells what start date, backup types should be copied from.\
            \ The date is provided in unix time format in number of seconds. -1 means\
            \ initial backup date."
          format: int32
        fullBackupTypesToCopy:
          $ref: "#/components/schemas/PlanFullBackupTypeToCopy"
      description: ""
      example:
        backupTypesCopiedFrom: 6
        backupTypesToCopy: All_JOBS
        fullBackupTypesToCopy: FIRST
    PlanBackupDestinationRetentionRuleInfo:
      type: object
      properties:
        enableDataAging:
          type: boolean
          description: Tells if this copy has data aging enabled
        overrideRetentionSettings:
          type: boolean
          description: Tells if this copy should use storage pool retention period
            days or the retention defined for this copy. Set as true to use retention
            defined on this copy.
        retentionRuleType:
          $ref: "#/components/schemas/RetentionRuleTypes"
        retentionPeriodDays:
          maximum: 9999
          minimum: 1
          type: integer
          description: Retention period in days
          format: int32
        snapRecoveryPoints:
          type: integer
          description: Number of snap recovery points for snap copy for retention
          format: int32
        useExtendedRetentionRules:
          type: boolean
          description: Should extended retention rules be used
        extendedRetentionRules:
          $ref: "#/components/schemas/ExtendedRetentionRules"
        fullBackupTypesToBeRetained:
          $ref: "#/components/schemas/PlanFullBackupTypeToCopy"
      description: ""
      example:
        retentionPeriodDays: 1466
        extendedRetentionRules:
          thirdExtendedRetentionRule: null
          firstExtendedRetentionRule:
            isInfiniteRetention: true
            retentionPeriodDays: 3
            type: null
          secondExtendedRetentionRule: null
        retentionRuleType: RETENTION_PERIOD
        snapRecoveryPoints: 5
        enableDataAging: true
        useExtendedRetentionRules: true
        fullBackupTypesToBeRetained: null
        overrideRetentionSettings: true
    PlanBackupDestinationCopyPromotionInfo:
      type: object
      properties:
        immediate:
          type: boolean
          description: Tells if the copy has to be promoted immediately.
        hours:
          type: integer
          description: Tells the number of hours to wait before failing/killing jobs
            for copy promotion
          format: int32
        waitForRunningJobs:
          type: boolean
          description: Tells if copy promotion needs to wait for running jobs
        waitForSynchronize:
          type: boolean
          description: Tells if copy promotion needs to wait for synchronization of
            copies.
        forceKill:
          type: boolean
          description: Tells if we need to force kill jobs and promote copy after
            waiting.
      description: ""
    PlanSourceCopy:
      title: PlanSourceCopy
      type: object
      properties:
        isDefault:
          type: boolean
          description: Is this a default backup destination?
        isActive:
          type: boolean
          description: Is this an active backup destination?
        isSnapCopy:
          type: boolean
          description: Is this a snap copy?
        isMirrorCopy:
          type: boolean
          description: Is this a mirror copy?
        copyType:
          $ref: "#/components/schemas/PlanCopyType"
        snapCopyType:
          $ref: "#/components/schemas/PlanCopyTypeName"
        copyPrecedence:
          type: integer
          description: Order of backup destinaion copy created in storage policy
          format: int32
        backupDestination:
          $ref: "#/components/schemas/IdName"
        arrayReplicaCopy:
          type: boolean
          description: Is this an array replica copy?
        defaultReplicaCopy:
          type: boolean
          description: Is this a default replica copy?
        isImmutableSnapCopy:
          type: boolean
          description: Only for snap copy. Tells if the snap copy has immutable option
            enabled.
        isSourceBackupCopy:
          type: boolean
          description: Is this the source snap copy for backup copy operations?
      description: ""
      example:
        isMirrorCopy: true
        snapCopyType: DEFAULT_MIRROR
        isDefault: true
        isImmutableSnapCopy: true
        copyPrecedence: 0
        isSnapCopy: true
        copyType: SYNCHRONOUS
        defaultReplicaCopy: true
        isActive: true
        arrayReplicaCopy: true
        backupDestination:
          name: name
          id: 0
        isSourceBackupCopy: true
    AppValidationSourceCopy:
      title: AppValidationSourceCopy
      type: object
      properties:
        id:
          type: integer
          description: Id of the source copy
          format: int32
        name:
          type: string
          description: Name of the source copy
        isActive:
          type: boolean
          description: Is this an active backup destination?
        isSnapCopy:
          type: boolean
          description: Is this a snap copy?
        copyPrecedence:
          type: integer
          description: Order of backup destinaion copy created in storage policy
          format: int32
        backupDestination:
          $ref: "#/components/schemas/IdName"
      description: Application validation source copy details
      example:
        copyPrecedence: 6
        isSnapCopy: true
        name: name
        id: 9
        isActive: true
        backupDestination: null
    PlanSourceCopies:
      title: PlanSourceCopies
      type: object
      properties:
        copy:
          type: array
          description: List of backup destinations which can act as source copy for
            a new copy
          items:
            $ref: "#/components/schemas/PlanSourceCopy"
      example:
        copy:
        - isMirrorCopy: true
          snapCopyType: DEFAULT_MIRROR
          isDefault: true
          isImmutableSnapCopy: true
          copyPrecedence: 0
          isSnapCopy: true
          copyType: SYNCHRONOUS
          defaultReplicaCopy: true
          isActive: true
          arrayReplicaCopy: true
          backupDestination:
            name: name
            id: 0
          isSourceBackupCopy: true
        - isMirrorCopy: true
          snapCopyType: DEFAULT_MIRROR
          isDefault: true
          isImmutableSnapCopy: true
          copyPrecedence: 0
          isSnapCopy: true
          copyType: SYNCHRONOUS
          defaultReplicaCopy: true
          isActive: true
          arrayReplicaCopy: true
          backupDestination:
            name: name
            id: 0
          isSourceBackupCopy: true
    SubclientAssociationFlags:
      type: object
      properties:
        disabled:
          type: boolean
          description: "If set to true, the entity is disabled for current user."
        include:
          type: boolean
          description: "If set to true, this entity and its child entities are included\
            \ for auxcopy"
        exclude:
          type: boolean
          description: "If set to true, this entity and its child entities are excluded\
            \ for auxcopy"
      description: These flags are used to specify the type of association between
        the entity and the backupdestination.
      example:
        include: true
        disabled: true
        exclude: true
    SubclientAssociation:
      title: SubclientAssociation
      type: object
      properties:
        id:
          type: integer
          description: id of the associated entity
          format: int32
        name:
          type: string
          description: name of the associated entity
        flags:
          $ref: "#/components/schemas/SubclientAssociationFlags"
        type:
          type: string
          enum:
          - ALL_SERVERS
          - ALL_SERVER_GROUPS_ENTITY
          - SERVER_GROUP_ENTITY
          - SERVER_ENTITY
          - APPTYPE_ENTITY
          - INSTANCE_ENTITY
          - BACKUPSET_ENTITY
          - SUBCLIENT_ENTITY
        parentEntity1:
          $ref: "#/components/schemas/SubclientAssocParentEntity"
        parentEntity2:
          $ref: "#/components/schemas/SubclientAssocParentEntity"
        parentEntity3:
          $ref: "#/components/schemas/SubclientAssocParentEntity"
        parentEntity4:
          $ref: "#/components/schemas/SubclientAssocParentEntity"
        parentEntity5:
          $ref: "#/components/schemas/SubclientAssocParentEntity"
      description: |
        Parent entities must be specified for applications and lower entities. Hierarchy begins at the server or server group level(parentEntity1) and extends till backupset level when defining parent relationships for the associated entity.
        Example of parent hierarchy structure for subclient entity:
          1. Server group - Server - Application - Instance - Backupset
          2. Server - Application - Instance - Backupset
      example:
        parentEntity5: null
        name: name
        flags:
          include: true
          disabled: true
          exclude: true
        id: 0
        type: ALL_SERVERS
        parentEntity3: null
        parentEntity4: null
        parentEntity1:
          name: name
          id: 6
          type: SERVER_GROUP_ENTITY
        parentEntity2: null
    SubclientAssocParentEntity:
      type: object
      properties:
        id:
          type: integer
          description: id of the associated entity
          format: int32
        name:
          type: string
          description: name of the associated entity
        type:
          type: string
          enum:
          - SERVER_GROUP_ENTITY
          - SERVER_ENTITY
          - APPTYPE_ENTITY
          - INSTANCE_ENTITY
          - BACKUPSET_ENTITY
      description: parentEntity1 can start from SERVER_ENTITY or SERVER_GROUP_ENTITY
        and subsequentily ending up at parentEntity4 or parentEntity5 with Backupset.
      example:
        name: name
        id: 6
        type: SERVER_GROUP_ENTITY
    BackupDestinationAssociationsResp:
      type: object
      properties:
        associations:
          type: array
          description: "List all the entities of backupdestination.It includes all\
            \ the server/server groups which can be picked for auxcopy, as well as\
            \ all the included and excluded entities."
          items:
            $ref: "#/components/schemas/SubclientAssociation"
        auxCopyAssociations:
          type: array
          description: Summary of all the entities of backupdestination that will
            be auxcopied.
          items:
            $ref: "#/components/schemas/SubclientAssociation"
      example:
        associations:
        - parentEntity5: null
          name: name
          flags:
            include: true
            disabled: true
            exclude: true
          id: 0
          type: ALL_SERVERS
          parentEntity3: null
          parentEntity4: null
          parentEntity1:
            name: name
            id: 6
            type: SERVER_GROUP_ENTITY
          parentEntity2: null
        - parentEntity5: null
          name: name
          flags:
            include: true
            disabled: true
            exclude: true
          id: 0
          type: ALL_SERVERS
          parentEntity3: null
          parentEntity4: null
          parentEntity1:
            name: name
            id: 6
            type: SERVER_GROUP_ENTITY
          parentEntity2: null
        auxCopyAssociations:
        - null
        - null
    UpdateBackupDestinationAssociationsReq:
      type: object
      properties:
        updateApplicableForFutureJobs:
          type: boolean
          description: "If set to true, then only future jobs will honour this update."
        associations:
          type: array
          description: List of selected/excluded entities to be associated with backup
            destination.
          items:
            $ref: "#/components/schemas/SubclientAssociation"
    PlanBackupDestinationDetails:
      type: object
      properties:
        plan:
          $ref: "#/components/schemas/IdName"
        planBackupDestination:
          $ref: "#/components/schemas/IdName"
        configurable:
          type: boolean
          description: Flag to specify whether backup destination is configurable
            (True when it belongs to a base plan or a derived plan with overriden
            storage pool)
        region:
          $ref: "#/components/schemas/IdNameDisplayName"
        general:
          $ref: "#/components/schemas/PlanBackupDestinationGeneralInfo"
        backupType:
          $ref: "#/components/schemas/PlanBackupDestinationBackupTypeInfo"
        retentionRules:
          $ref: "#/components/schemas/PlanBackupDestinationRetentionRuleInfo"
        mappings:
          type: array
          items:
            $ref: "#/components/schemas/SnapshotCopyMapping"
        globalConfigInfo:
          $ref: "#/components/schemas/GlobalConfigInfo"
        snapOptions:
          $ref: "#/components/schemas/PlanBackupDestinationSnapOptions"
      description: ""
      example:
        general:
          isMirrorCopy: true
          isImmutableSnapCopy: true
          isAirgapCopy: true
          copyPrecedence: 0
          isCopyInMaintenanceMode: true
          storage:
            deviceType:
              name: DEFAULT
              id: 5
            isArchiveStorage: true
            storageClass: DEFAULT
            retentionPeriodDays: 1
            wormStoragePoolFlag: 5
            name: name
            id: 6
            type: DEDUPLICATION
            region:
              displayName: displayName
              name: name
              id: 2
          source: null
          isActive: true
          complianceLock: true
          snapCopyType: DEFAULT_MIRROR
          netAppCloudTarget: true
          isDefault: true
          isSnapCopy: true
          copyType: SYNCHRONOUS
          storageType: ALL
          isCopyPromotionRequestSubmitted: true
        mappings:
        - vendor: NETAPP
          mappingType: DEFAULT_MAPPING
          targetVendor: null
          source: null
          subclients:
          - null
          - null
          sourceVendor: null
          target: null
        - vendor: NETAPP
          mappingType: DEFAULT_MAPPING
          targetVendor: null
          source: null
          subclients:
          - null
          - null
          sourceVendor: null
          target: null
        planBackupDestination: null
        retentionRules:
          retentionPeriodDays: 1466
          extendedRetentionRules:
            thirdExtendedRetentionRule: null
            firstExtendedRetentionRule:
              isInfiniteRetention: true
              retentionPeriodDays: 3
              type: null
            secondExtendedRetentionRule: null
          retentionRuleType: RETENTION_PERIOD
          snapRecoveryPoints: 5
          enableDataAging: true
          useExtendedRetentionRules: true
          fullBackupTypesToBeRetained: null
          overrideRetentionSettings: true
        globalConfigInfo:
          scopeFilterQuery: scopeFilterQuery
          applyOnAllCommCells: true
          commcells:
          - name: name
            guid: guid
            id: 5
          - name: name
            guid: guid
            id: 5
          scope: scope
          isMarkedForDeletion: true
          name: name
          id: id
          status: status
        region:
          displayName: displayName
          name: name
          id: 2
        plan:
          name: name
          id: 0
        configurable: true
        backupType:
          backupTypesCopiedFrom: 6
          backupTypesToCopy: All_JOBS
          fullBackupTypesToCopy: FIRST
        snapOptions:
          isSourceBackupCopy: true
    UpdatePlanBackupDestinationDetails:
      title: ""
      type: object
      properties:
        newName:
          type: string
          description: New name for backup destination
        general:
          $ref: "#/components/schemas/PlanBackupDestinationGeneralInfoUpdate"
        backupType:
          $ref: "#/components/schemas/PlanBackupDestinationBackupTypeInfo"
        retentionRules:
          $ref: "#/components/schemas/PlanBackupDestinationRetentionRuleInfo"
        copyPromotionOptions:
          $ref: "#/components/schemas/PlanBackupDestinationCopyPromotionInfo"
        mappings:
          type: array
          items:
            $ref: "#/components/schemas/SnapshotCopyMapping"
        snapOptions:
          $ref: "#/components/schemas/PlanBackupDestinationSnapOptions"
    UpdateServerPlan:
      type: object
      properties:
        newName:
          type: string
          description: New plan name to update
          nullable: true
          x-terraform-mapping: planName
        backupContent:
          $ref: "#/components/schemas/PlanContent"
        filesystemAddon:
          type: boolean
          description: flag to enable backup content association for applicable file
            system workload.
        rpo:
          $ref: "#/components/schemas/ServerPlanUpdateRPO"
        databaseOptions:
          $ref: "#/components/schemas/ServerPlanDatabaseOptionsInfo"
        regionToConfigure:
          $ref: "#/components/schemas/IdName"
        backupDestinationIds:
          type: array
          description: Primary Backup Destination Ids (which were created before plan
            creation).
          items:
            type: integer
            format: int32
        snapshotOptions:
          $ref: "#/components/schemas/PlanSnapshotOptions"
        workload:
          $ref: "#/components/schemas/PlanWorkloads"
        allowPlanOverride:
          type: boolean
          description: "Flag to enable overriding of plan. Once enabled, cannot be\
            \ disabled."
        overrideRestrictions:
          $ref: "#/components/schemas/PlanOverrideSettings"
        overrideInheritSettings:
          $ref: "#/components/schemas/PlanOverrideInheritSetting"
        settings:
          $ref: "#/components/schemas/ServerPlanSettings"
    PlanSchedule:
      title: PlanSchedule
      required:
      - backupType
      - schedulePattern
      type: object
      properties:
        scheduleId:
          type: integer
          description: "Id of the schedule if available, required for modifying, deleting\
            \ schedule"
          format: int32
          x-terraform-include: false
        scheduleName:
          type: string
          description: "Name of the schedule, for modify"
          x-terraform-required: true
        policyId:
          type: integer
          description: Schedule policy Id to which the schedule belongs
          format: int32
          x-terraform-include: false
        scheduleOperation:
          type: string
          description: Operation being performed on schedule
          default: MODIFY
          enum:
          - ADD
          - DELETE
          - MODIFY
          x-terraform-include: false
        vmOperationType:
          type: string
          description: Type of DR operation (only applicable for Failover groups)
          nullable: true
          enum:
          - PLANNED_FAILOVER
          - TEST_BOOT
        backupType:
          type: string
          description: Schedule Backup level
          enum:
          - FULL
          - INCREMENTAL
          - DIFFERENTIAL
          - SYNTHETICFULL
          - TRANSACTIONLOG
        forDatabasesOnly:
          type: boolean
          description: Boolean to indicate if schedule is for database agents
          default: false
        isRetentionBasedSyntheticFull:
          type: boolean
          description: Boolean to indicate if synthetic full schedule is based on
            retention rules
          default: false
        isAuxCopySchedule:
          type: boolean
          description: Boolean to indicate if schedule is aux copy schedule.
          default: false
        schedulePattern:
          $ref: "#/components/schemas/SchedulePattern"
        scheduleOption:
          $ref: "#/components/schemas/ScheduleOption"
        additionalInfo:
          type: string
          nullable: true
      description: Used to describe single plan schedule information
      example:
        scheduleName: scheduleName
        scheduleOption:
          daysBetweenAutoConvert: 8
          logsDiskUtilizationPercent: 6
          minBackupIntervalInMins: 6
          logFilesThreshold: 3
          commitFrequencyInHours: 6
          jobRunningTimeInMins: 9
          o365ItemSelectionOption: SELECT_ALL
          useDiskCacheForLogBackups: true
        policyId: 4
        isRetentionBasedSyntheticFull: false
        isAuxCopySchedule: false
        vmOperationType: PLANNED_FAILOVER
        forDatabasesOnly: false
        additionalInfo: additionalInfo
        scheduleOperation: MODIFY
        schedulePattern:
          endDate: 1
          maxBackupIntervalInMins: 9
          timezone: null
          weekOfMonth: FIRST
          daysBetweenSyntheticFulls: 6
          exceptions:
          - onWeekOfTheMonth:
            - null
            - null
            onDates:
            - 16
            - 16
            onDayOfTheWeek:
            - null
            - null
          - onWeekOfTheMonth:
            - null
            - null
            onDates:
            - 16
            - 16
            onDayOfTheWeek:
            - null
            - null
          frequency: 1
          weeklyDays:
          - SUNDAY
          - SUNDAY
          repeatUntilTime: 0
          monthOfYear: JANUARY
          dayOfWeek: SUNDAY
          dayOfMonth: 4
          scheduleFrequencyType: MINUTES
          startTime: 6
          noOfTimes: 4
          repeatIntervalInMinutes: 1
          startDate: 7
        scheduleId: 2
        backupType: FULL
    SchedulePattern:
      title: SchedulePattern
      required:
      - scheduleFrequencyType
      type: object
      properties:
        scheduleFrequencyType:
          type: string
          description: schedule frequency type
          enum:
          - MINUTES
          - DAILY
          - WEEKLY
          - MONTHLY
          - YEARLY
          - AUTOMATIC
        frequency:
          minimum: 1
          type: integer
          description: "Frequency of the schedule based on schedule frequency type\
            \ eg. for Hours, value 2 is 2 hours, for Minutes, 30 is 30 minutes, for\
            \ Daily, 2 is 2 days. for Monthly 2 is it repeats every 2 months"
          format: int32
        weeklyDays:
          type: array
          description: Days of the week for weekly frequency
          nullable: true
          items:
            $ref: "#/components/schemas/DayOfTheWeek"
        dayOfMonth:
          maximum: 31
          minimum: 1
          type: integer
          description: "Day on which to run the schedule, applicable for monthly,\
            \ yearly"
          format: int32
        weekOfMonth:
          $ref: "#/components/schemas/WeekOfTheMonth"
        dayOfWeek:
          $ref: "#/components/schemas/DayOfWeek"
        monthOfYear:
          $ref: "#/components/schemas/MonthOfYear"
        repeatIntervalInMinutes:
          minimum: 1
          type: integer
          description: "How often in minutes in a day the schedule runs, applicable\
            \ for daily, weekly, monthly and yearly frequency types."
          format: int32
        repeatUntilTime:
          minimum: 0
          type: integer
          description: "Until what time to repeat the schedule in a day, requires\
            \ repeatIntervalInMinutes"
          format: int32
        timezone:
          $ref: "#/components/schemas/IdName"
        startTime:
          type: integer
          description: start time of schedule in seconds
          format: int32
          default: 75600
        startDate:
          type: integer
          description: start date of schedule in epoch format
          format: int32
        endDate:
          type: integer
          description: Schedule end date in epoch format
          format: int32
          default: 0
        noOfTimes:
          type: integer
          description: The number of times you want the schedule to run.
          format: int32
          default: 0
        exceptions:
          type: array
          description: "Exceptions to when a schedule should not run, either in dates\
            \ or week of month and days"
          items:
            $ref: "#/components/schemas/ScheduleRunException"
        daysBetweenSyntheticFulls:
          minimum: 6
          type: integer
          description: No of days between two synthetic full jobs
          format: int32
        maxBackupIntervalInMins:
          type: integer
          description: The number of mins to force a backup on automatic schedule.
          format: int32
          default: 240
      description: Used to describe when the schedule runs
      example:
        endDate: 1
        maxBackupIntervalInMins: 9
        timezone: null
        weekOfMonth: FIRST
        daysBetweenSyntheticFulls: 6
        exceptions:
        - onWeekOfTheMonth:
          - null
          - null
          onDates:
          - 16
          - 16
          onDayOfTheWeek:
          - null
          - null
        - onWeekOfTheMonth:
          - null
          - null
          onDates:
          - 16
          - 16
          onDayOfTheWeek:
          - null
          - null
        frequency: 1
        weeklyDays:
        - SUNDAY
        - SUNDAY
        repeatUntilTime: 0
        monthOfYear: JANUARY
        dayOfWeek: SUNDAY
        dayOfMonth: 4
        scheduleFrequencyType: MINUTES
        startTime: 6
        noOfTimes: 4
        repeatIntervalInMinutes: 1
        startDate: 7
    ScheduleOption:
      title: ScheduleOption
      type: object
      properties:
        useDiskCacheForLogBackups:
          type: boolean
          description: Used to enable disk caching feature on databases for automatic
            schedules on server plan
        commitFrequencyInHours:
          type: integer
          description: Commit frequency in hours for disk cache backups from automatic
            schedules
          format: int32
        daysBetweenAutoConvert:
          type: integer
          description: Number of days between auto conversion of backup level applicable
            for databases on incremental and differential schedules of server plan
          format: int32
        o365ItemSelectionOption:
          type: string
          description: item backup option for O365 V2 backup jobs
          enum:
          - SELECT_ALL
          - SELECT_NEVER_PROCESSED
          - SELECT_MEETING_SLA
          - SELECT_NOT_MEETING_SLA_PROCESSED_ATLEAST_ONCE
          - SELECT_FAILED_LAST_ATTEMPT
          - SELECT_PROCESSED_ATLEAST_ONCE
          - SELECT_NOT_MEETING_SLA
          - SELECT_MEETING_SLA_NOT_RECENTLY_BACKED_UP
        jobRunningTimeInMins:
          type: integer
          description: total job running time in minutes
          format: int32
        minBackupIntervalInMins:
          type: integer
          description: The min number of mins to check for file activity on automatic
            schedule.
          format: int32
          default: 15
        logFilesThreshold:
          type: integer
          description: The min number of archived log files before a backup job should
            start
          format: int32
          default: 50
        logsDiskUtilizationPercent:
          type: integer
          description: The min log destination disk threshold percentage
          format: int32
          default: 80
      description: Specific options to be set on schedules
      example:
        daysBetweenAutoConvert: 8
        logsDiskUtilizationPercent: 6
        minBackupIntervalInMins: 6
        logFilesThreshold: 3
        commitFrequencyInHours: 6
        jobRunningTimeInMins: 9
        o365ItemSelectionOption: SELECT_ALL
        useDiskCacheForLogBackups: true
    ScheduleRunException:
      title: ScheduleRunException
      type: object
      properties:
        onDates:
          type: array
          description: "list of dates in a month. For ex: 1, 20"
          items:
            maximum: 31
            minimum: 1
            type: integer
            format: int32
        onWeekOfTheMonth:
          uniqueItems: true
          type: array
          description: "On which week of month, for ex: FIRST, LAST"
          items:
            $ref: "#/components/schemas/WeekOfTheMonth"
        onDayOfTheWeek:
          type: array
          description: "On which days, for ex: MONDAY, FRIDAY"
          items:
            $ref: "#/components/schemas/DayOfWeek"
      description: "Exception to when a schedule should not run, applicable for Daily\
        \ weekly and monthly schedules"
      example:
        onWeekOfTheMonth:
        - null
        - null
        onDates:
        - 16
        - 16
        onDayOfTheWeek:
        - null
        - null
    ServerPlan:
      type: object
      properties:
        plan:
          $ref: "#/components/schemas/IdName"
        backupContent:
          $ref: "#/components/schemas/PlanContent"
        rpo:
          $ref: "#/components/schemas/ServerPlanRPO"
        regionsConfigured:
          type: boolean
          description: Specifies if the destinations are associated to regions
        backupDestinations:
          type: array
          description: Backup destinations for the plan
          nullable: true
          items:
            $ref: "#/components/schemas/PlanBackupDestination"
          x-terraform-statecopy: true
        backupDestinationIds:
          type: array
          description: Primary Backup Destination Ids associated to this plan.
          items:
            type: integer
            format: int32
        databaseOptions:
          $ref: "#/components/schemas/ServerPlanDatabaseOptionsInfo"
        snapshotOptions:
          $ref: "#/components/schemas/PlanSnapshotOptions"
        settings:
          $ref: "#/components/schemas/ServerPlanSettings"
        associatedEntities:
          type: array
          items:
            $ref: "#/components/schemas/IdNameCount"
        allowPlanOverride:
          type: boolean
          description: Is deriving and overriding the plan allowed
        overrideRestrictions:
          $ref: "#/components/schemas/PlanOverrideSettings"
        inheritSettings:
          $ref: "#/components/schemas/ServerPlanInheritSettings"
        parentInheritSettings:
          $ref: "#/components/schemas/ServerPlanInheritSettings"
        permissions:
          type: array
          items:
            $ref: "#/components/schemas/IdName"
        additionalProperties:
          $ref: "#/components/schemas/PlanAdditionalProperties"
        workload:
          $ref: "#/components/schemas/PlanWorkloads"
        globalConfigInfo:
          $ref: "#/components/schemas/GlobalConfigInfo"
      example:
        settings:
          enableAdvancedView: true
          deviceStreams: 7
          fileSearch:
            enabled: true
            statusMessage: statusMessage
            errors:
            - errorMessage: errorMessage
              errorCode: 6
              storage: null
            - errorMessage: errorMessage
              errorCode: 6
              storage: null
            status: NOT_APPLICABLE
          upgradedFromStoragePolicy: true
        backupContent:
          windowsIncludedPaths:
          - windowsIncludedPaths
          - windowsIncludedPaths
          unixIncludedPaths:
          - unixIncludedPaths
          - unixIncludedPaths
          macExcludedPaths:
          - macExcludedPaths
          - macExcludedPaths
          macFilterToExcludePaths:
          - macFilterToExcludePaths
          - macFilterToExcludePaths
          macIncludedPaths:
          - macIncludedPaths
          - macIncludedPaths
          unixExcludedPaths:
          - unixExcludedPaths
          - unixExcludedPaths
          unixNumberOfDataReaders: null
          backupSystemState: true
          backupSystemStateOnlyWithFullBackup: false
          windowsExcludedPaths:
          - windowsExcludedPaths
          - windowsExcludedPaths
          useVSSForSystemState: true
          windowsNumberOfDataReaders:
            count: 1
            useOptimal: true
          macNumberOfDataReaders: null
          windowsFilterToExcludePaths:
          - windowsFilterToExcludePaths
          - windowsFilterToExcludePaths
          unixFilterToExcludePaths:
          - unixFilterToExcludePaths
          - unixFilterToExcludePaths
          forceUpdateProperties: true
        databaseOptions:
          logBackupRPOMins: 7
          runFullBackupEvery: 9
          commitFrequencyInHours: 3
          useDiskCacheForLogBackups: true
        allowPlanOverride: true
        globalConfigInfo:
          scopeFilterQuery: scopeFilterQuery
          applyOnAllCommCells: true
          commcells:
          - name: name
            guid: guid
            id: 5
          - name: name
            guid: guid
            id: 5
          scope: scope
          isMarkedForDeletion: true
          name: name
          id: id
          status: status
        workload:
          workloadTypes:
          - null
          - null
          workloadGroupTypes:
          - FILE_SERVER
          - FILE_SERVER
          solutions:
          - null
          - null
        backupDestinationIds:
        - 2
        - 2
        inheritSettings:
          RPO: null
          backupContent: null
          basePlan: null
          storagePool:
            overrideBase: null
            overridden: true
        rpo:
          fullBackupWindow:
          - null
          - null
          SLA:
            exclusionReason: exclusionReason
            inheritedSLAPeriod: 6
            useSystemDefaultSLA: true
            enableAfterDelay: 5
            logSLAMinutes: 6
            inheritedFrom: COMMCELL
            excludeFromSLA: true
            SLAPeriod: 6
          backupFrequency:
            schedules:
            - scheduleName: scheduleName
              scheduleOption:
                daysBetweenAutoConvert: 8
                logsDiskUtilizationPercent: 6
                minBackupIntervalInMins: 6
                logFilesThreshold: 3
                commitFrequencyInHours: 6
                jobRunningTimeInMins: 9
                o365ItemSelectionOption: SELECT_ALL
                useDiskCacheForLogBackups: true
              policyId: 4
              isRetentionBasedSyntheticFull: false
              isAuxCopySchedule: false
              vmOperationType: PLANNED_FAILOVER
              forDatabasesOnly: false
              additionalInfo: additionalInfo
              scheduleOperation: MODIFY
              schedulePattern:
                endDate: 1
                maxBackupIntervalInMins: 9
                timezone: null
                weekOfMonth: FIRST
                daysBetweenSyntheticFulls: 6
                exceptions:
                - onWeekOfTheMonth:
                  - null
                  - null
                  onDates:
                  - 16
                  - 16
                  onDayOfTheWeek:
                  - null
                  - null
                - onWeekOfTheMonth:
                  - null
                  - null
                  onDates:
                  - 16
                  - 16
                  onDayOfTheWeek:
                  - null
                  - null
                frequency: 1
                weeklyDays:
                - SUNDAY
                - SUNDAY
                repeatUntilTime: 0
                monthOfYear: JANUARY
                dayOfWeek: SUNDAY
                dayOfMonth: 4
                scheduleFrequencyType: MINUTES
                startTime: 6
                noOfTimes: 4
                repeatIntervalInMinutes: 1
                startDate: 7
              scheduleId: 2
              backupType: FULL
            - scheduleName: scheduleName
              scheduleOption:
                daysBetweenAutoConvert: 8
                logsDiskUtilizationPercent: 6
                minBackupIntervalInMins: 6
                logFilesThreshold: 3
                commitFrequencyInHours: 6
                jobRunningTimeInMins: 9
                o365ItemSelectionOption: SELECT_ALL
                useDiskCacheForLogBackups: true
              policyId: 4
              isRetentionBasedSyntheticFull: false
              isAuxCopySchedule: false
              vmOperationType: PLANNED_FAILOVER
              forDatabasesOnly: false
              additionalInfo: additionalInfo
              scheduleOperation: MODIFY
              schedulePattern:
                endDate: 1
                maxBackupIntervalInMins: 9
                timezone: null
                weekOfMonth: FIRST
                daysBetweenSyntheticFulls: 6
                exceptions:
                - onWeekOfTheMonth:
                  - null
                  - null
                  onDates:
                  - 16
                  - 16
                  onDayOfTheWeek:
                  - null
                  - null
                - onWeekOfTheMonth:
                  - null
                  - null
                  onDates:
                  - 16
                  - 16
                  onDayOfTheWeek:
                  - null
                  - null
                frequency: 1
                weeklyDays:
                - SUNDAY
                - SUNDAY
                repeatUntilTime: 0
                monthOfYear: JANUARY
                dayOfWeek: SUNDAY
                dayOfMonth: 4
                scheduleFrequencyType: MINUTES
                startTime: 6
                noOfTimes: 4
                repeatIntervalInMinutes: 1
                startDate: 7
              scheduleId: 2
              backupType: FULL
            operationType: ADD
          backupWindow:
          - dayOfWeek:
            - null
            - null
            startTime: 1
            endTime: 2
          - dayOfWeek:
            - null
            - null
            startTime: 1
            endTime: 2
        associatedEntities:
        - name: name
          count: 4
          id: 1
        - name: name
          count: 4
          id: 1
        parentInheritSettings: null
        backupDestinations:
        - isMirrorCopy: true
          isImmutableSnapCopy: true
          retentionPeriodDays: 5961
          backupsToCopy: All_JOBS
          retentionRuleType: RETENTION_PERIOD
          isCopyInMaintenanceMode: true
          sourceCopy: null
          isSourceBackupCopy: true
          backupStartTime: 1
          overrideRetentionSettings: true
          netAppCloudTarget: true
          planBackupDestination: null
          copyType: SYNCHRONOUS
          storagePool:
            deviceType:
              name: DEFAULT
              id: 5
            isArchiveStorage: true
            storageClass: DEFAULT
            retentionPeriodDays: 1
            wormStoragePoolFlag: 5
            name: name
            id: 6
            type: DEDUPLICATION
            region:
              displayName: displayName
              name: name
              id: 2
          isCopyPromotionRequestSubmitted: true
          isAirgapCopy: true
          copyPrecedence: 6
          isConfiguredForReplication: true
          copyTypeName: DEFAULT_MIRROR
          extendedRetentionRules:
            thirdExtendedRetentionRule: null
            firstExtendedRetentionRule:
              isInfiniteRetention: true
              retentionPeriodDays: 3
              type: null
            secondExtendedRetentionRule: null
          snapRecoveryPoints: 5
          fullBackupTypesToCopy: FIRST
          useExtendedRetentionRules: true
          isDefault: true
          mappings:
          - vendor: NETAPP
            mappingType: DEFAULT_MAPPING
            targetVendor: null
            source: null
            subclients:
            - null
            - null
            sourceVendor: null
            target: null
          - vendor: NETAPP
            mappingType: DEFAULT_MAPPING
            targetVendor: null
            source: null
            subclients:
            - null
            - null
            sourceVendor: null
            target: null
          isSnapCopy: true
          storageType: ALL
          enableDataAging: true
          region:
            displayName: displayName
            name: name
            id: 2
          storageTemplateTags:
          - name: name
            id: 5
            value: value
          - name: name
            id: 5
            value: value
        - isMirrorCopy: true
          isImmutableSnapCopy: true
          retentionPeriodDays: 5961
          backupsToCopy: All_JOBS
          retentionRuleType: RETENTION_PERIOD
          isCopyInMaintenanceMode: true
          sourceCopy: null
          isSourceBackupCopy: true
          backupStartTime: 1
          overrideRetentionSettings: true
          netAppCloudTarget: true
          planBackupDestination: null
          copyType: SYNCHRONOUS
          storagePool:
            deviceType:
              name: DEFAULT
              id: 5
            isArchiveStorage: true
            storageClass: DEFAULT
            retentionPeriodDays: 1
            wormStoragePoolFlag: 5
            name: name
            id: 6
            type: DEDUPLICATION
            region:
              displayName: displayName
              name: name
              id: 2
          isCopyPromotionRequestSubmitted: true
          isAirgapCopy: true
          copyPrecedence: 6
          isConfiguredForReplication: true
          copyTypeName: DEFAULT_MIRROR
          extendedRetentionRules:
            thirdExtendedRetentionRule: null
            firstExtendedRetentionRule:
              isInfiniteRetention: true
              retentionPeriodDays: 3
              type: null
            secondExtendedRetentionRule: null
          snapRecoveryPoints: 5
          fullBackupTypesToCopy: FIRST
          useExtendedRetentionRules: true
          isDefault: true
          mappings:
          - vendor: NETAPP
            mappingType: DEFAULT_MAPPING
            targetVendor: null
            source: null
            subclients:
            - null
            - null
            sourceVendor: null
            target: null
          - vendor: NETAPP
            mappingType: DEFAULT_MAPPING
            targetVendor: null
            source: null
            subclients:
            - null
            - null
            sourceVendor: null
            target: null
          isSnapCopy: true
          storageType: ALL
          enableDataAging: true
          region:
            displayName: displayName
            name: name
            id: 2
          storageTemplateTags:
          - name: name
            id: 5
            value: value
          - name: name
            id: 5
            value: value
        permissions:
        - null
        - null
        overrideRestrictions:
          RPO: null
          backupContent: OPTIONAL
          storagePool: null
        snapshotOptions:
          backupCopyFrequency:
            weeklyDays:
            - SUNDAY
            - SUNDAY
            monthOfYear: JANUARY
            dayOfWeek: SUNDAY
            dayOfMonth: 23
            scheduleFrequencyType: DAILY
            weekOfMonth: FIRST
            startTime: 1
            frequency: 1
          backupCopyOptions:
            backupFullToCopy: null
            enableAlert: true
            backupTypeToCopy: All_JOBS
            alertInHours: 1
            skipAfterThresholdDays: 1
            action: BASED_ON_RETENTION
            startTime: 1706110498
          syncError: syncError
          enableBackupCopy: true
          enableSnapCatalog: true
          backupCopyRPOMins: 2
        additionalProperties:
          RPO: 5
          addons:
            fileSystem: true
            indexCopy: true
            database: true
            snapStatus: DISABLED
            snap: true
          status: ENABLED
        plan:
          name: name
          id: 0
        regionsConfigured: true
    PlanType:
      type: string
      format: ""
      enum:
      - Server
      - Laptop
      - FSIBMiVTL
      - ExchangeJournal
      - ExchangeUser
      - Office365
      - DataClassification
      - Archiver
      - CDM
      - ObjectStore
      - DLO
      - Database
      - Snap
      - FSServer
      - VSAServer
      - Dynamics365
    PlanStatus:
      type: string
      format: ""
      enum:
      - ENABLED
      - DISABLED
      - INCOMPLETE
      - HIDDEN
      - BACKUP_DISABLED
    PlanTargetApp:
      type: string
      description: Content indexing target app
      enum:
      - NOT_AVAILABLE
      - FILE_STORAGE_OPTIMIZATION
      - SENSITIVE_DATA_GOVERNANCE
      - CASE_MANAGER
      - CONTENT_INDEXING
      - THREAT_ANALYSIS
    SinglePlanSummary:
      type: object
      properties:
        planType:
          $ref: "#/components/schemas/PlanType"
        serverPlan:
          $ref: "#/components/schemas/ServerPlan"
        laptopPlan:
          $ref: "#/components/schemas/LaptopPlanDetails"
      example:
        planType: Server
        serverPlan:
          settings:
            enableAdvancedView: true
            deviceStreams: 7
            fileSearch:
              enabled: true
              statusMessage: statusMessage
              errors:
              - errorMessage: errorMessage
                errorCode: 6
                storage: null
              - errorMessage: errorMessage
                errorCode: 6
                storage: null
              status: NOT_APPLICABLE
            upgradedFromStoragePolicy: true
          backupContent:
            windowsIncludedPaths:
            - windowsIncludedPaths
            - windowsIncludedPaths
            unixIncludedPaths:
            - unixIncludedPaths
            - unixIncludedPaths
            macExcludedPaths:
            - macExcludedPaths
            - macExcludedPaths
            macFilterToExcludePaths:
            - macFilterToExcludePaths
            - macFilterToExcludePaths
            macIncludedPaths:
            - macIncludedPaths
            - macIncludedPaths
            unixExcludedPaths:
            - unixExcludedPaths
            - unixExcludedPaths
            unixNumberOfDataReaders: null
            backupSystemState: true
            backupSystemStateOnlyWithFullBackup: false
            windowsExcludedPaths:
            - windowsExcludedPaths
            - windowsExcludedPaths
            useVSSForSystemState: true
            windowsNumberOfDataReaders:
              count: 1
              useOptimal: true
            macNumberOfDataReaders: null
            windowsFilterToExcludePaths:
            - windowsFilterToExcludePaths
            - windowsFilterToExcludePaths
            unixFilterToExcludePaths:
            - unixFilterToExcludePaths
            - unixFilterToExcludePaths
            forceUpdateProperties: true
          databaseOptions:
            logBackupRPOMins: 7
            runFullBackupEvery: 9
            commitFrequencyInHours: 3
            useDiskCacheForLogBackups: true
          allowPlanOverride: true
          globalConfigInfo:
            scopeFilterQuery: scopeFilterQuery
            applyOnAllCommCells: true
            commcells:
            - name: name
              guid: guid
              id: 5
            - name: name
              guid: guid
              id: 5
            scope: scope
            isMarkedForDeletion: true
            name: name
            id: id
            status: status
          workload:
            workloadTypes:
            - null
            - null
            workloadGroupTypes:
            - FILE_SERVER
            - FILE_SERVER
            solutions:
            - null
            - null
          backupDestinationIds:
          - 2
          - 2
          inheritSettings:
            RPO: null
            backupContent: null
            basePlan: null
            storagePool:
              overrideBase: null
              overridden: true
          rpo:
            fullBackupWindow:
            - null
            - null
            SLA:
              exclusionReason: exclusionReason
              inheritedSLAPeriod: 6
              useSystemDefaultSLA: true
              enableAfterDelay: 5
              logSLAMinutes: 6
              inheritedFrom: COMMCELL
              excludeFromSLA: true
              SLAPeriod: 6
            backupFrequency:
              schedules:
              - scheduleName: scheduleName
                scheduleOption:
                  daysBetweenAutoConvert: 8
                  logsDiskUtilizationPercent: 6
                  minBackupIntervalInMins: 6
                  logFilesThreshold: 3
                  commitFrequencyInHours: 6
                  jobRunningTimeInMins: 9
                  o365ItemSelectionOption: SELECT_ALL
                  useDiskCacheForLogBackups: true
                policyId: 4
                isRetentionBasedSyntheticFull: false
                isAuxCopySchedule: false
                vmOperationType: PLANNED_FAILOVER
                forDatabasesOnly: false
                additionalInfo: additionalInfo
                scheduleOperation: MODIFY
                schedulePattern:
                  endDate: 1
                  maxBackupIntervalInMins: 9
                  timezone: null
                  weekOfMonth: FIRST
                  daysBetweenSyntheticFulls: 6
                  exceptions:
                  - onWeekOfTheMonth:
                    - null
                    - null
                    onDates:
                    - 16
                    - 16
                    onDayOfTheWeek:
                    - null
                    - null
                  - onWeekOfTheMonth:
                    - null
                    - null
                    onDates:
                    - 16
                    - 16
                    onDayOfTheWeek:
                    - null
                    - null
                  frequency: 1
                  weeklyDays:
                  - SUNDAY
                  - SUNDAY
                  repeatUntilTime: 0
                  monthOfYear: JANUARY
                  dayOfWeek: SUNDAY
                  dayOfMonth: 4
                  scheduleFrequencyType: MINUTES
                  startTime: 6
                  noOfTimes: 4
                  repeatIntervalInMinutes: 1
                  startDate: 7
                scheduleId: 2
                backupType: FULL
              - scheduleName: scheduleName
                scheduleOption:
                  daysBetweenAutoConvert: 8
                  logsDiskUtilizationPercent: 6
                  minBackupIntervalInMins: 6
                  logFilesThreshold: 3
                  commitFrequencyInHours: 6
                  jobRunningTimeInMins: 9
                  o365ItemSelectionOption: SELECT_ALL
                  useDiskCacheForLogBackups: true
                policyId: 4
                isRetentionBasedSyntheticFull: false
                isAuxCopySchedule: false
                vmOperationType: PLANNED_FAILOVER
                forDatabasesOnly: false
                additionalInfo: additionalInfo
                scheduleOperation: MODIFY
                schedulePattern:
                  endDate: 1
                  maxBackupIntervalInMins: 9
                  timezone: null
                  weekOfMonth: FIRST
                  daysBetweenSyntheticFulls: 6
                  exceptions:
                  - onWeekOfTheMonth:
                    - null
                    - null
                    onDates:
                    - 16
                    - 16
                    onDayOfTheWeek:
                    - null
                    - null
                  - onWeekOfTheMonth:
                    - null
                    - null
                    onDates:
                    - 16
                    - 16
                    onDayOfTheWeek:
                    - null
                    - null
                  frequency: 1
                  weeklyDays:
                  - SUNDAY
                  - SUNDAY
                  repeatUntilTime: 0
                  monthOfYear: JANUARY
                  dayOfWeek: SUNDAY
                  dayOfMonth: 4
                  scheduleFrequencyType: MINUTES
                  startTime: 6
                  noOfTimes: 4
                  repeatIntervalInMinutes: 1
                  startDate: 7
                scheduleId: 2
                backupType: FULL
              operationType: ADD
            backupWindow:
            - dayOfWeek:
              - null
              - null
              startTime: 1
              endTime: 2
            - dayOfWeek:
              - null
              - null
              startTime: 1
              endTime: 2
          associatedEntities:
          - name: name
            count: 4
            id: 1
          - name: name
            count: 4
            id: 1
          parentInheritSettings: null
          backupDestinations:
          - isMirrorCopy: true
            isImmutableSnapCopy: true
            retentionPeriodDays: 5961
            backupsToCopy: All_JOBS
            retentionRuleType: RETENTION_PERIOD
            isCopyInMaintenanceMode: true
            sourceCopy: null
            isSourceBackupCopy: true
            backupStartTime: 1
            overrideRetentionSettings: true
            netAppCloudTarget: true
            planBackupDestination: null
            copyType: SYNCHRONOUS
            storagePool:
              deviceType:
                name: DEFAULT
                id: 5
              isArchiveStorage: true
              storageClass: DEFAULT
              retentionPeriodDays: 1
              wormStoragePoolFlag: 5
              name: name
              id: 6
              type: DEDUPLICATION
              region:
                displayName: displayName
                name: name
                id: 2
            isCopyPromotionRequestSubmitted: true
            isAirgapCopy: true
            copyPrecedence: 6
            isConfiguredForReplication: true
            copyTypeName: DEFAULT_MIRROR
            extendedRetentionRules:
              thirdExtendedRetentionRule: null
              firstExtendedRetentionRule:
                isInfiniteRetention: true
                retentionPeriodDays: 3
                type: null
              secondExtendedRetentionRule: null
            snapRecoveryPoints: 5
            fullBackupTypesToCopy: FIRST
            useExtendedRetentionRules: true
            isDefault: true
            mappings:
            - vendor: NETAPP
              mappingType: DEFAULT_MAPPING
              targetVendor: null
              source: null
              subclients:
              - null
              - null
              sourceVendor: null
              target: null
            - vendor: NETAPP
              mappingType: DEFAULT_MAPPING
              targetVendor: null
              source: null
              subclients:
              - null
              - null
              sourceVendor: null
              target: null
            isSnapCopy: true
            storageType: ALL
            enableDataAging: true
            region:
              displayName: displayName
              name: name
              id: 2
            storageTemplateTags:
            - name: name
              id: 5
              value: value
            - name: name
              id: 5
              value: value
          - isMirrorCopy: true
            isImmutableSnapCopy: true
            retentionPeriodDays: 5961
            backupsToCopy: All_JOBS
            retentionRuleType: RETENTION_PERIOD
            isCopyInMaintenanceMode: true
            sourceCopy: null
            isSourceBackupCopy: true
            backupStartTime: 1
            overrideRetentionSettings: true
            netAppCloudTarget: true
            planBackupDestination: null
            copyType: SYNCHRONOUS
            storagePool:
              deviceType:
                name: DEFAULT
                id: 5
              isArchiveStorage: true
              storageClass: DEFAULT
              retentionPeriodDays: 1
              wormStoragePoolFlag: 5
              name: name
              id: 6
              type: DEDUPLICATION
              region:
                displayName: displayName
                name: name
                id: 2
            isCopyPromotionRequestSubmitted: true
            isAirgapCopy: true
            copyPrecedence: 6
            isConfiguredForReplication: true
            copyTypeName: DEFAULT_MIRROR
            extendedRetentionRules:
              thirdExtendedRetentionRule: null
              firstExtendedRetentionRule:
                isInfiniteRetention: true
                retentionPeriodDays: 3
                type: null
              secondExtendedRetentionRule: null
            snapRecoveryPoints: 5
            fullBackupTypesToCopy: FIRST
            useExtendedRetentionRules: true
            isDefault: true
            mappings:
            - vendor: NETAPP
              mappingType: DEFAULT_MAPPING
              targetVendor: null
              source: null
              subclients:
              - null
              - null
              sourceVendor: null
              target: null
            - vendor: NETAPP
              mappingType: DEFAULT_MAPPING
              targetVendor: null
              source: null
              subclients:
              - null
              - null
              sourceVendor: null
              target: null
            isSnapCopy: true
            storageType: ALL
            enableDataAging: true
            region:
              displayName: displayName
              name: name
              id: 2
            storageTemplateTags:
            - name: name
              id: 5
              value: value
            - name: name
              id: 5
              value: value
          permissions:
          - null
          - null
          overrideRestrictions:
            RPO: null
            backupContent: OPTIONAL
            storagePool: null
          snapshotOptions:
            backupCopyFrequency:
              weeklyDays:
              - SUNDAY
              - SUNDAY
              monthOfYear: JANUARY
              dayOfWeek: SUNDAY
              dayOfMonth: 23
              scheduleFrequencyType: DAILY
              weekOfMonth: FIRST
              startTime: 1
              frequency: 1
            backupCopyOptions:
              backupFullToCopy: null
              enableAlert: true
              backupTypeToCopy: All_JOBS
              alertInHours: 1
              skipAfterThresholdDays: 1
              action: BASED_ON_RETENTION
              startTime: 1706110498
            syncError: syncError
            enableBackupCopy: true
            enableSnapCatalog: true
            backupCopyRPOMins: 2
          additionalProperties:
            RPO: 5
            addons:
              fileSystem: true
              indexCopy: true
              database: true
              snapStatus: DISABLED
              snap: true
            status: ENABLED
          plan:
            name: name
            id: 0
          regionsConfigured: true
        laptopPlan:
          backupContent:
            windowsIncludedPaths:
            - windowsIncludedPaths
            - windowsIncludedPaths
            windowsExcludedPaths:
            - windowsExcludedPaths
            - windowsExcludedPaths
            unixIncludedPaths:
            - unixIncludedPaths
            - unixIncludedPaths
            macExcludedPaths:
            - macExcludedPaths
            - macExcludedPaths
            fileSystemQuota: 7
            macIncludedPaths:
            - macIncludedPaths
            - macIncludedPaths
            unixExcludedPaths:
            - unixExcludedPaths
            - unixExcludedPaths
          associatedUsersAndUserGroups:
          - sendInvite: true
            name: name
            id: 4
            type: USER
          - sendInvite: true
            name: name
            id: 4
            type: USER
          networkResources:
            throttleSend: 9
            throttleReceive: 6
          allowedFeatures:
            edgeDriveSettings:
              auditDriveOperations: true
              notificationsForShares: true
              edgeDriveQuota: 2
              indexServer: null
            archivingRules:
              startCleaningIfLessThan: 1
              fileModifiedTimeOlderThan: 2
              fileSizeGreaterThan: 9
              archiveReadOnlyFiles: false
              afterArchiving: REPLACE_FILE_WITH_STUB
              stopCleaningIfupto: 5
              fileCreatedTimeOlderThan: 7
              maximumFileSize: 3
              fileAccessTimeOlderThan: 5
            DLP: true
            edgeDrive: true
            archiving: true
          allowPlanOverride: true
          inheritSettings:
            RPO: null
            backupContent: null
            basePlan: null
            storagePool:
              overrideBase: null
              overridden: true
            retention: null
          rpo:
            SLA:
              exclusionReason: exclusionReason
              inheritedSLAPeriod: 6
              useSystemDefaultSLA: true
              enableAfterDelay: 5
              logSLAMinutes: 6
              inheritedFrom: COMMCELL
              excludeFromSLA: true
              SLAPeriod: 6
            backupFrequency: 4
          alerts:
          - null
          - null
          general:
            storageResourcePoolMap:
            - resources:
              - appType: GENERIC
                resourcePool: null
              - appType: GENERIC
                resourcePool: null
              storage: null
            - resources:
              - appType: GENERIC
                resourcePool: null
              - appType: GENERIC
                resourcePool: null
              storage: null
            optimizedForCloudBackups: false
            users: 0
            laptops: 0
          backupDestinations:
          - isMirrorCopy: true
            isImmutableSnapCopy: true
            retentionPeriodDays: 5961
            backupsToCopy: All_JOBS
            retentionRuleType: RETENTION_PERIOD
            isCopyInMaintenanceMode: true
            sourceCopy: null
            isSourceBackupCopy: true
            backupStartTime: 1
            overrideRetentionSettings: true
            netAppCloudTarget: true
            planBackupDestination: null
            copyType: SYNCHRONOUS
            storagePool:
              deviceType:
                name: DEFAULT
                id: 5
              isArchiveStorage: true
              storageClass: DEFAULT
              retentionPeriodDays: 1
              wormStoragePoolFlag: 5
              name: name
              id: 6
              type: DEDUPLICATION
              region:
                displayName: displayName
                name: name
                id: 2
            isCopyPromotionRequestSubmitted: true
            isAirgapCopy: true
            copyPrecedence: 6
            isConfiguredForReplication: true
            copyTypeName: DEFAULT_MIRROR
            extendedRetentionRules:
              thirdExtendedRetentionRule: null
              firstExtendedRetentionRule:
                isInfiniteRetention: true
                retentionPeriodDays: 3
                type: null
              secondExtendedRetentionRule: null
            snapRecoveryPoints: 5
            fullBackupTypesToCopy: FIRST
            useExtendedRetentionRules: true
            isDefault: true
            mappings:
            - vendor: NETAPP
              mappingType: DEFAULT_MAPPING
              targetVendor: null
              source: null
              subclients:
              - null
              - null
              sourceVendor: null
              target: null
            - vendor: NETAPP
              mappingType: DEFAULT_MAPPING
              targetVendor: null
              source: null
              subclients:
              - null
              - null
              sourceVendor: null
              target: null
            isSnapCopy: true
            storageType: ALL
            enableDataAging: true
            region:
              displayName: displayName
              name: name
              id: 2
            storageTemplateTags:
            - name: name
              id: 5
              value: value
            - name: name
              id: 5
              value: value
          - isMirrorCopy: true
            isImmutableSnapCopy: true
            retentionPeriodDays: 5961
            backupsToCopy: All_JOBS
            retentionRuleType: RETENTION_PERIOD
            isCopyInMaintenanceMode: true
            sourceCopy: null
            isSourceBackupCopy: true
            backupStartTime: 1
            overrideRetentionSettings: true
            netAppCloudTarget: true
            planBackupDestination: null
            copyType: SYNCHRONOUS
            storagePool:
              deviceType:
                name: DEFAULT
                id: 5
              isArchiveStorage: true
              storageClass: DEFAULT
              retentionPeriodDays: 1
              wormStoragePoolFlag: 5
              name: name
              id: 6
              type: DEDUPLICATION
              region:
                displayName: displayName
                name: name
                id: 2
            isCopyPromotionRequestSubmitted: true
            isAirgapCopy: true
            copyPrecedence: 6
            isConfiguredForReplication: true
            copyTypeName: DEFAULT_MIRROR
            extendedRetentionRules:
              thirdExtendedRetentionRule: null
              firstExtendedRetentionRule:
                isInfiniteRetention: true
                retentionPeriodDays: 3
                type: null
              secondExtendedRetentionRule: null
            snapRecoveryPoints: 5
            fullBackupTypesToCopy: FIRST
            useExtendedRetentionRules: true
            isDefault: true
            mappings:
            - vendor: NETAPP
              mappingType: DEFAULT_MAPPING
              targetVendor: null
              source: null
              subclients:
              - null
              - null
              sourceVendor: null
              target: null
            - vendor: NETAPP
              mappingType: DEFAULT_MAPPING
              targetVendor: null
              source: null
              subclients:
              - null
              - null
              sourceVendor: null
              target: null
            isSnapCopy: true
            storageType: ALL
            enableDataAging: true
            region:
              displayName: displayName
              name: name
              id: 2
            storageTemplateTags:
            - name: name
              id: 5
              value: value
            - name: name
              id: 5
              value: value
          offlineLaptops:
            deleteAfterDays: 9
            retireAfterDays: 5
          permissions:
          - null
          - null
          overrideRestrictions:
            RPO: null
            backupContent: null
            storagePool: OPTIONAL
            retention: null
          additionalProperties:
            RPO: 5
            addons:
              fileSystem: true
              indexCopy: true
              database: true
              snapStatus: DISABLED
              snap: true
            status: ENABLED
          plan:
            name: name
            id: 0
          retention:
            deletedItemRetention: 1
            fileVersions:
              monthlyVersions: 1
              versions: 1
              weeklyVersions: 7
              days: 1
              dailyVersions: 6
          regionsConfigured: true
    PlanSummary:
      type: object
      properties:
        plan:
          $ref: "#/components/schemas/IdName"
        planType:
          $ref: "#/components/schemas/PlanType"
        parentPlan:
          $ref: "#/components/schemas/IdName"
        targetApp:
          type: array
          description: This tells the content indexing target apps for data classification
            plans
          nullable: true
          items:
            $ref: "#/components/schemas/PlanTargetApp"
        associatedEntities:
          minimum: 0
          type: integer
          description: Count of associated entities for the plan
          format: int32
        RPO:
          minimum: 0
          type: integer
          description: RPO in minutes for the plan
          format: int32
        numberOfCopies:
          minimum: 0
          type: integer
          description: Number of copies for the plan
          format: int32
        status:
          $ref: "#/components/schemas/PlanStatus"
        missingEntities:
          type: array
          description: For plans in incomplete state contains list of entities missing
            from the plan
          nullable: true
          items:
            $ref: "#/components/schemas/IdName"
        resourcePool:
          type: array
          description: This lists the various resource Pools of different app types
            associated with storage pools of plan
          nullable: true
          items:
            $ref: "#/components/schemas/IdName"
        tags:
          type: array
          description: Tags associated with this plan
          nullable: true
          items:
            $ref: "#/components/schemas/IdNameValue"
        company:
          $ref: "#/components/schemas/IdName"
        commcell:
          type: string
          description: Tells which commcell this plan belongs to.
          nullable: true
        derivable:
          type: boolean
          description: Tells if this plan can be used to derive from and create a
            new child plan
        globalConfigInfo:
          $ref: "#/components/schemas/GlobalConfigInfo"
      example:
        planType: Server
        missingEntities:
        - null
        - null
        globalConfigInfo:
          scopeFilterQuery: scopeFilterQuery
          applyOnAllCommCells: true
          commcells:
          - name: name
            guid: guid
            id: 5
          - name: name
            guid: guid
            id: 5
          scope: scope
          isMarkedForDeletion: true
          name: name
          id: id
          status: status
        derivable: true
        tags:
        - name: name
          id: 5
          value: value
        - name: name
          id: 5
          value: value
        RPO: 0
        associatedEntities: 0
        targetApp:
        - NOT_AVAILABLE
        - NOT_AVAILABLE
        commcell: commcell
        company: null
        parentPlan: null
        numberOfCopies: 0
        plan:
          name: name
          id: 0
        status: ENABLED
        resourcePool:
        - null
        - null
    PlanSummaryListResp:
      type: object
      properties:
        plans:
          type: array
          nullable: true
          items:
            $ref: "#/components/schemas/PlanSummary"
        plansCount:
          type: integer
          description: Number of plans returned
          format: int32
      example:
        plansCount: 2
        plans:
        - planType: Server
          missingEntities:
          - null
          - null
          globalConfigInfo:
            scopeFilterQuery: scopeFilterQuery
            applyOnAllCommCells: true
            commcells:
            - name: name
              guid: guid
              id: 5
            - name: name
              guid: guid
              id: 5
            scope: scope
            isMarkedForDeletion: true
            name: name
            id: id
            status: status
          derivable: true
          tags:
          - name: name
            id: 5
            value: value
          - name: name
            id: 5
            value: value
          RPO: 0
          associatedEntities: 0
          targetApp:
          - NOT_AVAILABLE
          - NOT_AVAILABLE
          commcell: commcell
          company: null
          parentPlan: null
          numberOfCopies: 0
          plan:
            name: name
            id: 0
          status: ENABLED
          resourcePool:
          - null
          - null
        - planType: Server
          missingEntities:
          - null
          - null
          globalConfigInfo:
            scopeFilterQuery: scopeFilterQuery
            applyOnAllCommCells: true
            commcells:
            - name: name
              guid: guid
              id: 5
            - name: name
              guid: guid
              id: 5
            scope: scope
            isMarkedForDeletion: true
            name: name
            id: id
            status: status
          derivable: true
          tags:
          - name: name
            id: 5
            value: value
          - name: name
            id: 5
            value: value
          RPO: 0
          associatedEntities: 0
          targetApp:
          - NOT_AVAILABLE
          - NOT_AVAILABLE
          commcell: commcell
          company: null
          parentPlan: null
          numberOfCopies: 0
          plan:
            name: name
            id: 0
          status: ENABLED
          resourcePool:
          - null
          - null
    PlanAddonStatus:
      type: string
      enum:
      - DISABLED
      - ENABLED
      - INCOMPLETE
    PlanAddons:
      type: object
      properties:
        database:
          type: boolean
          description: Database options should be shown with this plan
        fileSystem:
          type: boolean
          description: File system options should be shown with this plan
        snap:
          type: boolean
          description: Snap options should be shown with this plan
        snapStatus:
          $ref: "#/components/schemas/PlanAddonStatus"
        indexCopy:
          type: boolean
          description: Index copy options should be shown with this plan
      example:
        fileSystem: true
        indexCopy: true
        database: true
        snapStatus: DISABLED
        snap: true
    PlanAdditionalProperties:
      type: object
      properties:
        RPO:
          type: integer
          description: The least RPO in minutes for the plan
          format: int32
        addons:
          $ref: "#/components/schemas/PlanAddons"
        status:
          $ref: "#/components/schemas/PlanStatus"
      example:
        RPO: 5
        addons:
          fileSystem: true
          indexCopy: true
          database: true
          snapStatus: DISABLED
          snap: true
        status: ENABLED
    PlanBackupDestinations:
      type: object
      properties:
        backupdestinations:
          type: array
          nullable: true
          items:
            $ref: "#/components/schemas/PlanBackupDestination"
        regionsConfigured:
          type: boolean
          description: Specifies if the plan has region-based storage
      example:
        backupdestinations:
        - isMirrorCopy: true
          isImmutableSnapCopy: true
          retentionPeriodDays: 5961
          backupsToCopy: All_JOBS
          retentionRuleType: RETENTION_PERIOD
          isCopyInMaintenanceMode: true
          sourceCopy: null
          isSourceBackupCopy: true
          backupStartTime: 1
          overrideRetentionSettings: true
          netAppCloudTarget: true
          planBackupDestination: null
          copyType: SYNCHRONOUS
          storagePool:
            deviceType:
              name: DEFAULT
              id: 5
            isArchiveStorage: true
            storageClass: DEFAULT
            retentionPeriodDays: 1
            wormStoragePoolFlag: 5
            name: name
            id: 6
            type: DEDUPLICATION
            region:
              displayName: displayName
              name: name
              id: 2
          isCopyPromotionRequestSubmitted: true
          isAirgapCopy: true
          copyPrecedence: 6
          isConfiguredForReplication: true
          copyTypeName: DEFAULT_MIRROR
          extendedRetentionRules:
            thirdExtendedRetentionRule: null
            firstExtendedRetentionRule:
              isInfiniteRetention: true
              retentionPeriodDays: 3
              type: null
            secondExtendedRetentionRule: null
          snapRecoveryPoints: 5
          fullBackupTypesToCopy: FIRST
          useExtendedRetentionRules: true
          isDefault: true
          mappings:
          - vendor: NETAPP
            mappingType: DEFAULT_MAPPING
            targetVendor: null
            source: null
            subclients:
            - null
            - null
            sourceVendor: null
            target: null
          - vendor: NETAPP
            mappingType: DEFAULT_MAPPING
            targetVendor: null
            source: null
            subclients:
            - null
            - null
            sourceVendor: null
            target: null
          isSnapCopy: true
          storageType: ALL
          enableDataAging: true
          region:
            displayName: displayName
            name: name
            id: 2
          storageTemplateTags:
          - name: name
            id: 5
            value: value
          - name: name
            id: 5
            value: value
        - isMirrorCopy: true
          isImmutableSnapCopy: true
          retentionPeriodDays: 5961
          backupsToCopy: All_JOBS
          retentionRuleType: RETENTION_PERIOD
          isCopyInMaintenanceMode: true
          sourceCopy: null
          isSourceBackupCopy: true
          backupStartTime: 1
          overrideRetentionSettings: true
          netAppCloudTarget: true
          planBackupDestination: null
          copyType: SYNCHRONOUS
          storagePool:
            deviceType:
              name: DEFAULT
              id: 5
            isArchiveStorage: true
            storageClass: DEFAULT
            retentionPeriodDays: 1
            wormStoragePoolFlag: 5
            name: name
            id: 6
            type: DEDUPLICATION
            region:
              displayName: displayName
              name: name
              id: 2
          isCopyPromotionRequestSubmitted: true
          isAirgapCopy: true
          copyPrecedence: 6
          isConfiguredForReplication: true
          copyTypeName: DEFAULT_MIRROR
          extendedRetentionRules:
            thirdExtendedRetentionRule: null
            firstExtendedRetentionRule:
              isInfiniteRetention: true
              retentionPeriodDays: 3
              type: null
            secondExtendedRetentionRule: null
          snapRecoveryPoints: 5
          fullBackupTypesToCopy: FIRST
          useExtendedRetentionRules: true
          isDefault: true
          mappings:
          - vendor: NETAPP
            mappingType: DEFAULT_MAPPING
            targetVendor: null
            source: null
            subclients:
            - null
            - null
            sourceVendor: null
            target: null
          - vendor: NETAPP
            mappingType: DEFAULT_MAPPING
            targetVendor: null
            source: null
            subclients:
            - null
            - null
            sourceVendor: null
            target: null
          isSnapCopy: true
          storageType: ALL
          enableDataAging: true
          region:
            displayName: displayName
            name: name
            id: 2
          storageTemplateTags:
          - name: name
            id: 5
            value: value
          - name: name
            id: 5
            value: value
        regionsConfigured: true
    CreatePlanBackupDestinations:
      required:
      - destinations
      type: object
      properties:
        destinations:
          type: array
          description: List of backup destinations to create
          nullable: true
          items:
            $ref: "#/components/schemas/CreatePlanBackupDestination"
        snapshotOptions:
          $ref: "#/components/schemas/CreatePlanSnapshotOptions"
        region:
          $ref: "#/components/schemas/IdNameGUID"
    PlanBackupDestinationBasicResp:
      type: object
      properties:
        id:
          type: integer
          description: Id of the backup destination affected or created
          format: int32
          x-terraform-id: true
        name:
          type: string
          description: Name of the backup destination affected or created
          nullable: true
        isDefault:
          type: boolean
          description: Tells if this is the default (primary) backup destination
          nullable: true
      example:
        isDefault: true
        name: name
        id: 0
    CreatePlanBackupDestinationResp:
      type: object
      properties:
        planBackupDestination:
          type: array
          description: List of destinations effected or created
          nullable: true
          items:
            $ref: "#/components/schemas/PlanBackupDestinationBasicResp"
        failedDestinations:
          type: array
          description: List of destinations for which the operation failed
          nullable: true
          items:
            type: string
        error:
          $ref: "#/components/schemas/GenericResp"
      example:
        planBackupDestination:
        - isDefault: true
          name: name
          id: 0
        - isDefault: true
          name: name
          id: 0
        failedDestinations:
        - failedDestinations
        - failedDestinations
        error:
          errorMessage: errorMessage
          errorCode: 0
    PlanBackupDestinationResp:
      type: object
      properties:
        planBackupDestination:
          type: array
          description: List of destinations effected or created
          nullable: true
          items:
            $ref: "#/components/schemas/IdName"
        failedDestinations:
          type: array
          description: List of destinations for which the operation failed
          nullable: true
          items:
            type: string
        error:
          $ref: "#/components/schemas/GenericResp"
      example:
        planBackupDestination:
        - name: name
          id: 0
        - name: name
          id: 0
        failedDestinations:
        - failedDestinations
        - failedDestinations
        error:
          errorMessage: errorMessage
          errorCode: 0
    CreateServerPlanRPO:
      required:
      - rpo
      type: object
      properties:
        rpo:
          $ref: "#/components/schemas/ServerBackupPlanRPO"
        databaseOptions:
          $ref: "#/components/schemas/ServerPlanDatabaseOptions"
    CreateServerPlanRPOResponse:
      type: object
      properties:
        rpo:
          $ref: "#/components/schemas/ServerBackupPlanRPO"
        error:
          $ref: "#/components/schemas/GenericResp"
      example:
        rpo:
          fullBackupWindow:
          - null
          - null
          backupFrequency:
            schedules:
            - scheduleName: scheduleName
              scheduleOption:
                daysBetweenAutoConvert: 8
                logsDiskUtilizationPercent: 6
                minBackupIntervalInMins: 6
                logFilesThreshold: 3
                commitFrequencyInHours: 6
                jobRunningTimeInMins: 9
                o365ItemSelectionOption: SELECT_ALL
                useDiskCacheForLogBackups: true
              policyId: 4
              isRetentionBasedSyntheticFull: false
              isAuxCopySchedule: false
              vmOperationType: PLANNED_FAILOVER
              forDatabasesOnly: false
              additionalInfo: additionalInfo
              scheduleOperation: MODIFY
              schedulePattern:
                endDate: 1
                maxBackupIntervalInMins: 9
                timezone: null
                weekOfMonth: FIRST
                daysBetweenSyntheticFulls: 6
                exceptions:
                - onWeekOfTheMonth:
                  - null
                  - null
                  onDates:
                  - 16
                  - 16
                  onDayOfTheWeek:
                  - null
                  - null
                - onWeekOfTheMonth:
                  - null
                  - null
                  onDates:
                  - 16
                  - 16
                  onDayOfTheWeek:
                  - null
                  - null
                frequency: 1
                weeklyDays:
                - SUNDAY
                - SUNDAY
                repeatUntilTime: 0
                monthOfYear: JANUARY
                dayOfWeek: SUNDAY
                dayOfMonth: 4
                scheduleFrequencyType: MINUTES
                startTime: 6
                noOfTimes: 4
                repeatIntervalInMinutes: 1
                startDate: 7
              scheduleId: 2
              backupType: FULL
            - scheduleName: scheduleName
              scheduleOption:
                daysBetweenAutoConvert: 8
                logsDiskUtilizationPercent: 6
                minBackupIntervalInMins: 6
                logFilesThreshold: 3
                commitFrequencyInHours: 6
                jobRunningTimeInMins: 9
                o365ItemSelectionOption: SELECT_ALL
                useDiskCacheForLogBackups: true
              policyId: 4
              isRetentionBasedSyntheticFull: false
              isAuxCopySchedule: false
              vmOperationType: PLANNED_FAILOVER
              forDatabasesOnly: false
              additionalInfo: additionalInfo
              scheduleOperation: MODIFY
              schedulePattern:
                endDate: 1
                maxBackupIntervalInMins: 9
                timezone: null
                weekOfMonth: FIRST
                daysBetweenSyntheticFulls: 6
                exceptions:
                - onWeekOfTheMonth:
                  - null
                  - null
                  onDates:
                  - 16
                  - 16
                  onDayOfTheWeek:
                  - null
                  - null
                - onWeekOfTheMonth:
                  - null
                  - null
                  onDates:
                  - 16
                  - 16
                  onDayOfTheWeek:
                  - null
                  - null
                frequency: 1
                weeklyDays:
                - SUNDAY
                - SUNDAY
                repeatUntilTime: 0
                monthOfYear: JANUARY
                dayOfWeek: SUNDAY
                dayOfMonth: 4
                scheduleFrequencyType: MINUTES
                startTime: 6
                noOfTimes: 4
                repeatIntervalInMinutes: 1
                startDate: 7
              scheduleId: 2
              backupType: FULL
            operationType: ADD
          backupWindow:
          - dayOfWeek:
            - null
            - null
            startTime: 1
            endTime: 2
          - dayOfWeek:
            - null
            - null
            startTime: 1
            endTime: 2
        error:
          errorMessage: errorMessage
          errorCode: 0
    CreateServerPlanBackupContent:
      required:
      - rpo
      type: object
      properties:
        backupContent:
          $ref: "#/components/schemas/PlanContent"
    CreateServerPlanBackupContentResponse:
      type: object
      properties:
        backupContent:
          $ref: "#/components/schemas/PlanContent"
        error:
          $ref: "#/components/schemas/GenericResp"
      example:
        backupContent:
          windowsIncludedPaths:
          - windowsIncludedPaths
          - windowsIncludedPaths
          unixIncludedPaths:
          - unixIncludedPaths
          - unixIncludedPaths
          macExcludedPaths:
          - macExcludedPaths
          - macExcludedPaths
          macFilterToExcludePaths:
          - macFilterToExcludePaths
          - macFilterToExcludePaths
          macIncludedPaths:
          - macIncludedPaths
          - macIncludedPaths
          unixExcludedPaths:
          - unixExcludedPaths
          - unixExcludedPaths
          unixNumberOfDataReaders: null
          backupSystemState: true
          backupSystemStateOnlyWithFullBackup: false
          windowsExcludedPaths:
          - windowsExcludedPaths
          - windowsExcludedPaths
          useVSSForSystemState: true
          windowsNumberOfDataReaders:
            count: 1
            useOptimal: true
          macNumberOfDataReaders: null
          windowsFilterToExcludePaths:
          - windowsFilterToExcludePaths
          - windowsFilterToExcludePaths
          unixFilterToExcludePaths:
          - unixFilterToExcludePaths
          - unixFilterToExcludePaths
          forceUpdateProperties: true
        error:
          errorMessage: errorMessage
          errorCode: 0
    UpdateServerPlanBackupContent:
      type: object
      properties:
        backupContent:
          $ref: "#/components/schemas/PlanContent"
    UpdateServerPlanBackupContentResponse:
      type: object
      properties:
        backupContent:
          $ref: "#/components/schemas/PlanContent"
        error:
          $ref: "#/components/schemas/GenericResp"
    LaptopPlanDetails:
      title: ""
      type: object
      properties:
        plan:
          $ref: "#/components/schemas/IdName"
        general:
          $ref: "#/components/schemas/LaptopPlanGeneralInfo"
        allowedFeatures:
          $ref: "#/components/schemas/AllowedFeatures"
        rpo:
          $ref: "#/components/schemas/LaptopPlanRPO"
        backupContent:
          $ref: "#/components/schemas/LaptopPlanBackupContent"
        regionsConfigured:
          type: boolean
          description: Specifies if the destinations are associated to regions
        backupDestinations:
          type: array
          items:
            $ref: "#/components/schemas/PlanBackupDestination"
        retention:
          $ref: "#/components/schemas/LaptopPlanRetention"
        associatedUsersAndUserGroups:
          type: array
          description: ""
          items:
            $ref: "#/components/schemas/PlanUserOrGroups"
        alerts:
          type: array
          items:
            $ref: "#/components/schemas/IdName"
        allowPlanOverride:
          type: boolean
          description: Flag to enable overriding of plan
        overrideRestrictions:
          $ref: "#/components/schemas/LaptopPlanOverrideSettings"
        inheritSettings:
          $ref: "#/components/schemas/LaptopPlanInheritSettings"
        offlineLaptops:
          $ref: "#/components/schemas/AutoRetireDevices"
        networkResources:
          $ref: "#/components/schemas/LaptopPlanNetworkResources"
        permissions:
          type: array
          items:
            $ref: "#/components/schemas/IdName"
        additionalProperties:
          $ref: "#/components/schemas/PlanAdditionalProperties"
      example:
        backupContent:
          windowsIncludedPaths:
          - windowsIncludedPaths
          - windowsIncludedPaths
          windowsExcludedPaths:
          - windowsExcludedPaths
          - windowsExcludedPaths
          unixIncludedPaths:
          - unixIncludedPaths
          - unixIncludedPaths
          macExcludedPaths:
          - macExcludedPaths
          - macExcludedPaths
          fileSystemQuota: 7
          macIncludedPaths:
          - macIncludedPaths
          - macIncludedPaths
          unixExcludedPaths:
          - unixExcludedPaths
          - unixExcludedPaths
        associatedUsersAndUserGroups:
        - sendInvite: true
          name: name
          id: 4
          type: USER
        - sendInvite: true
          name: name
          id: 4
          type: USER
        networkResources:
          throttleSend: 9
          throttleReceive: 6
        allowedFeatures:
          edgeDriveSettings:
            auditDriveOperations: true
            notificationsForShares: true
            edgeDriveQuota: 2
            indexServer: null
          archivingRules:
            startCleaningIfLessThan: 1
            fileModifiedTimeOlderThan: 2
            fileSizeGreaterThan: 9
            archiveReadOnlyFiles: false
            afterArchiving: REPLACE_FILE_WITH_STUB
            stopCleaningIfupto: 5
            fileCreatedTimeOlderThan: 7
            maximumFileSize: 3
            fileAccessTimeOlderThan: 5
          DLP: true
          edgeDrive: true
          archiving: true
        allowPlanOverride: true
        inheritSettings:
          RPO: null
          backupContent: null
          basePlan: null
          storagePool:
            overrideBase: null
            overridden: true
          retention: null
        rpo:
          SLA:
            exclusionReason: exclusionReason
            inheritedSLAPeriod: 6
            useSystemDefaultSLA: true
            enableAfterDelay: 5
            logSLAMinutes: 6
            inheritedFrom: COMMCELL
            excludeFromSLA: true
            SLAPeriod: 6
          backupFrequency: 4
        alerts:
        - null
        - null
        general:
          storageResourcePoolMap:
          - resources:
            - appType: GENERIC
              resourcePool: null
            - appType: GENERIC
              resourcePool: null
            storage: null
          - resources:
            - appType: GENERIC
              resourcePool: null
            - appType: GENERIC
              resourcePool: null
            storage: null
          optimizedForCloudBackups: false
          users: 0
          laptops: 0
        backupDestinations:
        - isMirrorCopy: true
          isImmutableSnapCopy: true
          retentionPeriodDays: 5961
          backupsToCopy: All_JOBS
          retentionRuleType: RETENTION_PERIOD
          isCopyInMaintenanceMode: true
          sourceCopy: null
          isSourceBackupCopy: true
          backupStartTime: 1
          overrideRetentionSettings: true
          netAppCloudTarget: true
          planBackupDestination: null
          copyType: SYNCHRONOUS
          storagePool:
            deviceType:
              name: DEFAULT
              id: 5
            isArchiveStorage: true
            storageClass: DEFAULT
            retentionPeriodDays: 1
            wormStoragePoolFlag: 5
            name: name
            id: 6
            type: DEDUPLICATION
            region:
              displayName: displayName
              name: name
              id: 2
          isCopyPromotionRequestSubmitted: true
          isAirgapCopy: true
          copyPrecedence: 6
          isConfiguredForReplication: true
          copyTypeName: DEFAULT_MIRROR
          extendedRetentionRules:
            thirdExtendedRetentionRule: null
            firstExtendedRetentionRule:
              isInfiniteRetention: true
              retentionPeriodDays: 3
              type: null
            secondExtendedRetentionRule: null
          snapRecoveryPoints: 5
          fullBackupTypesToCopy: FIRST
          useExtendedRetentionRules: true
          isDefault: true
          mappings:
          - vendor: NETAPP
            mappingType: DEFAULT_MAPPING
            targetVendor: null
            source: null
            subclients:
            - null
            - null
            sourceVendor: null
            target: null
          - vendor: NETAPP
            mappingType: DEFAULT_MAPPING
            targetVendor: null
            source: null
            subclients:
            - null
            - null
            sourceVendor: null
            target: null
          isSnapCopy: true
          storageType: ALL
          enableDataAging: true
          region:
            displayName: displayName
            name: name
            id: 2
          storageTemplateTags:
          - name: name
            id: 5
            value: value
          - name: name
            id: 5
            value: value
        - isMirrorCopy: true
          isImmutableSnapCopy: true
          retentionPeriodDays: 5961
          backupsToCopy: All_JOBS
          retentionRuleType: RETENTION_PERIOD
          isCopyInMaintenanceMode: true
          sourceCopy: null
          isSourceBackupCopy: true
          backupStartTime: 1
          overrideRetentionSettings: true
          netAppCloudTarget: true
          planBackupDestination: null
          copyType: SYNCHRONOUS
          storagePool:
            deviceType:
              name: DEFAULT
              id: 5
            isArchiveStorage: true
            storageClass: DEFAULT
            retentionPeriodDays: 1
            wormStoragePoolFlag: 5
            name: name
            id: 6
            type: DEDUPLICATION
            region:
              displayName: displayName
              name: name
              id: 2
          isCopyPromotionRequestSubmitted: true
          isAirgapCopy: true
          copyPrecedence: 6
          isConfiguredForReplication: true
          copyTypeName: DEFAULT_MIRROR
          extendedRetentionRules:
            thirdExtendedRetentionRule: null
            firstExtendedRetentionRule:
              isInfiniteRetention: true
              retentionPeriodDays: 3
              type: null
            secondExtendedRetentionRule: null
          snapRecoveryPoints: 5
          fullBackupTypesToCopy: FIRST
          useExtendedRetentionRules: true
          isDefault: true
          mappings:
          - vendor: NETAPP
            mappingType: DEFAULT_MAPPING
            targetVendor: null
            source: null
            subclients:
            - null
            - null
            sourceVendor: null
            target: null
          - vendor: NETAPP
            mappingType: DEFAULT_MAPPING
            targetVendor: null
            source: null
            subclients:
            - null
            - null
            sourceVendor: null
            target: null
          isSnapCopy: true
          storageType: ALL
          enableDataAging: true
          region:
            displayName: displayName
            name: name
            id: 2
          storageTemplateTags:
          - name: name
            id: 5
            value: value
          - name: name
            id: 5
            value: value
        offlineLaptops:
          deleteAfterDays: 9
          retireAfterDays: 5
        permissions:
        - null
        - null
        overrideRestrictions:
          RPO: null
          backupContent: null
          storagePool: OPTIONAL
          retention: null
        additionalProperties:
          RPO: 5
          addons:
            fileSystem: true
            indexCopy: true
            database: true
            snapStatus: DISABLED
            snap: true
          status: ENABLED
        plan:
          name: name
          id: 0
        retention:
          deletedItemRetention: 1
          fileVersions:
            monthlyVersions: 1
            versions: 1
            weeklyVersions: 7
            days: 1
            dailyVersions: 6
        regionsConfigured: true
    LaptopPlanOverrideSettings:
      type: object
      properties:
        storagePool:
          $ref: "#/components/schemas/PlanOverrideOptions"
        RPO:
          $ref: "#/components/schemas/PlanOverrideOptions"
        backupContent:
          $ref: "#/components/schemas/PlanOverrideOptions"
        retention:
          $ref: "#/components/schemas/PlanOverrideOptions"
      description: "To allow the derived plans that use this plan as the base plan\
        \ to override the settings, property allowPlanOverride must be true, and then\
        \ select one of the options for Storage pool, RPO , Folders to backup, and\
        \ Retention."
      example:
        RPO: null
        backupContent: null
        storagePool: OPTIONAL
        retention: null
    LaptopPlanAllowedFeatures:
      type: object
      properties:
        edgeDrive:
          type: boolean
          description: Flag to enable Edge Drive
          default: false
        edgeDriveSettings:
          $ref: "#/components/schemas/EdgeDriveSettingsPlan"
        DLP:
          type: boolean
          description: Flag to enable Data loss protection
          default: true
        archiving:
          type: boolean
          description: Flag to enable archiving of laptop data
          default: false
        archivingRules:
          $ref: "#/components/schemas/ArchivingRules"
      description: Create/modify allowed features of laptop plan
    AllowedFeatures:
      type: object
      properties:
        archiving:
          type: boolean
          description: Flag to enable archiving of laptop data
        archivingRules:
          $ref: "#/components/schemas/ArchivingRules"
        DLP:
          type: boolean
          description: Flag to enable Data loss protection
        edgeDrive:
          type: boolean
          description: Flag to enable Edge Drive
        edgeDriveSettings:
          $ref: "#/components/schemas/EdgeDriveSettings"
      description: Get details about allowed features of a laptop plan
      example:
        edgeDriveSettings:
          auditDriveOperations: true
          notificationsForShares: true
          edgeDriveQuota: 2
          indexServer: null
        archivingRules:
          startCleaningIfLessThan: 1
          fileModifiedTimeOlderThan: 2
          fileSizeGreaterThan: 9
          archiveReadOnlyFiles: false
          afterArchiving: REPLACE_FILE_WITH_STUB
          stopCleaningIfupto: 5
          fileCreatedTimeOlderThan: 7
          maximumFileSize: 3
          fileAccessTimeOlderThan: 5
        DLP: true
        edgeDrive: true
        archiving: true
    LaptopPlanRPO:
      type: object
      properties:
        backupFrequency:
          type: integer
          description: Specify incremental backup frequency in minutes. Backup operation
            will start as per the time zone of the associated server.
          format: int32
        SLA:
          $ref: "#/components/schemas/SLAOptions"
      example:
        SLA:
          exclusionReason: exclusionReason
          inheritedSLAPeriod: 6
          useSystemDefaultSLA: true
          enableAfterDelay: 5
          logSLAMinutes: 6
          inheritedFrom: COMMCELL
          excludeFromSLA: true
          SLAPeriod: 6
        backupFrequency: 4
    LaptopPlanUpdateRPO:
      type: object
      properties:
        backupFrequency:
          type: integer
          description: Specify incremental backup frequency in minutes. Backup operation
            will start as per the time zone of the associated server.
          format: int32
        SLA:
          $ref: "#/components/schemas/SLAUpdateOptions"
    LaptopPlanGeneralInfo:
      type: object
      properties:
        users:
          minimum: 0
          type: integer
          description: Number of users associated with this plan
          format: int32
        laptops:
          minimum: 0
          type: integer
          description: Number of laptops associated with this plan
          format: int32
        optimizedForCloudBackups:
          type: boolean
          description: "This feature allows laptops to write backup directly to the\
            \ cloud storage. It helps to optimize scale by reducing server dependency\
            \ and extra data hops. Once the feature is enabled, the existing and the\
            \ newly-added laptops use optimized backups."
          default: false
        storageResourcePoolMap:
          type: array
          description: Optimization for cloud backups can only be used when resource
            pool are configured for atleast one storage.
          items:
            $ref: "#/components/schemas/StorageResourcePoolMap"
      example:
        storageResourcePoolMap:
        - resources:
          - appType: GENERIC
            resourcePool: null
          - appType: GENERIC
            resourcePool: null
          storage: null
        - resources:
          - appType: GENERIC
            resourcePool: null
          - appType: GENERIC
            resourcePool: null
          storage: null
        optimizedForCloudBackups: false
        users: 0
        laptops: 0
    StorageResourcePoolMap:
      type: object
      properties:
        storage:
          $ref: "#/components/schemas/IdName"
        resources:
          type: array
          description: List of resources mapped to the storage
          items:
            $ref: "#/components/schemas/ResourcePoolInfo"
      example:
        resources:
        - appType: GENERIC
          resourcePool: null
        - appType: GENERIC
          resourcePool: null
        storage: null
    ResourcePoolInfo:
      type: object
      properties:
        appType:
          $ref: "#/components/schemas/SolutionTypes"
        resourcePool:
          $ref: "#/components/schemas/IdName"
      example:
        appType: GENERIC
        resourcePool: null
    LaptopPlanUpdateGeneralInfo:
      type: object
      properties:
        optimizedForCloudBackups:
          type: boolean
          description: "This feature allows laptops to write backup directly to the\
            \ cloud storage. It helps to optimize scale by reducing server dependency\
            \ and extra data hops. Once the feature is enabled, the existing and the\
            \ newly-added laptops use optimized backups."
    LaptopPlanNetworkResources:
      title: ""
      type: object
      properties:
        throttleSend:
          type: integer
          description: Maximum kilobits per second to throttle the emitting speed
            of data. Giving value as -1 means infinite throttle send speed i.e. no
            limit
          format: int32
          default: -1
        throttleReceive:
          type: integer
          description: Maximum kilobits per second to throttle the receiving speed
            of data. Giving value as -1 means infinite throttle send speed i.e. no
            limit
          format: int32
          default: -1
      example:
        throttleSend: 9
        throttleReceive: 6
    LaptopPlanRetention:
      title: ""
      type: object
      properties:
        deletedItemRetention:
          type: integer
          description: Amount of days after deletion of files to keep the items. Giving
            value as -1 means to retain files indefinitely.
          format: int32
          default: 730
        fileVersions:
          $ref: "#/components/schemas/LaptopPlanRetentionFileVersions"
      example:
        deletedItemRetention: 1
        fileVersions:
          monthlyVersions: 1
          versions: 1
          weeklyVersions: 7
          days: 1
          dailyVersions: 6
    SLAOptions:
      title: ""
      type: object
      properties:
        useSystemDefaultSLA:
          type: boolean
          description: Flag to set to use System Default Service Level Agreement
          nullable: true
        inheritedSLAPeriod:
          type: integer
          description: Inherited SLA Period in Days
          format: int32
          nullable: true
        inheritedFrom:
          type: string
          description: Tells us from where SLA Period was inherited
          nullable: true
          enum:
          - COMMCELL
        SLAPeriod:
          type: integer
          description: SLA Period in Days
          format: int32
          nullable: true
        excludeFromSLA:
          type: boolean
          description: Flag to set to exclude plan from SLA
          nullable: true
          x-terraform-statecopy: true
        enableAfterDelay:
          type: integer
          description: Time provided in Unix format. Give 0 to reset any existing
            delay.
          format: int32
          nullable: true
        exclusionReason:
          type: string
          description: Reason for exclusion from SLA
          nullable: true
        logSLAMinutes:
          type: integer
          description: Database log SLA period in Minutes
          format: int32
          nullable: true
      description: "A server meets SLA (Service Level Agreement) when all of its subclients\
        \ have at least one successful backup during the number of days specified\
        \ at the CommCell, Server Group or plan level."
      example:
        exclusionReason: exclusionReason
        inheritedSLAPeriod: 6
        useSystemDefaultSLA: true
        enableAfterDelay: 5
        logSLAMinutes: 6
        inheritedFrom: COMMCELL
        excludeFromSLA: true
        SLAPeriod: 6
    SLAUpdateOptions:
      title: ""
      type: object
      properties:
        useSystemDefaultSLA:
          type: boolean
          description: Flag to set to use System Default Service Level Agreement
          nullable: true
        SLAPeriod:
          type: integer
          description: SLA Period in Days
          format: int32
          nullable: true
        excludeFromSLA:
          type: boolean
          description: Flag to set to exclude plan from SLA
          nullable: true
          x-terraform-statecopy: true
        enableAfterDelay:
          type: integer
          description: Time provided in Unix format. Give 0 to reset any existing
            delay.
          format: int32
          nullable: true
        exclusionReason:
          type: string
          description: Reason for exclusion from SLA
          nullable: true
        logSLAMinutes:
          type: integer
          description: Database log SLA period in Minutes
          format: int32
          nullable: true
      description: "A server meets SLA (Service Level Agreement) when all of its subclients\
        \ have at least one successful backup during the number of days specified\
        \ at the CommCell, Server Group or plan level."
    PlanUserOrGroups:
      title: ""
      type: object
      properties:
        id:
          type: integer
          description: This gives Id of user or user group or external user group
          format: int32
        name:
          type: string
          description: This gives name of user or user group or external user group
        type:
          $ref: "#/components/schemas/UserOrGroupsType"
        sendInvite:
          type: boolean
          description: "If set to true, will send an invite email to the user or group.\
            \ Default is true."
          default: true
      description: Users or User Groups associated with the plan
      example:
        sendInvite: true
        name: name
        id: 4
        type: USER
    UserOrGroupsType:
      title: UserAndUserGroupsType
      type: string
      description: Tells what kind of user or user group it is
      enum:
      - USER
      - USER_GROUP
      - EXTERNAL_USER_GROUP
    LaptopPlanRetentionFileVersions:
      title: ""
      type: object
      properties:
        days:
          type: integer
          description: Retain files for this many days. Year(s) or month(s) need to
            be converted to day(s)
          format: int32
        versions:
          type: integer
          description: Retain this many file versions. This is considered as default
            if no file retention rule is specified.
          format: int32
          default: 5
        dailyVersions:
          type: integer
          description: "Custom version rule: Retain daily versions for this many day(s)"
          format: int32
        weeklyVersions:
          type: integer
          description: "Custom version rule: Retain weekly versions for this many\
            \ week(s)"
          format: int32
        monthlyVersions:
          type: integer
          description: "Custom version rule: Retain monthly versions for this many\
            \ month(s)"
          format: int32
      description: "Can retain file versions for one of following three cases: days\
        \ versions custom versions (daily, weekly monthly) If not defined then, 5\
        \ versions are considered the default setting."
      example:
        monthlyVersions: 1
        versions: 1
        weeklyVersions: 7
        days: 1
        dailyVersions: 6
    ArchivingRules:
      title: ""
      type: object
      properties:
        startCleaningIfLessThan:
          type: integer
          description: "When free disk space falls below specified amount (in percentage),\
            \ start cleaning up the disk"
          format: int32
          default: 50
        stopCleaningIfupto:
          type: integer
          description: "When free disk space more than specified amount (in percentage),\
            \ stop cleaning up the disk"
          format: int32
          default: 80
        fileAccessTimeOlderThan:
          type: integer
          description: "To archive files based on the last accessed date of each file\
            \ within the folder, specify the number of days"
          format: int32
          default: 90
        fileModifiedTimeOlderThan:
          type: integer
          description: "To archive files based on the last modified date of each file\
            \ within the folder, specify the number of days"
          format: int32
          default: 90
        fileCreatedTimeOlderThan:
          type: integer
          description: "To archive files based on the time the files were created\
            \ within the folder, specify the number of days"
          format: int32
          default: 0
        fileSizeGreaterThan:
          type: integer
          description: "To archive files based on the size of the file, specify the\
            \ minimum file size in KB. All files whose size ranges between the minimum\
            \ and maximum values are archived."
          format: int32
          default: 1024
        maximumFileSize:
          type: integer
          description: "To archive files based on the size of the file, specify the\
            \ maximum file size in KB. All files whose size ranges between the minimum\
            \ and maximum values are archived."
          format: int32
          default: 0
        archiveReadOnlyFiles:
          type: boolean
          description: "To archive files based on the Read-Only attribute, set to\
            \ TRUE"
          default: false
        afterArchiving:
          $ref: "#/components/schemas/ArchivingRulesFile"
      description: These rules are enforced only when archiving is set to true
      example:
        startCleaningIfLessThan: 1
        fileModifiedTimeOlderThan: 2
        fileSizeGreaterThan: 9
        archiveReadOnlyFiles: false
        afterArchiving: REPLACE_FILE_WITH_STUB
        stopCleaningIfupto: 5
        fileCreatedTimeOlderThan: 7
        maximumFileSize: 3
        fileAccessTimeOlderThan: 5
    ArchivingRulesFile:
      title: ""
      type: string
      description: "After an archive job, replace the file that meets the archiving\
        \ rules with a stub or delete the file that meets the archiving rules"
      enum:
      - REPLACE_FILE_WITH_STUB
      - DELETE_THE_FILE
    LaptopPlan:
      title: LaptopPlan CustomerManaged
      required:
      - planName
      type: object
      properties:
        planName:
          type: string
        allowedFeatures:
          $ref: "#/components/schemas/LaptopPlanAllowedFeatures"
        backupContent:
          $ref: "#/components/schemas/LaptopPlanBackupContent"
        storageAndSchedule:
          $ref: "#/components/schemas/LaptopPlanStorageAndSchedule"
        retention:
          $ref: "#/components/schemas/LaptopPlanRetention"
        networkResources:
          $ref: "#/components/schemas/LaptopPlanNetworkResources"
        alerts:
          type: array
          items:
            $ref: "#/components/schemas/IdName"
        allowPlanOverride:
          type: boolean
          description: Flag to enable overriding of plan. Plan cannot be overriden
            by default.
          default: false
        overrideRestrictions:
          $ref: "#/components/schemas/LaptopPlanOverrideSettings"
        inviteUsersOrGroups:
          type: array
          description: The users and user groups who should install the end-user Endpoint
            package on their devices.
          items:
            $ref: "#/components/schemas/PlanUserOrGroups"
        parentPlan:
          $ref: "#/components/schemas/IdName"
      description: Create a new Laptop Plan
    LaptopPlanSaaS:
      title: LaptopPlan SaaS
      type: object
      properties:
        disableDLP:
          type: boolean
          description: "Default: False (DLP will be enabled)"
          default: false
    LaptopPlanStorageAndSchedule:
      title: ""
      required:
      - primaryStorage
      type: object
      properties:
        primaryStorage:
          $ref: "#/components/schemas/IdName"
        secondaryStorage:
          $ref: "#/components/schemas/IdName"
        backupFrequency:
          type: integer
          description: Recovery Point Objective (RPO) is the maximum amount of time
            that data can be lost during a service disruption. Your RPO determines
            the frequency of your backup jobs. Your RPO is met through automatic options.
            The time specified in minutes here is your RPO if none of the automatic
            options are met. Default is 480 minutes (8 hours).
          format: int32
          default: 480
      description: ""
    EdgeDriveSettings:
      title: ""
      type: object
      properties:
        indexServer:
          $ref: "#/components/schemas/IdName"
        auditDriveOperations:
          type: boolean
          description: "Enable auditing which logs the activities based on user interaction\
            \ like creating, editing, moving, renaming, downloading or deleting files."
        notificationsForShares:
          type: boolean
          description: Enables alert notification feature which allows the share user
            or share owner to subscribe for share notifications when any activities
            are performed on the Edge Drive or the Collaborative share. The user can
            receive the notifications on the Web Console or as an email notification.
        edgeDriveQuota:
          type: integer
          description: Maximum number of gigabytes that you can store in the Edge
            Drive. Value as -1 means no quota is set.
          format: int32
      example:
        auditDriveOperations: true
        notificationsForShares: true
        edgeDriveQuota: 2
        indexServer: null
    EdgeDriveSettingsPlan:
      title: ""
      required:
      - createNewIndexServer
      type: object
      properties:
        createNewIndexServer:
          type: boolean
          description: "If set to false, uses existing edge index server and requires\
            \ IndexServer IdName to be passed. If set to true, requires client IdName\
            \ and indexCachePath to create a new Index Server."
        indexServer:
          $ref: "#/components/schemas/IdName"
        client:
          $ref: "#/components/schemas/IdName"
        indexCachePath:
          type: string
        auditDriveOperations:
          type: boolean
          description: "Enable auditing which logs the activities based on user interaction\
            \ like creating, editing, moving, renaming, downloading or deleting files."
          default: true
        notificationsForShares:
          type: boolean
          description: Enables alert notification feature which allows the share user
            or share owner to subscribe for share notifications when any activities
            are performed on the Edge Drive or the Collaborative share. The user can
            receive the notifications on the Web Console or as an email notification.
          default: true
        edgeDriveQuota:
          type: integer
          description: Maximum number of gigabytes that you can store in the Edge
            Drive. Giving value as -1 means no quota.
          format: int32
          default: -1
    LaptopPlanBackupContent:
      title: ""
      type: object
      properties:
        windowsIncludedPaths:
          type: array
          description: Paths to include for Windows
          nullable: true
          items:
            type: string
          default:
          - Desktop
          - Documents
          - MigrationAssistant
          x-terraform-statecopy: true
        windowsExcludedPaths:
          type: array
          description: Paths to exclude for Windows
          nullable: true
          items:
            type: string
          default:
          - "<WKF,AppData>"
          - "<WKF,LocalAppData>"
          - Disk Images
          - Executable
          - Temporary Files (Windows)
          - C:\Program Files
          - C:\Program Files (x86)
          - C:\Windows
          x-terraform-statecopy: true
        macIncludedPaths:
          type: array
          description: Paths to include for Mac
          nullable: true
          items:
            type: string
          default:
          - Desktop
          - Documents
          - MigrationAssistant
          x-terraform-statecopy: true
        macExcludedPaths:
          type: array
          description: Paths to exclude for Mac
          nullable: true
          items:
            type: string
          default:
          - Disk Images
          - Executable
          - Temporary Files (Mac)
          - /Library
          - "<WKF,Library>"
          x-terraform-statecopy: true
        unixIncludedPaths:
          type: array
          description: Paths to include for UNIX
          nullable: true
          items:
            type: string
          default:
          - Desktop
          - Documents
          x-terraform-statecopy: true
        unixExcludedPaths:
          type: array
          description: Paths to exclude for UNIX
          nullable: true
          items:
            type: string
          default:
          - Disk Images
          - Executable
          - Temporary Files (Linux)
          x-terraform-statecopy: true
        fileSystemQuota:
          type: integer
          description: Maximum number of gigabytes that you can store in the File
            System. Giving value as -1 means infinite file system quota.
          format: int32
          default: -1
      example:
        windowsIncludedPaths:
        - windowsIncludedPaths
        - windowsIncludedPaths
        windowsExcludedPaths:
        - windowsExcludedPaths
        - windowsExcludedPaths
        unixIncludedPaths:
        - unixIncludedPaths
        - unixIncludedPaths
        macExcludedPaths:
        - macExcludedPaths
        - macExcludedPaths
        fileSystemQuota: 7
        macIncludedPaths:
        - macIncludedPaths
        - macIncludedPaths
        unixExcludedPaths:
        - unixExcludedPaths
        - unixExcludedPaths
    UpdateLaptopPlan:
      title: ""
      type: object
      properties:
        newName:
          type: string
          description: New plan name to update
        general:
          $ref: "#/components/schemas/LaptopPlanUpdateGeneralInfo"
        allowedFeatures:
          $ref: "#/components/schemas/LaptopPlanAllowedFeatures"
        rpo:
          $ref: "#/components/schemas/LaptopPlanUpdateRPO"
        backupContent:
          $ref: "#/components/schemas/LaptopPlanBackupContent"
        retention:
          $ref: "#/components/schemas/LaptopPlanRetention"
        regionToConfigure:
          $ref: "#/components/schemas/IdName"
        associatedUsersAndUserGroups:
          type: array
          items:
            $ref: "#/components/schemas/PlanUserOrGroups"
        alerts:
          type: array
          items:
            $ref: "#/components/schemas/IdName"
        allowPlanOverride:
          type: boolean
          description: Flag to enable overriding of plan
        overrideRestrictions:
          $ref: "#/components/schemas/LaptopPlanOverrideSettings"
        networkResources:
          $ref: "#/components/schemas/LaptopPlanNetworkResources"
        offlineLaptops:
          $ref: "#/components/schemas/AutoRetireDevices"
    AutoRetireDevices:
      title: ""
      type: object
      properties:
        retireAfterDays:
          type: integer
          description: The offline laptops are retired when the number of days are
            met. -1 means never.
          format: int32
          default: -1
        deleteAfterDays:
          type: integer
          description: The offline laptops are automatically deleted when the number
            of days are met. -1 means never.
          format: int32
          default: -1
      example:
        deleteAfterDays: 9
        retireAfterDays: 5
    BackupFrequencyPattern:
      type: object
      properties:
        scheduleFrequencyType:
          type: string
          description: schedule frequency type
          default: DAILY
          enum:
          - MINUTES
          - DAILY
          - WEEKLY
          - MONTHLY
          - YEARLY
        frequency:
          minimum: 1
          type: integer
          description: "Frequency of the schedule based on schedule frequency type\
            \ eg. for Hours, value 2 is 2 hours, for Minutes, 30 is 30 minutes, for\
            \ Daily, 2 is 2 days. for Monthly 2 is it repeats every 2 months"
          format: int32
          default: 1
        weeklyDays:
          type: array
          description: Days of the week for weekly frequency
          nullable: true
          items:
            $ref: "#/components/schemas/DayOfTheWeek"
        dayOfMonth:
          maximum: 31
          minimum: 1
          type: integer
          description: "Day on which to run the schedule, applicable for monthly,\
            \ yearly"
          format: int32
        weekOfMonth:
          $ref: "#/components/schemas/WeekOfTheMonth"
        dayOfWeek:
          $ref: "#/components/schemas/DayOfWeek"
        monthOfYear:
          $ref: "#/components/schemas/MonthOfYear"
        startTime:
          type: integer
          description: "start time of schedule in seconds for daily, weekly, monthly,\
            \ yearly frequency"
          format: int32
          default: 75600
      description: Used to describe the frequency of backup
      example:
        weeklyDays:
        - SUNDAY
        - SUNDAY
        monthOfYear: JANUARY
        dayOfWeek: SUNDAY
        dayOfMonth: 23
        scheduleFrequencyType: DAILY
        weekOfMonth: FIRST
        startTime: 1
        frequency: 1
    ContentIndexingFrequencyPattern:
      allOf:
      - $ref: "#/components/schemas/BackupFrequencyPattern"
      - type: object
        properties:
          startDate:
            type: integer
            description: start date of schedule in epoch format
            format: int32
          exceptions:
            type: array
            description: "Exceptions to when a schedule should not run, either in\
              \ dates or week of month and day"
            items:
              $ref: "#/components/schemas/ScheduleRunException"
    ArchivePlanRPO:
      type: object
      properties:
        archiveFrequency:
          $ref: "#/components/schemas/BackupFrequencyPattern"
        archiveWindow:
          type: array
          description: Archive job will run only in the specified archive window
          nullable: true
          items:
            $ref: "#/components/schemas/DayAndTime"
      description: Recovery Point Objective (RPO) is the maximum amount of time that
        data can be lost during a service disruption. Your RPO determines the frequency
        of your backup jobs.
    ArchivePlanUpdateRPO:
      type: object
      properties:
        backupFrequency:
          $ref: "#/components/schemas/BackupFrequencyPattern"
        backupWindow:
          type: array
          description: Archive job will run only in the specified archive window
          nullable: true
          items:
            $ref: "#/components/schemas/DayAndTime"
        SLA:
          $ref: "#/components/schemas/SLAUpdateOptions"
      description: Recovery Point Objective (RPO) is the maximum amount of time that
        data can be lost during a service disruption. Your RPO determines the frequency
        of your backup jobs.
    ArchivePlanRPODetails:
      type: object
      properties:
        backupFrequency:
          $ref: "#/components/schemas/BackupFrequencyPattern"
        backupWindow:
          type: array
          description: Archive job will run only in the specified archive window
          nullable: true
          items:
            $ref: "#/components/schemas/DayAndTime"
        SLA:
          $ref: "#/components/schemas/SLAOptions"
      description: Recovery Point Objective (RPO) is the maximum amount of time that
        data can be lost during a service disruption. Your RPO determines the frequency
        of your backup jobs.
      example:
        SLA:
          exclusionReason: exclusionReason
          inheritedSLAPeriod: 6
          useSystemDefaultSLA: true
          enableAfterDelay: 5
          logSLAMinutes: 6
          inheritedFrom: COMMCELL
          excludeFromSLA: true
          SLAPeriod: 6
        backupFrequency:
          weeklyDays:
          - SUNDAY
          - SUNDAY
          monthOfYear: JANUARY
          dayOfWeek: SUNDAY
          dayOfMonth: 23
          scheduleFrequencyType: DAILY
          weekOfMonth: FIRST
          startTime: 1
          frequency: 1
        backupWindow:
        - dayOfWeek:
          - null
          - null
          startTime: 1
          endTime: 2
        - dayOfWeek:
          - null
          - null
          startTime: 1
          endTime: 2
    ArchivePlanArchivingRules:
      type: object
      properties:
        fileTimestampMethod:
          $ref: "#/components/schemas/ArchivePlanArchivingTimestamp"
        fileTimestamp:
          type: integer
          description: "To archive files based on the last accessed or modified date\
            \ of each file within the folder, specify the number of days. Should be\
            \ supplied with fileTimestampMethod."
          format: int32
          default: 90
        fileSize:
          minimum: 0
          type: integer
          description: "To archive files based on the size of the file, specify the\
            \ minimum file size in KB."
          format: int32
          default: 1
        afterArchiving:
          $ref: "#/components/schemas/ArchivingRulesFile"
      description: Files which meet both time stamp and file size rules will be archived
      example:
        fileTimestampMethod: LAST_MODIFIED
        afterArchiving: REPLACE_FILE_WITH_STUB
        fileSize: 0
        fileTimestamp: 0
    ArchivePlanArchivingTimestamp:
      type: string
      default: LAST_MODIFIED
      enum:
      - LAST_ACCESSED
      - LAST_MODIFIED
    ArchivePlanOverrideSettings:
      type: object
      properties:
        storagePool:
          $ref: "#/components/schemas/PlanOverrideOptions"
        RPO:
          $ref: "#/components/schemas/PlanOverrideOptions"
        archivingRules:
          $ref: "#/components/schemas/PlanOverrideOptions"
      description: "To allow the derived plans that use this plan as the base plan\
        \ to override the settings, property allowPlanOverride must be true, and then\
        \ select one of the options for Storage pool, RPO and Archiving rules."
      example:
        RPO: null
        archivingRules: null
        storagePool: OPTIONAL
    ArchivePlanInheritSettings:
      title: ArchivePlanInheritSettings
      type: object
      properties:
        basePlan:
          $ref: "#/components/schemas/IdName"
        storagePool:
          $ref: "#/components/schemas/PlanOverridenOptions"
        RPO:
          $ref: "#/components/schemas/PlanOverridenOptions"
        archivingRules:
          $ref: "#/components/schemas/PlanOverridenOptions"
      example:
        RPO: null
        archivingRules: null
        basePlan: null
        storagePool:
          overrideBase: null
          overridden: true
    ArchivingServicePolicy:
      title: ArchivingServicePolicy
      type: object
      properties:
        policyId:
          type: string
          description: Archiving service policy id
        tags:
          type: string
          description: Tag ids
      description: Create Archiving Service Policy Model for Archive Plan
      example:
        policyId: policyId
        tags: tags
    ArchivePlan:
      required:
      - planName
      type: object
      properties:
        planName:
          type: string
        backupDestinations:
          type: array
          items:
            $ref: "#/components/schemas/CreateArchivePlanBackupDestination"
        rpo:
          $ref: "#/components/schemas/ArchivePlanRPO"
        archivingRules:
          $ref: "#/components/schemas/ArchivePlanArchivingRules"
        allowPlanOverride:
          type: boolean
          description: Flag to enable overriding of plan. Plan cannot be overriden
            by default.
          default: false
        overrideRestrictions:
          $ref: "#/components/schemas/ArchivePlanOverrideSettings"
        parentPlan:
          $ref: "#/components/schemas/IdName"
    UpdateArchivePlan:
      type: object
      properties:
        newName:
          type: string
          description: New plan name to update
          nullable: true
        archivingRules:
          $ref: "#/components/schemas/ArchivePlanArchivingRules"
        rpo:
          $ref: "#/components/schemas/ArchivePlanUpdateRPO"
        regionToConfigure:
          $ref: "#/components/schemas/IdName"
        allowPlanOverride:
          type: boolean
          description: "Flag to enable overriding of plan. Once enabled, cannot be\
            \ disabled."
        overrideRestrictions:
          $ref: "#/components/schemas/ArchivePlanOverrideSettings"
    ArchivePlanDetails:
      type: object
      properties:
        plan:
          $ref: "#/components/schemas/IdName"
        archivingRules:
          $ref: "#/components/schemas/ArchivePlanArchivingRules"
        rpo:
          $ref: "#/components/schemas/ArchivePlanRPODetails"
        regionsConfigured:
          type: boolean
          description: Specifies if the destinations are associated to regions
        backupDestinations:
          type: array
          items:
            $ref: "#/components/schemas/ArchivePlanBackupDestination"
        allowPlanOverride:
          type: boolean
          description: Flag to enable overriding of plan
        overrideRestrictions:
          $ref: "#/components/schemas/ArchivePlanOverrideSettings"
        inheritSettings:
          $ref: "#/components/schemas/ArchivePlanInheritSettings"
        parentInheritSettings:
          $ref: "#/components/schemas/ArchivePlanInheritSettings"
        associatedEntities:
          type: array
          items:
            $ref: "#/components/schemas/IdNameCount"
        permissions:
          type: array
          items:
            $ref: "#/components/schemas/IdName"
        archivingServicePolicy:
          $ref: "#/components/schemas/ArchivingServicePolicy"
      example:
        rpo:
          SLA:
            exclusionReason: exclusionReason
            inheritedSLAPeriod: 6
            useSystemDefaultSLA: true
            enableAfterDelay: 5
            logSLAMinutes: 6
            inheritedFrom: COMMCELL
            excludeFromSLA: true
            SLAPeriod: 6
          backupFrequency:
            weeklyDays:
            - SUNDAY
            - SUNDAY
            monthOfYear: JANUARY
            dayOfWeek: SUNDAY
            dayOfMonth: 23
            scheduleFrequencyType: DAILY
            weekOfMonth: FIRST
            startTime: 1
            frequency: 1
          backupWindow:
          - dayOfWeek:
            - null
            - null
            startTime: 1
            endTime: 2
          - dayOfWeek:
            - null
            - null
            startTime: 1
            endTime: 2
        associatedEntities:
        - name: name
          count: 4
          id: 1
        - name: name
          count: 4
          id: 1
        parentInheritSettings: null
        archivingRules:
          fileTimestampMethod: LAST_MODIFIED
          afterArchiving: REPLACE_FILE_WITH_STUB
          fileSize: 0
          fileTimestamp: 0
        backupDestinations:
        - isDefault: true
          copyPrecedence: 1
          retentionPeriodDays: 5961
          planBackupDestination: null
          copyTypeName: DEFAULT_MIRROR
          copyType: SYNCHRONOUS
          storageType: ALL
          sourceCopy: null
          enableDataAging: true
          region:
            displayName: displayName
            name: name
            id: 2
          storagePool:
            deviceType:
              name: DEFAULT
              id: 5
            isArchiveStorage: true
            storageClass: DEFAULT
            retentionPeriodDays: 1
            wormStoragePoolFlag: 5
            name: name
            id: 6
            type: DEDUPLICATION
            region:
              displayName: displayName
              name: name
              id: 2
          overrideRetentionSettings: true
        - isDefault: true
          copyPrecedence: 1
          retentionPeriodDays: 5961
          planBackupDestination: null
          copyTypeName: DEFAULT_MIRROR
          copyType: SYNCHRONOUS
          storageType: ALL
          sourceCopy: null
          enableDataAging: true
          region:
            displayName: displayName
            name: name
            id: 2
          storagePool:
            deviceType:
              name: DEFAULT
              id: 5
            isArchiveStorage: true
            storageClass: DEFAULT
            retentionPeriodDays: 1
            wormStoragePoolFlag: 5
            name: name
            id: 6
            type: DEDUPLICATION
            region:
              displayName: displayName
              name: name
              id: 2
          overrideRetentionSettings: true
        permissions:
        - null
        - null
        allowPlanOverride: true
        archivingServicePolicy:
          policyId: policyId
          tags: tags
        overrideRestrictions:
          RPO: null
          archivingRules: null
          storagePool: OPTIONAL
        inheritSettings:
          RPO: null
          archivingRules: null
          basePlan: null
          storagePool:
            overrideBase: null
            overridden: true
        plan:
          name: name
          id: 0
        regionsConfigured: true
    CreateArchivePlanBackupDestination:
      required:
      - backupDestinationName
      - storagePool
      type: object
      properties:
        backupDestinationName:
          type: string
          description: Backup destination details. Enter the name during creation.
        storagePool:
          $ref: "#/components/schemas/IdName"
        region:
          $ref: "#/components/schemas/IdName"
        sourceCopy:
          $ref: "#/components/schemas/IdName"
        retentionPeriodDays:
          maximum: 9999
          minimum: 1
          type: integer
          description: Retention period in days. -1 can be specified for infinite
            retention.
          format: int32
        overrideRetentionSettings:
          type: boolean
          description: Tells if this copy should use storage pool retention period
            days or the retention defined for this copy. Set as true to use retention
            defined on this copy.
    ArchivePlanBackupDestination:
      type: object
      properties:
        planBackupDestination:
          $ref: "#/components/schemas/IdName"
        isDefault:
          type: boolean
          description: Is this a default backup destination?
        copyType:
          $ref: "#/components/schemas/PlanCopyType"
        copyTypeName:
          $ref: "#/components/schemas/PlanCopyTypeName"
        copyPrecedence:
          type: integer
          description: Order of copy created in storage policy
          format: int32
        storagePool:
          $ref: "#/components/schemas/StoragePool"
        storageType:
          $ref: "#/components/schemas/StorageType"
        sourceCopy:
          $ref: "#/components/schemas/IdName"
        region:
          $ref: "#/components/schemas/IdNameDisplayName"
        enableDataAging:
          type: boolean
          description: Tells if this copy has data aging enabled
        retentionPeriodDays:
          maximum: 9999
          minimum: 1
          type: integer
          description: Retention period in days
          format: int32
        overrideRetentionSettings:
          type: boolean
          description: Tells if this copy should use storage pool retention period
            days or the retention defined for this copy. Set as true to use retention
            defined on this copy.
      description: ""
      example:
        isDefault: true
        copyPrecedence: 1
        retentionPeriodDays: 5961
        planBackupDestination: null
        copyTypeName: DEFAULT_MIRROR
        copyType: SYNCHRONOUS
        storageType: ALL
        sourceCopy: null
        enableDataAging: true
        region:
          displayName: displayName
          name: name
          id: 2
        storagePool:
          deviceType:
            name: DEFAULT
            id: 5
          isArchiveStorage: true
          storageClass: DEFAULT
          retentionPeriodDays: 1
          wormStoragePoolFlag: 5
          name: name
          id: 6
          type: DEDUPLICATION
          region:
            displayName: displayName
            name: name
            id: 2
        overrideRetentionSettings: true
    UpdateArchivePlanBackupDestination:
      title: ""
      type: object
      properties:
        newName:
          type: string
          description: New name for backup destination
        sourceCopy:
          $ref: "#/components/schemas/IdName"
        enableDataAging:
          type: boolean
          description: Tells if this copy has data aging enabled
        retentionPeriodDays:
          maximum: 9999
          minimum: 1
          type: integer
          description: Retention period in days. -1 can be specified for infinite
            retention.
          format: int32
        overrideRetentionSettings:
          type: boolean
          description: Tells if this copy should use storage pool retention period
            days or the retention defined for this copy. Set as true to use retention
            defined on this copy.
    ArchivePlanBackupDestinations:
      type: object
      properties:
        backupdestinations:
          type: array
          nullable: true
          items:
            $ref: "#/components/schemas/ArchivePlanBackupDestination"
        regionsConfigured:
          type: boolean
          description: Specifies if the plan has region-based storage
      example:
        backupdestinations:
        - isDefault: true
          copyPrecedence: 1
          retentionPeriodDays: 5961
          planBackupDestination: null
          copyTypeName: DEFAULT_MIRROR
          copyType: SYNCHRONOUS
          storageType: ALL
          sourceCopy: null
          enableDataAging: true
          region:
            displayName: displayName
            name: name
            id: 2
          storagePool:
            deviceType:
              name: DEFAULT
              id: 5
            isArchiveStorage: true
            storageClass: DEFAULT
            retentionPeriodDays: 1
            wormStoragePoolFlag: 5
            name: name
            id: 6
            type: DEDUPLICATION
            region:
              displayName: displayName
              name: name
              id: 2
          overrideRetentionSettings: true
        - isDefault: true
          copyPrecedence: 1
          retentionPeriodDays: 5961
          planBackupDestination: null
          copyTypeName: DEFAULT_MIRROR
          copyType: SYNCHRONOUS
          storageType: ALL
          sourceCopy: null
          enableDataAging: true
          region:
            displayName: displayName
            name: name
            id: 2
          storagePool:
            deviceType:
              name: DEFAULT
              id: 5
            isArchiveStorage: true
            storageClass: DEFAULT
            retentionPeriodDays: 1
            wormStoragePoolFlag: 5
            name: name
            id: 6
            type: DEDUPLICATION
            region:
              displayName: displayName
              name: name
              id: 2
          overrideRetentionSettings: true
        regionsConfigured: true
    CreateArchivePlanBackupDestinations:
      required:
      - destinations
      type: object
      properties:
        destinations:
          type: array
          description: List of backup destinations to create
          nullable: true
          items:
            $ref: "#/components/schemas/CreateArchivePlanBackupDestination"
        region:
          $ref: "#/components/schemas/IdName"
    UpdateUser:
      type: object
      properties:
        fullName:
          type: string
          description: Change name for existing user
        newName:
          type: string
          description: Change user name for existing user. Username can be used for
            logging-in as an alternate to email-id if duplicate email-ids are present.
          x-terraform-mapping: name
        email:
          type: string
          description: Change email-id for existing user. This email-id can be used
            for logging-in.
        userGroupOperation:
          type: string
          description: "Allows adding to, overwriting and deleting existing user groups.\
            \ default is adding to existing userGroups"
          default: ADD
          enum:
          - ADD
          - DELETE
          - OVERWRITE
          x-terraform-include: false
        userGroups:
          type: array
          description: "Provide a list of userGroups that the user should be a part\
            \ of. Note that for external users, user groups cannot be modified."
          items:
            $ref: "#/components/schemas/IdName"
          x-terraform-include: false
        newPassword:
          type: string
          description: Change existing password for user. validationPassword must
            also be provided when changing password. Password should be in provided
            in Base64 format.
          x-terraform-mapping: password
          x-terraform-sensitive: true
        validationPassword:
          type: string
          description: Provide the old password in Base64 format when updating the
            password. The new password has to be provided in the password tag.
          x-terraform-system: true
        plan:
          $ref: "#/components/schemas/IdName"
        enabled:
          type: boolean
          description: enable or disable the user.
        userPrincipalName:
          type: string
          description: Change User Principal Name(UPN) for existing user. This User
            Principal Name can be used for logging-in.
        authenticationMethod:
          type: string
          description: Change the current authentication method of user. SAML user
            association can be removed using this.
      description: Used to update an existing user.
    UserListResp:
      type: object
      properties:
        numberOfUsers:
          type: integer
          format: int32
        users:
          type: array
          items:
            $ref: "#/components/schemas/UserSummary"
      description: Returns a list of existing users.
      example:
        numberOfUsers: 0
        users:
        - lockInfo:
            isLocked: true
            startTime: 1
            endTime: 5
          name: name
          GUID: GUID
          commcell:
            name: name
          fullName: fullName
          company: null
          id: 6
          numberOfLaptops: 5
          plan:
            name: name
            id: 0
          email: email
          enabled: true
          userPrincipalName: userPrincipalName
        - lockInfo:
            isLocked: true
            startTime: 1
            endTime: 5
          name: name
          GUID: GUID
          commcell:
            name: name
          fullName: fullName
          company: null
          id: 6
          numberOfLaptops: 5
          plan:
            name: name
            id: 0
          email: email
          enabled: true
          userPrincipalName: userPrincipalName
    GetServerGroupsResp:
      type: object
      properties:
        serverGroupCount:
          type: integer
          description: This returns the total number of server groups.
          format: int32
        serverGroups:
          type: array
          items:
            $ref: "#/components/schemas/serverGroupList"
      description: Returns a list of existing server groups which are present.
      example:
        serverGroups:
        - name: name
          globalConfigInfo:
            scopeFilterQuery: scopeFilterQuery
            applyOnAllCommCells: true
            commcells:
            - name: name
              guid: guid
              id: 5
            - name: name
              guid: guid
              id: 5
            scope: scope
            isMarkedForDeletion: true
            name: name
            id: id
            status: status
          commcell:
            name: name
          association: AUTOMATIC
          company:
            name: name
            id: 0
          id: 6
          isCompanySmartClientGroup: true
          isSyncInProgress: true
          tags:
          - name: name
            id: 5
            value: value
          - name: name
            id: 5
            value: value
        - name: name
          globalConfigInfo:
            scopeFilterQuery: scopeFilterQuery
            applyOnAllCommCells: true
            commcells:
            - name: name
              guid: guid
              id: 5
            - name: name
              guid: guid
              id: 5
            scope: scope
            isMarkedForDeletion: true
            name: name
            id: id
            status: status
          commcell:
            name: name
          association: AUTOMATIC
          company:
            name: name
            id: 0
          id: 6
          isCompanySmartClientGroup: true
          isSyncInProgress: true
          tags:
          - name: name
            id: 5
            value: value
          - name: name
            id: 5
            value: value
        serverGroupCount: 0
    CreateCommcellGroupReq:
      type: object
      properties:
        name:
          type: string
          description: Used to set the name of the commcell group.
        description:
          type: string
          description: Used to set the description of the commcell group.
        serviceCommcells:
          type: array
          items:
            $ref: "#/components/schemas/ServiceCommcellInfo"
      description: Request object for creating commcell group.
    UpdateCommcellGroupReq:
      type: object
      properties:
        name:
          type: string
          description: Used to rename commcell group.
        description:
          type: string
          description: Used to update the description of the commcell group.
        serviceCommcells:
          type: array
          items:
            $ref: "#/components/schemas/ServiceCommcellInfo"
        serviceCommcellsOperationType:
          $ref: "#/components/schemas/ListOperationType"
      description: Request object for updating commcell group.
    GetCommcellGroupsResp:
      type: object
      properties:
        CommcellGroups:
          type: array
          items:
            $ref: "#/components/schemas/CommcellGroupInfo"
      description: Returns a list of existing commcell groups which are present.
      example:
        CommcellGroups:
        - ServiceCommcells:
          - Version: Version
            activeManagementStatus: DISABLED
            Commcell: null
          - Version: Version
            activeManagementStatus: DISABLED
            Commcell: null
          Company: null
          GlobalConfigInfo:
            scopeFilterQuery: scopeFilterQuery
            applyOnAllCommCells: true
            commcells:
            - name: name
              guid: guid
              id: 5
            - name: name
              guid: guid
              id: 5
            scope: scope
            isMarkedForDeletion: true
            name: name
            id: id
            status: status
          AssociationCount: 0
          description: description
          CommcellGroup:
            GUID: GUID
            name: name
            id: 0
        - ServiceCommcells:
          - Version: Version
            activeManagementStatus: DISABLED
            Commcell: null
          - Version: Version
            activeManagementStatus: DISABLED
            Commcell: null
          Company: null
          GlobalConfigInfo:
            scopeFilterQuery: scopeFilterQuery
            applyOnAllCommCells: true
            commcells:
            - name: name
              guid: guid
              id: 5
            - name: name
              guid: guid
              id: 5
            scope: scope
            isMarkedForDeletion: true
            name: name
            id: id
            status: status
          AssociationCount: 0
          description: description
          CommcellGroup:
            GUID: GUID
            name: name
            id: 0
    CreateServerGroupPreviewResp:
      type: object
      properties:
        servers:
          type: array
          items:
            $ref: "#/components/schemas/IdName"
      description: List of servers affected by create server group operation
      example:
        servers:
        - name: name
          id: 0
        - name: name
          id: 0
    CreateServerGroupResp:
      type: object
      properties:
        serverGroupInfo:
          $ref: "#/components/schemas/IdNameGUID"
      example:
        serverGroupInfo:
          GUID: GUID
          name: name
          id: 0
    CreateCommcellGroupResp:
      type: object
      properties:
        commcellGroupInfo:
          $ref: "#/components/schemas/IdNameGUID"
      description: "Returns id, name and guid of the commcell group created."
      example:
        commcellGroupInfo:
          GUID: GUID
          name: name
          id: 0
    CreateServerGroup:
      type: object
      properties:
        name:
          type: string
        serverGroupType:
          $ref: "#/components/schemas/ServerGroupType"
        description:
          type: string
        automaticAssociation:
          $ref: "#/components/schemas/AutomaticServerGroupAssociationDetails"
        virtualAssociation:
          $ref: "#/components/schemas/VirtualServerGroupAssociationDetails"
        manualAssociation:
          $ref: "#/components/schemas/ManualServerGroupAssociationDetails"
        globalConfigInfo:
          $ref: "#/components/schemas/CreateGlobalConfigInfo"
      description: "Create a new server group, operation supported for three ServerGroupTypes\
        \ MANUAL, AUTOMATIC, VIRTUAL_MACHINE"
    UpdateServerGroup:
      type: object
      properties:
        serverGroup:
          $ref: "#/components/schemas/IdName"
        serverGroupType:
          $ref: "#/components/schemas/ServerGroupType"
        description:
          type: string
        automaticAssociation:
          $ref: "#/components/schemas/AutomaticServerGroupAssociationDetails"
        virtualAssociation:
          $ref: "#/components/schemas/VirtualServerGroupAssociationDetails"
        manualAssociation:
          $ref: "#/components/schemas/ManualServerGroupAssociationDetails"
      description: "Update server group, operation supported for three ServerGroupTypes\
        \ MANUAL, AUTOMATIC, VIRTUAL_MACHINE"
    ServerGroupType:
      type: string
      format: ""
      enum:
      - MANUAL
      - AUTOMATIC
      - VIRTUAL_MACHINE
    ClientScopeType:
      type: string
      format: ""
      enum:
      - COMMCELL
      - COMPANY
      - USER
      - USERGROUP
    ClientScopeDetails:
      type: object
      properties:
        clientScopeType:
          $ref: "#/components/schemas/ClientScopeType"
        entityInfo:
          $ref: "#/components/schemas/IdName"
    associatedClientId:
      title: associatedClientId
      type: object
      properties:
        clientID:
          type: integer
          format: int32
    clientAssociationServerGroupContent:
      title: clientAssociationServerGroupContent
      type: object
      properties:
        associationRule:
          type: array
          items:
            $ref: "#/components/schemas/VirtualMachinecontent"
        associatedClient:
          $ref: "#/components/schemas/associatedClientId"
    VirtualServerGroupAssociationDetails:
      type: object
      properties:
        virtualInstance:
          $ref: "#/components/schemas/VSVendor"
        virtualServers:
          type: array
          items:
            $ref: "#/components/schemas/IdName"
        rules:
          $ref: "#/components/schemas/RuleGroupContent"
        clientAssociation:
          type: array
          items:
            $ref: "#/components/schemas/clientAssociationServerGroupContent"
    ServerRuleGroupOperation:
      type: string
      format: ""
      enum:
      - AND
      - OR
      - NOT
    ServerRuleGroups:
      type: object
      properties:
        match:
          $ref: "#/components/schemas/ServerRuleGroupOperation"
        ruleGroup:
          type: array
          description: List of rule groups
          items:
            $ref: "#/components/schemas/ServerRuleGroup"
    ServerRuleGroup:
      type: object
      properties:
        match:
          $ref: "#/components/schemas/ServerRuleGroupOperation"
        rules:
          type: array
          description: List of rules
          items:
            $ref: "#/components/schemas/ServerRule"
    ServerRule:
      type: object
      properties:
        ruleName:
          type: string
          enum:
          - APP_TYPE
          - CLIENT_GROUP
          - CLIENT_GROUPLIST
          - USES_LIBRARY
          - STORAGE_POLICY
          - STORAGE_POLICYLIST
          - BACKUP_ACTIVITY_ENABLED_FOR_CLIENT
          - CASE_MANAGER_CLIENTS
          - CLIENT_PROP
          - CLIENT_ACTS_AS_PROXY
          - CLIENT_ASSOCIATED_WITH_PLAN
          - CLIENT_BACKUP_ACTIVITY_ENABLED
          - CLIENT_BY_SCHEDULE_INTERVAL
          - CLIENT_CIDR_RANGE
          - CLIENTS_RELEASE16PLUS_SP_LEVEL_CONSTRAINT
          - CLIENT_DESCRIPTION
          - CLIENT_DISPLAY_NAME
          - CLIENT_EXCLUDED_FROM_SLA
          - CLIENTGROUP_NAME
          - CLIENT_CIDR_RANGE_IPV6
          - CLIENT_ISDELETEDVM
          - CLIENT_HAS_CONNECTIVITY_ISSUES
          - CLIENT_NAME
          - CLIENT_NEEDS_UPDATES
          - CLIENT_OFFLINE
          - CLIENT_ONLINE
          - CLIENT_ONLINE_IN_LAST_30_DAYS
          - CLIENT_ONLINE_IN_LAST_N_DAYS
          - CLIENT_USES_STORAGEPOLICY
          - CLIENT_VERSION
          - COMPARE_CLIENT_CS_VERSION
          - CLIENT_ASSOCIATED_ADUSERGROUP
          - IS_COMPANY_CLIENT
          - CLIENT_ASSOC_SCHDPOLICY
          - CLIENT_ASSOCIATED_TO_TOPOLOGY_WITH_REGION
          - VSA_BACKEDUP_CLIENT
          - CLIENT_INDEX_MAINFOLIST
          - CLIENT_OS_INFOLIST
          - CLIENT_BY_PERMISSION
          - CLIENT_BY_ROLE
          - VSA_DISCOVER_CLIENT
          - CLIENTGROUP_TAGLIST
          - CLIENT_MEETS_SLA
          - CLIENTS_OF_RESELLER
          - USERGROUPLIST
          - CLIENT_IDA_ASSOCIATED_ADUSERGROUP
          - CLIENT_WITH_ASSOCIATED_REGION
          - CLIENTS_WITH_ATTACHED_STORAGE
          - CLIENT_WITH_BACKUP_SCHEDULE
          - CLIENT_WITH_ENABLED_BACKUP_SCHEDULE
          - CLIENT_ENCRYPTION_STATE
          - CLIENT_FETSIZE_LE_10GB
          - CLIENT_IMPROPER_DECONF_SUBCLIENT
          - CLIENT_INDEXINGV1
          - CLIENT_INDEXINGV2
          - CLIENTINFRASTRUCTUREROLE_LIST
          - CLIENT_LICENSELIST
          - CLIENT_LONG_RUNNING_JOBS_N_DAYS
          - CLIENT_WITH_NO_ARCHIVE_DATA
          - CLIENTS_WITH_ONEPASS_ENABLED
          - CLIENT_WITH_ASSOCIATED_SP
          - CLIENT_WITH_SYNTHETICFULL_BACKUP
          - CLIENT_TAGLIST
          - IS_COMMCELL_CLIENT
          - COMPANY_CLIENT_ASSOCIATIONS
          - COMPANY_INSTALLED_CLIENT_ASSOCIATIONS
          - ANALYZER_SERVERS_CLIENT
          - DAYS_SINCE_CLIENT_CREATED
          - DAYS_SINCE_LAST_CLIENT_BKP
          - EXTERNAL_GROUP_CLIENT_OWNER
          - HAC_CLUSTER_CLIENT
          - HOST_NAME
          - MACLIENTS_WITH_STORAGEPOOLS
          - CLIENT_OWNER_INACTIVE_ADUSER
          - SOLR_SERVERS_CLIENT
          - LOCAL_GROUP_CLIENT_OWNER
          - MEDIAAGENT_HAS_LUCENE_INDEX_ROLELIST
          - MEDIAAGENT_HAS_LUCENE_INDEX_ROLES
          - MAS_FOR_CLIENTS_IN_GROUP
          - MAS_FOR_CLIENTS_IN_GROUPLIST
          - CLIENT_GATEWAY_FOR_INSTALLATION
          - OS_TYPE
          - OS_VERSION
          - PACKAGE_INSTALLED
          - PRODUCT_VERSION
          - PSEUDO_CLIENTS
          - RESTORE_ACTIVITY_ENABLED_FOR_CLIENT
          - SNAP_BACKUP_CLIENTS
          - CLIENT_CONSECUTIVE_BACKUP_FAILURES
          - SUBCLIENT_NAME
          - TIMEZONE
          - TIMEZONELIST
          - TIMEZONE_REGIONLIST
          - USER_CLIENT_OWNER
          - USER_CLIENT_ASSOCIATIONS
          - USER_DESCRIPTION_CONTAINS
          - USERGROUP_CLIENT_ASSOCIATIONS
          - USERGROUP_DESCRIPTION_CONTAINS
          - VM_NO_CONTENT
          - VMHYPER_IN_CLIENTGROUP
        ruleValue:
          type: string
          description: Primary value for the rule
        ruleSecValue:
          type: string
          description: "Secondary value used for BETWEEN and NOT_BETWEEN matchCondition.\
            \ For ruleName which have enum values (like OS_TYPE), this is used to\
            \ store displayName."
        matchCondition:
          $ref: "#/components/schemas/matchesWithEnum"
    matchesWithEnum:
      type: string
      format: ""
      enum:
      - IS_TRUE
      - IS_FALSE
      - CONTAINS
      - DOES_NOT_CONTAIN
      - IS
      - IS_NOT
      - STARTS_WITH
      - ENDS_WITH
      - EQUAL_TO
      - NOT_EQUAL_TO
      - GREATER_THAN
      - LESS_THAN
      - GREATER_THAN_OR_EQUAL_TO
      - LESS_THAN_OR_EQUAL_TO
      - BETWEEN
      - NOT_IN
      - ANY_IN_SELECTION
      - NOT_IN_SELECTION
      - IN
      - NOT_BETWEEN
    AutomaticServerGroupAssociationDetails:
      type: object
      properties:
        clientScope:
          $ref: "#/components/schemas/ClientScopeDetails"
        serverGroupRule:
          $ref: "#/components/schemas/ServerRuleGroups"
        confirmRuleChange:
          type: boolean
          description: Confirm that server group rule impacts server of a specific
            company smart client group only
    ManualServerGroupAssociationDetails:
      type: object
      properties:
        associatedservers:
          type: array
          description: List of associated servers
          items:
            $ref: "#/components/schemas/IdName"
    serverGroupList:
      type: object
      properties:
        name:
          type: string
          description: Name of server group.
        id:
          type: integer
          description: Id of server group.
          format: int32
        association:
          $ref: "#/components/schemas/ServerGroupAssociation"
        isSyncInProgress:
          type: boolean
          description: "If true, server group is synchronizing associated servers."
        isCompanySmartClientGroup:
          type: boolean
          description: "If true, server group is a company smart client group."
        company:
          $ref: "#/components/schemas/IdName"
        globalConfigInfo:
          $ref: "#/components/schemas/GlobalConfigInfo"
        tags:
          type: array
          description: Array of all the tags associated with server group
          items:
            $ref: "#/components/schemas/IdNameValue"
        commcell:
          $ref: "#/components/schemas/CommcellInfo"
      example:
        name: name
        globalConfigInfo:
          scopeFilterQuery: scopeFilterQuery
          applyOnAllCommCells: true
          commcells:
          - name: name
            guid: guid
            id: 5
          - name: name
            guid: guid
            id: 5
          scope: scope
          isMarkedForDeletion: true
          name: name
          id: id
          status: status
        commcell:
          name: name
        association: AUTOMATIC
        company:
          name: name
          id: 0
        id: 6
        isCompanySmartClientGroup: true
        isSyncInProgress: true
        tags:
        - name: name
          id: 5
          value: value
        - name: name
          id: 5
          value: value
    CommcellGroupInfo:
      type: object
      properties:
        CommcellGroup:
          $ref: "#/components/schemas/IdNameGUID"
        Company:
          $ref: "#/components/schemas/IdNameGUID"
        AssociationCount:
          type: integer
          description: Commcell association info.
          format: int32
        GlobalConfigInfo:
          $ref: "#/components/schemas/GlobalConfigInfo"
        ServiceCommcells:
          type: array
          items:
            $ref: "#/components/schemas/ServiceCommcellInfo"
        description:
          type: string
          description: Description of the commcell group.
      example:
        ServiceCommcells:
        - Version: Version
          activeManagementStatus: DISABLED
          Commcell: null
        - Version: Version
          activeManagementStatus: DISABLED
          Commcell: null
        Company: null
        GlobalConfigInfo:
          scopeFilterQuery: scopeFilterQuery
          applyOnAllCommCells: true
          commcells:
          - name: name
            guid: guid
            id: 5
          - name: name
            guid: guid
            id: 5
          scope: scope
          isMarkedForDeletion: true
          name: name
          id: id
          status: status
        AssociationCount: 0
        description: description
        CommcellGroup:
          GUID: GUID
          name: name
          id: 0
    ServiceCommcellInfo:
      type: object
      properties:
        Commcell:
          $ref: "#/components/schemas/IdNameGUID"
        Version:
          type: string
          description: Version of the service commcell.
        activeManagementStatus:
          type: string
          description: Returns active management status of the service commcell.
          enum:
          - DISABLED
          - INPROGRESS
          - ENABLED
          - FAILED
      example:
        Version: Version
        activeManagementStatus: DISABLED
        Commcell: null
    ServerGroup:
      type: object
      properties:
        serverGroup:
          $ref: "#/components/schemas/IdName"
        description:
          type: string
        general:
          $ref: "#/components/schemas/generalInfoServerGroup"
        security:
          type: array
          items:
            $ref: "#/components/schemas/SecurityAssoc"
        activityControl:
          $ref: "#/components/schemas/activityControl"
        associatedServers:
          type: array
          items:
            $ref: "#/components/schemas/serverDetails"
        powerManagement:
          $ref: "#/components/schemas/IdName"
        fileExceptions:
          $ref: "#/components/schemas/fileExceptionsDetail"
        blackoutWindow:
          type: array
          items:
            $ref: "#/components/schemas/blackoutWindowDetails"
      example:
        activityControl:
          dataRestore: true
          dataAging: true
          databackup: true
        general:
          autoDiscover: true
          enableDataEncryption: true
          region: null
        security:
        - role: null
          isCreatorAssociation: true
          externalUserGroup:
            providerId: 5
            name: name
            id: 1
            providerName: providerName
          permissionList:
          - permissionId: 5
            exclude: true
            type: ALL_CATEGORIES
            categoryName: categoryName
            categoryId: 2
            permissionName: permissionName
          - permissionId: 5
            exclude: true
            type: ALL_CATEGORIES
            categoryName: categoryName
            categoryId: 2
            permissionName: permissionName
          user: null
          userGroup: null
        - role: null
          isCreatorAssociation: true
          externalUserGroup:
            providerId: 5
            name: name
            id: 1
            providerName: providerName
          permissionList:
          - permissionId: 5
            exclude: true
            type: ALL_CATEGORIES
            categoryName: categoryName
            categoryId: 2
            permissionName: permissionName
          - permissionId: 5
            exclude: true
            type: ALL_CATEGORIES
            categoryName: categoryName
            categoryId: 2
            permissionName: permissionName
          user: null
          userGroup: null
        fileExceptions:
          useGroupFilters: true
          windowsFilters:
          - windowsFilters
          - windowsFilters
          unixFilters:
          - unixFilters
          - unixFilters
        blackoutWindow:
        - doNotSubmitJob: true
          betweenDates: true
          doNotRunJob:
          - dayTimeEnd: 1
            dayTimeStart: 6
            ofWeeks:
            - FIRST
            - FIRST
            onDays:
            - SUNDAY
            - SUNDAY
          - dayTimeEnd: 1
            dayTimeStart: 6
            ofWeeks:
            - FIRST
            - FIRST
            onDays:
            - SUNDAY
            - SUNDAY
          endDate: 5
          name: name
          backupOperations:
            incrementalAndDifferential: true
            syntheticFull: true
            transactionLog: true
            full: true
          startDate: 5
        - doNotSubmitJob: true
          betweenDates: true
          doNotRunJob:
          - dayTimeEnd: 1
            dayTimeStart: 6
            ofWeeks:
            - FIRST
            - FIRST
            onDays:
            - SUNDAY
            - SUNDAY
          - dayTimeEnd: 1
            dayTimeStart: 6
            ofWeeks:
            - FIRST
            - FIRST
            onDays:
            - SUNDAY
            - SUNDAY
          endDate: 5
          name: name
          backupOperations:
            incrementalAndDifferential: true
            syntheticFull: true
            transactionLog: true
            full: true
          startDate: 5
        serverGroup:
          name: name
          id: 0
        description: description
        associatedServers:
        - agent:
          - null
          - null
          os: os
          updateStatus: updateStatus
          name: name
          id: 0
          version: version
        - agent:
          - null
          - null
          os: os
          updateStatus: updateStatus
          name: name
          id: 0
          version: version
        powerManagement: null
    doNotRunJobDetails:
      type: object
      properties:
        onDays:
          type: array
          items:
            $ref: "#/components/schemas/DayOfTheWeek"
        ofWeeks:
          type: array
          items:
            $ref: "#/components/schemas/WeekOfMonth"
        dayTimeStart:
          type: integer
          description: "day time start in seconds, during which the operation will\
            \ not run."
          format: int32
        dayTimeEnd:
          type: integer
          description: "day time end in seconds, during which the operation will not\
            \ run."
          format: int32
      example:
        dayTimeEnd: 1
        dayTimeStart: 6
        ofWeeks:
        - FIRST
        - FIRST
        onDays:
        - SUNDAY
        - SUNDAY
    backupOperationsList:
      type: object
      properties:
        full:
          type: boolean
          description: Full job is selected or not for blackout window
          nullable: true
        syntheticFull:
          type: boolean
          description: Synthetic Full job is selected or not for blackout window
          nullable: true
        transactionLog:
          type: boolean
          description: Transaction Log job is selected or not for blackout window
          nullable: true
        incrementalAndDifferential:
          type: boolean
          description: Incremental and Differential job is selected or not for blackout
            window
          nullable: true
      example:
        incrementalAndDifferential: true
        syntheticFull: true
        transactionLog: true
        full: true
    blackoutWindowDetails:
      type: object
      properties:
        name:
          type: string
          description: Name of the blackout window operation rule
        backupOperations:
          $ref: "#/components/schemas/backupOperationsList"
        doNotRunJob:
          type: array
          items:
            $ref: "#/components/schemas/doNotRunJobDetails"
        betweenDates:
          type: boolean
          description: "Between these dates, do not run job"
        startDate:
          type: integer
          description: "Start date in seconds, during which the operation will not\
            \ run"
          format: int32
        endDate:
          type: integer
          description: "End date in seconds, during which the operation will not run"
          format: int32
        doNotSubmitJob:
          type: boolean
          description: To skip a scheduled job
      example:
        doNotSubmitJob: true
        betweenDates: true
        doNotRunJob:
        - dayTimeEnd: 1
          dayTimeStart: 6
          ofWeeks:
          - FIRST
          - FIRST
          onDays:
          - SUNDAY
          - SUNDAY
        - dayTimeEnd: 1
          dayTimeStart: 6
          ofWeeks:
          - FIRST
          - FIRST
          onDays:
          - SUNDAY
          - SUNDAY
        endDate: 5
        name: name
        backupOperations:
          incrementalAndDifferential: true
          syntheticFull: true
          transactionLog: true
          full: true
        startDate: 5
    fileExceptionsDetail:
      type: object
      properties:
        useGroupFilters:
          type: boolean
          description: To apply the filters to all the subclients in the server group.
        windowsFilters:
          type: array
          items:
            type: string
        unixFilters:
          type: array
          items:
            type: string
      example:
        useGroupFilters: true
        windowsFilters:
        - windowsFilters
        - windowsFilters
        unixFilters:
        - unixFilters
        - unixFilters
    serverDetails:
      type: object
      properties:
        id:
          type: integer
          description: "Id of server, which is part of server group."
          format: int32
        name:
          type: string
          description: "Name of server, which is part of server group."
        agent:
          type: array
          items:
            $ref: "#/components/schemas/IdName"
        version:
          type: string
          description: Service pack version of server.
        os:
          type: string
          description: Operating system of server.
        updateStatus:
          type: string
          description: update status of server.
      example:
        agent:
        - null
        - null
        os: os
        updateStatus: updateStatus
        name: name
        id: 0
        version: version
    activityControl:
      type: object
      properties:
        databackup:
          type: boolean
          description: Data Backup is enabled or not
        dataRestore:
          type: boolean
          description: Data Restore is enabled or not
        dataAging:
          type: boolean
          description: Data Aging is enabled or not
      example:
        dataRestore: true
        dataAging: true
        databackup: true
    generalInfoServerGroup:
      type: object
      properties:
        region:
          $ref: "#/components/schemas/IdName"
        enableDataEncryption:
          type: boolean
          description: Allow owners to enable data encryption
        autoDiscover:
          type: boolean
          description: "if enabled then after every 24 hours, according to each server's\
            \ individual Commvault service schedule, the software discovers the applications\
            \ on each server and installs a Commvault software package for each application\
            \ that is found."
      example:
        autoDiscover: true
        enableDataEncryption: true
        region: null
    UserSummary:
      title: ""
      type: object
      properties:
        id:
          type: integer
          description: User id
          format: int32
          x-terraform-id: true
        name:
          type: string
          description: The user name of the user.
        GUID:
          type: string
          description: globally unique identifier
        email:
          type: string
          description: Email-id of the user. This email-id can be used for logging
            in the user.
        fullName:
          type: string
          description: full name of the user
        plan:
          $ref: "#/components/schemas/IdName"
        enabled:
          type: boolean
          description: Gives information on whether the user is enabled or disabled.
        lockInfo:
          $ref: "#/components/schemas/LockProperties"
        numberOfLaptops:
          type: integer
          description: Returns the number of laptops associated with the user
          format: int32
        company:
          $ref: "#/components/schemas/IdName"
        commcell:
          $ref: "#/components/schemas/CommcellInfo"
        userPrincipalName:
          type: string
          description: User Principal Name(UPN) of the user. This User Principal Name
            can be used for logging in the user.
      example:
        lockInfo:
          isLocked: true
          startTime: 1
          endTime: 5
        name: name
        GUID: GUID
        commcell:
          name: name
        fullName: fullName
        company: null
        id: 6
        numberOfLaptops: 5
        plan:
          name: name
          id: 0
        email: email
        enabled: true
        userPrincipalName: userPrincipalName
    LockProperties:
      type: object
      properties:
        isLocked:
          type: boolean
          description: Returns if the user is locked or unlocked.
        startTime:
          type: integer
          description: "If the user is locked, it returns user lock start time in\
            \ unix time format."
          format: int32
        endTime:
          type: integer
          description: "If the user is locked, it returns user lock end time in unix\
            \ time format."
          format: int32
      example:
        isLocked: true
        startTime: 1
        endTime: 5
    CreateUsers:
      required:
      - users
      type: object
      properties:
        users:
          type: array
          items:
            $ref: "#/components/schemas/CreateUser"
          x-terraform-flatten: true
      description: Used to create single or multiple users.
    CreateUser:
      required:
      - email
      type: object
      properties:
        fullName:
          type: string
          description: Used to provide a name to the new user.
        name:
          type: string
          description: "Used to provide the new user with a username. This username\
            \ can be used for logging in the user instead of email-id when duplicate\
            \ email-ids are present. For external user, it is necessary to provide\
            \ the domain name along with the username (domainName\\\\username). To\
            \ create a company user, the company id or name needs to be provided in\
            \ the company entity."
        externalProviderId:
          type: integer
          description: Please provide this entity only when creating an AD user. Not
            needed for local and company users.
          format: int32
          x-terraform-include: false
        email:
          type: string
          description: Used to provide an email-id to the new user. This email-id
            is used for logging in the user. Please note that email ids are compulsory
            for company and local users and optional for external users.
        company:
          $ref: "#/components/schemas/IdName"
        userGroups:
          type: array
          description: Provide a list of userGroups that the user should be a part
            of. Either id or name or both can be provided.
          items:
            $ref: "#/components/schemas/IdName"
          x-terraform-include: false
        useSystemGeneratePassword:
          type: boolean
          description: "Choose to provide a system generated password to the user\
            \ instead of providing your own password. An email will be sent to the\
            \ user to reset the password. If it is set to true, password tag need\
            \ not be provided. If it is set to false, password needs to be provided\
            \ in the password tag in Base64 format."
        password:
          type: string
          description: Used to provide a password to the user being created. This
            will be accepted when the useSystemGeneratePassword tag is false. The
            password has to be provided in Base64 format.
          x-terraform-sensitive: true
        inviteUser:
          type: boolean
          description: User will receive an email to install backup software package
            on their device if this is set to true.
        plan:
          $ref: "#/components/schemas/IdName"
    InfrastructureTypes:
      type: string
      description: "These are different types of infrastructure provided for storage\
        \ in companies. It can be rented from the provider, owned or can be a hybrid.\
        \ Cannot move back to rented storage from owned storage and cannot move back\
        \ to rented storage/owned storage from rented and owned storage."
      format: ""
      enum:
      - RENTED_STORAGE
      - OWN_STORAGE
      - RENTED_AND_OWN_STORAGE
    CompanyStatus:
      type: object
      properties:
        deactivate:
          type: boolean
          description: Used to activate or deactivate the company. Not applicable
            for SaaS.
        options:
          $ref: "#/components/schemas/DeactivationOptions"
    DeactivationOptions:
      type: object
      properties:
        disableBackup:
          type: boolean
          description: Enable or disable backup. This option can only be set or unset
            for a deactivated company.
        disableRestore:
          type: boolean
          description: Enable or disable restore. This option can only be set or unset
            for a deactivated company.
        disableLogin:
          type: boolean
          description: Enable or disable login. This option can only be set or unset
            for a deactivated company.
    UpdateCompany:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/CompanyStatus"
        newName:
          type: string
          description: Used to change the name of a company
        general:
          $ref: "#/components/schemas/General"
        security:
          type: array
          items:
            $ref: "#/components/schemas/UpdateSecurityAssoc"
        emailSettings:
          $ref: "#/components/schemas/EmailSettings"
        sites:
          $ref: "#/components/schemas/Sites"
        tenantOperators:
          type: array
          items:
            $ref: "#/components/schemas/TenantOperator"
        plans:
          type: array
          description: Provide a list of data protection plans to use for the company.
            The plans that are provided are the plans that the tenant administrator
            can choose from.
          items:
            $ref: "#/components/schemas/IdName"
        defaultPlans:
          type: array
          description: Refers to default data protection plans to use for the company.
          items:
            $ref: "#/components/schemas/DefaultPlan"
        fileExceptions:
          $ref: "#/components/schemas/FileExceptions"
      description: Used to update the properties of an existing company
    DefaultPlan:
      type: object
      properties:
        subtype:
          $ref: "#/components/schemas/SubTypes"
        id:
          type: integer
          description: "Id of the default plan. Either id or name can be provided.\
            \ If both id and name are provided, id is given first preference."
          format: int32
        name:
          type: string
          description: "Name of the default plan. Either id or name can be provided.\
            \ If both id and name are provided, id is given first preference."
      description: Refers to default data protection plans to use for the company.
        There can be a default plan for each subtype.
    SubTypes:
      type: string
      format: ""
      enum:
      - ANY
      - DLO
      - SERVER
      - LAPTOP
      - DATABASE
      - SNAP
      - FS_SERVER
      - VSA_SERVER
      - VSA_REPLICATION
      - EXCHANGE_USER
      - EXCHANGE_JOURNAL
      - DATA_CLASSIFICATION
      - E_DISCOVERY
      - OFFICE_365
      - ARCHIVER
      - FSIBMIVTL
      - DYNAMICS_365
      - CDM
      - ObjectStore
    General:
      type: object
      properties:
        newAlias:
          type: string
          description: The company domain or NetBIOS name
        emailSuffix:
          type: string
          description: Supported domains for the company
        authcodeForInstallation:
          type: boolean
          description: Enable or disable authcode for installation.
        upnInsteadOfEmail:
          type: boolean
          description: Enable or disable the use of User Pricipal Name in place of
            an email address.
        twoFactorAuth:
          $ref: "#/components/schemas/TwoFactorAuth"
        resellerMode:
          type: boolean
          description: "Enable reseller mode. A reseller is a user or user groups\
            \ who can operate multiple tenant environments. The service provider can\
            \ assign one or more resellers as the tenant operator for a company. The\
            \ reseller can switch to any of their assigned tenant environment and\
            \ operate on the company as a tenant user. Once enabled, the reseller\
            \ mode cannot be disabled."
        enableDataEncryption:
          type: boolean
          description: Enable or disable data encryption
        autoDiscoverApp:
          type: boolean
          description: "Enable or Disable Auto Discover Applications.When Auto discover\
            \ applications is enabled, each member server of this company is searched\
            \ once every 24 hours to discover any applications that need to be backed\
            \ up. For any newly-discovered and unprotected applications, the agent\
            \ software is automatically installed on the server."
        infrastructureType:
          $ref: "#/components/schemas/InfrastructureTypes"
        supportedSolutions:
          type: array
          items:
            $ref: "#/components/schemas/SupportedSolution"
        assignLaptopOwners:
          $ref: "#/components/schemas/OwnerAssignmentTypes"
        serviceCommcells:
          type: array
          description: Service commcells associated with the master commcell.
          items:
            $ref: "#/components/schemas/IdName"
      example:
        emailSuffix: emailSuffix
        authcodeForInstallation: true
        autoDiscoverApp: true
        twoFactorAuth:
          all: true
          userGroups:
          - name: name
            id: 0
          - name: name
            id: 0
          enable: true
        enableDataEncryption: true
        infrastructureType: RENTED_STORAGE
        supportedSolutions:
        - FILE_SERVER
        - FILE_SERVER
        upnInsteadOfEmail: true
        resellerMode: true
        serviceCommcells:
        - null
        - null
        newAlias: newAlias
        assignLaptopOwners: LOGGED_IN_ACTIVE_DIRECTORY_USERS
    externalUserGroup:
      type: object
      properties:
        id:
          type: integer
          description: User Group Id
          format: int32
        name:
          type: string
          description: External Group Name
        providerId:
          type: integer
          description: Provider id
          format: int32
        providerName:
          type: string
          description: Provider Name
      description: External User Group Entity
      example:
        providerId: 5
        name: name
        id: 1
        providerName: providerName
    GetSpareGroupProperties:
      title: GetSpareGroupProperties
      type: object
      properties:
        name:
          type: string
          description: Name of the spare group
        typeId:
          type: integer
          description: Spare group type Id
          format: int32
        lowWaterMark:
          type: integer
          description: Low watermark value set for the spare group
          format: int32
        highWaterMark:
          type: integer
          description: High watermark value set for the spare group
          format: int32
        defaultMediaTypeId:
          type: integer
          description: Id of default media type selected for spare group
          format: int32
        defaultMediaTypeName:
          type: string
          description: Name of default media type selected for spare group
      description: Response structure to get all spare group properties
      example:
        name: name
        defaultMediaTypeId: 5
        lowWaterMark: 6
        typeId: 0
        defaultMediaTypeName: defaultMediaTypeName
        highWaterMark: 1
    SecurityAssoc:
      type: object
      properties:
        user:
          $ref: "#/components/schemas/IdName"
        userGroup:
          $ref: "#/components/schemas/IdName"
        externalUserGroup:
          $ref: "#/components/schemas/externalUserGroup"
        isCreatorAssociation:
          type: boolean
        role:
          $ref: "#/components/schemas/IdName"
        permissionList:
          type: array
          items:
            $ref: "#/components/schemas/PermissionResp"
      description: A list of users or user groups each having a specific set of roles
        that determine the kind of operations they can perform on the entity.
      example:
        role: null
        isCreatorAssociation: true
        externalUserGroup:
          providerId: 5
          name: name
          id: 1
          providerName: providerName
        permissionList:
        - permissionId: 5
          exclude: true
          type: ALL_CATEGORIES
          categoryName: categoryName
          categoryId: 2
          permissionName: permissionName
        - permissionId: 5
          exclude: true
          type: ALL_CATEGORIES
          categoryName: categoryName
          categoryId: 2
          permissionName: permissionName
        user: null
        userGroup: null
    UpdateSecurityAssoc:
      type: object
      properties:
        user:
          $ref: "#/components/schemas/IdName"
        userGroup:
          $ref: "#/components/schemas/IdName"
        role:
          $ref: "#/components/schemas/IdName"
      description: "A list of users or user groups each having a specific set of roles\
        \ that determine the kind of operations they can perform on the entity. Either\
        \ id/name of the user/usergroup/roles can be provided. If both id and name\
        \ are provided, id will be taken into consideration."
      x-terraform-ignore-child: name
    PermissionResp:
      type: object
      properties:
        permissionId:
          type: integer
          format: int32
        permissionName:
          type: string
        categoryId:
          type: integer
          format: int32
        categoryName:
          type: string
        type:
          type: string
          description: Returns the type of association.
          enum:
          - ALL_CATEGORIES
          - CATEGORY_ENTITY
          - PERMISSION_ENTITY
        exclude:
          type: boolean
          description: Flag to specify if this is included permission or excluded
            permission.
      description: "List of permissions associated with the entity. Either categoryId\
        \ and categoryName or permissionId and permissionName will be returned. If\
        \ categoryId or categoryName is returned, all the corresponding permissions\
        \ in the category are associated with the entity."
      example:
        permissionId: 5
        exclude: true
        type: ALL_CATEGORIES
        categoryName: categoryName
        categoryId: 2
        permissionName: permissionName
    OwnerAssignmentTypes:
      type: string
      description: "Used to assign owners to laptops automatically after installation.\
        \ The owners can be all the logged in active directory users, the first user\
        \ to login into the laptop after installation or the users belonging to the\
        \ laptop's local user group list. The option to assign automatically can also\
        \ be disabled."
      format: ""
      enum:
      - LOGGED_IN_ACTIVE_DIRECTORY_USERS
      - FIRST_LOGGED_IN_USER
      - LAPTOP_USER_GROUPS_AS_OWNERS
      - DO_NOT_ASSIGN
    SupportedSolution:
      type: string
      description: This facilitates the selection of solutions for the company by
        it's provider.
      enum:
      - FILE_SERVER
      - VIRTUALIZATION
      - LAPTOP
      - DATABASES
      - EXCHANGE
      - ARCHIVING
      - CLOUD_APPS
      - SHAREPOINT
      - ACTIVATE
      - ACTIVE_DIRECTORY
      - OFFICE_365
      - BIGDATA_APPS
      - G_SUITE
      - SALESFORCE
      - REPLICATION
      - KUBERNETES
    TenantOperator:
      type: object
      properties:
        user:
          $ref: "#/components/schemas/IdName"
        userGroup:
          $ref: "#/components/schemas/IdName"
        role:
          $ref: "#/components/schemas/IdName"
      description: "These are users and groups who will be allowed to manage the company.\
        \ Different roles can be assigned for each tenant operator for the company.\
        \ Either id/name of the user/usergroup/roles can be provided. If both id and\
        \ name are provided, id will be taken into consideration."
      example:
        role: null
        user: null
        userGroup: null
    EmailSettings:
      type: object
      properties:
        senderName:
          type: string
          description: Name of the sender sending the email
        senderEmail:
          type: string
          description: Email id of the sender
      example:
        senderName: senderName
        senderEmail: senderEmail
    Sites:
      type: object
      properties:
        primarySiteName:
          type: string
          description: Primary site name
        secondarySiteNames:
          type: array
          description: Secondary site names
          items:
            type: string
      example:
        primarySiteName: primarySiteName
        secondarySiteNames:
        - secondarySiteNames
        - secondarySiteNames
    FileExceptions:
      type: object
      properties:
        windows:
          type: string
          description: Window file paths to be excluded.Comma separated string.
        unix:
          type: string
          description: Unix file paths to be excluded.Comma separated string.
        useCompanyGlobalFilter:
          type: boolean
          description: "Enable or disable the use of the file path filters on all\
            \ subclients. By default, it is enabled when filters are added for either\
            \ Windows or Unix or both."
      example:
        useCompanyGlobalFilter: true
        windows: windows
        unix: unix
    CompanyListResponse:
      type: object
      properties:
        companies:
          type: array
          items:
            $ref: "#/components/schemas/CompanySummary"
        companyCount:
          type: integer
          description: Total number of companies
          format: int32
      description: List of existing companies
      example:
        companies:
        - associatedEntitiesCount: 6
          operators:
          - role: null
            fullName: fullName
            userGroup: null
            user: null
          - role: null
            fullName: fullName
            userGroup: null
            user: null
          name: name
          GUID: GUID
          commcell:
            displayName: displayName
            name: name
          alias: alias
          primaryContacts:
          - name: name
            id: 0
          - name: name
            id: 0
          id: 0
          isReseller: true
          status: UNKNOWN
        - associatedEntitiesCount: 6
          operators:
          - role: null
            fullName: fullName
            userGroup: null
            user: null
          - role: null
            fullName: fullName
            userGroup: null
            user: null
          name: name
          GUID: GUID
          commcell:
            displayName: displayName
            name: name
          alias: alias
          primaryContacts:
          - name: name
            id: 0
          - name: name
            id: 0
          id: 0
          isReseller: true
          status: UNKNOWN
        companyCount: 1
    CompanySummary:
      type: object
      properties:
        id:
          type: integer
          description: Company Id
          format: int32
        name:
          type: string
          description: Company name
        GUID:
          type: string
          description: GUID of the company
        alias:
          type: string
          description: The company domain or NetBIOS name
        isReseller:
          type: boolean
          description: "Enable reseller mode. A reseller is a user or user groups\
            \ who can operate multiple tenant environments. The service provider can\
            \ assign one or more resellers as the tenant operator for a company. The\
            \ reseller can switch to any of their assigned tenant environment and\
            \ operate on the company as a tenant user. Once enabled, the reseller\
            \ mode cannot be disabled."
        primaryContacts:
          type: array
          items:
            $ref: "#/components/schemas/IdName"
        associatedEntitiesCount:
          type: integer
          description: Gives the number of entities associated with the company
          format: int32
        status:
          type: string
          description: Gives the company status
          enum:
          - UNKNOWN
          - ACTIVE
          - DEACTIVATED
          - DELETED
        commcell:
          $ref: "#/components/schemas/CommcellNameDisplayNameInfo"
        operators:
          type: array
          description: List of operators configured for the company
          items:
            $ref: "#/components/schemas/CompanyOperator"
      example:
        associatedEntitiesCount: 6
        operators:
        - role: null
          fullName: fullName
          userGroup: null
          user: null
        - role: null
          fullName: fullName
          userGroup: null
          user: null
        name: name
        GUID: GUID
        commcell:
          displayName: displayName
          name: name
        alias: alias
        primaryContacts:
        - name: name
          id: 0
        - name: name
          id: 0
        id: 0
        isReseller: true
        status: UNKNOWN
    CompanyOperator:
      type: object
      properties:
        fullName:
          type: string
          description: Full name of the operator
        userGroup:
          $ref: "#/components/schemas/IdName"
        user:
          $ref: "#/components/schemas/IdName"
        role:
          $ref: "#/components/schemas/IdName"
      description: Details of the company operator
      example:
        role: null
        fullName: fullName
        userGroup: null
        user: null
    Company:
      type: object
      properties:
        id:
          type: integer
          format: int32
        creationTime:
          type: integer
          description: The date and time of the creation of the company.
          format: int32
        general:
          $ref: "#/components/schemas/General"
        security:
          type: array
          items:
            $ref: "#/components/schemas/SecurityAssoc"
        contacts:
          type: array
          items:
            $ref: "#/components/schemas/ContactResp"
        emailSettings:
          $ref: "#/components/schemas/EmailSettings"
        sites:
          $ref: "#/components/schemas/Sites"
        plans:
          type: array
          items:
            $ref: "#/components/schemas/IdName"
        operatorsOperationType:
          type: integer
          format: int32
        tenantOperators:
          type: array
          items:
            $ref: "#/components/schemas/TenantOperator"
        fileExceptions:
          $ref: "#/components/schemas/FileExceptions"
      description: Used to return details of a company whose companyId has been provided
      example:
        general:
          emailSuffix: emailSuffix
          authcodeForInstallation: true
          autoDiscoverApp: true
          twoFactorAuth:
            all: true
            userGroups:
            - name: name
              id: 0
            - name: name
              id: 0
            enable: true
          enableDataEncryption: true
          infrastructureType: RENTED_STORAGE
          supportedSolutions:
          - FILE_SERVER
          - FILE_SERVER
          upnInsteadOfEmail: true
          resellerMode: true
          serviceCommcells:
          - null
          - null
          newAlias: newAlias
          assignLaptopOwners: LOGGED_IN_ACTIVE_DIRECTORY_USERS
        security:
        - role: null
          isCreatorAssociation: true
          externalUserGroup:
            providerId: 5
            name: name
            id: 1
            providerName: providerName
          permissionList:
          - permissionId: 5
            exclude: true
            type: ALL_CATEGORIES
            categoryName: categoryName
            categoryId: 2
            permissionName: permissionName
          - permissionId: 5
            exclude: true
            type: ALL_CATEGORIES
            categoryName: categoryName
            categoryId: 2
            permissionName: permissionName
          user: null
          userGroup: null
        - role: null
          isCreatorAssociation: true
          externalUserGroup:
            providerId: 5
            name: name
            id: 1
            providerName: providerName
          permissionList:
          - permissionId: 5
            exclude: true
            type: ALL_CATEGORIES
            categoryName: categoryName
            categoryId: 2
            permissionName: permissionName
          - permissionId: 5
            exclude: true
            type: ALL_CATEGORIES
            categoryName: categoryName
            categoryId: 2
            permissionName: permissionName
          user: null
          userGroup: null
        operatorsOperationType: 7
        creationTime: 6
        fileExceptions:
          useCompanyGlobalFilter: true
          windows: windows
          unix: unix
        plans:
        - null
        - null
        emailSettings:
          senderName: senderName
          senderEmail: senderEmail
        tenantOperators:
        - role: null
          user: null
          userGroup: null
        - role: null
          user: null
          userGroup: null
        sites:
          primarySiteName: primarySiteName
          secondarySiteNames:
          - secondarySiteNames
          - secondarySiteNames
        id: 0
        contacts:
        - name: name
          id: id
          fullname: fullname
          email: email
        - name: name
          id: id
          fullname: fullname
          email: email
    TwoFactorAuth:
      type: object
      properties:
        enable:
          type: boolean
          description: "enable or disable two factor authentication. if enabled, all\
            \ or userGroups value should be provided."
        all:
          type: boolean
          description: "enable two factor authentication for every entity. if set\
            \ to false when Two factor authentication is enabled, provide userGroupId\
            \ or userGroupName. If both are provided, userGroupId is taken"
        userGroups:
          type: array
          items:
            $ref: "#/components/schemas/IdName"
      example:
        all: true
        userGroups:
        - name: name
          id: 0
        - name: name
          id: 0
        enable: true
    ContactResp:
      type: object
      properties:
        email:
          type: string
        name:
          type: string
        id:
          type: string
        fullname:
          type: string
      example:
        name: name
        id: id
        fullname: fullname
        email: email
    CreateUserResp:
      type: object
      properties:
        users:
          type: array
          items:
            $ref: "#/components/schemas/IdNameGUID"
          x-terraform-id: Id
      example:
        users:
        - GUID: GUID
          name: name
          id: 0
        - GUID: GUID
          name: name
          id: 0
    TestK8sModifierReq:
      properties:
        resourceYAML:
          type: string
          description: Payload(Yaml) to test against the restore modifiers.
        restoreModifierListYAML:
          type: string
          description: YAML of Restore Modifier(s) to be tested.
      description: Request body for K8s Modifier Test Operation
    K8sRestoreModifierAPIReq:
      type: object
      properties:
        modifierYAML:
          type: string
          description: Restore Modifier YAML
      description: Request body for K8s Modifier
    K8sRestoreModifierAPIResp:
      type: object
      properties:
        outputYAML:
          type: string
          description: Output YAML
        resp:
          $ref: "#/components/schemas/GenericResp"
      description: Response body for K8s Modifier
      example:
        resp:
          errorMessage: errorMessage
          errorCode: 0
        outputYAML: outputYAML
    CreateCompany:
      required:
      - alias
      - name
      type: object
      properties:
        name:
          type: string
          description: name of the company to be created.
        email:
          type: string
          description: "Email address for the tenant administrator. If provided, contactName\
            \ for the tenant administrator also needs to be provided"
        contactName:
          type: string
          description: "Name of the tenant administrator. If provided, email also\
            \ needs to be provided."
        plans:
          type: array
          description: Select data protection plans to use for the company. The plans
            that are selected are the plans that the tenant administrator can choose
            from.
          items:
            $ref: "#/components/schemas/IdName"
        alias:
          type: string
          description: The company domain or NetBIOS name
        emailSuffix:
          type: string
          description: Supported domains for the company
        serviceCommcells:
          type: array
          description: "Used to add service commcells to the master commcell. Either\
            \ id or name can be provided. If both are provided, id will be taken into\
            \ consideration."
          items:
            $ref: "#/components/schemas/IdName"
        sendWelcomeEmail:
          type: boolean
          description: send a welcome email on company creation to the tenant administrator.
        primaryDomain:
          type: string
          description: The primary domain name of the company being created. Can be
            added only if an external domain is already present.
      description: Used to create a new company
    User:
      type: object
      properties:
        id:
          type: integer
          format: int32
          x-terraform-id: true
        name:
          type: string
        GUID:
          type: string
        fullName:
          type: string
        email:
          type: string
        enabled:
          type: boolean
        lockInfo:
          $ref: "#/components/schemas/LockProperties"
        description:
          type: string
          description: Returns the description of the user which was specified at
            the time of user creation or modification.
        serviceType:
          $ref: "#/components/schemas/ServiceTypes"
        lastLoggedIn:
          type: integer
          description: Returns the most recent time the user was logged in. It is
            provided in unix format.
          format: int64
        company:
          $ref: "#/components/schemas/IdName"
        plan:
          $ref: "#/components/schemas/IdName"
        authenticationMethod:
          type: string
          description: Specifies authentication method used by user. Default value
            is Commcell.
        authenticationMethodServer:
          $ref: "#/components/schemas/IdNameCompany"
        associatedUserGroups:
          type: array
          items:
            $ref: "#/components/schemas/IdNameProvider"
        userPrincipalName:
          type: string
      description: Returns the details of of the user whose userId has been provided
      example:
        serviceType: UNKNOWN
        GUID: GUID
        fullName: fullName
        description: description
        associatedUserGroups:
        - provider: null
          name: name
          id: 5
        - provider: null
          name: name
          id: 5
        enabled: true
        lockInfo:
          isLocked: true
          startTime: 1
          endTime: 5
        authenticationMethod: authenticationMethod
        name: name
        lastLoggedIn: 6
        company:
          name: name
          id: 0
        authenticationMethodServer:
          name: name
          company: null
          id: 1
        id: 0
        plan: null
        email: email
        userPrincipalName: userPrincipalName
    ServiceTypes:
      type: string
      description: "The values that are returned by serviceType are- 0(unknown),1(commserver\
        \ users),2(Active directory users),3(domino directory service users),4(hosted\
        \ exchange users),5(company users),12(dummy domain users)"
      format: ""
      enum:
      - UNKNOWN
      - COMMSERVE
      - ACTIVE_DIRECTORY
      - DOMINO_DIRECTORTY_SERVICE
      - HOSTED_EXCHANGE
      - ORGANIZATIONS
      - DUMMY_DOMAIN
    AssocEntity:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        type:
          type: string
          description: type of entities associated.
        role:
          $ref: "#/components/schemas/IdName"
        permissionList:
          $ref: "#/components/schemas/PermissionResp"
      description: Used to provide the entities associated.
      example:
        role: null
        name: name
        permissionList:
          permissionId: 5
          exclude: true
          type: ALL_CATEGORIES
          categoryName: categoryName
          categoryId: 2
          permissionName: permissionName
        id: 6
        type: type
    Mode:
      type: string
      enum:
      - EdgeMode
    AuthenticationServer:
      title: AuthenticationServer
      type: object
      properties:
        authenticationMethod:
          type: string
          description: Tells this authenticator belongs to which authentication method
          enum:
          - SAML
          - AD
          - LOCAL
        id:
          type: integer
          description: Identity server id
          format: int32
        name:
          type: string
          description: Identity server name
        type:
          type: string
          description: Identity server service type in Enum string
          enum:
          - SAML
          - ACTIVE_DIRECTORY
          - APPLE_DIRECTORY_SERVICE
          - ORACLE_DIRECTORY
          - OPEN_LDAP
          - LDAP_SERVER
          - OTHER
        samlType:
          type: string
          description: Name of the IdP. Available only if type is SAML.
          enum:
          - UNKNOWN
          - AZURE
          - ADFS
          - OKTA
        company:
          $ref: "#/components/schemas/IdName"
      example:
        authenticationMethod: SAML
        name: name
        samlType: UNKNOWN
        company:
          name: name
          id: 0
        id: 0
        type: SAML
    UserAuthenticationMethods:
      title: UserAuthenticationMethods
      type: object
      properties:
        authenticationMethod:
          type: string
          description: Specifies authentication method used by user.
          enum:
          - SAML
          - AD
          - LOCAL
        authenticators:
          type: array
          items:
            $ref: "#/components/schemas/AuthenticationServer"
        error:
          $ref: "#/components/schemas/GenericResp"
      example:
        authenticationMethod: SAML
        authenticators:
        - authenticationMethod: SAML
          name: name
          samlType: UNKNOWN
          company:
            name: name
            id: 0
          id: 0
          type: SAML
        - authenticationMethod: SAML
          name: name
          samlType: UNKNOWN
          company:
            name: name
            id: 0
          id: 0
          type: SAML
        error:
          errorMessage: errorMessage
          errorCode: 0
    TFAMode:
      type: string
      enum:
      - DISABLED
      - ENABLED_FOR_ALL
      - ENABLED_FOR_USER_GROUP_INCLUSION
    LocalAuthenticationDetails:
      type: object
      properties:
        mode:
          $ref: "#/components/schemas/TFAMode"
        userGroups:
          type: array
          nullable: true
          items:
            $ref: "#/components/schemas/IdName"
      description: Local authentication can be enabled for all users or specific user
        groups or completely disabled.
      example:
        mode: DISABLED
        userGroups:
        - name: name
          id: 0
        - name: name
          id: 0
    LocalAuthenticationDetailsResponse:
      type: object
      properties:
        localAuthenticationInfo:
          $ref: "#/components/schemas/LocalAuthenticationDetails"
        error:
          $ref: "#/components/schemas/GenericResp"
      example:
        localAuthenticationInfo:
          mode: DISABLED
          userGroups:
          - name: name
            id: 0
          - name: name
            id: 0
        error:
          errorMessage: errorMessage
          errorCode: 0
    HttpMethod:
      type: string
      enum:
      - NONE
      - GET
      - POST
      - PUT
      - PATCH
      - DELETE
    GlobalConfigCommcellInfo:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        guid:
          type: string
      example:
        name: name
        guid: guid
        id: 5
    GlobalConfigInfo:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        commcells:
          type: array
          description: List of Service CommCells where the global configuration is
            applied
          items:
            $ref: "#/components/schemas/GlobalConfigCommcellInfo"
        scope:
          type: string
          description: The entity level at which the config is applied.
        scopeFilterQuery:
          type: string
          description: CommCellEntityCache filter query string used for filtering
            the scope
        applyOnAllCommCells:
          type: boolean
          description: "Decides whether the global configuration should be applied\
            \ to all the Service commcells, including the newly created ones"
        isMarkedForDeletion:
          type: boolean
          description: Indicates whether global configuration deletion has been started.
        status:
          type: string
      description: Only applicable on Global CommCells
      example:
        scopeFilterQuery: scopeFilterQuery
        applyOnAllCommCells: true
        commcells:
        - name: name
          guid: guid
          id: 5
        - name: name
          guid: guid
          id: 5
        scope: scope
        isMarkedForDeletion: true
        name: name
        id: id
        status: status
    CreateGlobalConfigInfo:
      type: object
      properties:
        name:
          type: string
        commcells:
          type: array
          description: List of Service CommCells where the global configuration should
            be applied
          items:
            $ref: "#/components/schemas/GlobalConfigCommcellInfo"
        scope:
          type: string
          description: The entity level at which the config has to be applied.
        scopeFilterQuery:
          type: string
          description: CommCellEntityCache filter query string using for filtering
            the scope
        applyOnAllCommCells:
          type: boolean
          description: "Decides whether the global configuration should be applied\
            \ to all the Service commcells, including the newly created ones"
        actionOnLocalEntity:
          type: string
          description: Action that will be taken on the local entity that has the
            same name as the global entity that needs to be created
          enum:
          - CREATE_NEW
          - TAKE_OVER
          - FAIL_IF_EXIST
      description: Only applicable to Global CommCells. Not applicable for SaaS.
    StorageListSummary:
      type: object
      properties:
        id:
          type: integer
          description: id of the storage pool
          format: int32
        name:
          type: string
          description: storage pool name
        storagePoolType:
          type: string
          enum:
          - DEDUPLICATION
          - SECONDARY_COPY
          - NON_DEDUPLICATION
          - SCALE_OUT
        status:
          type: string
          description: mentions if the storage pool is enabled
        capacity:
          type: integer
          description: provides the capacity of the storage pool. Provided in megabytes
          format: int32
        freeSpace:
          type: integer
          description: provides the free space available on the storage pool. Provided
            in megabytes.
          format: int32
        libraryVendorType:
          type: integer
          description: Gives the storage vendor of the storage pool.
          format: int32
        storageType:
          type: string
          description: Indicates the type of storage for a storage pool.
          enum:
          - ALL
          - DISK
          - CLOUD
          - HYPERSCALE
          - TAPE
        company:
          $ref: "#/components/schemas/IdName"
        commcell:
          $ref: "#/components/schemas/IdName"
        sizeOnDisk:
          type: integer
          description: It indicates the amount of space consumed by storage pool.
          format: int64
        cloudStorageClass:
          $ref: "#/components/schemas/IdName"
        region:
          $ref: "#/components/schemas/IdNameDisplayName"
      example:
        freeSpace: 1
        sizeOnDisk: 5
        capacity: 6
        libraryVendorType: 5
        storagePoolType: DEDUPLICATION
        cloudStorageClass: null
        name: name
        commcell: null
        storageType: ALL
        company:
          name: name
          id: 0
        id: 0
        region:
          displayName: displayName
          name: name
          id: 2
        status: status
    DedupePath:
      type: object
      properties:
        path:
          type: string
        mediaAgent:
          $ref: "#/components/schemas/IdName"
    EncryptionTypes:
      type: string
      description: The different types of encryption keys that can be used for encrypting
        the data. The values are case sensitive
      format: ""
      enum:
      - BlowFish
      - AES
      - DES3
      - GOST
      - Serpent
      - Twofish
    Encryption:
      type: object
      properties:
        encrypt:
          type: boolean
        keyLength:
          type: integer
          description: "Different keylengths are present for different kinds of ciphers.\
            \ Blowfish,Twofish,AES and Serpent all accept both 128 and 256. DES3 accepts\
            \ only 192. GOST accepts only 256. "
          format: int32
        cipher:
          $ref: "#/components/schemas/EncryptionTypes"
        keyProvider:
          $ref: "#/components/schemas/IdName"
      description: Different ways in which data can be encrypted.
      example:
        cipher: BlowFish
        keyLength: 7
        encrypt: true
        keyProvider:
          name: name
          id: 0
    CloudStorage:
      title: CloudStorage
      required:
      - cloudType
      - mediaAgent
      - name
      type: object
      properties:
        name:
          type: string
          description: Name of the cloud storage library
        mediaAgent:
          $ref: "#/components/schemas/IdName"
      description: ""
    Alibaba:
      title: Alibaba Cloud Object Storage Service
      description: ""
      allOf:
      - $ref: "#/components/schemas/CloudStorage"
      - required:
        - bucket
        - cloudType
        - credentials
        - storageClass
        type: object
        properties:
          cloudType:
            type: string
            description: Name of cloud vendor
            enum:
            - Alibaba Cloud Object Storage Service
          serviceHost:
            type: string
            description: IP address or fully qualified domain name or URL for the
              cloud library based on cloud vendor
            default: oss.aliyuncs.com
          credentials:
            $ref: "#/components/schemas/IdName"
          bucket:
            type: string
            description: Name of bucket
          storageClass:
            type: string
            description: Appropriate storage class for your account
            enum:
            - Bucket's default
            - Standard
            - Standard - Infrequent access
            - Archive
            - Standard/Archive (Combined Storage Tiers)
            - Infrequent Access/Archive (Combined Storage Tiers)
      - $ref: "#/components/schemas/DedupeStorageList"
    AlibabaBucket:
      title: Alibaba Cloud Object Storage Service
      description: ""
      allOf:
      - required:
        - bucket
        - cloudType
        - credentials
        - mediaAgent
        - storageClass
        type: object
        properties:
          cloudType:
            type: string
            description: Name of cloud vendor
            enum:
            - Alibaba Cloud Object Storage Service
          mediaAgent:
            $ref: "#/components/schemas/IdName"
          serviceHost:
            type: string
            description: IP address or fully qualified domain name or URL for the
              cloud library based on cloud vendor
            default: oss.aliyuncs.com
          credentials:
            $ref: "#/components/schemas/IdName"
          bucket:
            type: string
            description: Name of bucket
          storageClass:
            type: string
            description: Appropriate storage class for your account
            enum:
            - Bucket's default
            - Standard
            - Standard - Infrequent access
            - Archive
            - Standard/Archive (Combined Storage Tiers)
            - Infrequent Access/Archive (Combined Storage Tiers)
      - $ref: "#/components/schemas/CloudStorageProxy"
    AlibabaBucketContent:
      title: Alibaba Cloud Object Storage Service
      description: ""
      allOf:
      - required:
        - cloudType
        - mediaAgent
        type: object
        properties:
          cloudType:
            type: string
            description: Name of cloud vendor
            enum:
            - Alibaba Cloud Object Storage Service
          mediaAgent:
            $ref: "#/components/schemas/IdName"
          serviceHost:
            type: string
            description: IP address or fully qualified domain name or URL for the
              cloud library based on cloud vendor
            default: oss.aliyuncs.com
          credentials:
            $ref: "#/components/schemas/IdName"
          bucket:
            type: string
            description: Name of bucket
          storageClass:
            type: string
            description: Appropriate storage class for your account
            enum:
            - Bucket's default
            - Standard
            - Standard - Infrequent access
            - Archive
            - Standard/Archive (Combined Storage Tiers)
            - Infrequent Access/Archive (Combined Storage Tiers)
      - $ref: "#/components/schemas/CloudStorageProxy"
      - $ref: "#/components/schemas/CloudStorageAdvanced"
      - $ref: "#/components/schemas/ModifyCloudBucketConfiguration"
    AlibabaBucketContentResp:
      title: Alibaba Cloud Object Storage Service
      description: ""
      allOf:
      - $ref: "#/components/schemas/BucketsResp"
      - type: object
        properties:
          cloudType:
            type: string
            description: Name of cloud vendor
            enum:
            - Alibaba Cloud Object Storage Service
          mediaAgent:
            $ref: "#/components/schemas/IdName"
          serviceHost:
            type: string
            description: IP address or fully qualified domain name or URL for the
              cloud library based on cloud vendor
          credentials:
            $ref: "#/components/schemas/IdName"
          bucket:
            type: string
            description: Name of bucket
          storageClass:
            type: string
            description: Appropriate storage class for your account
            enum:
            - Bucket's default
            - Standard
            - Standard - Infrequent access
            - Archive
            - Standard/Archive (Combined Storage Tiers)
            - Infrequent Access/Archive (Combined Storage Tiers)
      - $ref: "#/components/schemas/CloudStorageProxy"
      - $ref: "#/components/schemas/CloudStorageAdvanced"
    AmazonS3:
      title: Amazon S3
      description: ""
      allOf:
      - $ref: "#/components/schemas/CloudStorage"
      - required:
        - authentication
        - bucket
        - cloudType
        - serviceHost
        - storageClass
        type: object
        properties:
          cloudType:
            type: string
            description: Name of cloud vendor
            enum:
            - Amazon S3
            x-terraform-always-update: true
            x-terraform-constant: Amazon S3
          serviceHost:
            type: string
            description: IP address or fully qualified domain name or URL for the
              cloud library based on cloud vendor
            example: "s3.[region].amazonaws.com"
          authentication:
            type: string
            description: Authentication type for the cloud storage server
            enum:
            - Access and secret keys
            - AWS IAM role policy
            - AWS STS assume role
            - AWS STS assume role with IAM role policy
          arnRole:
            type: string
            description: Needed for AWS STS assume role and AWS STS assume role with
              IAM role policy
          credentials:
            $ref: "#/components/schemas/IdName"
          bucket:
            type: string
            description: Name of bucket
          storageClass:
            type: string
            description: Appropriate storage class for your account
            enum:
            - Standard
            - Reduced Redundancy Storage
            - Standard - Infrequent access
            - One zone - Infrequent access
            - Intelligent tiering
            - S3 Glacier
            - Standard/Glacier (Combined Storage Tiers)
            - Standard-IA/Glacier (Combined Storage Tiers)
            - One Zone-IA/Glacier (Combined Storage Tiers)
            - Intelligent-Tiering/Glacier (Combined Storage Tiers)
            - S3 Glacier Deep Archive
            - Standard/Deep Archive (Combined Storage Tiers)
            - Standard-IA/Deep Archive (Combined Storage Tiers)
            - One Zone-IA/Deep Archive (Combined Storage Tiers)
            - Intelligent-Tiering/Deep Archive (Combined Storage Tiers)
      - $ref: "#/components/schemas/DedupeStorageList"
    AmazonS3Bucket:
      title: Amazon S3
      description: ""
      allOf:
      - required:
        - authentication
        - bucket
        - cloudType
        - mediaAgent
        - serviceHost
        - storageClass
        type: object
        properties:
          cloudType:
            type: string
            description: Name of cloud vendor
            enum:
            - Amazon S3
            x-terraform-always-update: true
            x-terraform-constant: Amazon S3
          mediaAgent:
            $ref: "#/components/schemas/IdName"
          serviceHost:
            type: string
            description: IP address or fully qualified domain name or URL for the
              cloud library based on cloud vendor
            example: "s3.[region].amazonaws.com"
          authentication:
            type: string
            description: Authentication type for the cloud storage server
            enum:
            - Access and secret keys
            - AWS IAM role policy
            - AWS STS assume role
            - AWS STS assume role with IAM role policy
          arnRole:
            type: string
            description: Needed for AWS STS assume role and AWS STS assume role with
              IAM role policy
          credentials:
            $ref: "#/components/schemas/IdName"
          bucket:
            type: string
            description: Name of bucket
          storageClass:
            type: string
            description: Appropriate storage class for your account
            enum:
            - Standard
            - Reduced Redundancy Storage
            - Standard - Infrequent access
            - One zone - Infrequent access
            - Intelligent tiering
            - S3 Glacier
            - Standard/Glacier (Combined Storage Tiers)
            - Standard-IA/Glacier (Combined Storage Tiers)
            - One Zone-IA/Glacier (Combined Storage Tiers)
            - Intelligent-Tiering/Glacier (Combined Storage Tiers)
            - S3 Glacier Deep Archive
            - Standard/Deep Archive (Combined Storage Tiers)
            - Standard-IA/Deep Archive (Combined Storage Tiers)
            - One Zone-IA/Deep Archive (Combined Storage Tiers)
            - Intelligent-Tiering/Deep Archive (Combined Storage Tiers)
      - $ref: "#/components/schemas/CloudStorageProxy"
    AmazonS3BucketContent:
      title: Amazon S3
      description: ""
      allOf:
      - required:
        - cloudType
        - mediaAgent
        type: object
        properties:
          cloudType:
            type: string
            description: Name of cloud vendor
            enum:
            - Amazon S3
            x-terraform-always-update: true
            x-terraform-constant: Amazon S3
          mediaAgent:
            $ref: "#/components/schemas/IdName"
          serviceHost:
            type: string
            description: IP address or fully qualified domain name or URL for the
              cloud library based on cloud vendor
            example: "s3.[region].amazonaws.com"
          authentication:
            type: string
            description: Authentication type for the cloud storage server
            enum:
            - Access and secret keys
            - AWS IAM role policy
            - AWS STS assume role
            - AWS STS assume role with IAM role policy
          arnRole:
            type: string
            description: Needed for AWS STS assume role and AWS STS assume role with
              IAM role policy
          credentials:
            $ref: "#/components/schemas/IdName"
          bucket:
            type: string
            description: Name of bucket
          storageClass:
            type: string
            description: Appropriate storage class for your account
            enum:
            - Standard
            - Reduced Redundancy Storage
            - Standard - Infrequent access
            - One zone - Infrequent access
            - Intelligent tiering
            - S3 Glacier
            - Standard/Glacier (Combined Storage Tiers)
            - Standard-IA/Glacier (Combined Storage Tiers)
            - One Zone-IA/Glacier (Combined Storage Tiers)
            - Intelligent-Tiering/Glacier (Combined Storage Tiers)
            - S3 Glacier Deep Archive
            - Standard/Deep Archive (Combined Storage Tiers)
            - Standard-IA/Deep Archive (Combined Storage Tiers)
            - One Zone-IA/Deep Archive (Combined Storage Tiers)
            - Intelligent-Tiering/Deep Archive (Combined Storage Tiers)
      - $ref: "#/components/schemas/CloudStorageProxy"
      - $ref: "#/components/schemas/CloudStorageAdvanced"
      - $ref: "#/components/schemas/ModifyCloudBucketConfiguration"
    AmazonS3BucketContentResp:
      title: Amazon S3
      description: ""
      allOf:
      - $ref: "#/components/schemas/BucketsResp"
      - type: object
        properties:
          cloudType:
            type: string
            description: Name of cloud vendor
            enum:
            - Amazon S3
          mediaAgent:
            $ref: "#/components/schemas/IdName"
          serviceHost:
            type: string
            description: IP address or fully qualified domain name or URL for the
              cloud library based on cloud vendor
          authentication:
            type: string
            description: Authentication type for the cloud storage server
            enum:
            - Access and secret keys
            - AWS IAM role policy
            - AWS STS assume role
            - AWS STS assume role with IAM role policy
          arnRole:
            type: string
            description: Needed for AWS STS assume role and AWS STS assume role with
              IAM role policy
          credentials:
            $ref: "#/components/schemas/IdName"
          bucket:
            type: string
            description: Name of bucket
          storageClass:
            type: string
            description: Appropriate storage class for your account
            enum:
            - Standard
            - Reduced Redundancy Storage
            - Standard - Infrequent access
            - One zone - Infrequent access
            - Intelligent tiering
            - S3 Glacier
            - Standard/Glacier (Combined Storage Tiers)
            - Standard-IA/Glacier (Combined Storage Tiers)
            - One Zone-IA/Glacier (Combined Storage Tiers)
            - Intelligent-Tiering/Glacier (Combined Storage Tiers)
            - S3 Glacier Deep Archive
            - Standard/Deep Archive (Combined Storage Tiers)
            - Standard-IA/Deep Archive (Combined Storage Tiers)
            - One Zone-IA/Deep Archive (Combined Storage Tiers)
            - Intelligent-Tiering/Deep Archive (Combined Storage Tiers)
      - $ref: "#/components/schemas/CloudStorageProxy"
      - $ref: "#/components/schemas/CloudStorageAdvanced"
    Ceph:
      title: Ceph Object Gateway (S3-compatible)
      description: ""
      allOf:
      - $ref: "#/components/schemas/CloudStorage"
      - required:
        - bucket
        - cloudType
        - credentials
        - serviceHost
        type: object
        properties:
          cloudType:
            type: string
            description: Name of cloud vendor
            enum:
            - Ceph Object Gateway (S3-compatible)
          serviceHost:
            type: string
            description: IP address or fully qualified domain name or URL for the
              cloud library based on cloud vendor
          credentials:
            $ref: "#/components/schemas/IdName"
          bucket:
            type: string
            description: Name of bucket
      - $ref: "#/components/schemas/DedupeStorageList"
    CephBucket:
      title: Ceph Object Gateway (S3-compatible)
      description: ""
      allOf:
      - required:
        - bucket
        - cloudType
        - credentials
        - serviceHost
        type: object
        properties:
          cloudType:
            type: string
            description: Name of cloud vendor
            enum:
            - Ceph Object Gateway (S3-compatible)
          mediaAgent:
            $ref: "#/components/schemas/IdName"
          serviceHost:
            type: string
            description: IP address or fully qualified domain name or URL for the
              cloud library based on cloud vendor
          credentials:
            $ref: "#/components/schemas/IdName"
          bucket:
            type: string
            description: Name of bucket
      - $ref: "#/components/schemas/CloudStorageProxy"
    CephBucketContent:
      title: Ceph Object Gateway (S3-compatible)
      description: ""
      allOf:
      - required:
        - cloudType
        - mediaAgent
        type: object
        properties:
          cloudType:
            type: string
            description: Name of cloud vendor
            enum:
            - Ceph Object Gateway (S3-compatible)
          mediaAgent:
            $ref: "#/components/schemas/IdName"
          serviceHost:
            type: string
            description: IP address or fully qualified domain name or URL for the
              cloud library based on cloud vendor
          credentials:
            $ref: "#/components/schemas/IdName"
          bucket:
            type: string
            description: Name of bucket
      - $ref: "#/components/schemas/CloudStorageProxy"
      - $ref: "#/components/schemas/CloudStorageAdvanced"
      - $ref: "#/components/schemas/ModifyCloudBucketConfiguration"
    CephBucketContentResp:
      title: Ceph Object Gateway (S3-compatible)
      description: ""
      allOf:
      - $ref: "#/components/schemas/BucketsResp"
      - type: object
        properties:
          cloudType:
            type: string
            description: Name of cloud vendor
            enum:
            - Ceph Object Gateway (S3-compatible)
          mediaAgent:
            $ref: "#/components/schemas/IdName"
          serviceHost:
            type: string
            description: IP address or fully qualified domain name or URL for the
              cloud library based on cloud vendor
          credentials:
            $ref: "#/components/schemas/IdName"
          bucket:
            type: string
            description: Name of bucket
      - $ref: "#/components/schemas/CloudStorageProxy"
      - $ref: "#/components/schemas/CloudStorageAdvanced"
    ChinaMobileOnest:
      title: China Mobile oNest
      description: ""
      allOf:
      - $ref: "#/components/schemas/CloudStorage"
      - required:
        - cloudType
        - container
        - credentials
        - serviceHost
        type: object
        properties:
          cloudType:
            type: string
            description: Name of cloud vendor
            enum:
            - China Mobile oNest
          serviceHost:
            type: string
            description: IP address or fully qualified domain name or URL for the
              cloud library based on cloud vendor
          credentials:
            $ref: "#/components/schemas/IdName"
          container:
            type: string
            description: Name of container
      - $ref: "#/components/schemas/DedupeStorageList"
    ChinaMobileOnestBucket:
      title: China Mobile oNest
      description: ""
      allOf:
      - required:
        - cloudType
        - container
        - credentials
        - serviceHost
        type: object
        properties:
          cloudType:
            type: string
            description: Name of cloud vendor
            enum:
            - China Mobile oNest
          mediaAgent:
            $ref: "#/components/schemas/IdName"
          serviceHost:
            type: string
            description: IP address or fully qualified domain name or URL for the
              cloud library based on cloud vendor
          credentials:
            $ref: "#/components/schemas/IdName"
          container:
            type: string
            description: Name of container
      - $ref: "#/components/schemas/CloudStorageProxy"
    ChinaMobileOnestBucketContent:
      title: China Mobile oNest
      description: ""
      allOf:
      - required:
        - cloudType
        - mediaAgent
        type: object
        properties:
          cloudType:
            type: string
            description: Name of cloud vendor
            enum:
            - China Mobile oNest
          mediaAgent:
            $ref: "#/components/schemas/IdName"
          serviceHost:
            type: string
            description: IP address or fully qualified domain name or URL for the
              cloud library based on cloud vendor
          credentials:
            $ref: "#/components/schemas/IdName"
          container:
            type: string
            description: Name of container
      - $ref: "#/components/schemas/CloudStorageProxy"
      - $ref: "#/components/schemas/CloudStorageAdvanced"
      - $ref: "#/components/schemas/ModifyCloudBucketConfiguration"
    ChinaMobileOnestBucketContentResp:
      title: China Mobile oNest
      description: ""
      allOf:
      - $ref: "#/components/schemas/BucketsResp"
      - type: object
        properties:
          cloudType:
            type: string
            description: Name of cloud vendor
            enum:
            - China Mobile oNest
          mediaAgent:
            $ref: "#/components/schemas/IdName"
          serviceHost:
            type: string
            description: IP address or fully qualified domain name or URL for the
              cloud library based on cloud vendor
          credentials:
            $ref: "#/components/schemas/IdName"
          container:
            type: string
            description: Name of container
      - $ref: "#/components/schemas/CloudStorageProxy"
      - $ref: "#/components/schemas/CloudStorageAdvanced"
    CloudianHyperStore:
      title: Cloudian HyperStore
      description: ""
      allOf:
      - $ref: "#/components/schemas/CloudStorage"
      - required:
        - bucket
        - cloudType
        - credentials
        - serviceHost
        type: object
        properties:
          cloudType:
            type: string
            description: Name of cloud vendor
            enum:
            - Cloudian HyperStore
          serviceHost:
            type: string
            description: IP address or fully qualified domain name or URL for the
              cloud library based on cloud vendor
          credentials:
            $ref: "#/components/schemas/IdName"
          bucket:
            type: string
            description: Name of bucket
      - $ref: "#/components/schemas/DedupeStorageList"
    CloudianHyperStoreBucket:
      title: Cloudian HyperStore
      description: ""
      allOf:
      - required:
        - bucket
        - cloudType
        - credentials
        - serviceHost
        type: object
        properties:
          cloudType:
            type: string
            description: Name of cloud vendor
            enum:
            - Cloudian HyperStore
          mediaAgent:
            $ref: "#/components/schemas/IdName"
          serviceHost:
            type: string
            description: IP address or fully qualified domain name or URL for the
              cloud library based on cloud vendor
          credentials:
            $ref: "#/components/schemas/IdName"
          bucket:
            type: string
            description: Name of bucket
      - $ref: "#/components/schemas/CloudStorageProxy"
    CloudianHyperStoreBucketContent:
      title: Cloudian HyperStore
      description: ""
      allOf:
      - required:
        - cloudType
        - mediaAgent
        type: object
        properties:
          cloudType:
            type: string
            description: Name of cloud vendor
            enum:
            - Cloudian HyperStore
          mediaAgent:
            $ref: "#/components/schemas/IdName"
          serviceHost:
            type: string
            description: IP address or fully qualified domain name or URL for the
              cloud library based on cloud vendor
          credentials:
            $ref: "#/components/schemas/IdName"
          bucket:
            type: string
            description: Name of bucket
      - $ref: "#/components/schemas/CloudStorageProxy"
      - $ref: "#/components/schemas/CloudStorageAdvanced"
      - $ref: "#/components/schemas/ModifyCloudBucketConfiguration"
    CloudianHyperStoreBucketContentResp:
      title: Cloudian HyperStore
      description: ""
      allOf:
      - $ref: "#/components/schemas/BucketsResp"
      - type: object
        properties:
          cloudType:
            type: string
            description: Name of cloud vendor
            enum:
            - Cloudian HyperStore
          mediaAgent:
            $ref: "#/components/schemas/IdName"
          serviceHost:
            type: string
            description: IP address or fully qualified domain name or URL for the
              cloud library based on cloud vendor
          credentials:
            $ref: "#/components/schemas/IdName"
          bucket:
            type: string
            description: Name of bucket
      - $ref: "#/components/schemas/CloudStorageProxy"
      - $ref: "#/components/schemas/CloudStorageAdvanced"
    DellEMC:
      title: Dell EMC ECS (S3-compatible)
      description: ""
      allOf:
      - $ref: "#/components/schemas/CloudStorage"
      - required:
        - bucket
        - cloudType
        - credentials
        - serviceHost
        type: object
        properties:
          cloudType:
            type: string
            description: Name of cloud vendor
            enum:
            - Dell EMC ECS (S3-compatible)
          serviceHost:
            type: string
            description: IP address or fully qualified domain name or URL for the
              cloud library based on cloud vendor
          credentials:
            $ref: "#/components/schemas/IdName"
          bucket:
            type: string
            description: Name of bucket
      - $ref: "#/components/schemas/DedupeStorageList"
    DellEMCBucket:
      title: Dell EMC ECS (S3-compatible)
      description: ""
      allOf:
      - required:
        - bucket
        - cloudType
        - credentials
        - serviceHost
        type: object
        properties:
          cloudType:
            type: string
            description: Name of cloud vendor
            enum:
            - Dell EMC ECS (S3-compatible)
          mediaAgent:
            $ref: "#/components/schemas/IdName"
          serviceHost:
            type: string
            description: IP address or fully qualified domain name or URL for the
              cloud library based on cloud vendor
          credentials:
            $ref: "#/components/schemas/IdName"
          bucket:
            type: string
            description: Name of bucket
      - $ref: "#/components/schemas/CloudStorageProxy"
    DellEMCBucketContent:
      title: Dell EMC ECS (S3-compatible)
      description: ""
      allOf:
      - required:
        - cloudType
        - mediaAgent
        type: object
        properties:
          cloudType:
            type: string
            description: Name of cloud vendor
            enum:
            - Dell EMC ECS (S3-compatible)
          mediaAgent:
            $ref: "#/components/schemas/IdName"
          serviceHost:
            type: string
            description: IP address or fully qualified domain name or URL for the
              cloud library based on cloud vendor
          credentials:
            $ref: "#/components/schemas/IdName"
          bucket:
            type: string
            description: Name of bucket
      - $ref: "#/components/schemas/CloudStorageProxy"
      - $ref: "#/components/schemas/CloudStorageAdvanced"
      - $ref: "#/components/schemas/ModifyCloudBucketConfiguration"
    DellEMCBucketContentResp:
      title: Dell EMC ECS (S3-compatible)
      description: ""
      allOf:
      - $ref: "#/components/schemas/BucketsResp"
      - type: object
        properties:
          cloudType:
            type: string
            description: Name of cloud vendor
            enum:
            - Dell EMC ECS (S3-compatible)
          mediaAgent:
            $ref: "#/components/schemas/IdName"
          serviceHost:
            type: string
            description: IP address or fully qualified domain name or URL for the
              cloud library based on cloud vendor
          credentials:
            $ref: "#/components/schemas/IdName"
          bucket:
            type: string
            description: Name of bucket
      - $ref: "#/components/schemas/CloudStorageProxy"
      - $ref: "#/components/schemas/CloudStorageAdvanced"
    EMCAtmos:
      title: EMC Atmos
      description: ""
      allOf:
      - $ref: "#/components/schemas/CloudStorage"
      - required:
        - cloudType
        - credentials
        - rootFolder
        type: object
        properties:
          cloudType:
            type: string
            description: Name of cloud vendor
            enum:
            - EMC Atmos
          serviceHost:
            type: string
            description: IP address or fully qualified domain name or URL for the
              cloud library based on cloud vendor
            default: accesspoint.atmosonline.com
          credentials:
            $ref: "#/components/schemas/IdName"
          rootFolder:
            type: string
            description: Root folder for the account
      - $ref: "#/components/schemas/DedupeStorageList"
    EMCAtmosBucket:
      title: EMC Atmos
      description: ""
      allOf:
      - required:
        - cloudType
        - credentials
        - rootFolder
        type: object
        properties:
          cloudType:
            type: string
            description: Name of cloud vendor
            enum:
            - EMC Atmos
          mediaAgent:
            $ref: "#/components/schemas/IdName"
          serviceHost:
            type: string
            description: IP address or fully qualified domain name or URL for the
              cloud library based on cloud vendor
            default: accesspoint.atmosonline.com
          credentials:
            $ref: "#/components/schemas/IdName"
          rootFolder:
            type: string
            description: Root folder for the account
      - $ref: "#/components/schemas/CloudStorageProxy"
    EMCAtmosBucketContent:
      title: EMC Atmos
      description: ""
      allOf:
      - required:
        - cloudType
        - mediaAgent
        type: object
        properties:
          cloudType:
            type: string
            description: Name of cloud vendor
            enum:
            - EMC Atmos
          mediaAgent:
            $ref: "#/components/schemas/IdName"
          serviceHost:
            type: string
            description: IP address or fully qualified domain name or URL for the
              cloud library based on cloud vendor
            default: accesspoint.atmosonline.com
          credentials:
            $ref: "#/components/schemas/IdName"
          rootFolder:
            type: string
            description: Root folder for the account
      - $ref: "#/components/schemas/CloudStorageProxy"
      - $ref: "#/components/schemas/CloudStorageAdvanced"
      - $ref: "#/components/schemas/ModifyCloudBucketConfiguration"
    EMCAtmosBucketContentResp:
      title: EMC Atmos
      description: ""
      allOf:
      - $ref: "#/components/schemas/BucketsResp"
      - type: object
        properties:
          cloudType:
            type: string
            description: Name of cloud vendor
            enum:
            - EMC Atmos
          mediaAgent:
            $ref: "#/components/schemas/IdName"
          serviceHost:
            type: string
            description: IP address or fully qualified domain name or URL for the
              cloud library based on cloud vendor
          credentials:
            $ref: "#/components/schemas/IdName"
          rootFolder:
            type: string
            description: Root folder for the account
      - $ref: "#/components/schemas/CloudStorageProxy"
      - $ref: "#/components/schemas/CloudStorageAdvanced"
    Fujitsu:
      title: Fujitsu Storage ETERNUS CD10000
      description: ""
      allOf:
      - $ref: "#/components/schemas/CloudStorage"
      - required:
        - bucket
        - cloudType
        - credentials
        - serviceHost
        type: object
        properties:
          cloudType:
            type: string
            description: Name of cloud vendor
            enum:
            - Fujitsu Storage ETERNUS CD10000
          serviceHost:
            type: string
            description: IP address or fully qualified domain name or URL for the
              cloud library based on cloud vendor
          credentials:
            $ref: "#/components/schemas/IdName"
          bucket:
            type: string
            description: Name of bucket
      - $ref: "#/components/schemas/DedupeStorageList"
    FujitsuBucket:
      title: Fujitsu Storage ETERNUS CD10000
      description: ""
      allOf:
      - required:
        - bucket
        - cloudType
        - credentials
        - serviceHost
        type: object
        properties:
          cloudType:
            type: string
            description: Name of cloud vendor
            enum:
            - Fujitsu Storage ETERNUS CD10000
          mediaAgent:
            $ref: "#/components/schemas/IdName"
          serviceHost:
            type: string
            description: IP address or fully qualified domain name or URL for the
              cloud library based on cloud vendor
          credentials:
            $ref: "#/components/schemas/IdName"
          bucket:
            type: string
            description: Name of bucket
      - $ref: "#/components/schemas/CloudStorageProxy"
    FujitsuBucketContent:
      title: Fujitsu Storage ETERNUS CD10000
      description: ""
      allOf:
      - required:
        - cloudType
        - mediaAgent
        type: object
        properties:
          cloudType:
            type: string
            description: Name of cloud vendor
            enum:
            - Fujitsu Storage ETERNUS CD10000
          mediaAgent:
            $ref: "#/components/schemas/IdName"
          serviceHost:
            type: string
            description: IP address or fully qualified domain name or URL for the
              cloud library based on cloud vendor
          credentials:
            $ref: "#/components/schemas/IdName"
          bucket:
            type: string
            description: Name of bucket
      - $ref: "#/components/schemas/CloudStorageProxy"
      - $ref: "#/components/schemas/CloudStorageAdvanced"
      - $ref: "#/components/schemas/ModifyCloudBucketConfiguration"
    FujitsuBucketContentResp:
      title: Fujitsu Storage ETERNUS CD10000
      description: ""
      allOf:
      - $ref: "#/components/schemas/BucketsResp"
      - type: object
        properties:
          cloudType:
            type: string
            description: Name of cloud vendor
            enum:
            - Fujitsu Storage ETERNUS CD10000
          mediaAgent:
            $ref: "#/components/schemas/IdName"
          serviceHost:
            type: string
            description: IP address or fully qualified domain name or URL for the
              cloud library based on cloud vendor
          credentials:
            $ref: "#/components/schemas/IdName"
          bucket:
            type: string
            description: Name of bucket
      - $ref: "#/components/schemas/CloudStorageProxy"
      - $ref: "#/components/schemas/CloudStorageAdvanced"
    GoogleCloud:
      title: Google Cloud Storage
      description: ""
      allOf:
      - $ref: "#/components/schemas/CloudStorage"
      - required:
        - bucket
        - cloudType
        - credentials
        type: object
        properties:
          cloudType:
            type: string
            description: Name of cloud vendor
            enum:
            - Google Cloud Storage
          serviceHost:
            type: string
            description: IP address or fully qualified domain name or URL for the
              cloud library based on cloud vendor
            default: storage.googleapis.com
          credentials:
            $ref: "#/components/schemas/IdName"
          bucket:
            type: string
            description: Name of bucket
      - $ref: "#/components/schemas/DedupeStorageList"
    GoogleCloudBucket:
      title: Google Cloud Storage
      description: ""
      allOf:
      - required:
        - bucket
        - cloudType
        - credentials
        type: object
        properties:
          cloudType:
            type: string
            description: Name of cloud vendor
            enum:
            - Google Cloud Storage
          mediaAgent:
            $ref: "#/components/schemas/IdName"
          serviceHost:
            type: string
            description: IP address or fully qualified domain name or URL for the
              cloud library based on cloud vendor
            default: storage.googleapis.com
          credentials:
            $ref: "#/components/schemas/IdName"
          bucket:
            type: string
            description: Name of bucket
      - $ref: "#/components/schemas/CloudStorageProxy"
    GoogleCloudBucketContent:
      title: Google Cloud Storage
      description: ""
      allOf:
      - required:
        - cloudType
        - mediaAgent
        type: object
        properties:
          cloudType:
            type: string
            description: Name of cloud vendor
            enum:
            - Google Cloud Storage
          mediaAgent:
            $ref: "#/components/schemas/IdName"
          serviceHost:
            type: string
            description: IP address or fully qualified domain name or URL for the
              cloud library based on cloud vendor
            default: storage.googleapis.com
          credentials:
            $ref: "#/components/schemas/IdName"
          bucket:
            type: string
            description: Name of bucket
      - $ref: "#/components/schemas/CloudStorageProxy"
      - $ref: "#/components/schemas/CloudStorageAdvanced"
      - $ref: "#/components/schemas/ModifyCloudBucketConfiguration"
    GoogleCloudBucketContentResp:
      title: Google Cloud Storage
      description: ""
      allOf:
      - $ref: "#/components/schemas/BucketsResp"
      - type: object
        properties:
          cloudType:
            type: string
            description: Name of cloud vendor
            enum:
            - Google Cloud Storage
          mediaAgent:
            $ref: "#/components/schemas/IdName"
          serviceHost:
            type: string
            description: IP address or fully qualified domain name or URL for the
              cloud library based on cloud vendor
          credentials:
            $ref: "#/components/schemas/IdName"
          bucket:
            type: string
            description: Name of bucket
      - $ref: "#/components/schemas/CloudStorageProxy"
      - $ref: "#/components/schemas/CloudStorageAdvanced"
    HDSContent:
      title: Hitachi Content Platform
      description: ""
      allOf:
      - $ref: "#/components/schemas/CloudStorage"
      - required:
        - StorageNamespace
        - cloudType
        - credentials
        - serviceHost
        type: object
        properties:
          cloudType:
            type: string
            description: Name of cloud vendor
            enum:
            - Hitachi Content Platform
          serviceHost:
            type: string
            description: IP address or fully qualified domain name or URL for the
              cloud library based on cloud vendor
          credentials:
            $ref: "#/components/schemas/IdName"
          StorageNamespace:
            type: string
            description: Namespace for the user account
      - $ref: "#/components/schemas/DedupeStorageList"
    HDSContentBucket:
      title: Hitachi Content Platform
      description: ""
      allOf:
      - required:
        - StorageNamespace
        - cloudType
        - credentials
        - serviceHost
        type: object
        properties:
          cloudType:
            type: string
            description: Name of cloud vendor
            enum:
            - Hitachi Content Platform
          mediaAgent:
            $ref: "#/components/schemas/IdName"
          serviceHost:
            type: string
            description: IP address or fully qualified domain name or URL for the
              cloud library based on cloud vendor
          credentials:
            $ref: "#/components/schemas/IdName"
          StorageNamespace:
            type: string
            description: Namespace for the user account
      - $ref: "#/components/schemas/CloudStorageProxy"
    HDSContentBucketContent:
      title: Hitachi Content Platform
      description: ""
      allOf:
      - required:
        - cloudType
        - mediaAgent
        type: object
        properties:
          cloudType:
            type: string
            description: Name of cloud vendor
            enum:
            - Hitachi Content Platform
          mediaAgent:
            $ref: "#/components/schemas/IdName"
          serviceHost:
            type: string
            description: IP address or fully qualified domain name or URL for the
              cloud library based on cloud vendor
          credentials:
            $ref: "#/components/schemas/IdName"
          StorageNamespace:
            type: string
            description: Namespace for the user account
      - $ref: "#/components/schemas/CloudStorageProxy"
      - $ref: "#/components/schemas/CloudStorageAdvanced"
      - $ref: "#/components/schemas/ModifyCloudBucketConfiguration"
    HDSContentBucketContentResp:
      title: Hitachi Content Platform
      description: ""
      allOf:
      - $ref: "#/components/schemas/BucketsResp"
      - type: object
        properties:
          cloudType:
            type: string
            description: Name of cloud vendor
            enum:
            - Hitachi Content Platform
          mediaAgent:
            $ref: "#/components/schemas/IdName"
          serviceHost:
            type: string
            description: IP address or fully qualified domain name or URL for the
              cloud library based on cloud vendor
          credentials:
            $ref: "#/components/schemas/IdName"
          StorageNamespace:
            type: string
            description: Namespace for the user account
      - $ref: "#/components/schemas/CloudStorageProxy"
      - $ref: "#/components/schemas/CloudStorageAdvanced"
    HitachiContentCloud:
      title: Hitachi Content Platform for Cloud Scale
      description: ""
      allOf:
      - $ref: "#/components/schemas/CloudStorage"
      - required:
        - bucket
        - cloudType
        - credentials
        - serviceHost
        type: object
        properties:
          cloudType:
            type: string
            description: Name of cloud vendor
            enum:
            - Hitachi Content Platform for Cloud Scale
          serviceHost:
            type: string
            description: IP address or fully qualified domain name or URL for the
              cloud library based on cloud vendor
          credentials:
            $ref: "#/components/schemas/IdName"
          bucket:
            type: string
            description: Name of bucket
      - $ref: "#/components/schemas/DedupeStorageList"
    HitachiContentCloudBucket:
      title: Hitachi Content Platform for Cloud Scale
      description: ""
      allOf:
      - required:
        - bucket
        - cloudType
        - credentials
        - serviceHost
        type: object
        properties:
          cloudType:
            type: string
            description: Name of cloud vendor
            enum:
            - Hitachi Content Platform for Cloud Scale
          mediaAgent:
            $ref: "#/components/schemas/IdName"
          serviceHost:
            type: string
            description: IP address or fully qualified domain name or URL for the
              cloud library based on cloud vendor
          credentials:
            $ref: "#/components/schemas/IdName"
          bucket:
            type: string
            description: Name of bucket
      - $ref: "#/components/schemas/CloudStorageProxy"
    HitachiContentCloudBucketContent:
      title: Hitachi Content Platform for Cloud Scale
      description: ""
      allOf:
      - required:
        - cloudType
        - mediaAgent
        type: object
        properties:
          cloudType:
            type: string
            description: Name of cloud vendor
            enum:
            - Hitachi Content Platform for Cloud Scale
          mediaAgent:
            $ref: "#/components/schemas/IdName"
          serviceHost:
            type: string
            description: IP address or fully qualified domain name or URL for the
              cloud library based on cloud vendor
          credentials:
            $ref: "#/components/schemas/IdName"
          bucket:
            type: string
            description: Name of bucket
      - $ref: "#/components/schemas/CloudStorageProxy"
      - $ref: "#/components/schemas/CloudStorageAdvanced"
      - $ref: "#/components/schemas/ModifyCloudBucketConfiguration"
    HitachiContentCloudBucketContentResp:
      title: Hitachi Content Platform for Cloud Scale
      description: ""
      allOf:
      - $ref: "#/components/schemas/BucketsResp"
      - required:
        - cloudType
        - mediaAgent
        type: object
        properties:
          cloudType:
            type: string
            description: Name of cloud vendor
            enum:
            - Hitachi Content Platform for Cloud Scale
          mediaAgent:
            $ref: "#/components/schemas/IdName"
          serviceHost:
            type: string
            description: IP address or fully qualified domain name or URL for the
              cloud library based on cloud vendor
          credentials:
            $ref: "#/components/schemas/IdName"
          bucket:
            type: string
            description: Name of bucket
      - $ref: "#/components/schemas/CloudStorageProxy"
      - $ref: "#/components/schemas/CloudStorageAdvanced"
    HPECatalyst:
      title: HPE Catalyst Storage
      description: ""
      allOf:
      - $ref: "#/components/schemas/CloudStorage"
      - required:
        - cloudType
        - password
        - store
        - storeOnceHost
        - username
        type: object
        properties:
          cloudType:
            type: string
            enum:
            - HPE Catalyst Storage
          storeOnceHost:
            type: string
            description: IP address or COFC identifier in case of Fibre Channel associated
              with the HPE StoreOnce device
          store:
            type: string
            description: Name of the store that is created on the StoreOnce management
              console
          username:
            type: string
            description: Username used to access StoreOnce management console
          password:
            type: string
            description: Password used to access StoreOnce management console (Should
              be in Base64 format)
            format: password
    HPECatalystBucketContent:
      title: HPE Catalyst Storage
      description: ""
      allOf:
      - required:
        - cloudType
        - mediaAgent
        type: object
        properties:
          cloudType:
            type: string
            description: Name of cloud vendor
            enum:
            - HPE Catalyst Storage
          mediaAgent:
            $ref: "#/components/schemas/IdName"
          storeOnceHost:
            type: string
            description: IP address or COFC identifier in case of Fibre Channel associated
              with the HPE StoreOnce device
          store:
            type: string
            description: Name of the store that is created on the StoreOnce management
              console
          username:
            type: string
            description: Username used to access StoreOnce management console
          password:
            type: string
            description: Password used to access StoreOnce management console (Should
              be in Base64 format)
            format: password
      - $ref: "#/components/schemas/CloudStorageAdvanced"
      - $ref: "#/components/schemas/ModifyCloudBucketConfiguration"
    HPECatalystBucketContentResp:
      title: HPE Catalyst Storage
      description: ""
      allOf:
      - $ref: "#/components/schemas/BucketsResp"
      - type: object
        properties:
          cloudType:
            type: string
            description: Name of cloud vendor
            enum:
            - HPE Catalyst Storage
          mediaAgent:
            $ref: "#/components/schemas/IdName"
          storeOnceHost:
            type: string
            description: IP address or COFC identifier in case of Fibre Channel associated
              with the HPE StoreOnce device
          store:
            type: string
            description: Name of the store that is created on the StoreOnce management
              console
          username:
            type: string
            description: Username used to access StoreOnce management console
          password:
            type: string
            description: Password used to access StoreOnce management console (Should
              be in Base64 format)
            format: password
      - $ref: "#/components/schemas/CloudStorageAdvanced"
    Huawei:
      title: Huawei Object Storage
      description: ""
      allOf:
      - $ref: "#/components/schemas/CloudStorage"
      - required:
        - bucket
        - cloudType
        - credentials
        - storageClass
        type: object
        properties:
          cloudType:
            type: string
            description: Name of cloud vendor
            enum:
            - Huawei Object Storage
          serviceHost:
            type: string
            description: IP address or fully qualified domain name or URL for the
              cloud library based on cloud vendor
            default: obs.myhwclouds.com
          credentials:
            $ref: "#/components/schemas/IdName"
          bucket:
            type: string
            description: Name of bucket
          storageClass:
            type: string
            description: Appropriate storage class for your account
            enum:
            - Standard
            - Cold
            - Standard - Infrequent access
      - $ref: "#/components/schemas/DedupeStorageList"
    HuaweiBucket:
      title: Huawei Object Storage
      description: ""
      allOf:
      - required:
        - bucket
        - cloudType
        - credentials
        - storageClass
        type: object
        properties:
          cloudType:
            type: string
            description: Name of cloud vendor
            enum:
            - Huawei Object Storage
          mediaAgent:
            $ref: "#/components/schemas/IdName"
          serviceHost:
            type: string
            description: IP address or fully qualified domain name or URL for the
              cloud library based on cloud vendor
            default: obs.myhwclouds.com
          credentials:
            $ref: "#/components/schemas/IdName"
          bucket:
            type: string
            description: Name of bucket
          storageClass:
            type: string
            description: Appropriate storage class for your account
            enum:
            - Standard
            - Cold
            - Standard - Infrequent access
      - $ref: "#/components/schemas/CloudStorageProxy"
    HuaweiBucketContent:
      title: Huawei Object Storage
      description: ""
      allOf:
      - required:
        - cloudType
        - mediaAgent
        type: object
        properties:
          cloudType:
            type: string
            description: Name of cloud vendor
            enum:
            - Huawei Object Storage
          mediaAgent:
            $ref: "#/components/schemas/IdName"
          serviceHost:
            type: string
            description: IP address or fully qualified domain name or URL for the
              cloud library based on cloud vendor
            default: obs.myhwclouds.com
          credentials:
            $ref: "#/components/schemas/IdName"
          bucket:
            type: string
            description: Name of bucket
          storageClass:
            type: string
            description: Appropriate storage class for your account
            enum:
            - Standard
            - Cold
            - Standard - Infrequent access
      - $ref: "#/components/schemas/CloudStorageProxy"
      - $ref: "#/components/schemas/CloudStorageAdvanced"
      - $ref: "#/components/schemas/ModifyCloudBucketConfiguration"
    HuaweiBucketContentResp:
      title: Huawei Object Storage
      description: ""
      allOf:
      - $ref: "#/components/schemas/BucketsResp"
      - type: object
        properties:
          cloudType:
            type: string
            description: Name of cloud vendor
            enum:
            - Huawei Object Storage
          mediaAgent:
            $ref: "#/components/schemas/IdName"
          serviceHost:
            type: string
            description: IP address or fully qualified domain name or URL for the
              cloud library based on cloud vendor
          credentials:
            $ref: "#/components/schemas/IdName"
          bucket:
            type: string
            description: Name of bucket
          storageClass:
            type: string
            description: Appropriate storage class for your account
            enum:
            - Standard
            - Cold
            - Standard - Infrequent access
      - $ref: "#/components/schemas/CloudStorageProxy"
      - $ref: "#/components/schemas/CloudStorageAdvanced"
    IBM:
      title: IBM Cloud Object Storage (S3-compatible)
      description: ""
      allOf:
      - $ref: "#/components/schemas/CloudStorage"
      - required:
        - bucket
        - cloudType
        - credentials
        - serviceHost
        type: object
        properties:
          cloudType:
            type: string
            description: Name of cloud vendor
            enum:
            - IBM Cloud Object Storage (S3-compatible)
          serviceHost:
            type: string
            description: IP address or fully qualified domain name or URL for the
              cloud library based on cloud vendor
          credentials:
            $ref: "#/components/schemas/IdName"
          bucket:
            type: string
            description: Name of bucket
      - $ref: "#/components/schemas/DedupeStorageList"
    IBMBucket:
      title: IBM Cloud Object Storage (S3-compatible)
      description: ""
      allOf:
      - required:
        - bucket
        - cloudType
        - credentials
        - serviceHost
        type: object
        properties:
          cloudType:
            type: string
            description: Name of cloud vendor
            enum:
            - IBM Cloud Object Storage (S3-compatible)
          mediaAgent:
            $ref: "#/components/schemas/IdName"
          serviceHost:
            type: string
            description: IP address or fully qualified domain name or URL for the
              cloud library based on cloud vendor
          credentials:
            $ref: "#/components/schemas/IdName"
          bucket:
            type: string
            description: Name of bucket
      - $ref: "#/components/schemas/CloudStorageProxy"
    IBMBucketContent:
      title: IBM Cloud Object Storage (S3-compatible)
      description: ""
      allOf:
      - required:
        - cloudType
        - mediaAgent
        type: object
        properties:
          cloudType:
            type: string
            description: Name of cloud vendor
            enum:
            - IBM Cloud Object Storage (S3-compatible)
          mediaAgent:
            $ref: "#/components/schemas/IdName"
          serviceHost:
            type: string
            description: IP address or fully qualified domain name or URL for the
              cloud library based on cloud vendor
          credentials:
            $ref: "#/components/schemas/IdName"
          bucket:
            type: string
            description: Name of bucket
      - $ref: "#/components/schemas/CloudStorageProxy"
      - $ref: "#/components/schemas/CloudStorageAdvanced"
      - $ref: "#/components/schemas/ModifyCloudBucketConfiguration"
    IBMBucketContentResp:
      title: IBM Cloud Object Storage (S3-compatible)
      description: ""
      allOf:
      - $ref: "#/components/schemas/BucketsResp"
      - type: object
        properties:
          cloudType:
            type: string
            description: Name of cloud vendor
            enum:
            - IBM Cloud Object Storage (S3-compatible)
          mediaAgent:
            $ref: "#/components/schemas/IdName"
          serviceHost:
            type: string
            description: IP address or fully qualified domain name or URL for the
              cloud library based on cloud vendor
          credentials:
            $ref: "#/components/schemas/IdName"
          bucket:
            type: string
            description: Name of bucket
      - $ref: "#/components/schemas/CloudStorageProxy"
      - $ref: "#/components/schemas/CloudStorageAdvanced"
    MicrosoftAzure:
      title: Microsoft Azure Storage
      description: ""
      allOf:
      - $ref: "#/components/schemas/CloudStorage"
      - required:
        - authentication
        - cloudType
        - container
        - storageClass
        type: object
        properties:
          cloudType:
            type: string
            description: Name of cloud vendor
            enum:
            - Microsoft Azure Storage
          serviceHost:
            type: string
            description: IP address or fully qualified domain name or URL for the
              cloud library based on cloud vendor
            default: blob.core.windows.net
          authentication:
            type: string
            description: Authentication type for the cloud storage server. Only Access
              & Account Name and IAM AD require credentials.
            enum:
            - Access and secret keys
            - IAM VM role assignment
            - IAM AD application role assignment (Credential Manager)
          accountName:
            type: string
            description: Only for IAM VM and IAM AD
          credentials:
            $ref: "#/components/schemas/IdName"
          container:
            type: string
            description: Name of container
          storageClass:
            type: string
            description: Appropriate storage class for your account
            enum:
            - Container's default
            - Hot
            - Cool
            - Archive
            - Hot/Archive (Combined Storage Tiers)
            - Cool/Archive (Combined Storage Tiers)
      - $ref: "#/components/schemas/DedupeStorageList"
    MicrosoftAzureBucket:
      title: Microsoft Azure Storage
      description: ""
      allOf:
      - required:
        - authentication
        - cloudType
        - container
        - credentials
        - mediaAgent
        - storageClass
        type: object
        properties:
          cloudType:
            type: string
            description: Name of cloud vendor
            enum:
            - Microsoft Azure Storage
            x-terraform-always-update: true
            x-terraform-constant: Microsoft Azure Storage
          mediaAgent:
            $ref: "#/components/schemas/IdName"
          serviceHost:
            type: string
            description: IP address or fully qualified domain name or URL for the
              cloud library based on cloud vendor
            default: blob.core.windows.net
          authentication:
            type: string
            description: Authentication type for the cloud storage server. Only Access
              & Account Name and IAM AD require credentials.
            enum:
            - Access and secret keys
            - IAM VM role assignment
            - IAM AD application role assignment (Credential Manager)
          accountName:
            type: string
            description: Only for IAM VM and IAM AD
          credentials:
            $ref: "#/components/schemas/IdName"
          container:
            type: string
            description: Name of container
          storageClass:
            type: string
            description: Appropriate storage class for your account
            enum:
            - Container's default
            - Hot
            - Cool
            - Archive
            - Hot/Archive (Combined Storage Tiers)
            - Cool/Archive (Combined Storage Tiers)
      - $ref: "#/components/schemas/CloudStorageProxy"
    MicrosoftAzureBucketContent:
      title: Microsoft Azure Storage
      description: ""
      allOf:
      - required:
        - cloudType
        - mediaAgent
        type: object
        properties:
          cloudType:
            type: string
            description: Name of cloud vendor
            enum:
            - Microsoft Azure Storage
            x-terraform-always-update: true
            x-terraform-constant: Microsoft Azure Storage
          mediaAgent:
            $ref: "#/components/schemas/IdName"
          serviceHost:
            type: string
            description: IP address or fully qualified domain name or URL for the
              cloud library based on cloud vendor
            default: blob.core.windows.net
          authentication:
            type: string
            description: Authentication type for the cloud storage server. Only Access
              & Account Name and IAM AD require credentials.
            enum:
            - Access and secret keys
            - IAM VM role assignment
            - IAM AD application role assignment (Credential Manager)
          accountName:
            type: string
            description: Only for IAM VM and IAM AD
          credentials:
            $ref: "#/components/schemas/IdName"
          container:
            type: string
            description: Name of container
          storageClass:
            type: string
            description: Appropriate storage class for your account
            enum:
            - Container's default
            - Hot
            - Cool
            - Archive
            - Hot/Archive (Combined Storage Tiers)
            - Cool/Archive (Combined Storage Tiers)
      - $ref: "#/components/schemas/CloudStorageProxy"
      - $ref: "#/components/schemas/CloudStorageAdvanced"
      - $ref: "#/components/schemas/ModifyCloudBucketConfiguration"
    MicrosoftAzureBucketContentResp:
      title: Microsoft Azure Storage
      description: ""
      allOf:
      - $ref: "#/components/schemas/BucketsResp"
      - type: object
        properties:
          cloudType:
            type: string
            description: Name of cloud vendor
            enum:
            - Microsoft Azure Storage
          mediaAgent:
            $ref: "#/components/schemas/IdName"
          serviceHost:
            type: string
            description: IP address or fully qualified domain name or URL for the
              cloud library based on cloud vendor
          authentication:
            type: string
            description: Authentication type for the cloud storage server. Only Access
              & Account Name and IAM AD require credentials.
            enum:
            - Access and secret keys
            - IAM VM role assignment
            - IAM AD application role assignment (Credential Manager)
          accountName:
            type: string
            description: Only for IAM VM and IAM AD
          credentials:
            $ref: "#/components/schemas/IdName"
          container:
            type: string
            description: Name of container
          storageClass:
            type: string
            description: Appropriate storage class for your account
            enum:
            - Container's default
            - Hot
            - Cool
            - Archive
            - Hot/Archive (Combined Storage Tiers)
            - Cool/Archive (Combined Storage Tiers)
      - $ref: "#/components/schemas/CloudStorageProxy"
      - $ref: "#/components/schemas/CloudStorageAdvanced"
    NetApp:
      title: NetApp StorageGRID
      description: ""
      allOf:
      - $ref: "#/components/schemas/CloudStorage"
      - required:
        - bucket
        - cloudType
        - credentials
        - serviceHost
        type: object
        properties:
          cloudType:
            type: string
            description: Name of cloud vendor
            enum:
            - NetApp StorageGRID
          serviceHost:
            type: string
            description: IP address or fully qualified domain name or URL for the
              cloud library based on cloud vendor
          credentials:
            $ref: "#/components/schemas/IdName"
          bucket:
            type: string
            description: Name of bucket
      - $ref: "#/components/schemas/DedupeStorageList"
    NetAppBucket:
      title: NetApp StorageGRID
      description: ""
      allOf:
      - required:
        - bucket
        - cloudType
        - credentials
        - serviceHost
        type: object
        properties:
          cloudType:
            type: string
            description: Name of cloud vendor
            enum:
            - NetApp StorageGRID
          mediaAgent:
            $ref: "#/components/schemas/IdName"
          serviceHost:
            type: string
            description: IP address or fully qualified domain name or URL for the
              cloud library based on cloud vendor
          credentials:
            $ref: "#/components/schemas/IdName"
          bucket:
            type: string
            description: Name of bucket
      - $ref: "#/components/schemas/CloudStorageProxy"
    NetAppBucketContent:
      title: NetApp StorageGRID
      description: ""
      allOf:
      - required:
        - cloudType
        - mediaAgent
        type: object
        properties:
          cloudType:
            type: string
            description: Name of cloud vendor
            enum:
            - NetApp StorageGRID
          mediaAgent:
            $ref: "#/components/schemas/IdName"
          serviceHost:
            type: string
            description: IP address or fully qualified domain name or URL for the
              cloud library based on cloud vendor
          credentials:
            $ref: "#/components/schemas/IdName"
          bucket:
            type: string
            description: Name of bucket
      - $ref: "#/components/schemas/CloudStorageProxy"
      - $ref: "#/components/schemas/CloudStorageAdvanced"
      - $ref: "#/components/schemas/ModifyCloudBucketConfiguration"
    NetAppBucketContentResp:
      title: NetApp StorageGRID
      description: ""
      allOf:
      - $ref: "#/components/schemas/BucketsResp"
      - type: object
        properties:
          cloudType:
            type: string
            description: Name of cloud vendor
            enum:
            - NetApp StorageGRID
          mediaAgent:
            $ref: "#/components/schemas/IdName"
          serviceHost:
            type: string
            description: IP address or fully qualified domain name or URL for the
              cloud library based on cloud vendor
          credentials:
            $ref: "#/components/schemas/IdName"
          bucket:
            type: string
            description: Name of bucket
      - $ref: "#/components/schemas/CloudStorageProxy"
      - $ref: "#/components/schemas/CloudStorageAdvanced"
    Nutanix:
      title: Nutanix Objects
      description: ""
      allOf:
      - $ref: "#/components/schemas/CloudStorage"
      - required:
        - bucket
        - cloudType
        - credentials
        - serviceHost
        type: object
        properties:
          cloudType:
            type: string
            description: Name of cloud vendor
            enum:
            - Nutanix Objects
          serviceHost:
            type: string
            description: IP address or fully qualified domain name or URL for the
              cloud library based on cloud vendor
          credentials:
            $ref: "#/components/schemas/IdName"
          bucket:
            type: string
            description: Name of bucket
      - $ref: "#/components/schemas/DedupeStorageList"
    NutanixBucket:
      title: Nutanix Objects
      description: ""
      allOf:
      - required:
        - bucket
        - cloudType
        - credentials
        - serviceHost
        type: object
        properties:
          cloudType:
            type: string
            description: Name of cloud vendor
            enum:
            - Nutanix Objects
          mediaAgent:
            $ref: "#/components/schemas/IdName"
          serviceHost:
            type: string
            description: IP address or fully qualified domain name or URL for the
              cloud library based on cloud vendor
          credentials:
            $ref: "#/components/schemas/IdName"
          bucket:
            type: string
            description: Name of bucket
      - $ref: "#/components/schemas/CloudStorageProxy"
    NutanixBucketContent:
      title: Nutanix Objects
      description: ""
      allOf:
      - required:
        - cloudType
        - mediaAgent
        type: object
        properties:
          cloudType:
            type: string
            description: Name of cloud vendor
            enum:
            - Nutanix Objects
          mediaAgent:
            $ref: "#/components/schemas/IdName"
          serviceHost:
            type: string
            description: IP address or fully qualified domain name or URL for the
              cloud library based on cloud vendor
          credentials:
            $ref: "#/components/schemas/IdName"
          bucket:
            type: string
            description: Name of bucket
      - $ref: "#/components/schemas/CloudStorageProxy"
      - $ref: "#/components/schemas/CloudStorageAdvanced"
      - $ref: "#/components/schemas/ModifyCloudBucketConfiguration"
    NutanixBucketContentResp:
      title: Nutanix Objects
      description: ""
      allOf:
      - $ref: "#/components/schemas/BucketsResp"
      - type: object
        properties:
          cloudType:
            type: string
            description: Name of cloud vendor
            enum:
            - Nutanix Objects
          mediaAgent:
            $ref: "#/components/schemas/IdName"
          serviceHost:
            type: string
            description: IP address or fully qualified domain name or URL for the
              cloud library based on cloud vendor
          credentials:
            $ref: "#/components/schemas/IdName"
          bucket:
            type: string
            description: Name of bucket
      - $ref: "#/components/schemas/CloudStorageProxy"
      - $ref: "#/components/schemas/CloudStorageAdvanced"
    OpenStack:
      title: OpenStack Object Storage
      description: ""
      allOf:
      - $ref: "#/components/schemas/CloudStorage"
      - required:
        - cloudType
        - container
        - credentials
        - serviceHost
        type: object
        properties:
          cloudType:
            type: string
            description: Name of cloud vendor
            enum:
            - OpenStack Object Storage
          serviceHost:
            type: string
            description: IP address or fully qualified domain name or URL for the
              cloud library based on cloud vendor
          credentials:
            $ref: "#/components/schemas/IdName"
          container:
            type: string
            description: Name of container
      - $ref: "#/components/schemas/DedupeStorageList"
    OpenStackBucket:
      title: OpenStack Object Storage
      description: ""
      allOf:
      - required:
        - cloudType
        - container
        - credentials
        - serviceHost
        type: object
        properties:
          cloudType:
            type: string
            description: Name of cloud vendor
            enum:
            - OpenStack Object Storage
          mediaAgent:
            $ref: "#/components/schemas/IdName"
          serviceHost:
            type: string
            description: IP address or fully qualified domain name or URL for the
              cloud library based on cloud vendor
          credentials:
            $ref: "#/components/schemas/IdName"
          container:
            type: string
            description: Name of container
      - $ref: "#/components/schemas/CloudStorageProxy"
    OpenStackBucketContent:
      title: OpenStack Object Storage
      description: ""
      allOf:
      - required:
        - cloudType
        - mediaAgent
        type: object
        properties:
          cloudType:
            type: string
            enum:
            - OpenStack Object Storage
          mediaAgent:
            $ref: "#/components/schemas/IdName"
          serviceHost:
            type: string
            description: IP address or fully qualified domain name or URL for the
              cloud library based on cloud vendor
          credentials:
            $ref: "#/components/schemas/IdName"
          container:
            type: string
            description: Name of container
      - $ref: "#/components/schemas/CloudStorageProxy"
      - $ref: "#/components/schemas/CloudStorageAdvanced"
      - $ref: "#/components/schemas/ModifyCloudBucketConfiguration"
    OpenStackBucketContentResp:
      title: OpenStack Object Storage
      description: ""
      allOf:
      - $ref: "#/components/schemas/BucketsResp"
      - type: object
        properties:
          cloudType:
            type: string
            enum:
            - OpenStack Object Storage
          mediaAgent:
            $ref: "#/components/schemas/IdName"
          serviceHost:
            type: string
            description: IP address or fully qualified domain name or URL for the
              cloud library based on cloud vendor
          credentials:
            $ref: "#/components/schemas/IdName"
          container:
            type: string
            description: Name of container
      - $ref: "#/components/schemas/CloudStorageProxy"
      - $ref: "#/components/schemas/CloudStorageAdvanced"
    OracleArchive:
      title: Oracle Cloud Infrastructure Archive Storage
      description: ""
      allOf:
      - $ref: "#/components/schemas/CloudStorage"
      - required:
        - bucket
        - cloudType
        - credentials
        type: object
        properties:
          cloudType:
            type: string
            description: Name of cloud vendor
            enum:
            - Oracle Cloud Infrastructure Archive Storage
          serviceHost:
            type: string
            description: IP address or fully qualified domain name or URL for the
              cloud library based on cloud vendor
            default: objectstorage.us-phoenix-1.oraclecloud.com
          credentials:
            $ref: "#/components/schemas/IdName"
          compartmentName:
            type: string
            description: OCI compartment name
          bucket:
            type: string
            description: Name of bucket
      - $ref: "#/components/schemas/DedupeStorageList"
    OracleArchiveBucket:
      title: Oracle Cloud Infrastructure Archive Storage
      description: ""
      allOf:
      - required:
        - bucket
        - cloudType
        - compartmentName
        - credentials
        type: object
        properties:
          cloudType:
            type: string
            description: Name of cloud vendor
            enum:
            - Oracle Cloud Infrastructure Archive Storage
          mediaAgent:
            $ref: "#/components/schemas/IdName"
          serviceHost:
            type: string
            description: IP address or fully qualified domain name or URL for the
              cloud library based on cloud vendor
            default: objectstorage.us-phoenix-1.oraclecloud.com
          credentials:
            $ref: "#/components/schemas/IdName"
          compartmentName:
            type: string
            description: OCI compartment name
          bucket:
            type: string
            description: Name of bucket
      - $ref: "#/components/schemas/CloudStorageProxy"
    OracleArchiveBucketContent:
      title: Oracle Cloud Infrastructure Archive Storage
      description: ""
      allOf:
      - required:
        - cloudType
        - mediaAgent
        type: object
        properties:
          cloudType:
            type: string
            description: Name of cloud vendor
            enum:
            - Oracle Cloud Infrastructure Archive Storage
          mediaAgent:
            $ref: "#/components/schemas/IdName"
          serviceHost:
            type: string
            description: IP address or fully qualified domain name or URL for the
              cloud library based on cloud vendor
            default: objectstorage.us-phoenix-1.oraclecloud.com
          credentials:
            $ref: "#/components/schemas/IdName"
          compartmentName:
            type: string
            description: OCI compartment name
          bucket:
            type: string
            description: Name of bucket
      - $ref: "#/components/schemas/CloudStorageProxy"
      - $ref: "#/components/schemas/CloudStorageAdvanced"
      - $ref: "#/components/schemas/ModifyCloudBucketConfiguration"
    OracleArchiveBucketContentResp:
      title: Oracle Cloud Infrastructure Archive Storage
      description: ""
      allOf:
      - $ref: "#/components/schemas/BucketsResp"
      - type: object
        properties:
          cloudType:
            type: string
            description: Name of cloud vendor
            enum:
            - Oracle Cloud Infrastructure Archive Storage
          mediaAgent:
            $ref: "#/components/schemas/IdName"
          serviceHost:
            type: string
            description: IP address or fully qualified domain name or URL for the
              cloud library based on cloud vendor
          credentials:
            $ref: "#/components/schemas/IdName"
          compartmentName:
            type: string
            description: OCI compartment name
          bucket:
            type: string
            description: Name of bucket
      - $ref: "#/components/schemas/CloudStorageProxy"
      - $ref: "#/components/schemas/CloudStorageAdvanced"
    OracleObject:
      title: Oracle Cloud Infrastructure Object Storage
      description: ""
      allOf:
      - $ref: "#/components/schemas/CloudStorage"
      - required:
        - bucket
        - cloudType
        - credentials
        - storageClass
        type: object
        properties:
          cloudType:
            type: string
            description: Name of cloud vendor
            enum:
            - Oracle Cloud Infrastructure Object Storage
          serviceHost:
            type: string
            description: IP address or fully qualified domain name or URL for the
              cloud library based on cloud vendor
            default: objectstorage.us-phoenix-1.oraclecloud.com
          credentials:
            $ref: "#/components/schemas/IdName"
          compartmentName:
            type: string
            description: OCI compartment name
          bucket:
            type: string
            description: Name of the bucket
          storageClass:
            type: string
            description: Appropriate storage class for your account
            enum:
            - Infrequent access
            - Standard
            - Archive
          useCombinedStorage:
            type: boolean
            description: Applicable for Archive storage class only
          combinedStorageClass:
            type: string
            description: Appropriate combined storage class for archive. Applicable
              only when useCombinedStorage is true.
            enum:
            - Infrequent access
            - Standard
      - $ref: "#/components/schemas/DedupeStorageList"
    OracleObjectBucket:
      title: Oracle Cloud Infrastructure Object Storage
      description: ""
      allOf:
      - required:
        - bucket
        - cloudType
        - credentials
        - storageClass
        type: object
        properties:
          cloudType:
            type: string
            description: Name of cloud vendor
            enum:
            - Oracle Cloud Infrastructure Object Storage
          mediaAgent:
            $ref: "#/components/schemas/IdName"
          serviceHost:
            type: string
            description: IP address or fully qualified domain name or URL for the
              cloud library based on cloud vendor
            default: objectstorage.us-phoenix-1.oraclecloud.com
          credentials:
            $ref: "#/components/schemas/IdName"
          compartmentName:
            type: string
            description: OCI compartment name
          bucket:
            type: string
            description: Name of the bucket
          storageClass:
            type: string
            description: Appropriate storage class for your account
            enum:
            - Infrequent access
            - Standard
            - Archive
          useCombinedStorage:
            type: boolean
            description: Applicable for Archive storage class only
          combinedStorageClass:
            type: string
            description: Appropriate combined storage class for archive. Applicable
              only when useCombinedStorage is true.
            enum:
            - Infrequent access
            - Standard
      - $ref: "#/components/schemas/CloudStorageProxy"
    OracleObjectBucketContent:
      title: Oracle Cloud Infrastructure Object Storage
      description: ""
      allOf:
      - required:
        - cloudType
        - mediaAgent
        type: object
        properties:
          cloudType:
            type: string
            description: Name of cloud vendor
            enum:
            - Oracle Cloud Infrastructure Object Storage
          mediaAgent:
            $ref: "#/components/schemas/IdName"
          serviceHost:
            type: string
            description: IP address or fully qualified domain name or URL for the
              cloud library based on cloud vendor
            default: objectstorage.us-phoenix-1.oraclecloud.com
          credentials:
            $ref: "#/components/schemas/IdName"
          compartmentName:
            type: string
            description: OCI compartment name
          bucket:
            type: string
            description: Name of the bucket
          storageClass:
            type: string
            description: Appropriate storage class for your account
            enum:
            - Infrequent access
            - Standard
            - Archive
          useCombinedStorage:
            type: boolean
            description: Applicable for Archive storage class only
          combinedStorageClass:
            type: string
            description: Appropriate combined storage class for archive. Applicable
              only when useCombinedStorage is true.
            enum:
            - Infrequent access
            - Standard
      - $ref: "#/components/schemas/CloudStorageProxy"
      - $ref: "#/components/schemas/CloudStorageAdvanced"
      - $ref: "#/components/schemas/ModifyCloudBucketConfiguration"
    OracleObjectBucketContentResp:
      title: Oracle Cloud Infrastructure Object Storage
      description: ""
      allOf:
      - $ref: "#/components/schemas/BucketsResp"
      - type: object
        properties:
          cloudType:
            type: string
            description: Name of cloud vendor
            enum:
            - Oracle Cloud Infrastructure Object Storage
          mediaAgent:
            $ref: "#/components/schemas/IdName"
          serviceHost:
            type: string
            description: IP address or fully qualified domain name or URL for the
              cloud library based on cloud vendor
          credentials:
            $ref: "#/components/schemas/IdName"
          compartmentName:
            type: string
            description: OCI compartment name
          bucket:
            type: string
            description: Name of the bucket
          storageClass:
            type: string
            description: Appropriate storage class for your account
            enum:
            - Infrequent access
            - Standard
            - Archive
          useCombinedStorage:
            type: boolean
            description: Applicable for Archive storage class only
          combinedStorageClass:
            type: string
            description: Appropriate combined storage class for archive. Applicable
              only when useCombinedStorage is true.
            enum:
            - Infrequent access
            - Standard
      - $ref: "#/components/schemas/CloudStorageProxy"
      - $ref: "#/components/schemas/CloudStorageAdvanced"
    Rackspace:
      title: Rackspace Cloud Files
      description: ""
      allOf:
      - $ref: "#/components/schemas/CloudStorage"
      - required:
        - cloudType
        - container
        - credentials
        type: object
        properties:
          cloudType:
            type: string
            description: Name of cloud vendor
            enum:
            - Rackspace Cloud Files
          serviceHost:
            type: string
            description: IP address or fully qualified domain name or URL for the
              cloud library based on cloud vendor
            default: api.mosso.com
          credentials:
            $ref: "#/components/schemas/IdName"
          container:
            type: string
            description: Name of container
      - $ref: "#/components/schemas/DedupeStorageList"
    RackspaceBucket:
      title: Rackspace Cloud Files
      description: ""
      allOf:
      - required:
        - cloudType
        - container
        - credentials
        type: object
        properties:
          cloudType:
            type: string
            description: Name of cloud vendor
            enum:
            - Rackspace Cloud Files
          mediaAgent:
            $ref: "#/components/schemas/IdName"
          serviceHost:
            type: string
            description: IP address or fully qualified domain name or URL for the
              cloud library based on cloud vendor
            default: api.mosso.com
          credentials:
            $ref: "#/components/schemas/IdName"
          container:
            type: string
            description: Name of container
      - $ref: "#/components/schemas/CloudStorageProxy"
    RackspaceBucketContent:
      title: Rackspace Cloud Files
      description: ""
      allOf:
      - required:
        - cloudType
        - mediaAgent
        type: object
        properties:
          cloudType:
            type: string
            description: Name of cloud vendor
            enum:
            - Rackspace Cloud Files
          mediaAgent:
            $ref: "#/components/schemas/IdName"
          serviceHost:
            type: string
            description: IP address or fully qualified domain name or URL for the
              cloud library based on cloud vendor
            default: api.mosso.com
          credentials:
            $ref: "#/components/schemas/IdName"
          container:
            type: string
            description: Name of container
      - $ref: "#/components/schemas/CloudStorageProxy"
      - $ref: "#/components/schemas/CloudStorageAdvanced"
      - $ref: "#/components/schemas/ModifyCloudBucketConfiguration"
    RackspaceBucketContentResp:
      title: Rackspace Cloud Files
      description: ""
      allOf:
      - $ref: "#/components/schemas/BucketsResp"
      - type: object
        properties:
          cloudType:
            type: string
            description: Name of cloud vendor
            enum:
            - Rackspace Cloud Files
          mediaAgent:
            $ref: "#/components/schemas/IdName"
          serviceHost:
            type: string
            description: IP address or fully qualified domain name or URL for the
              cloud library based on cloud vendor
          credentials:
            $ref: "#/components/schemas/IdName"
          container:
            type: string
            description: Name of container
      - $ref: "#/components/schemas/CloudStorageProxy"
      - $ref: "#/components/schemas/CloudStorageAdvanced"
    CCLVaultV2:
      title: CCL Vault v2
      description: ""
      allOf:
      - $ref: "#/components/schemas/CloudStorage"
      - required:
        - bucket
        - cloudType
        - credentials
        - serviceHost
        type: object
        properties:
          cloudType:
            type: string
            description: Name of cloud vendor
            enum:
            - CCL Vault v2
          serviceHost:
            type: string
            description: IP address or fully qualified domain name or URL for the
              cloud library based on cloud vendor
            default: s3-nzl.vault.net.nz
          credentials:
            $ref: "#/components/schemas/IdName"
          bucket:
            type: string
            description: Name of bucket
      - $ref: "#/components/schemas/DedupeStorageList"
    CCLVaultV2Bucket:
      title: CCL Vault v2
      description: ""
      allOf:
      - required:
        - bucket
        - cloudType
        - credentials
        - serviceHost
        type: object
        properties:
          cloudType:
            type: string
            description: Name of cloud vendor
            enum:
            - CCL Vault v2
          mediaAgent:
            $ref: "#/components/schemas/IdName"
          serviceHost:
            type: string
            description: IP address or fully qualified domain name or URL for the
              cloud library based on cloud vendor
            default: s3-nzl.vault.net.nz
          credentials:
            $ref: "#/components/schemas/IdName"
          bucket:
            type: string
            description: Name of bucket
      - $ref: "#/components/schemas/CloudStorageProxy"
    CCLVaultV2BucketContent:
      title: CCL Vault v2
      description: ""
      allOf:
      - required:
        - cloudType
        - mediaAgent
        type: object
        properties:
          cloudType:
            type: string
            description: Name of cloud vendor
            enum:
            - CCL Vault v2
          mediaAgent:
            $ref: "#/components/schemas/IdName"
          serviceHost:
            type: string
            description: IP address or fully qualified domain name or URL for the
              cloud library based on cloud vendor
            default: s3-nzl.vault.net.nz
          credentials:
            $ref: "#/components/schemas/IdName"
          bucket:
            type: string
            description: Name of bucket
      - $ref: "#/components/schemas/CloudStorageProxy"
      - $ref: "#/components/schemas/CloudStorageAdvanced"
      - $ref: "#/components/schemas/ModifyCloudBucketConfiguration"
    CCLVaultV2BucketContentResp:
      title: CCL Vault v2
      description: ""
      allOf:
      - $ref: "#/components/schemas/BucketsResp"
      - type: object
        properties:
          cloudType:
            type: string
            description: Name of cloud vendor
            enum:
            - CCL Vault v2
          mediaAgent:
            $ref: "#/components/schemas/IdName"
          serviceHost:
            type: string
            description: IP address or fully qualified domain name or URL for the
              cloud library based on cloud vendor
          credentials:
            $ref: "#/components/schemas/IdName"
          bucket:
            type: string
            description: Name of bucket
      - $ref: "#/components/schemas/CloudStorageProxy"
      - $ref: "#/components/schemas/CloudStorageAdvanced"
    S3Compatible:
      title: S3 Compatible Storage
      description: ""
      allOf:
      - $ref: "#/components/schemas/CloudStorage"
      - required:
        - bucket
        - cloudType
        - credentials
        - serviceHost
        type: object
        properties:
          cloudType:
            type: string
            description: Name of cloud vendor
            enum:
            - S3 Compatible Storage
          serviceHost:
            type: string
            description: IP address or fully qualified domain name or URL for the
              cloud library based on cloud vendor
          credentials:
            $ref: "#/components/schemas/IdName"
          bucket:
            type: string
            description: Name of bucket
      - $ref: "#/components/schemas/DedupeStorageList"
    S3CompatibleBucket:
      title: S3 Compatible Storage
      description: ""
      allOf:
      - required:
        - bucket
        - cloudType
        - credentials
        - serviceHost
        type: object
        properties:
          cloudType:
            type: string
            description: Name of cloud vendor
            enum:
            - S3 Compatible Storage
          mediaAgent:
            $ref: "#/components/schemas/IdName"
          serviceHost:
            type: string
            description: IP address or fully qualified domain name or URL for the
              cloud library based on cloud vendor
          credentials:
            $ref: "#/components/schemas/IdName"
          bucket:
            type: string
            description: Name of bucket
      - $ref: "#/components/schemas/CloudStorageProxy"
    S3CompatibleBucketContent:
      title: S3 Compatible Storage
      description: ""
      allOf:
      - required:
        - cloudType
        - mediaAgent
        type: object
        properties:
          cloudType:
            type: string
            description: Name of cloud vendor
            enum:
            - S3 Compatible Storage
          mediaAgent:
            $ref: "#/components/schemas/IdName"
          serviceHost:
            type: string
            description: IP address or fully qualified domain name or URL for the
              cloud library based on cloud vendor
          credentials:
            $ref: "#/components/schemas/IdName"
          bucket:
            type: string
            description: Name of bucket
      - $ref: "#/components/schemas/CloudStorageProxy"
      - $ref: "#/components/schemas/CloudStorageAdvanced"
      - $ref: "#/components/schemas/ModifyCloudBucketConfiguration"
    S3CompatibleBucketContentResp:
      title: S3 Compatible Storage
      description: ""
      allOf:
      - $ref: "#/components/schemas/BucketsResp"
      - type: object
        properties:
          cloudType:
            type: string
            description: Name of cloud vendor
            enum:
            - S3 Compatible Storage
          mediaAgent:
            $ref: "#/components/schemas/IdName"
          serviceHost:
            type: string
            description: IP address or fully qualified domain name or URL for the
              cloud library based on cloud vendor
          credentials:
            $ref: "#/components/schemas/IdName"
          bucket:
            type: string
            description: Name of bucket
      - $ref: "#/components/schemas/CloudStorageProxy"
      - $ref: "#/components/schemas/CloudStorageAdvanced"
    ScalityRing:
      title: Scality RING
      description: ""
      allOf:
      - $ref: "#/components/schemas/CloudStorage"
      - required:
        - bucket
        - cloudType
        - credentials
        - serviceHost
        type: object
        properties:
          cloudType:
            type: string
            description: Name of cloud vendor
            enum:
            - Scality RING
          serviceHost:
            type: string
            description: IP address or fully qualified domain name or URL for the
              cloud library based on cloud vendor
          credentials:
            $ref: "#/components/schemas/IdName"
          bucket:
            type: string
            description: Name of bucket
      - $ref: "#/components/schemas/DedupeStorageList"
    ScalityRingBucket:
      title: Scality RING
      description: ""
      allOf:
      - required:
        - bucket
        - cloudType
        - credentials
        - serviceHost
        type: object
        properties:
          cloudType:
            type: string
            description: Name of cloud vendor
            enum:
            - Scality RING
          mediaAgent:
            $ref: "#/components/schemas/IdName"
          serviceHost:
            type: string
            description: IP address or fully qualified domain name or URL for the
              cloud library based on cloud vendor
          credentials:
            $ref: "#/components/schemas/IdName"
          bucket:
            type: string
            description: Name of bucket
      - $ref: "#/components/schemas/CloudStorageProxy"
    ScalityRingBucketContent:
      title: Scality RING
      description: ""
      allOf:
      - required:
        - cloudType
        - mediaAgent
        type: object
        properties:
          cloudType:
            type: string
            description: Name of cloud vendor
            enum:
            - Scality RING
          mediaAgent:
            $ref: "#/components/schemas/IdName"
          serviceHost:
            type: string
            description: IP address or fully qualified domain name or URL for the
              cloud library based on cloud vendor
          credentials:
            $ref: "#/components/schemas/IdName"
          bucket:
            type: string
            description: Name of bucket
      - $ref: "#/components/schemas/CloudStorageProxy"
      - $ref: "#/components/schemas/CloudStorageAdvanced"
      - $ref: "#/components/schemas/ModifyCloudBucketConfiguration"
    ScalityRingBucketContentResp:
      title: Scality RING
      description: ""
      allOf:
      - $ref: "#/components/schemas/BucketsResp"
      - type: object
        properties:
          cloudType:
            type: string
            description: Name of cloud vendor
            enum:
            - Scality RING
          mediaAgent:
            $ref: "#/components/schemas/IdName"
          serviceHost:
            type: string
            description: IP address or fully qualified domain name or URL for the
              cloud library based on cloud vendor
          credentials:
            $ref: "#/components/schemas/IdName"
          bucket:
            type: string
            description: Name of bucket
      - $ref: "#/components/schemas/CloudStorageProxy"
      - $ref: "#/components/schemas/CloudStorageAdvanced"
    WasabiHot:
      title: Wasabi Hot Cloud Storage
      description: ""
      allOf:
      - $ref: "#/components/schemas/CloudStorage"
      - required:
        - bucket
        - cloudType
        - credentials
        - serviceHost
        type: object
        properties:
          cloudType:
            type: string
            description: Name of cloud vendor
            enum:
            - Wasabi Hot Cloud Storage
          serviceHost:
            type: string
            description: IP address or fully qualified domain name or URL for the
              cloud library based on cloud vendor
          credentials:
            $ref: "#/components/schemas/IdName"
          bucket:
            type: string
            description: Name of bucket
      - $ref: "#/components/schemas/DedupeStorageList"
    WasabiHotBucket:
      title: Wasabi Hot Cloud Storage
      description: ""
      allOf:
      - required:
        - bucket
        - cloudType
        - credentials
        - serviceHost
        type: object
        properties:
          cloudType:
            type: string
            description: Name of cloud vendor
            enum:
            - Wasabi Hot Cloud Storage
          mediaAgent:
            $ref: "#/components/schemas/IdName"
          serviceHost:
            type: string
            description: IP address or fully qualified domain name or URL for the
              cloud library based on cloud vendor
          credentials:
            $ref: "#/components/schemas/IdName"
          bucket:
            type: string
            description: Name of bucket
      - $ref: "#/components/schemas/CloudStorageProxy"
    WasabiHotBucketContent:
      title: Wasabi Hot Cloud Storage
      description: ""
      allOf:
      - required:
        - cloudType
        - mediaAgent
        type: object
        properties:
          cloudType:
            type: string
            description: Name of cloud vendor
            enum:
            - Wasabi Hot Cloud Storage
          mediaAgent:
            $ref: "#/components/schemas/IdName"
          serviceHost:
            type: string
            description: IP address or fully qualified domain name or URL for the
              cloud library based on cloud vendor
          credentials:
            $ref: "#/components/schemas/IdName"
          bucket:
            type: string
            description: Name of bucket
      - $ref: "#/components/schemas/CloudStorageProxy"
      - $ref: "#/components/schemas/CloudStorageAdvanced"
      - $ref: "#/components/schemas/ModifyCloudBucketConfiguration"
    WasabiHotBucketContentResp:
      title: Wasabi Hot Cloud Storage
      description: ""
      allOf:
      - $ref: "#/components/schemas/BucketsResp"
      - type: object
        properties:
          cloudType:
            type: string
            description: Name of cloud vendor
            enum:
            - Wasabi Hot Cloud Storage
          mediaAgent:
            $ref: "#/components/schemas/IdName"
          serviceHost:
            type: string
            description: IP address or fully qualified domain name or URL for the
              cloud library based on cloud vendor
          credentials:
            $ref: "#/components/schemas/IdName"
          bucket:
            type: string
            description: Name of bucket
      - $ref: "#/components/schemas/CloudStorageProxy"
      - $ref: "#/components/schemas/CloudStorageAdvanced"
    CloudStorageDetails:
      title: Cloud Storage Details
      description: ""
      allOf:
      - $ref: "#/components/schemas/IdName"
      - type: object
        properties:
          general:
            $ref: "#/components/schemas/CloudStorageGeneralInfo"
          bucket:
            type: array
            items:
              $ref: "#/components/schemas/IdNameStatus"
          encryption:
            $ref: "#/components/schemas/Encryption"
          security:
            type: array
            items:
              $ref: "#/components/schemas/SecurityAssoc"
          cacheConfigurations:
            $ref: "#/components/schemas/CacheConfigurations"
          associatedPlans:
            type: array
            items:
              $ref: "#/components/schemas/IdName"
    CacheConfigurations:
      title: CacheConfigurations
      type: object
      properties:
        enable:
          type: boolean
          description: Tells if cache configuration is enabled for this storage
        metadataCache:
          type: array
          items:
            $ref: "#/components/schemas/MetadataCache"
    MetadataCache:
      title: metadataCache
      type: object
      properties:
        mediaAgent:
          $ref: "#/components/schemas/IdName"
        path:
          type: string
          description: Path of cache
      example:
        path: path
        mediaAgent: null
    CreateMetadataCacheConfigurations:
      title: CreateMetadataCacheConfigurations
      required:
      - mediaAgent
      - path
      type: object
      properties:
        mediaAgent:
          $ref: "#/components/schemas/IdName"
        credentials:
          $ref: "#/components/schemas/UserNamePassword"
        savedCredentials:
          $ref: "#/components/schemas/IdName"
        path:
          type: string
          description: Metadata cache will be stored on this path
      description: "If adding a network access path, Please add credentials or saved\
        \ credentials. If both are provided, credentials will be taken into consideration."
    UpdateMetadataCacheConfiguration:
      title: UpdateMetadataCacheConfiguration
      required:
      - path
      type: object
      properties:
        credentials:
          $ref: "#/components/schemas/UserNamePassword"
        savedCredentials:
          $ref: "#/components/schemas/IdName"
        path:
          type: string
          description: Metadata cache will be stored on this path
      description: "If updating to a network access path, Please add credentials or\
        \ saved credentials. If both are provided, credentials will be taken into\
        \ consideration."
    MetadataCacheConfiguration:
      title: MetadataCacheConfiguration
      type: object
      properties:
        mediaAgent:
          $ref: "#/components/schemas/IdName"
        credentials:
          $ref: "#/components/schemas/UserNamePassword"
        savedCredentials:
          $ref: "#/components/schemas/IdName"
        path:
          type: string
          description: Metadata cache will be stored on this path
        metadataCache:
          type: array
          items:
            $ref: "#/components/schemas/MetadataCache"
      example:
        path: path
        mediaAgent:
          name: name
          id: 0
        credentials:
          password: password
          name: name
        savedCredentials: null
        metadataCache:
        - path: path
          mediaAgent: null
        - path: path
          mediaAgent: null
    ModifyCloudBucketConfiguration:
      title: ModifyCloudBucketConfiguration
      type: object
      properties:
        configuration:
          $ref: "#/components/schemas/CloudBucketConfiguration"
      description: Change the configuration of the bucket
    CloudBucketConfiguration:
      title: CloudBucketConfiguration
      type: object
      properties:
        enable:
          type: boolean
          description: "When true, means mount path is enabled"
        disableBackupLocationForFutureBackups:
          type: boolean
          description: "When true, prevents new data writes to backup location by\
            \ changing number of writers to zero"
        prepareForRetirement:
          type: boolean
          description: "When true, the deduplicated blocks in the mount path will\
            \ not be referenced when there are multiple mount paths in the library."
        storageAcceleratorCredentials:
          $ref: "#/components/schemas/IdName"
    UpdateCloudStorage:
      type: object
      properties:
        newName:
          type: string
          description: change the name of the cloud storage
          x-terraform-mapping: name
        encryption:
          $ref: "#/components/schemas/Encryption"
        security:
          type: array
          items:
            $ref: "#/components/schemas/UpdateSecurityAssoc"
    CloudStorageResp:
      title: CloudStorageResp
      allOf:
      - $ref: "#/components/schemas/IdName"
      - $ref: "#/components/schemas/GenericResp"
      x-terraform-id: Id
    CloudStorageGeneralInfo:
      title: CloudStorageGeneralInfo
      type: object
      properties:
        type:
          type: string
          description: Type of the cloud storage server
        vendorType:
          type: string
          description: Cloud server type
        totalCapacity:
          type: integer
          description: Total capacity of this cloud storage
          format: int32
        freeSpace:
          type: integer
          description: Free space available on this cloud storage
          format: int32
        sizeOnDisk:
          type: integer
          description: Amount of space consumed
          format: int32
        deduplicationSavings:
          type: string
          description: Specifies the savings in percentage that occurred due to deduplication.
            Only available for dedupe cloud storage pools
    CloudAccessPathsResp:
      title: CloudAccessPathsResp
      type: object
      properties:
        accessPathId:
          type: integer
          description: Id of cloud access path
          format: int32
        mediaAgent:
          $ref: "#/components/schemas/IdNameDisplayName"
        bucket:
          type: string
          description: Name of the bucket
        username:
          type: string
          description: Username used to connect to cloud Storage
        access:
          $ref: "#/components/schemas/AccessType"
        accessible:
          type: string
          description: Accessibility status of cloud storage
    BucketsResp:
      title: BucketResp
      type: object
      properties:
        id:
          type: integer
          description: Id of the bucket
          format: int32
        name:
          type: string
          description: MediaAgent display name along with name of the bucket
        configuration:
          $ref: "#/components/schemas/CloudBucketConfiguration"
        cloudAccessPaths:
          type: array
          items:
            $ref: "#/components/schemas/CloudAccessPathsResp"
    CloudStorageProxy:
      title: CloudStorageProxy
      type: object
      properties:
        proxyAddress:
          type: string
          description: "If the MediaAgent accesses the mount path using a proxy then\
            \ proxy server address needs to be provided. If you want to remove proxy\
            \ information, pass empty string in proxyAddress."
        port:
          type: integer
          description: Port for proxy configuration
          format: int32
        username:
          type: string
          description: Username for proxy configuration
        password:
          type: string
          description: Password for proxy configuration (Should be in Base64 format)
          format: password
    CloudStorageAdvanced:
      title: CloudStorageAdvanced
      type: object
      properties:
        access:
          $ref: "#/components/schemas/AccessType"
        enable:
          type: boolean
          description: Enable/Disable access of bucket to a media Agent
    DedupeStorageList:
      title: Dedupe Storage List
      type: object
      properties:
        useDeduplication:
          type: boolean
          description: Enables or disables deduplication on the storage
          default: false
        deduplicationDBLocation:
          type: array
          description: A list of dedupe locations can be provided for the storage
            pool being created. This provides an efficient way to save/store data
            by eliminating duplicate blocks of data during backups
          items:
            $ref: "#/components/schemas/DedupePath"
      description: A list of dedupe locations can be provided for the storage pool
        being created. This provides an efficient way to save/store data by eliminating
        duplicate blocks of data during backups
    DeleteMultipleUsers:
      type: object
      properties:
        users:
          type: array
          items:
            $ref: "#/components/schemas/DeleteUsers"
      description: Used to delete multiple users and carry out property transfership
        of deleted users
    DeleteUsers:
      type: object
      properties:
        skipOwnerTransfer:
          type: boolean
        newUser:
          $ref: "#/components/schemas/IdName"
        newUserGroup:
          $ref: "#/components/schemas/IdName"
        user:
          $ref: "#/components/schemas/IdName"
    DeleteMultipleUserGroups:
      type: object
      properties:
        userGroups:
          type: array
          description: "List of userGroups that have to be deleted. Either name or\
            \ id can be provided. If name and id are both provided, id will be taken\
            \ into consideration."
          items:
            $ref: "#/components/schemas/DeleteUserGroups"
    DeleteUserGroups:
      type: object
      properties:
        skipOwnerTransfer:
          type: boolean
        newUser:
          $ref: "#/components/schemas/IdName"
        newUserGroup:
          $ref: "#/components/schemas/IdName"
        userGroup:
          $ref: "#/components/schemas/IdName"
    UserGroupListResponse:
      type: object
      properties:
        userGroups:
          type: array
          items:
            $ref: "#/components/schemas/UserGroupSummary"
      description: Used to get a list of existing user-groups.
      example:
        userGroups:
        - serviceType: UNKNOWN
          GUID: GUID
          allowMultipleCompanyMembers: true
          globalConfigInfo:
            scopeFilterQuery: scopeFilterQuery
            applyOnAllCommCells: true
            commcells:
            - name: name
              guid: guid
              id: 5
            - name: name
              guid: guid
              id: 5
            scope: scope
            isMarkedForDeletion: true
            name: name
            id: id
            status: status
          description: description
          enabled: true
          users:
          - null
          - null
          provider: null
          name: name
          commcell:
            name: name
          company: null
          id: 0
          plan:
            name: name
            id: 0
        - serviceType: UNKNOWN
          GUID: GUID
          allowMultipleCompanyMembers: true
          globalConfigInfo:
            scopeFilterQuery: scopeFilterQuery
            applyOnAllCommCells: true
            commcells:
            - name: name
              guid: guid
              id: 5
            - name: name
              guid: guid
              id: 5
            scope: scope
            isMarkedForDeletion: true
            name: name
            id: id
            status: status
          description: description
          enabled: true
          users:
          - null
          - null
          provider: null
          name: name
          commcell:
            name: name
          company: null
          id: 0
          plan:
            name: name
            id: 0
    UserGroupSummary:
      type: object
      properties:
        id:
          type: integer
          description: User group id
          format: int32
        name:
          type: string
          description: user group name
        GUID:
          type: string
          description: globally unique identifier for user group
        serviceType:
          $ref: "#/components/schemas/ServiceTypes"
        description:
          type: string
        plan:
          $ref: "#/components/schemas/IdName"
        provider:
          $ref: "#/components/schemas/IdName"
        enabled:
          type: boolean
          description: returns if the user group is enabled or disabled
        allowMultipleCompanyMembers:
          type: boolean
          description: This property denotes that addition of users/groups from child
            companies is allowed. Only applicable for commcell and reseller company
            group.
        company:
          $ref: "#/components/schemas/IdName"
        commcell:
          $ref: "#/components/schemas/CommcellInfo"
        users:
          type: array
          items:
            $ref: "#/components/schemas/IdName"
        globalConfigInfo:
          $ref: "#/components/schemas/GlobalConfigInfo"
      example:
        serviceType: UNKNOWN
        GUID: GUID
        allowMultipleCompanyMembers: true
        globalConfigInfo:
          scopeFilterQuery: scopeFilterQuery
          applyOnAllCommCells: true
          commcells:
          - name: name
            guid: guid
            id: 5
          - name: name
            guid: guid
            id: 5
          scope: scope
          isMarkedForDeletion: true
          name: name
          id: id
          status: status
        description: description
        enabled: true
        users:
        - null
        - null
        provider: null
        name: name
        commcell:
          name: name
        company: null
        id: 0
        plan:
          name: name
          id: 0
    CreateUserGroup:
      required:
      - name
      type: object
      properties:
        name:
          type: string
          description: "To create an active directory usergroup, the domain name should\
            \ be mentioned along with the usergroup name (domainName\\\\usergroupName)\
            \ and localUserGroup value must be given."
        description:
          type: string
        enforceFSQuota:
          type: boolean
          description: Used to determine if a backup data limit will be set for the
            user group being created
        quotaLimitInGB:
          type: integer
          description: "if enforceFSQuota is set to true, the quota limit can be set\
            \ in GBs"
          format: int32
        localUserGroups:
          type: array
          description: This option is for AD user groups being created. Local user
            groups can be added to the active directory user groups.
          items:
            $ref: "#/components/schemas/IdName"
          x-terraform-include: false
        globalConfigInfo:
          $ref: "#/components/schemas/CreateGlobalConfigInfo"
    UserGroup:
      type: object
      properties:
        id:
          type: string
          x-terraform-id: true
        name:
          type: string
        GUID:
          type: string
        description:
          type: string
        enabled:
          type: boolean
          description: Returns if the user group is enabled or disabled
        enforceFSQuota:
          type: boolean
        quotaLimitInGB:
          type: integer
          format: int32
        serviceType:
          $ref: "#/components/schemas/ServiceTypes"
        email:
          type: string
          description: Returns if there is a email ID associated with the usergroup.
        enableTwoFactorAuthentication:
          $ref: "#/components/schemas/TFAOptions"
        enableLocalAuthentication:
          $ref: "#/components/schemas/TFAOptions"
        associatedExternalGroups:
          type: array
          items:
            $ref: "#/components/schemas/IdName"
        laptopAdmins:
          type: boolean
          description: "When set to true, users in this group cannot activate or be\
            \ set as server owner"
        associatedLocalGroups:
          type: array
          items:
            $ref: "#/components/schemas/IdName"
        plan:
          $ref: "#/components/schemas/IdName"
        company:
          $ref: "#/components/schemas/IdName"
        users:
          type: array
          description: Returns list of users that are associated with this userGroup
          items:
            $ref: "#/components/schemas/IdName"
        associatedEntities:
          type: array
          items:
            $ref: "#/components/schemas/AssocEntity"
        eligibleToAllowMultipleCompanyMembers:
          type: boolean
          description: Read only property. Denotes if the group is eligible for allowMultipleCompanyMembers
          readOnly: true
        allowMultipleCompanyMembers:
          type: boolean
          description: This property denotes that addition of users/groups from child
            companies is allowed. Only applicable for commcell and reseller company
            group.
          default: false
        doNotInheritRestrictConsoleTypes:
          type: boolean
          description: RestrictConsoleTypes are inherited from the parent or not.
        restrictedConsoleTypes:
          type: array
          items:
            $ref: "#/components/schemas/RestrictedConsoleTypes"
          x-terraform-mapping: restrictConsoleTypes
          x-terraform-function: handler.GetConsoleTypes
        azureGUID:
          type: string
          description: Azure Object ID used to link this user group to Azure AD group
            and manage group membership of the user during SAML login
        showAzureGuidOption:
          type: boolean
          description: Read only property. Denotes if the group is eligible to have
            Azure Object ID property
          readOnly: true
        globalConfigInfo:
          $ref: "#/components/schemas/GlobalConfigInfo"
      example:
        serviceType: UNKNOWN
        restrictedConsoleTypes:
        - parent:
            name: name
            id: 1
            type: type
          consoleType: COMMANDCENTER
        - parent:
            name: name
            id: 1
            type: type
          consoleType: COMMANDCENTER
        associatedLocalGroups:
        - null
        - null
        enableTwoFactorAuthentication: "ON"
        laptopAdmins: true
        description: description
        enforceFSQuota: true
        eligibleToAllowMultipleCompanyMembers: true
        enabled: true
        associatedEntities:
        - role: null
          name: name
          permissionList:
            permissionId: 5
            exclude: true
            type: ALL_CATEGORIES
            categoryName: categoryName
            categoryId: 2
            permissionName: permissionName
          id: 6
          type: type
        - role: null
          name: name
          permissionList:
            permissionId: 5
            exclude: true
            type: ALL_CATEGORIES
            categoryName: categoryName
            categoryId: 2
            permissionName: permissionName
          id: 6
          type: type
        showAzureGuidOption: true
        company: null
        id: id
        plan: null
        email: email
        enableLocalAuthentication: null
        GUID: GUID
        allowMultipleCompanyMembers: false
        globalConfigInfo:
          scopeFilterQuery: scopeFilterQuery
          applyOnAllCommCells: true
          commcells:
          - name: name
            guid: guid
            id: 5
          - name: name
            guid: guid
            id: 5
          scope: scope
          isMarkedForDeletion: true
          name: name
          id: id
          status: status
        quotaLimitInGB: 0
        users:
        - null
        - null
        azureGUID: azureGUID
        name: name
        doNotInheritRestrictConsoleTypes: true
        associatedExternalGroups:
        - name: name
          id: 0
        - name: name
          id: 0
    UpdateUserGroup:
      type: object
      properties:
        newName:
          type: string
          description: gives a new name to the user group.
          x-terraform-mapping: name
        newDescription:
          type: string
          description: gives a new description to the user group.
          x-terraform-mapping: description
        laptopPlan:
          $ref: "#/components/schemas/IdName"
        planOperationType:
          $ref: "#/components/schemas/Operations"
        enabled:
          type: boolean
          description: allows the enabling/disabling of the user group.
        enforceFSQuota:
          type: boolean
          description: determines if a data limit will be set for the user group.
        quotaLimitInGB:
          type: integer
          description: "if enforceFSquota is enabled, the quota limit can be provided\
            \ in GBs"
          format: int32
        enableTwoFactorAuthentication:
          $ref: "#/components/schemas/TFAOptions"
        enableLocalAuthentication:
          $ref: "#/components/schemas/TFAOptions"
        associatedExternalGroups:
          type: array
          items:
            $ref: "#/components/schemas/IdName"
          x-terraform-computed: false
        externalUserGroupsOperationType:
          type: string
          description: "Allows adding, deleting or overwriting associated external\
            \ user groups of a user group. Default is adding associated external user\
            \ groups"
          default: ADD
          enum:
          - ADD
          - DELETE
          - OVERWRITE
          x-terraform-constant: OVERWRITE
          x-terraform-haschange: associatedExternalGroups
        laptopAdmins:
          type: boolean
          description: "When set to true, users in this group cannot activate or be\
            \ set as server owner"
        associatedLocalGroups:
          type: array
          items:
            $ref: "#/components/schemas/IdName"
          x-terraform-include: false
        localUserGroupsOperationType:
          type: string
          description: "Allows adding, deleting or overwriting associated local user\
            \ groups of a user group. Default is adding associated local user groups"
          default: ADD
          enum:
          - ADD
          - DELETE
          - OVERWRITE
          x-terraform-include: false
        users:
          type: array
          items:
            $ref: "#/components/schemas/IdName"
          x-terraform-computed: true
        userOperationType:
          $ref: "#/components/schemas/Operations"
        allowMultipleCompanyMembers:
          type: boolean
          description: This property can be used to allow addition of users/groups
            from child companies. Only applicable for commcell and reseller company
            group.
          default: false
        doNotInheritRestrictConsoleTypes:
          type: boolean
          description: "Option to not inherit the RestrictConsoleTypes from the parent.\
            \ By default the value is false, parent RestrictConsoleTypes will be inherited."
        consoleTypeOperationType:
          type: string
          enum:
          - ADD
          - DELETE
          - OVERWRITE
          x-terraform-constant: OVERWRITE
          x-terraform-haschange: restrictConsoleTypes
        restrictConsoleTypes:
          $ref: "#/components/schemas/RestrictConsoleTypes"
        azureGUID:
          type: string
          description: Azure Object ID used to link this user group to Azure AD group
            and manage group membership of the user during SAML login
    Operations:
      type: string
      description: determines if an existing user has to be added to the user group
        or removed from the user group
      enum:
      - ADD
      - DELETE
    StorageListResponse:
      type: object
      properties:
        diskStorage:
          type: array
          items:
            $ref: "#/components/schemas/StorageListSummary"
      example:
        diskStorage:
        - freeSpace: 1
          sizeOnDisk: 5
          capacity: 6
          libraryVendorType: 5
          storagePoolType: DEDUPLICATION
          cloudStorageClass: null
          name: name
          commcell: null
          storageType: ALL
          company:
            name: name
            id: 0
          id: 0
          region:
            displayName: displayName
            name: name
            id: 2
          status: status
        - freeSpace: 1
          sizeOnDisk: 5
          capacity: 6
          libraryVendorType: 5
          storagePoolType: DEDUPLICATION
          cloudStorageClass: null
          name: name
          commcell: null
          storageType: ALL
          company:
            name: name
            id: 0
          id: 0
          region:
            displayName: displayName
            name: name
            id: 2
          status: status
    DiskStorage:
      type: object
      properties:
        id:
          type: integer
          description: Id of the Disk Storage Pool
          format: int32
        name:
          type: string
          description: Name of the Disk Storage Pool
        general:
          $ref: "#/components/schemas/DiskStorageGeneralInfo"
        backupLocations:
          type: array
          description: Gives backup location/mount path details for the storage pool.
          items:
            $ref: "#/components/schemas/IdNameStatus"
        encryption:
          $ref: "#/components/schemas/Encryption"
        security:
          type: array
          items:
            $ref: "#/components/schemas/SecurityAssoc"
        associatedPlanList:
          type: array
          description: Provides the list of plans associated with the storage pool.
          items:
            $ref: "#/components/schemas/IdName"
      example:
        general:
          freeSpace: 1
          sizeOnDisk: 5
          dedupeSavingsPercent: 5
          capacity: 6
        security:
        - role: null
          isCreatorAssociation: true
          externalUserGroup:
            providerId: 5
            name: name
            id: 1
            providerName: providerName
          permissionList:
          - permissionId: 5
            exclude: true
            type: ALL_CATEGORIES
            categoryName: categoryName
            categoryId: 2
            permissionName: permissionName
          - permissionId: 5
            exclude: true
            type: ALL_CATEGORIES
            categoryName: categoryName
            categoryId: 2
            permissionName: permissionName
          user: null
          userGroup: null
        - role: null
          isCreatorAssociation: true
          externalUserGroup:
            providerId: 5
            name: name
            id: 1
            providerName: providerName
          permissionList:
          - permissionId: 5
            exclude: true
            type: ALL_CATEGORIES
            categoryName: categoryName
            categoryId: 2
            permissionName: permissionName
          - permissionId: 5
            exclude: true
            type: ALL_CATEGORIES
            categoryName: categoryName
            categoryId: 2
            permissionName: permissionName
          user: null
          userGroup: null
        associatedPlanList:
        - null
        - null
        encryption:
          cipher: BlowFish
          keyLength: 7
          encrypt: true
          keyProvider:
            name: name
            id: 0
        name: name
        id: 0
        backupLocations:
        - name: name
          id: 2
          status: status
        - name: name
          id: 2
          status: status
    DiskStorageGeneralInfo:
      type: object
      properties:
        capacity:
          type: integer
          description: specifies the capacity of the storage pool
          format: int32
        freeSpace:
          type: integer
          description: specifies the available space on the storage pool
          format: int32
        sizeOnDisk:
          type: integer
          description: Size on disk refers to the actual amount of space being taken
            by the storage pool on the disk.
          format: int32
        dedupeSavingsPercent:
          type: integer
          description: specifies the savings that occurred due to deduplication. Only
            available for dedupe storage pools.
          format: int32
      example:
        freeSpace: 1
        sizeOnDisk: 5
        dedupeSavingsPercent: 5
        capacity: 6
    CreateDiskStorage:
      required:
      - enableDeduplication
      - name
      - storage
      type: object
      properties:
        name:
          type: string
          description: Name of the Disk Storage to be created.
        storage:
          type: array
          description: A list of backup locations can be provided for the storage
            pool being created.
          items:
            $ref: "#/components/schemas/Path"
          x-terraform-list: true
        enableDeduplication:
          type: boolean
          description: enables or disables deduplication
        deduplicationDBStorage:
          type: array
          description: A list of dedupe locations can be provided for the storage
            pool being created. This provides an efficient way to save/store data
            by eliminating duplicate blocks of data during backups.
          items:
            $ref: "#/components/schemas/DedupePath"
    Path:
      required:
      - mediaAgent
      - path
      type: object
      properties:
        backupLocation:
          type: string
        mediaAgent:
          $ref: "#/components/schemas/IdName"
        credentials:
          $ref: "#/components/schemas/UserNamePassword"
        savedCredentials:
          $ref: "#/components/schemas/IdName"
      description: "If adding a network access path, Please add credentials or saved\
        \ credentials. If both are provided, credentials will be taken into consideration."
    UserNamePassword:
      type: object
      properties:
        name:
          type: string
          description: username to access the network path
        password:
          type: string
          description: password to access the network path
          x-terraform-sensitive: true
      example:
        password: password
        name: name
    UpdateDiskStorage:
      type: object
      properties:
        newName:
          type: string
          description: change the name of the storage pool
          x-terraform-mapping: name
        dataEncryption:
          $ref: "#/components/schemas/Encryption"
        security:
          type: array
          items:
            $ref: "#/components/schemas/UpdateSecurityAssoc"
    BackupLocationDetails:
      type: object
      properties:
        id:
          type: integer
          description: Id of the backup location
          format: int32
        name:
          type: string
          description: Name of the backup location
        backupLocation:
          type: string
          description: backup location path
        mediaAgent:
          $ref: "#/components/schemas/IdName"
        configuration:
          $ref: "#/components/schemas/DiskStorageConfiguration"
        totalCapacity:
          type: integer
          description: total capacity of the backup location
          format: int32
        freeSpace:
          type: integer
          description: total free space on the backup location
          format: int32
        diskAccessPaths:
          type: array
          description: access paths available on the backup location
          items:
            $ref: "#/components/schemas/AccessPathDetails"
        enabled:
          type: boolean
        access:
          $ref: "#/components/schemas/AccessType"
        credentials:
          $ref: "#/components/schemas/CredentialUserName"
        savedCredentials:
          $ref: "#/components/schemas/IdName"
      example:
        mediaAgent:
          name: name
          id: 0
        diskAccessPaths:
        - path: path
          accessible: true
          mediaAgent: null
          access: READ_AND_WRITE
          id: 5
          userName: userName
        - path: path
          accessible: true
          mediaAgent: null
          access: READ_AND_WRITE
          id: 5
          userName: userName
        access: null
        configuration:
          enableBackupLocation: true
          disableBackupLocationforFutureBackups: true
          prepareForRetirement: true
        freeSpace: 1
        credentials:
          name: name
        backupLocation: backupLocation
        totalCapacity: 6
        name: name
        savedCredentials: null
        id: 0
        enabled: true
    CredentialUserName:
      type: object
      properties:
        name:
          type: string
          description: Name of the backup location
      example:
        name: name
    AccessPathDetails:
      type: object
      properties:
        id:
          type: integer
          description: Gives the disk access path id.
          format: int32
        mediaAgent:
          $ref: "#/components/schemas/IdName"
        path:
          type: string
          description: Gives the disk access path.
        userName:
          type: string
        access:
          $ref: "#/components/schemas/AccessType"
        accessible:
          type: boolean
          description: states if the access path is accessible
      example:
        path: path
        accessible: true
        mediaAgent: null
        access: READ_AND_WRITE
        id: 5
        userName: userName
    UpdateBackupLocation:
      required:
      - mediaAgent
      type: object
      properties:
        mediaAgent:
          $ref: "#/components/schemas/IdName"
        access:
          $ref: "#/components/schemas/AccessType"
        credentials:
          $ref: "#/components/schemas/UserNamePassword"
        savedCredentials:
          $ref: "#/components/schemas/IdName"
        configuration:
          $ref: "#/components/schemas/DiskStorageConfiguration"
        backupLocation:
          type: string
          description: Can be used to change the disk access path.
        enabled:
          type: boolean
      description: "While adding network access path, please add credentials or saved\
        \ credentials. If both are provided, credentials will be selected."
    DiskStorageConfiguration:
      type: object
      properties:
        enableBackupLocation:
          type: boolean
          description: Used to enable or disable backup location
        disableBackupLocationforFutureBackups:
          type: boolean
          description: Used to determine if backup location has to be disabled or
            enabled for future backups
        prepareForRetirement:
          type: boolean
          description: Used to determine if the backup location has to be prepared
            for retirement
      description: "While adding network access path, please add credentials or saved\
        \ credentials. If both are provided, credentials will be selected."
      example:
        enableBackupLocation: true
        disableBackupLocationforFutureBackups: true
        prepareForRetirement: true
    UpdateDiskAccessPath:
      type: object
      properties:
        access:
          $ref: "#/components/schemas/AccessType"
        enabled:
          type: boolean
      description: "While adding network access path, please add credentials or saved\
        \ credentials. If both are provided, credentials will be selected."
    CreateBackupLocation:
      required:
      - backupLocation
      - mediaAgent
      type: object
      properties:
        mediaAgent:
          $ref: "#/components/schemas/IdName"
        backupLocation:
          type: string
          description: The mount path on the media agent where the data is to be backed
            up.
        credentials:
          $ref: "#/components/schemas/UserNamePassword"
        savedCredentials:
          $ref: "#/components/schemas/IdName"
      description: "If adding a network access path, Please add credentials or saved\
        \ credentials. If both are provided, credentials will be taken into consideration."
    AddDiskAccessPath:
      required:
      - mediaAgents
      type: object
      properties:
        mediaAgents:
          type: array
          description: Can add a list of media agents to be added as the disk access
            path.
          items:
            $ref: "#/components/schemas/IdName"
          x-terraform-mapping: mediaAgent
          x-terraform-list: true
      description: Used to add a new access path to a backup location
    AccessType:
      type: string
      description: The access type for the access path can be either read (writing
        to path not allowed) or read and write (writing to path allowed).
      format: ""
      enum:
      - READ_AND_WRITE
      - READ
    StorageAssociatedCopies:
      type: object
      properties:
        copies:
          type: array
          description: List of copies associated with given storage pool
          nullable: true
          items:
            $ref: "#/components/schemas/StorageAssociatedCopy"
      description: ""
      example:
        copies:
        - planType: Server
          retentionPeriodDays: 0
          backupsToCopy: All_JOBS
          isSnapCopy: true
          extendedRetentionRules:
            thirdExtendedRetentionRule: null
            firstExtendedRetentionRule:
              isInfiniteRetention: true
              retentionPeriodDays: 3
              type: null
            secondExtendedRetentionRule: null
          copyType: SYNCHRONOUS
          storagePolicy: null
          copy:
            name: name
            id: 0
          plan: null
          useExtendedRetentionRules: true
        - planType: Server
          retentionPeriodDays: 0
          backupsToCopy: All_JOBS
          isSnapCopy: true
          extendedRetentionRules:
            thirdExtendedRetentionRule: null
            firstExtendedRetentionRule:
              isInfiniteRetention: true
              retentionPeriodDays: 3
              type: null
            secondExtendedRetentionRule: null
          copyType: SYNCHRONOUS
          storagePolicy: null
          copy:
            name: name
            id: 0
          plan: null
          useExtendedRetentionRules: true
    MediaAgentList:
      type: object
      properties:
        mediaAgents:
          $ref: "#/components/schemas/IdNameDisplayName"
      description: List of Media agents that can be added
      example:
        mediaAgents:
          displayName: displayName
          name: name
          id: 2
    StorageAssociatedCopy:
      type: object
      properties:
        copy:
          $ref: "#/components/schemas/IdName"
        plan:
          $ref: "#/components/schemas/IdName"
        planType:
          $ref: "#/components/schemas/PlanType"
        storagePolicy:
          $ref: "#/components/schemas/IdName"
        isSnapCopy:
          type: boolean
          description: Is this a snap copy?
        copyType:
          $ref: "#/components/schemas/PlanCopyType"
        backupsToCopy:
          $ref: "#/components/schemas/PlanFullBackupType"
        retentionPeriodDays:
          type: integer
          description: Retention period in days
          format: int32
        useExtendedRetentionRules:
          type: boolean
          description: Tells if extended retention rules are used
        extendedRetentionRules:
          $ref: "#/components/schemas/ExtendedRetentionRules"
      description: ""
      example:
        planType: Server
        retentionPeriodDays: 0
        backupsToCopy: All_JOBS
        isSnapCopy: true
        extendedRetentionRules:
          thirdExtendedRetentionRule: null
          firstExtendedRetentionRule:
            isInfiniteRetention: true
            retentionPeriodDays: 3
            type: null
          secondExtendedRetentionRule: null
        copyType: SYNCHRONOUS
        storagePolicy: null
        copy:
          name: name
          id: 0
        plan: null
        useExtendedRetentionRules: true
    LocalStorage:
      type: object
      properties:
        id:
          type: integer
          description: Id of the Local Storage Pool
          format: int32
        name:
          type: string
          description: Name of the Local Storage Pool
        general:
          $ref: "#/components/schemas/LocalStorageGeneralInfo"
        backupLocations:
          type: array
          description: Gives backup location/mount path details for the storage pool.
          items:
            $ref: "#/components/schemas/IdNameStatus"
        encryption:
          $ref: "#/components/schemas/Encryption"
        security:
          $ref: "#/components/schemas/SecurityAssoc"
        associatedPlanList:
          type: array
          description: Provides the list of plans associated with the storage pool.
          items:
            $ref: "#/components/schemas/IdName"
      example:
        general:
          freeSpace: 1
          sizeOnDisk: 5
          dedupeSavingsPercent: 5
          capacity: 6
        security:
          role: null
          isCreatorAssociation: true
          externalUserGroup:
            providerId: 5
            name: name
            id: 1
            providerName: providerName
          permissionList:
          - permissionId: 5
            exclude: true
            type: ALL_CATEGORIES
            categoryName: categoryName
            categoryId: 2
            permissionName: permissionName
          - permissionId: 5
            exclude: true
            type: ALL_CATEGORIES
            categoryName: categoryName
            categoryId: 2
            permissionName: permissionName
          user: null
          userGroup: null
        associatedPlanList:
        - name: name
          id: 0
        - name: name
          id: 0
        encryption:
          cipher: BlowFish
          keyLength: 7
          encrypt: true
          keyProvider:
            name: name
            id: 0
        name: name
        id: 0
        backupLocations:
        - name: name
          id: 2
          status: status
        - name: name
          id: 2
          status: status
    LocalStorageGeneralInfo:
      type: object
      properties:
        capacity:
          type: integer
          description: specifies the capacity of the storage pool
          format: int32
        freeSpace:
          type: integer
          description: specifies the available space on the storage pool
          format: int32
        sizeOnDisk:
          type: integer
          description: Amount of space consumed.
          format: int32
        dedupeSavingsPercent:
          type: integer
          description: specifies the savings that occurred due to deduplication. Only
            available for dedupe storage pools.
          format: int32
      example:
        freeSpace: 1
        sizeOnDisk: 5
        dedupeSavingsPercent: 5
        capacity: 6
    CreateLocalStorage:
      required:
      - enableDeduplication
      - name
      - storage
      type: object
      properties:
        name:
          type: string
          description: Name of the Local Storage to be created.
        storage:
          type: array
          description: A list of backup locations can be provided for the storage
            pool being created.
          items:
            $ref: "#/components/schemas/Path"
        enableDeduplication:
          type: boolean
          description: enables or disables deduplication
        deduplicationDBStorage:
          type: array
          description: A list of dedupe locations can be provided for the storage
            pool being created. This provides an efficient way to save/store data
            by eliminating duplicate blocks of data during backups.
          items:
            $ref: "#/components/schemas/DedupePath"
    UpdateLocalStorage:
      type: object
      properties:
        name:
          type: string
          description: change the name of the storage pool
        dataEncryption:
          $ref: "#/components/schemas/Encryption"
        security:
          type: array
          items:
            $ref: "#/components/schemas/UpdateSecurityAssoc"
    AddLocalAccessPath:
      required:
      - mediaAgents
      type: object
      properties:
        mediaAgents:
          type: array
          description: Can add a list of media agents to be added as the local storage
            access path.
          items:
            $ref: "#/components/schemas/IdName"
      description: Used to add a new access path to a backup location
    UpdateLocalAccessPath:
      required:
      - mediaAgents
      type: object
      properties:
        mediaAgents:
          $ref: "#/components/schemas/IdName"
        access:
          $ref: "#/components/schemas/AccessType"
        credentials:
          $ref: "#/components/schemas/UserNamePassword"
        savedCredentials:
          $ref: "#/components/schemas/IdName"
        path:
          type: string
          description: Can be used to change the disk access path.
        enabled:
          type: boolean
      description: Used to update access path
    TFAOptions:
      type: string
      description: Allows two-factor authentication to be enabled for the specific
        types of usergroups. it can be turned on or off based on user preferences.
        There will be usergroups that will not have this option.
      enum:
      - "ON"
      - "OFF"
      - DISABLED_AT_COMPANY
    HyperScaleStorageDetails:
      title: HyperScaleStorageDetails
      allOf:
      - $ref: "#/components/schemas/IdName"
      - type: object
        properties:
          general:
            $ref: "#/components/schemas/HyperScaleStorageGeneralInfo"
          nodes:
            type: array
            description: List of disks with the Linux MediaAgent
            items:
              $ref: "#/components/schemas/IdNameStatus"
          encryption:
            $ref: "#/components/schemas/Encryption"
          security:
            type: array
            description: List of users or user groups each having a specific set of
              roles that determine the kind of operations they can perform on hyperscale
              storage
            items:
              $ref: "#/components/schemas/SecurityAssoc"
          associatedPlans:
            type: array
            description: List of plans associated with this HyperScale storage
            items:
              $ref: "#/components/schemas/IdName"
    HyperScaleStorageGeneralInfo:
      title: HyperScaleStorageGeneralInfo
      type: object
      properties:
        libraryName:
          type: string
          description: Library Name of HyperScale Storage
        devicePath:
          type: string
          description: The path of the disk storage area in which the data will be
            stored.
        totalCapacity:
          type: integer
          description: The total storage capacity of the selected HyperScale Storage
            Pool
          format: int32
        totalFreeSpace:
          type: integer
          description: The total free space available in the HyperScale storage pool
          format: int32
        sizeOndisk:
          type: integer
          description: The total amount of data stored on the disk after deduplication
            and compression
          format: int32
        resiliency:
          type: string
          description: Resiliency or redundancy of this HyperScale storage
        deduplicationSavings:
          type: string
          description: Specifies the savings in percentage that occurred due to deduplication.
        status:
          type: string
          description: The status of the hyperscale storage pool - whether the storage
            pool is online or offline
    HyperScaleNodeDetails:
      title: HyperScaleNodeDetails
      type: object
      properties:
        node:
          $ref: "#/components/schemas/IdName"
        diskInformation:
          $ref: "#/components/schemas/HyperScaleDiskInfo"
        serverInformation:
          $ref: "#/components/schemas/HyperScaleServerInfo"
        disks:
          type: array
          items:
            $ref: "#/components/schemas/HyperScaleNodeDisk"
      example:
        node:
          name: name
          id: 0
        serverInformation:
          cpuUsage: cpuUsage
          fan: fan
          memoryUsage: memoryUsage
          nicStatus: nicStatus
          cacheDrive: cacheDrive
          cpu: cpu
          powerSupply: powerSupply
        disks:
        - serialNumber: serialNumber
          mountpath: mountpath
          diskStatus: diskStatus
          id: 0
          capacity: 6
        - serialNumber: serialNumber
          mountpath: mountpath
          diskStatus: diskStatus
          id: 0
          capacity: 6
        diskInformation:
          fileSystem: fileSystem
          product: product
          vendor: vendor
          status: status
    HyperScaleNodeDisk:
      title: HyperScaleNodeDisk
      type: object
      properties:
        id:
          type: integer
          description: Id of disk
          format: int32
        mountpath:
          type: string
          description: The physical path of the mount path in the file system
        serialNumber:
          type: string
          description: The serial number associated with the mount path
        capacity:
          type: integer
          description: The total capacity of the mount path
          format: int32
        diskStatus:
          type: string
          description: The status of the mount path
      example:
        serialNumber: serialNumber
        mountpath: mountpath
        diskStatus: diskStatus
        id: 0
        capacity: 6
    HyperScaleServerInfo:
      title: HyperScaleServerInfo
      type: object
      properties:
        cpu:
          type: string
          description: The CPU related information
        fan:
          type: string
          description: The status of the fan
        powerSupply:
          type: string
          description: The status of the power supply
        cacheDrive:
          type: string
          description: The status of the cache drive
        nicStatus:
          type: string
          description: The status of the NIC cards in the mount path
        cpuUsage:
          type: string
          description: The CPU performance
        memoryUsage:
          type: string
          description: The amount of physical memory currently used
      example:
        cpuUsage: cpuUsage
        fan: fan
        memoryUsage: memoryUsage
        nicStatus: nicStatus
        cacheDrive: cacheDrive
        cpu: cpu
        powerSupply: powerSupply
    HyperScaleDiskInfo:
      title: HyperScaleDiskInfo
      type: object
      properties:
        vendor:
          type: string
          description: The name of the vendor
        product:
          type: string
          description: The name of the product
        fileSystem:
          type: string
          description: The file system on the node
        status:
          type: string
          description: The status of the node - whether the node is online or offline
            and is healthy
      example:
        fileSystem: fileSystem
        product: product
        vendor: vendor
        status: status
    HyperScaleStorage:
      title: HyperScaleStorage
      required:
      - name
      - nodes
      type: object
      properties:
        name:
          type: string
          description: Name of HyperScale Storage
        nodes:
          type: array
          description: List of Nodes (MediaAgents) of the HyperScale Storage
          items:
            $ref: "#/components/schemas/IdName"
    UpdateHyperScaleStorage:
      title: UpdateHyperScaleStorage
      type: object
      properties:
        newName:
          type: string
          description: change the name of the HyperScale storage
        encryption:
          $ref: "#/components/schemas/Encryption"
        security:
          type: array
          description: ""
          items:
            $ref: "#/components/schemas/UpdateSecurityAssoc"
    HyperScaleStorageResp:
      title: HyperScaleStorageResp
      allOf:
      - $ref: "#/components/schemas/IdName"
      - type: object
        properties:
          copyId:
            type: integer
            description: Id of Storage Policy Copy
            format: int32
      - $ref: "#/components/schemas/GenericResp"
    RoleListResponse:
      type: object
      properties:
        roles:
          type: array
          description: List of all the existing roles
          items:
            $ref: "#/components/schemas/RoleSummary"
      description: List of roles
      example:
        roles:
        - name: name
          commcell:
            name: name
          globalConfigInfo:
            scopeFilterQuery: scopeFilterQuery
            applyOnAllCommCells: true
            commcells:
            - name: name
              guid: guid
              id: 5
            - name: name
              guid: guid
              id: 5
            scope: scope
            isMarkedForDeletion: true
            name: name
            id: id
            status: status
          company:
            name: name
            id: 0
          id: 0
          status: ENABLED
        - name: name
          commcell:
            name: name
          globalConfigInfo:
            scopeFilterQuery: scopeFilterQuery
            applyOnAllCommCells: true
            commcells:
            - name: name
              guid: guid
              id: 5
            - name: name
              guid: guid
              id: 5
            scope: scope
            isMarkedForDeletion: true
            name: name
            id: id
            status: status
          company:
            name: name
            id: 0
          id: 0
          status: ENABLED
    RoleSummary:
      type: object
      properties:
        id:
          type: integer
          description: id of the role.
          format: int32
        name:
          type: string
          description: name of the role.
        status:
          $ref: "#/components/schemas/RoleStatus"
        company:
          $ref: "#/components/schemas/IdName"
        commcell:
          $ref: "#/components/schemas/CommcellInfo"
        globalConfigInfo:
          $ref: "#/components/schemas/GlobalConfigInfo"
      description: Returns information on the roles.
      example:
        name: name
        commcell:
          name: name
        globalConfigInfo:
          scopeFilterQuery: scopeFilterQuery
          applyOnAllCommCells: true
          commcells:
          - name: name
            guid: guid
            id: 5
          - name: name
            guid: guid
            id: 5
          scope: scope
          isMarkedForDeletion: true
          name: name
          id: id
          status: status
        company:
          name: name
          id: 0
        id: 0
        status: ENABLED
    Role:
      title: ""
      type: object
      properties:
        id:
          type: integer
          description: id of the role.
          format: int32
        name:
          type: string
          description: name of the role.
        permissions:
          type: array
          description: List of permissions associated with the role.
          items:
            $ref: "#/components/schemas/PermissionCategoryType"
        visibleToAll:
          type: boolean
          description: Returns if the role is visible to all.
        status:
          $ref: "#/components/schemas/RoleStatus"
        security:
          type: array
          description: Used to return the security association for the role
          items:
            $ref: "#/components/schemas/SecurityAssoc"
        globalConfigInfo:
          $ref: "#/components/schemas/GlobalConfigInfo"
      description: Used to return role details
      example:
        security:
        - role: null
          isCreatorAssociation: true
          externalUserGroup:
            providerId: 5
            name: name
            id: 1
            providerName: providerName
          permissionList:
          - permissionId: 5
            exclude: true
            type: ALL_CATEGORIES
            categoryName: categoryName
            categoryId: 2
            permissionName: permissionName
          - permissionId: 5
            exclude: true
            type: ALL_CATEGORIES
            categoryName: categoryName
            categoryId: 2
            permissionName: permissionName
          user: null
          userGroup: null
        - role: null
          isCreatorAssociation: true
          externalUserGroup:
            providerId: 5
            name: name
            id: 1
            providerName: providerName
          permissionList:
          - permissionId: 5
            exclude: true
            type: ALL_CATEGORIES
            categoryName: categoryName
            categoryId: 2
            permissionName: permissionName
          - permissionId: 5
            exclude: true
            type: ALL_CATEGORIES
            categoryName: categoryName
            categoryId: 2
            permissionName: permissionName
          user: null
          userGroup: null
        permissions:
        - permission:
            name: name
            id: 0
          category: null
          type: type
        - permission:
            name: name
            id: 0
          category: null
          type: type
        name: name
        globalConfigInfo:
          scopeFilterQuery: scopeFilterQuery
          applyOnAllCommCells: true
          commcells:
          - name: name
            guid: guid
            id: 5
          - name: name
            guid: guid
            id: 5
          scope: scope
          isMarkedForDeletion: true
          name: name
          id: id
          status: status
        id: 0
        visibleToAll: true
        status: ENABLED
    CreateRole:
      required:
      - name
      - permissionList
      type: object
      properties:
        name:
          type: string
          description: Name of the new role
        permissionList:
          type: array
          description: Used to provide the list of permissions associated with the
            role.
          items:
            $ref: "#/components/schemas/Permissions"
        enabled:
          type: boolean
          description: "Used to determine if the role is enabled or disabled. If not\
            \ provided, role will be enabled by default."
        visibleToAll:
          type: boolean
          description: "Determines if the role is visible to everyone. if not provided,\
            \ it will be set to false by default."
        globalConfigInfo:
          $ref: "#/components/schemas/CreateGlobalConfigInfo"
      description: Create a new role.
    UpdateRole:
      title: ""
      type: object
      properties:
        newName:
          type: string
          description: new name of the role
          x-terraform-mapping: name
        permissionList:
          type: array
          description: Used to update the list of permissions associated with the
            role.
          items:
            $ref: "#/components/schemas/Permissions"
        permissionOperationType:
          type: string
          description: Type of operation to be performed on the permissionList. Default
            is OVERWRITE.
          enum:
          - ADD
          - DELETE
          - OVERWRITE
          x-terraform-constant: OVERWRITE
        enabled:
          type: boolean
          description: Used to determine if the role is enabled or disabled.
        visibleToAll:
          type: boolean
          description: Determines if the role is visible to everyone.
        security:
          type: array
          description: Used to update the security association for the role
          items:
            $ref: "#/components/schemas/UpdateSecurityAssoc"
    Permissions:
      type: object
      properties:
        permission:
          $ref: "#/components/schemas/IdName"
        category:
          $ref: "#/components/schemas/IdName"
      description: "The id or name of the permission can be provided in order to associate\
        \ it to the role. It can be provided with or without category id or name.\
        \ If only category id or name is provided, entire list of permissions associated\
        \ with this category can be associated to the role."
      x-terraform-ignore-child: name
    PermissionCategoryType:
      type: object
      properties:
        permission:
          $ref: "#/components/schemas/IdName"
        category:
          $ref: "#/components/schemas/IdName"
        type:
          type: string
          description: Type of permission assigned to the role.
      description: "The id or name of the permission can be provided in order to associate\
        \ it to the role. It can be provided with or without category id or name.\
        \ If only category id or name is provided, entire list of permissions associated\
        \ with this category can be associated to the role."
      example:
        permission:
          name: name
          id: 0
        category: null
        type: type
    RoleStatus:
      type: string
      description: Specifies whether the role has been enabled or disabled.
      enum:
      - ENABLED
      - DISABLED
    PermissionListResp:
      type: object
      properties:
        permissions:
          type: array
          items:
            $ref: "#/components/schemas/CategoryListResp"
      example:
        permissions:
        - permissions:
          - null
          - null
          categoryList:
          - permissions:
            - null
            - null
            category: null
          - permissions:
            - null
            - null
            category: null
          category:
            name: name
            id: 0
        - permissions:
          - null
          - null
          categoryList:
          - permissions:
            - null
            - null
            category: null
          - permissions:
            - null
            - null
            category: null
          category:
            name: name
            id: 0
    CategoryListResp:
      type: object
      properties:
        category:
          $ref: "#/components/schemas/IdName"
        permissions:
          type: array
          description: Returns list of permissions associated with the category
          items:
            $ref: "#/components/schemas/IdName"
        categoryList:
          type: array
          description: "Returns a list of categories and their permissions associated\
            \ with the main category. eg: roles category is belongs to User Management\
            \ category."
          items:
            $ref: "#/components/schemas/CategoryList"
      example:
        permissions:
        - null
        - null
        categoryList:
        - permissions:
          - null
          - null
          category: null
        - permissions:
          - null
          - null
          category: null
        category:
          name: name
          id: 0
    CategoryList:
      type: object
      properties:
        category:
          $ref: "#/components/schemas/IdName"
        permissions:
          type: array
          items:
            $ref: "#/components/schemas/IdName"
      example:
        permissions:
        - null
        - null
        category: null
    TapeListResp:
      type: object
      properties:
        tapeStorage:
          type: array
          description: List of tapes
          items:
            $ref: "#/components/schemas/TapeSummary"
      example:
        tapeStorage:
        - name: name
          commcell: null
          storageType: INVALID
          model: model
          company:
            name: name
            id: 0
          id: 0
          status: status
          manufacturer: manufacturer
        - name: name
          commcell: null
          storageType: INVALID
          model: model
          company:
            name: name
            id: 0
          id: 0
          status: status
          manufacturer: manufacturer
    LocationListResp:
      type: object
      properties:
        locations:
          type: array
          description: List of locations
          items:
            $ref: "#/components/schemas/LocationsDetails"
      example:
        locations:
        - name: name
          id: 0
          isTransit: true
        - name: name
          id: 0
          isTransit: true
    LocationsDetails:
      title: LocationsDetails
      type: object
      properties:
        id:
          type: integer
          description: id of the location
          format: int32
        name:
          type: string
          description: name of the location
        isTransit:
          type: boolean
          description: Tells if this is a transit location
      description: Details of locations
      example:
        name: name
        id: 0
        isTransit: true
    TapeMediaDetails:
      type: object
      properties:
        totalMedia:
          type: integer
          description: number of media.
          format: int32
        spareMedia:
          type: integer
          description: number of spare media.
          format: int32
        cleaningMedia:
          type: integer
          description: number of cleaned media.
          format: int32
        agedMedia:
          type: integer
          description: number of aged media.
          format: int32
        assignedMedia:
          type: integer
          description: number of assigned media.
          format: int32
        vaultTrackerPolicies:
          type: array
          description: list of VaultTrackPolicies.
          items:
            $ref: "#/components/schemas/VaultTrackerPolicies"
      example:
        totalMedia: 0
        cleaningMedia: 1
        spareMedia: 6
        agedMedia: 5
        assignedMedia: 5
        vaultTrackerPolicies:
        - ""
        - ""
    TapeMediaOperationsReq:
      title: TapeMediaOperationsReq
      type: object
      properties:
        mediaTypeId:
          type: integer
          description: "MediaType list must be fetched from GET V4/Storage/Tape/{libraryId}/MediaType"
          format: int32
          default: 0
        spareGroupId:
          type: integer
          description: "SpareGroup list must be fetched from GET V4/Storage/Tape/{libraryId}/MediaType"
          format: int32
          default: 0
        destSpareGroupId:
          type: integer
          description: "In case of MOVE_MEDIA, this field should be set to specify\
            \ the destination spare group"
          format: int32
          default: 0
        slotList:
          type: array
          items:
            type: integer
            format: int32
        operationType:
          $ref: "#/components/schemas/TapeMediaOperationType"
        mediaList:
          type: array
          description: "List of Media Ids for which operation needs to performed.\
            \ NOTE : In case of QUICK_ERASE_SELECTED_MEDIA and FULL_ERASE_SELECTED_MEDIA\
            \ single mediaId should be sent."
          items:
            type: integer
            format: int32
        UpdateBarcodeOpType:
          $ref: "#/components/schemas/UpdateBarcodeOpType"
        barcode:
          type: string
          description: "In case of REPLACE_BARCODE, media barcode is replaced with\
            \ barcode sent. In other cases of UpdateBarcodeOpType, barcode sent is\
            \ added or removed according to the type specified. For instance, in case\
            \ of ADD_SUFFIX, the barcode sent will be appended to the end of barcodes\
            \ of all the medias sent in request."
      description: Request body to perform tape media operations
    TapeMediaOperationType:
      title: TapeMediaOperationType
      type: string
      description: Tape media operation type value
      enum:
      - DISCOVER_MEDIA
      - MARK_MEDIA_GOOD
      - MARK_MEDIA_BAD
      - MARK_MEDIA_FULL
      - MARK_MEDIA_ERASABLE
      - MARK_MEDIA_APPENDABLE
      - MARK_MEDIA_REUSABLE
      - PREVENT_MEDIA_REUSE
      - ALLOW_MEDIA_REUSE
      - QUICK_ERASE_SELECTED_MEDIA
      - FULL_ERASE_SELECTED_MEDIA
      - DELETE_MEDIA
      - DELETE_CONTENTS
      - UPDATE_BARCODE
      - MOVE_MEDIA
    UpdateBarcodeOpType:
      title: UpdateBarcodeOpType
      type: string
      description: "Type of Barcode update being performed. NOTE : If Barcode update\
        \ is being performed for more than one media, REPLACE_BARCODE is not supported\
        \ as it will result in duplicate barcodes."
      enum:
      - REPLACE_BARCODE
      - ADD_SUFFIX
      - ADD_PREFIX
      - REMOVE_SUFFIX
      - REMOVE_PREFIX
    DiscoverMediaInfoResp:
      title: DiscoverMediaInfoResp
      type: object
      properties:
        mediaTypesList:
          type: array
          items:
            $ref: "#/components/schemas/MediaTypeDetails"
        spareGroupsList:
          type: array
          items:
            $ref: "#/components/schemas/SpareGroupDetails"
      description: Response structure to fetch details for performing Discover media
        operation
      example:
        spareGroupsList:
        - name: name
          typeId: 5
          id: 1
        - name: name
          typeId: 5
          id: 1
        mediaTypesList:
        - name: name
          id: 0
          spareGroupTypeId: 6
        - name: name
          id: 0
          spareGroupTypeId: 6
    packageName:
      type: string
      description: Name of the package
      enum:
      - CVS3Service
    MediaAgentDetailsForPlan:
      title: MediaAgentDetailsForPlan
      type: object
      properties:
        id:
          type: integer
          description: Id of the Media agent
          format: int32
        name:
          type: string
          description: Name of the Media agent
        isPackageInstalled:
          type: boolean
          description: Indicates if packageName sent in query parameter is installed
            on the Media agent
        regionName:
          type: string
          description: Name of the region where Media agent belongs to within the
            Plan
      description: Media agent details associated to a Plan
      example:
        regionName: regionName
        name: name
        id: 0
        isPackageInstalled: true
    AssociatedMAsForPlanResp:
      title: AssociatedMAsForPlanResp
      type: object
      properties:
        mediaAgentsList:
          type: array
          items:
            $ref: "#/components/schemas/MediaAgentDetailsForPlan"
      description: Response structure to fetch list of associated media agents for
        a plan
      example:
        mediaAgentsList:
        - regionName: regionName
          name: name
          id: 0
          isPackageInstalled: true
        - regionName: regionName
          name: name
          id: 0
          isPackageInstalled: true
    SpareGroupDetails:
      title: SpareGroupDetails
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        typeId:
          type: integer
          format: int32
      description: Details of a particular Spare Group
      example:
        name: name
        typeId: 5
        id: 1
    MediaTypeDetails:
      title: MediaTypeDetails
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        spareGroupTypeId:
          type: integer
          format: int32
      description: Details of a particular Media Type
      example:
        name: name
        id: 0
        spareGroupTypeId: 6
    GetSpareGroupListResp:
      title: GetSpareGroupListResp
      type: object
      properties:
        spareGroupDetailsList:
          type: array
          items:
            $ref: "#/components/schemas/SpareGroupDetails"
      description: Spare Group details for a Storage
      example:
        spareGroupDetailsList:
        - name: name
          typeId: 5
          id: 1
        - name: name
          typeId: 5
          id: 1
    VaultTrackerPolicies:
      allOf:
      - $ref: "#/components/schemas/IdName"
      - type: object
        properties:
          online:
            type: string
            description: Tells if VaultTrackerPolicies is enabled or not.
          destination:
            $ref: "#/components/schemas/destinationLocation"
    destinationLocation:
      type: object
      properties:
        location:
          $ref: "#/components/schemas/location"
        library:
          $ref: "#/components/schemas/library"
        shelf:
          $ref: "#/components/schemas/shelfDetails"
    library:
      allOf:
      - $ref: "#/components/schemas/IdName"
      - type: object
        properties:
          type:
            type: integer
            description: library type.
            format: int32
    shelfDetails:
      allOf:
      - $ref: "#/components/schemas/IdName"
      - type: object
        properties:
          type:
            type: integer
            description: shelf type.
            format: int32
    location:
      allOf:
      - $ref: "#/components/schemas/IdName"
      - type: object
        properties:
          type:
            type: integer
            description: location type.
            format: int32
    TapeDetails:
      allOf:
      - $ref: "#/components/schemas/IdName"
      - type: object
        properties:
          manufacturer:
            type: string
            description: library manufacturer.
          model:
            type: string
            description: library model.
          firmwareRevision:
            type: string
            description: library firmware revision.
          barcodeReader:
            type: boolean
            description: library bar code.
          serialNumber:
            type: string
            description: library serial number.
          libraryType:
            type: integer
            description: library type.
            format: int32
          status:
            $ref: "#/components/schemas/Status"
          drives:
            type: array
            description: list of drives.
            items:
              $ref: "#/components/schemas/DriveSummary"
          storage:
            type: array
            description: Returns list of stroage.
            items:
              $ref: "#/components/schemas/StroagePoolList"
    Status:
      type: object
      properties:
        enable:
          type: boolean
          description: Tells if library is enabled or not
        maintenanceMode:
          type: boolean
          description: library maintenance mode.
        offlineReason:
          type: string
          description: library offline reason.
    DriveSummary:
      allOf:
      - $ref: "#/components/schemas/IdName"
      - type: object
        properties:
          type:
            type: string
            description: drive type.
          online:
            type: string
            description: status of a drive.
          status:
            type: string
            description: access of a drive.
          barCode:
            type: string
            description: barCode of a drive.
          mountStatus:
            type: string
            description: mountStatus of a drive.
            enum:
            - MEDIA_MOUNTED
            - MEDIA_IS_BEING_MOUNTED
            - MEDIA_IS_BEING_UNMOUNTED
            - MEDIA_IS_UNUSABLE
          activeMediaAgent:
            type: string
            description: media Agent of the drive.
          driveAttributes:
            type: integer
            description: if  the drive attribute is 1 then the drive is cleanable.
            format: int32
    StroagePoolList:
      allOf:
      - $ref: "#/components/schemas/IdName"
      - type: object
        properties:
          online:
            type: string
            description: stoagePool status.
          type:
            type: string
            description: stoagePool type.
    TapeSummary:
      title: ""
      type: object
      properties:
        id:
          type: integer
          description: Returns tape id.
          format: int32
        name:
          type: string
          description: Returns tape name.
        storageType:
          type: string
          description: The type of tapeStorage
          enum:
          - INVALID
          - TAPE
          - OPTICAL
          - MAGNETIC
          - STANDALONE_TAPE
          - STANDALONE_OPTICAL
          - DECONFIGURED_LIBRARY
          - EXTERNAL_PNP_LIBRARY
        status:
          type: string
          description: returns status of the tape ie if it is online or offline.
        manufacturer:
          type: string
          description: Returns the manufacturer of the tape.
        model:
          type: string
          description: Returns the tape model.
        company:
          $ref: "#/components/schemas/IdName"
        commcell:
          $ref: "#/components/schemas/IdName"
      description: Returns the list of tapes.
      example:
        name: name
        commcell: null
        storageType: INVALID
        model: model
        company:
          name: name
          id: 0
        id: 0
        status: status
        manufacturer: manufacturer
    DrivePoolDetailsResp:
      allOf:
      - $ref: "#/components/schemas/IdName"
      - type: object
        properties:
          manufacturer:
            type: string
            description: drive manufacturer.
          model:
            type: string
            description: drive model.
          firmwareRevision:
            type: string
            description: drive firmwareRevision.
          serialNumber:
            type: string
            description: drive serial Number.
          hoursUsedSinceLastClean:
            type: integer
            description: drive hours used from last clean.
            format: int32
          status:
            $ref: "#/components/schemas/DriveStatus"
    DriveStatus:
      type: object
      properties:
        enable:
          type: boolean
          description: drive is enabled or not.
        maintenanceMode:
          type: boolean
          description: drive maintenance mode
        markForReadOnly:
          type: boolean
          description: drive mark for read only.
        offlineReason:
          type: string
          description: drive offline reason.
    DistributedSystemsListResp:
      title: ""
      type: object
      properties:
        distributedSystems:
          type: array
          description: This returns the distributed systems list.
          items:
            $ref: "#/components/schemas/DistributedSystemSummary"
      description: Used to return a list of distributed systems.
      example:
        distributedSystems:
        - components:
          - applicationId: 6
          - applicationId: 6
          name: name
          id: 0
        - components:
          - applicationId: 6
          - applicationId: 6
          name: name
          id: 0
    DistributedSystemSummary:
      title: ""
      type: object
      properties:
        id:
          type: integer
          description: This gives the id of the distributed system.
          format: int32
        name:
          type: string
          description: This give the name of the distributed system.
        components:
          type: array
          description: Provides a list of components of a distributed system.
          items:
            $ref: "#/components/schemas/DistributedSystemComponent"
      description: This returns the distributed system summary.
      example:
        components:
        - applicationId: 6
        - applicationId: 6
        name: name
        id: 0
    DistributedSystemComponent:
      type: object
      properties:
        applicationId:
          type: integer
          description: Application id of the distributed system component
          format: int32
      example:
        applicationId: 6
    BigDataAppListResp:
      title: ""
      type: object
      properties:
        bigDataAppCount:
          type: integer
          description: This returns the total number of big data apps.
          format: int32
        bigDataApps:
          type: array
          description: This returns the big data app list.
          items:
            $ref: "#/components/schemas/BigDataAppSummary"
      description: Used to return a list of big data apps.
      example:
        bigDataApps:
        - configured: true
          clusterType: clusterType
          instance: null
          displayName: displayName
          GUID: GUID
          SLA:
            reasonList:
            - subclient: null
              mightMissReason: mightMissReason
            - subclient: null
              mightMissReason: mightMissReason
            status: MET_SLA
          lastBackup:
            jobId: 5
            failureReason: failureReason
            time: 5
            status: NEVER_BACKED_UP
          name: name
          applicationSize: 2
          company: null
          id: 6
          applicationId: 1
          plan:
            name: name
            id: 0
        - configured: true
          clusterType: clusterType
          instance: null
          displayName: displayName
          GUID: GUID
          SLA:
            reasonList:
            - subclient: null
              mightMissReason: mightMissReason
            - subclient: null
              mightMissReason: mightMissReason
            status: MET_SLA
          lastBackup:
            jobId: 5
            failureReason: failureReason
            time: 5
            status: NEVER_BACKED_UP
          name: name
          applicationSize: 2
          company: null
          id: 6
          applicationId: 1
          plan:
            name: name
            id: 0
        bigDataAppCount: 0
    BigDataAppSummary:
      title: ""
      type: object
      properties:
        id:
          type: integer
          description: This gives the id of the big data app.
          format: int32
        name:
          type: string
          description: This give the name of the big data app.
        displayName:
          type: string
          description: This gives the name of the big data app as it shown on the
            admin console or GUI.
        GUID:
          type: string
          description: This returns the Globally Unique Identifier of the big data
            app.
        configured:
          type: boolean
          description: This returns if the big data app is configured or deconfigured.
        applicationId:
          type: integer
          description: This gives the application id of the big data app.
          format: int32
        clusterType:
          type: string
          description: This returns the clusterType of the big data app
        lastBackup:
          $ref: "#/components/schemas/LastBackupJobInfo"
        applicationSize:
          type: integer
          description: Provides the application size of the big data app. It is provided
            in bytes.
          format: int32
        plan:
          $ref: "#/components/schemas/IdName"
        instance:
          $ref: "#/components/schemas/IdName"
        SLA:
          $ref: "#/components/schemas/SLADetails"
        company:
          $ref: "#/components/schemas/IdName"
      description: This returns the big data app summary.
      example:
        configured: true
        clusterType: clusterType
        instance: null
        displayName: displayName
        GUID: GUID
        SLA:
          reasonList:
          - subclient: null
            mightMissReason: mightMissReason
          - subclient: null
            mightMissReason: mightMissReason
          status: MET_SLA
        lastBackup:
          jobId: 5
          failureReason: failureReason
          time: 5
          status: NEVER_BACKED_UP
        name: name
        applicationSize: 2
        company: null
        id: 6
        applicationId: 1
        plan:
          name: name
          id: 0
    FileServerListResp:
      title: ""
      type: object
      properties:
        fileServerCount:
          type: integer
          description: This returns the total number of file servers.
          format: int32
        fileServers:
          type: array
          description: This returns the file server list.
          items:
            $ref: "#/components/schemas/FileServerSummary"
      description: Used to return a list of file servers.
      example:
        fileServers:
        - configured: true
          displayName: displayName
          GUID: GUID
          commcellName: commcellName
          SLA:
            reason: reason
            reasonList:
            - subclient: null
              mightMissReason: mightMissReason
            - subclient: null
              mightMissReason: mightMissReason
            status: MET_SLA
          type: type
          tags:
          - name: name
            id: 5
            value: value
          - name: name
            id: 5
            value: value
          lastBackup:
            jobId: 1
            failureReason: failureReason
            time: 5
            lastSuccessfulBackup: 5
            status: NEVER_BACKED_UP
          name: name
          applicationSize: 2
          company: null
          id: 6
          plan:
            name: name
            id: 0
          status: OFFLINE
        - configured: true
          displayName: displayName
          GUID: GUID
          commcellName: commcellName
          SLA:
            reason: reason
            reasonList:
            - subclient: null
              mightMissReason: mightMissReason
            - subclient: null
              mightMissReason: mightMissReason
            status: MET_SLA
          type: type
          tags:
          - name: name
            id: 5
            value: value
          - name: name
            id: 5
            value: value
          lastBackup:
            jobId: 1
            failureReason: failureReason
            time: 5
            lastSuccessfulBackup: 5
            status: NEVER_BACKED_UP
          name: name
          applicationSize: 2
          company: null
          id: 6
          plan:
            name: name
            id: 0
          status: OFFLINE
        fileServerCount: 0
    FileServerSummary:
      title: ""
      type: object
      properties:
        id:
          type: integer
          description: This gives the id of the file server.
          format: int32
        name:
          type: string
          description: This give the name of the file server.
        displayName:
          type: string
          description: This gives the name of the file server as it shown on the admin
            console or GUI.
        GUID:
          type: string
          description: This returns the Globally Unique Identifier of the file server.
        configured:
          type: boolean
          description: This returns if the file server is configured or deconfigured.
        type:
          type: string
          description: "This returns the type of the file server. Example: Windows,\
            \ Qumulo"
        commcellName:
          type: string
          description: This returns the CommCell the file server is connected to.
          nullable: true
        lastBackup:
          $ref: "#/components/schemas/LastBackupJobInfoWithLastSuccessfulBackup"
        applicationSize:
          type: integer
          description: Provides the application size of the file server. It is provided
            in bytes.
          format: int32
        plan:
          $ref: "#/components/schemas/IdName"
        SLA:
          $ref: "#/components/schemas/SLADetailsWithReasonEntity"
        status:
          $ref: "#/components/schemas/FileServerStatus"
        company:
          $ref: "#/components/schemas/IdName"
        tags:
          type: array
          description: Tags associated to file server
          items:
            $ref: "#/components/schemas/IdNameValue"
      description: This returns the file server summary.
      example:
        configured: true
        displayName: displayName
        GUID: GUID
        commcellName: commcellName
        SLA:
          reason: reason
          reasonList:
          - subclient: null
            mightMissReason: mightMissReason
          - subclient: null
            mightMissReason: mightMissReason
          status: MET_SLA
        type: type
        tags:
        - name: name
          id: 5
          value: value
        - name: name
          id: 5
          value: value
        lastBackup:
          jobId: 1
          failureReason: failureReason
          time: 5
          lastSuccessfulBackup: 5
          status: NEVER_BACKED_UP
        name: name
        applicationSize: 2
        company: null
        id: 6
        plan:
          name: name
          id: 0
        status: OFFLINE
    SLADetails:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/SLAStatus"
        reasonList:
          type: array
          description: Provides a reason on why the SLA might not be met.
          items:
            $ref: "#/components/schemas/ReasonDetails"
      example:
        reasonList:
        - subclient: null
          mightMissReason: mightMissReason
        - subclient: null
          mightMissReason: mightMissReason
        status: MET_SLA
    SLADetailsWithReasonEntity:
      title: ""
      type: object
      properties:
        status:
          $ref: "#/components/schemas/SLAStatus"
        reason:
          type: string
          description: Provides a reason on why the SLA might not be met.
        reasonList:
          type: array
          description: Provides a reason on why the SLA might not be met.
          items:
            $ref: "#/components/schemas/ReasonDetails"
      example:
        reason: reason
        reasonList:
        - subclient: null
          mightMissReason: mightMissReason
        - subclient: null
          mightMissReason: mightMissReason
        status: MET_SLA
    ReasonDetails:
      type: object
      properties:
        mightMissReason:
          type: string
          description: Gives the reason as to why the SLA might not be met.
        subclient:
          $ref: "#/components/schemas/IdName"
      example:
        subclient: null
        mightMissReason: mightMissReason
    FileServerStatus:
      type: string
      description: Gives the status of the file server.
      format: ""
      enum:
      - OFFLINE
      - ONLINE
      - UNKNOWN
      - NOT_APPLICABLE
    SLAStatus:
      type: string
      description: Provides the SLA status.
      enum:
      - MET_SLA
      - MISSED_SLA
      - EXCLUDED_SLA
      - YET_TO_BE_PROTECTED
      - MIGHT_MISS_SLA
      - UNKNOWN
    LastBackupJobInfo:
      type: object
      properties:
        jobId:
          type: integer
          description: Returns the job id of the last backup job performed.
          format: int32
        status:
          $ref: "#/components/schemas/JobStatus"
        time:
          type: integer
          description: Shows the time when the last back up job was carried out. The
            time is provided in unix time format.
          format: int64
        failureReason:
          type: string
          description: "Gives the reason for the last backup job failing, if the last\
            \ backup job fails."
      example:
        jobId: 5
        failureReason: failureReason
        time: 5
        status: NEVER_BACKED_UP
    LastBackupJobInfoWithLastSuccessfulBackup:
      type: object
      properties:
        jobId:
          type: integer
          description: Returns the job id of the last backup job performed.
          format: int32
        status:
          $ref: "#/components/schemas/JobStatus"
        time:
          type: integer
          description: Shows the time when the last back up job was carried out. The
            time is provided in unix time format.
          format: int64
        failureReason:
          type: string
          description: "Gives the reason for the last backup job failing, if the last\
            \ backup job fails."
        lastSuccessfulBackup:
          type: integer
          format: int32
      example:
        jobId: 1
        failureReason: failureReason
        time: 5
        lastSuccessfulBackup: 5
        status: NEVER_BACKED_UP
    JobStatus:
      type: string
      description: Status of the last backup job performed.
      format: ""
      enum:
      - NEVER_BACKED_UP
      - COMPLETED
      - FAILED
      - COMPLETED_WITH_ERRORS
      - KILLED
      - SUSPENDED
      - INTERRUPTED
      - ANY_STATUS
      - SKIPPED
      - FAILED_TO_START
      - SYNCHRONIZED
      - NOT_SYNCHRONIZED
      - NOT_ATTEMPTED
      - STARTED
      - COMPLETED_WITH_WARNINGS
      - SYSTEM_FAILED
      - COMMITTED
    ServerGroupAssociation:
      type: string
      description: Type of server group association.
      enum:
      - AUTOMATIC
      - VM
      - MANUAL
    InstanceListResp:
      type: object
      properties:
        instances:
          type: array
          items:
            $ref: "#/components/schemas/InstanceSummary"
      description: Gives the list of instances.
      example:
        instances:
        - server: server
          notReadyReason: notReadyReason
          SLAStatus: MET_SLA
          databaseEngine: AURORA_MYSQL
          lastBackup:
            jobId: 5
            failureReason: failureReason
            time: 5
            status: NEVER_BACKED_UP
          vendor: NOT_APPLICABLE
          name: name
          commcell:
            name: name
          client:
            name: name
            id: 0
          applicationSize: 6
          company: null
          id: 0
          plan: null
          status: READY
        - server: server
          notReadyReason: notReadyReason
          SLAStatus: MET_SLA
          databaseEngine: AURORA_MYSQL
          lastBackup:
            jobId: 5
            failureReason: failureReason
            time: 5
            status: NEVER_BACKED_UP
          vendor: NOT_APPLICABLE
          name: name
          commcell:
            name: name
          client:
            name: name
            id: 0
          applicationSize: 6
          company: null
          id: 0
          plan: null
          status: READY
    InstanceSummary:
      title: ""
      type: object
      properties:
        id:
          type: integer
          description: Gives the id of the instance.
          format: int32
        name:
          type: string
          description: Gives the name of the instance.
        server:
          type: string
          description: Gives the server to which the instance belongs to.
        client:
          $ref: "#/components/schemas/IdName"
        vendor:
          $ref: "#/components/schemas/Vendors"
        databaseEngine:
          $ref: "#/components/schemas/DatabaseEngine"
        status:
          $ref: "#/components/schemas/InstanceStatus"
        notReadyReason:
          type: string
          description: "If the instance isn't ready, this provides the reason as to\
            \ why the instance isn't ready."
        lastBackup:
          $ref: "#/components/schemas/LastBackupJobInfo"
        applicationSize:
          type: integer
          description: Gives the application size of the instance. It is returned
            in bytes.
          format: int32
        plan:
          $ref: "#/components/schemas/IdName"
        SLAStatus:
          type: string
          enum:
          - MET_SLA
          - MISSED_SLA
          - EXCLUDED_SLA
          - YET_TO_BE_PROTECTED
          - MIGHT_MISS_SLA
          - UNKNOWN
        company:
          $ref: "#/components/schemas/IdName"
        commcell:
          $ref: "#/components/schemas/CommcellInfo"
      description: Gives the summary of each instance.
      example:
        server: server
        notReadyReason: notReadyReason
        SLAStatus: MET_SLA
        databaseEngine: AURORA_MYSQL
        lastBackup:
          jobId: 5
          failureReason: failureReason
          time: 5
          status: NEVER_BACKED_UP
        vendor: NOT_APPLICABLE
        name: name
        commcell:
          name: name
        client:
          name: name
          id: 0
        applicationSize: 6
        company: null
        id: 0
        plan: null
        status: READY
    Vendors:
      type: string
      description: The cloud vendor for the instance.
      enum:
      - NOT_APPLICABLE
      - AMAZON
      - MICROSOFT_AZURE
      - GOOGLE_CLOUD
      - ALIBABA_CLOUD
    InstanceStatus:
      type: string
      description: "The status of the instance. If the instance isn't ready, the reason\
        \ is also provided."
      enum:
      - READY
      - NOT_READY
    InstantClonesListResp:
      type: object
      properties:
        instantClones:
          type: array
          items:
            $ref: "#/components/schemas/InstantClonesSummary"
      example:
        instantClones:
        - mountedHost: null
          sourceInstance: null
          sourceClient:
            name: name
            id: 0
          creationTime: 5
          targetInstance: null
          databaseAsOfTime: 1
          commcell:
            name: name
          cloneJobId: 0
          sqlRecoveryId: 6
          expirationDate: 5
          status: CREATED
        - mountedHost: null
          sourceInstance: null
          sourceClient:
            name: name
            id: 0
          creationTime: 5
          targetInstance: null
          databaseAsOfTime: 1
          commcell:
            name: name
          cloneJobId: 0
          sqlRecoveryId: 6
          expirationDate: 5
          status: CREATED
    InstantClonesSummary:
      type: object
      properties:
        cloneJobId:
          type: integer
          description: Job id for clone operation
          format: int32
        sqlRecoveryId:
          type: integer
          description: Id of sql recovery point for SQL Agent
          format: int32
        sourceClient:
          $ref: "#/components/schemas/IdName"
        sourceInstance:
          $ref: "#/components/schemas/IdName"
        mountedHost:
          $ref: "#/components/schemas/IdName"
        targetInstance:
          $ref: "#/components/schemas/IdName"
        databaseAsOfTime:
          type: integer
          description: The Point in time up to which the database has been recovered
            using the backups. The time is provided in unix time format.
          format: int32
        creationTime:
          type: integer
          description: The time when the database clone was created. The time is provided
            in unix time format.
          format: int32
        expirationDate:
          type: integer
          description: The time till which the clone is kept active and will get cleaned
            up automatically after that. The time is provided in unix time format.
          format: int32
        status:
          type: string
          description: Status of instant clone
          enum:
          - CREATED
          - DELETING
          - EXPIRED
        commcell:
          $ref: "#/components/schemas/CommcellInfo"
      description: Source Client - The server where the database was backed up from.
        Source instance - The backed up database instance. Mounted host - The server
        where the DB snapshot has been mounted to bring up the clone. Target instance
        - The DB instance name which was clone target.
      example:
        mountedHost: null
        sourceInstance: null
        sourceClient:
          name: name
          id: 0
        creationTime: 5
        targetInstance: null
        databaseAsOfTime: 1
        commcell:
          name: name
        cloneJobId: 0
        sqlRecoveryId: 6
        expirationDate: 5
        status: CREATED
    DatabaseListResp:
      type: object
      properties:
        databases:
          type: array
          description: List of databases
          items:
            $ref: "#/components/schemas/DatabaseSummary"
      example:
        databases:
        - server: null
          instance:
            name: name
            id: 0
          SLAStatus: MET
          databaseEngine: AURORA_MYSQL
          lastBackupTime: 1
          lastBackupSize: 6
          vendor: NOT_APPLICABLE
          name: name
          recoveryModel: FULL
          commcell:
            name: name
          company: null
          applicationId: 0
          plan: null
        - server: null
          instance:
            name: name
            id: 0
          SLAStatus: MET
          databaseEngine: AURORA_MYSQL
          lastBackupTime: 1
          lastBackupSize: 6
          vendor: NOT_APPLICABLE
          name: name
          recoveryModel: FULL
          commcell:
            name: name
          company: null
          applicationId: 0
          plan: null
    DatabaseSummary:
      type: object
      properties:
        applicationId:
          type: integer
          description: Application Id of database
          format: int32
        name:
          type: string
          description: This gives the name of the database.
        instance:
          $ref: "#/components/schemas/IdName"
        server:
          $ref: "#/components/schemas/IdName"
        vendor:
          $ref: "#/components/schemas/Vendors"
        databaseEngine:
          $ref: "#/components/schemas/DatabaseEngine"
        recoveryModel:
          type: string
          description: "SQL recovery model is a database configuration option that\
            \ determines the type of backup that one could perform, and provides the\
            \ ability to restore the data or recover it from a failure."
          enum:
          - FULL
          - SIMPLE
        SLAStatus:
          type: string
          description: SLA status for last backup of database
          enum:
          - MET
          - MISSED
          - EXCLUDED
        lastBackupSize:
          type: integer
          description: Size of last backup of database in bytes
          format: int32
        lastBackupTime:
          type: integer
          description: Time of last backup of database. It is given in UNIX time.
          format: int32
        plan:
          $ref: "#/components/schemas/IdName"
        company:
          $ref: "#/components/schemas/IdName"
        commcell:
          $ref: "#/components/schemas/CommcellInfo"
      description: Returns the database summary.
      example:
        server: null
        instance:
          name: name
          id: 0
        SLAStatus: MET
        databaseEngine: AURORA_MYSQL
        lastBackupTime: 1
        lastBackupSize: 6
        vendor: NOT_APPLICABLE
        name: name
        recoveryModel: FULL
        commcell:
          name: name
        company: null
        applicationId: 0
        plan: null
    VirtualMachineListResp:
      type: object
      properties:
        virtualMachines:
          type: array
          items:
            $ref: "#/components/schemas/VirtualMachineSummary"
        virtualMachinesCount:
          type: integer
          format: int32
      example:
        virtualMachinesCount: 2
        virtualMachines:
        - os: os
          commcellName: commcellName
          SLA:
            reason: reason
            status: MET_SLA
          tags:
          - name: name
            id: 5
            value: value
          - name: name
            id: 5
            value: value
          lastBackup:
            jobId: 1
            lastSuccessfulBackupTime: 5
            failureReason: failureReason
            time: 6
            status: NEVER_BACKED_UP
          vmGroup: null
          vendor: NONE
          hypervisor:
            name: name
            id: 0
          name: name
          host: host
          commcell:
            name: name
          applicationSize: 5
          company: null
          vmSize: 0
          UUID: UUID
          plan:
            name: name
            subType: ANY
            id: 6
          status: PROTECTED
        - os: os
          commcellName: commcellName
          SLA:
            reason: reason
            status: MET_SLA
          tags:
          - name: name
            id: 5
            value: value
          - name: name
            id: 5
            value: value
          lastBackup:
            jobId: 1
            lastSuccessfulBackupTime: 5
            failureReason: failureReason
            time: 6
            status: NEVER_BACKED_UP
          vmGroup: null
          vendor: NONE
          hypervisor:
            name: name
            id: 0
          name: name
          host: host
          commcell:
            name: name
          applicationSize: 5
          company: null
          vmSize: 0
          UUID: UUID
          plan:
            name: name
            subType: ANY
            id: 6
          status: PROTECTED
    ApplicationListResp:
      type: object
      properties:
        applications:
          type: array
          items:
            $ref: "#/components/schemas/ApplicationSummary"
        applicationsCount:
          type: integer
          format: int32
      example:
        applicationsCount: 1
        applications:
        - cluster:
            name: name
            id: 0
          os: os
          commcellName: commcellName
          SLA:
            reason: reason
            status: MET_SLA
          K8applicationSize: 6
          lastBackup:
            jobId: 1
            lastSuccessfulBackupTime: 5
            failureReason: failureReason
            time: 6
            status: NEVER_BACKED_UP
          vendor: KUBERNETES
          applicationGroup: null
          name: name
          host: host
          applicationSize: 0
          company: null
          UUID: UUID
          plan: null
          status: PROTECTED
        - cluster:
            name: name
            id: 0
          os: os
          commcellName: commcellName
          SLA:
            reason: reason
            status: MET_SLA
          K8applicationSize: 6
          lastBackup:
            jobId: 1
            lastSuccessfulBackupTime: 5
            failureReason: failureReason
            time: 6
            status: NEVER_BACKED_UP
          vendor: KUBERNETES
          applicationGroup: null
          name: name
          host: host
          applicationSize: 0
          company: null
          UUID: UUID
          plan: null
          status: PROTECTED
    VirtualMachineSummary:
      type: object
      properties:
        name:
          type: string
          description: The display name of the VM.
        vendor:
          type: string
          description: The hypervisor where the VM is located.
          enum:
          - NONE
          - VMW
          - MICROSOFT
          - XEN_SERVER
          - AMAZON
          - AZURE
          - REDHAT
          - AZURE_V2
          - SCVMM
          - NUTANIX
          - ORACLE_VM
          - DOCKER
          - OPENSTACK
          - ORACLE_CLOUD
          - FUSIONCOMPUTE
          - VCLOUD
          - GOOGLE_CLOUD
          - AZURE_STACK
          - ALIBABA_CLOUD
          - ORACLE_CLOUD_INFRASTRUCTURE
          - KUBERNETES
          - REDHAT_OPENSHIFT
          - MONGODB_ATLAS
          - PROXMOX
          - KUBERNETES_AKS
          - AZURE_STACK_HCI
        hypervisor:
          $ref: "#/components/schemas/IdName"
        vmGroup:
          $ref: "#/components/schemas/IdName"
        os:
          type: string
          description: The operating system version for the VM or instance.
        host:
          type: string
          description: The host name for the computer where the source virtual machine
            or instance resides.
        vmSize:
          type: integer
          description: The total space allocated(in bytes) for the virtual machine.
          format: int32
        status:
          type: string
          description: "The status of the backup for the VM, instance, or  container."
          enum:
          - PROTECTED
          - NOT_PROTECTED
          - PENDING
          - BACKED_UP_WITH_ERROR
          - DISCOVERED
        UUID:
          type: string
          description: The globally unique identifier for the VM client.
        commcellName:
          type: string
          description: Name of the commcell the VM belongs
        lastBackup:
          $ref: "#/components/schemas/lastBackup"
        applicationSize:
          type: integer
          description: The amount of data being protected for the VM client(in bytes)
          format: int32
        plan:
          $ref: "#/components/schemas/PlanIdNameType"
        SLA:
          $ref: "#/components/schemas/VMSla"
        company:
          $ref: "#/components/schemas/IdName"
        tags:
          type: array
          items:
            $ref: "#/components/schemas/IdNameValue"
        commcell:
          $ref: "#/components/schemas/CommcellInfo"
      description: Gives the summary of the virtual machines.
      example:
        os: os
        commcellName: commcellName
        SLA:
          reason: reason
          status: MET_SLA
        tags:
        - name: name
          id: 5
          value: value
        - name: name
          id: 5
          value: value
        lastBackup:
          jobId: 1
          lastSuccessfulBackupTime: 5
          failureReason: failureReason
          time: 6
          status: NEVER_BACKED_UP
        vmGroup: null
        vendor: NONE
        hypervisor:
          name: name
          id: 0
        name: name
        host: host
        commcell:
          name: name
        applicationSize: 5
        company: null
        vmSize: 0
        UUID: UUID
        plan:
          name: name
          subType: ANY
          id: 6
        status: PROTECTED
    ApplicationSummary:
      type: object
      properties:
        name:
          type: string
          description: The display name of the VM.
        vendor:
          type: string
          description: The hypervisor where the VM is located.
          enum:
          - KUBERNETES
        cluster:
          $ref: "#/components/schemas/IdName"
        applicationGroup:
          $ref: "#/components/schemas/IdName"
        os:
          type: string
          description: The operating system version for the VM or instance.
        host:
          type: string
          description: The host name for the computer where the source virtual machine
            or instance resides.
        applicationSize:
          type: integer
          description: The total space allocated(in bytes) for the virtual machine.
          format: int32
        status:
          type: string
          description: "The status of the backup for the VM, instance, or  container."
          enum:
          - PROTECTED
          - NOT_PROTECTED
          - PENDING
          - BACKED_UP_WITH_ERROR
          - DISCOVERED
        UUID:
          type: string
          description: The globally unique identifier for the VM client.
        commcellName:
          type: string
          description: Name of the commcell the VM belongs
        lastBackup:
          $ref: "#/components/schemas/lastBackup"
        K8applicationSize:
          type: integer
          description: The amount of data being protected for the VM client(in bytes)
          format: int32
        plan:
          $ref: "#/components/schemas/IdName"
        SLA:
          $ref: "#/components/schemas/VMSla"
        company:
          $ref: "#/components/schemas/IdName"
      description: Gives the summary of the virtual machines.
      example:
        cluster:
          name: name
          id: 0
        os: os
        commcellName: commcellName
        SLA:
          reason: reason
          status: MET_SLA
        K8applicationSize: 6
        lastBackup:
          jobId: 1
          lastSuccessfulBackupTime: 5
          failureReason: failureReason
          time: 6
          status: NEVER_BACKED_UP
        vendor: KUBERNETES
        applicationGroup: null
        name: name
        host: host
        applicationSize: 0
        company: null
        UUID: UUID
        plan: null
        status: PROTECTED
    vmEntitySummary:
      title: vmEntitySummary
      type: object
      properties:
        instance:
          $ref: "#/components/schemas/IdName"
        backupset:
          $ref: "#/components/schemas/IdName"
        vmGroup:
          $ref: "#/components/schemas/IdName"
      description: Summary of VMEntity in Virtual Machine summary
    lastBackup:
      title: lastBackup
      type: object
      properties:
        time:
          type: integer
          description: UNIX time for the last backup job run
          format: int32
        jobId:
          type: integer
          description: Job id of the last backup job
          format: int32
        status:
          $ref: "#/components/schemas/JobStatus"
        lastSuccessfulBackupTime:
          type: integer
          description: UNIX time for the last successful backup job run
          format: int32
        failureReason:
          type: string
          description: Failure reason for the last backup job
      description: last backup job details for the client
      example:
        jobId: 1
        lastSuccessfulBackupTime: 5
        failureReason: failureReason
        time: 6
        status: NEVER_BACKED_UP
    VMSla:
      title: VMSLA
      type: object
      properties:
        status:
          $ref: "#/components/schemas/SLAStatus"
        reason:
          type: string
          description: The reason for the current SLA status of the VM client
      example:
        reason: reason
        status: MET_SLA
    DatabaseEngine:
      type: string
      description: "Name of database engine which is the underlying software component\
        \ that a database management system uses to create, read, update and delete\
        \ data from the database."
      enum:
      - AURORA_MYSQL
      - DB2
      - DB2_MULTINODE
      - DOCUMENT_DB
      - DYNAMO_DB
      - INFORMIX
      - MARIA_DB
      - MYSQL
      - ORACLE
      - ORACLE_RAC
      - POSTGRESQL
      - RDS
      - REDSHIFT
      - SAP_FOR_ORACLE
      - SAP_HANA
      - SQL_SERVER
      - SYBASE
    ReplicationType:
      type: string
      description: The field specifies the type of replication that is to be performed
      default: Periodic
      enum:
      - Periodic
      - Continuous
    DestinationVendor:
      type: string
      description: Vendor used as destination for replication.
      enum:
      - Amazon
      - Azure
      - HyperV
      - VMware
    CreateReplicationGroup:
      required:
      - name
      - recoveryTarget
      - sourceHypervisor
      - storage
      - vms
      type: object
      properties:
        name:
          type: string
          description: The name of the replication group being created
        sourceHypervisor:
          $ref: "#/components/schemas/IdName"
        vms:
          type: array
          description: A list of name and GUID of all the virtual machines that have
            to be replicated
          items:
            $ref: "#/components/schemas/NameGUID"
        frequencyInMinutes:
          type: integer
          description: The field denotes the frequency of replication.
          format: int32
          default: 240
        recoveryTarget:
          $ref: "#/components/schemas/IdName"
        storage:
          type: array
          description: "The primary and an optional secondary storage that will be\
            \ used for storing the source VM data for replication. The secondary storage\
            \ if provided, will be the default source for replication."
          items:
            $ref: "#/components/schemas/StorageCopyCreate"
      description: SourceHypervisor is the hypervisor that has the VM's to be backed
        up. This should be already configured. Recovery target contains the replication
        options that will be applied to the selected VM's. This should be already
        configured. ID is mandatory for sourceHypervisor and recovery target. Provide
        both the id and the name for the storage and the vms.
    CreateReplicationGroupAmazon:
      description: Create a Virtualization replication group with the destination
        as Amazon vendor.
      allOf:
      - $ref: "#/components/schemas/CreateReplicationGroup"
      - required:
        - destVendor
        type: object
        properties:
          destVendor:
            type: string
            enum:
            - Amazon
          advancedOptions:
            $ref: "#/components/schemas/ReplicationGroupAdvOptionsAmazon"
          overrideReplicationOptions:
            type: array
            description: "The replication options per instance, if provided, will\
              \ override the replication options from the target. For the instances\
              \ not in this list, the options are applied from the target."
            items:
              $ref: "#/components/schemas/OverrideReplicationOptionsAmazonCreate"
        description: Create a replication group with Amazon as the destination vendor.
          SourceHypervisor is the hypervisor that has the VM's to be backed up. Recovery
          target contains the replication options that will be applied to the selected
          VM's. ID is mandatory for sourceHypervisor and recovery target. Provide
          both the id and the name for the storage and the vms.
    CreateReplicationGroupAzure:
      description: Create a Virtualization replication group with the destination
        as Azure vendor.
      allOf:
      - $ref: "#/components/schemas/CreateReplicationGroup"
      - required:
        - destVendor
        type: object
        properties:
          destVendor:
            type: string
            enum:
            - Azure
          advancedOptions:
            $ref: "#/components/schemas/ReplicationGroupAdvOptionsAzure"
          overrideReplicationOptions:
            type: array
            description: "The replication options per instance, if provided, will\
              \ override the replication options from the target. For the instances\
              \ not in this list, the options are applied from the target."
            items:
              $ref: "#/components/schemas/OverrideReplicationOptionsAzureCreate"
        description: Create a replication group with Azure as the destination vendor.
          SourceHypervisor is the hypervisor that has the VM's to be backed up. Recovery
          target contains the replication options that will be applied to the selected
          VM's. ID is mandatory for sourceHypervisor and recovery target. Provide
          both the id and the name for the storage and the vms.
    CreateReplicationGroupHyperV:
      description: Create a Virtualization replication group with the destination
        as HyperV vendor
      allOf:
      - $ref: "#/components/schemas/CreateReplicationGroup"
      - required:
        - destVendor
        type: object
        properties:
          destVendor:
            type: string
            enum:
            - HyperV
          advancedOptions:
            $ref: "#/components/schemas/ReplicationGroupAdvOptionsHyperV"
          overrideReplicationOptions:
            type: array
            description: "The replication options per instance, if provided, will\
              \ override the replication options from the target. For the instances\
              \ not in this list, the options are applied from the target."
            items:
              $ref: "#/components/schemas/OverrideReplicationOptionsHyperVCreate"
        description: Create a replication group with HyperV as the destination vendor.
          SourceHypervisor is the hypervisor that has the VM's to be backed up. Recovery
          target contains the replication options that will be applied to the selected
          VM's. ID is mandatory for sourceHypervisor and recovery target. Provide
          both the id and the name for the storage and the vms.
    CreateReplicationGroupVMWare:
      description: Create a Virtualization replication group with the destination
        as VMWare vendor. Snapengine and advanced options are applicable only for
        Periodic replication type. Recovery options is applicable only for Continuous
        replication type. Only one storage is applicable Continuous replication type.
      allOf:
      - $ref: "#/components/schemas/CreateReplicationGroup"
      - required:
        - destVendor
        type: object
        properties:
          destVendor:
            type: string
            enum:
            - VMware
          replicationType:
            $ref: "#/components/schemas/ReplicationType"
          advancedOptions:
            $ref: "#/components/schemas/ReplicationGroupAdvOptionsVMWareCreate"
          snapEngine:
            $ref: "#/components/schemas/IdName"
          recoveryOptions:
            $ref: "#/components/schemas/RecoveryOptionsCreate"
          overrideReplicationOptions:
            type: array
            description: "The replication options per instance, if provided, will\
              \ override the replication options from the target. For the instances\
              \ not in this list, the options are applied from the target."
            items:
              $ref: "#/components/schemas/OverrideReplicationOptionsVMWareCreate"
        description: Create a replication group with VMWare as the destination vendor.
          SourceHypervisor is the hypervisor that has the VM's to be backed up. Recovery
          target contains the replication options that will be applied to the selected
          VM's. ID is mandatory for sourceHypervisor and recovery target. Provide
          both the id and the name for the storage and the vms.
      x-examples:
        VMWare Periodic:
          name: string
          sourceHypervisor:
            id: 0
            name: string
          vms:
          - GUID: string
            name: string
          frequencyInMinutes: 240
          recoveryTarget:
            id: 0
            name: string
          storage:
          - storagePool:
              id: 0
              name: string
            isDedupe: true
          destVendor: VMware
          replicationType: Periodic
          advancedOptions:
            validateDestinationVM: true
            diskProvisioning: ORIGINAL
            transportMode: AUTO
            unconditionalOverwrite: false
            SnapshotsToRetain: 0
          snapEngine:
            id: 0
            name: string
          overrideReplicationOptions:
          - sourceVM:
              GUID: string
              name: string
            vmDisplayName: string
            destinationHost: string
            datastore: string
            resourcePool: string
            vmFolder: string
            networkSettings:
            - source: string
              destination: string
            ipAddressSettings:
            - sourceIP: string
              sourceSubnetMask: string
              sourceDefaultGateway: string
              useDhcp: false
              destinationIP: string
              destinationSubnetMask: string
              destinationdefaultGateway: string
              destinationPreferredDNS: string
              destinationAlternateDNS: string
              destinationPreferredWINS: string
              destinationAlternateWINS: string
              hostname: string
        VMWare Continuous:
          name: string
          sourceHypervisor:
            id: 0
            name: string
          vms:
          - GUID: string
            name: string
          recoveryTarget:
            id: 0
            name: string
          storage:
          - storagePool:
              id: 0
              name: string
            isDedupe: true
          destVendor: VMware
          replicationType: Continuous
          recoveryOptions:
            recoveryType: POINT_IN_TIME_RECOVERY
            recoveryPointStore:
              id: 0
              name: string
            recoveryPointInterval:
              crashConsistentRpInterval: 300
              applicationConsistentRpInterval: 0
            recoveryPointRetention:
              retainRecoveryPointsFor: 604800
              mergeRecoveryPoints: true
              mergeRecoveryPointsOlderThan: 172800
              recoveryPointIntervalAtEndofRetention: 21600
              rpStoreOfflineFor: 0
              pruneAndMergeDuringOffPeak: false
          overrideReplicationOptions:
          - sourceVM:
              GUID: string
              name: string
            vmDisplayName: string
            destinationHost: string
            datastore: string
            resourcePool: string
            vmFolder: string
            networkSettings:
            - source: string
              destination: string
            ipAddressSettings:
            - sourceIP: string
              sourceSubnetMask: string
              sourceDefaultGateway: string
              useDhcp: false
              destinationIP: string
              destinationSubnetMask: string
              destinationdefaultGateway: string
              destinationPreferredDNS: string
              destinationAlternateDNS: string
              destinationPreferredWINS: string
              destinationAlternateWINS: string
              hostname: string
    ReplicationGroupAdvOptionsVMWareCreate:
      title: ReplicationGroupAdvOptionsVMwareCreate
      type: object
      properties:
        validateDestinationVM:
          type: boolean
          description: Validates that the destination VM is bootable by powering it
            on and then powering off
          default: true
        diskProvisioning:
          type: string
          description: The disk provisioning type for the destination VM.
          default: ORIGINAL
          enum:
          - ORIGINAL
          - THICK LAZY ZERO
          - THIN
          - THICK EAGER ZERO
        transportMode:
          type: string
          description: The transport mode based on environment.
          default: AUTO
          enum:
          - AUTO
          - SAN
          - HOT_ADD
          - NAS
          - NBD_SSL
          - NBD
        unconditionalOverwrite:
          type: boolean
          description: This will replace the instance at the destination if the instance
            with the same name already exists.
          default: false
        SnapshotsToRetain:
          type: integer
          description: Number of snapshots to retain on destination VM. This is only
            applicable if snap engine is provided
          format: int32
          default: 0
      description: Advanced options for VMWare replication group
    ReplicationGroupAdvOptionsVMWare:
      title: ReplicationGroupAdvOptionsVMware
      type: object
      properties:
        validateDestinationVM:
          type: boolean
          description: Validates that the destination VM is bootable by powering it
            on and then powering off
          default: true
        diskProvisioning:
          type: string
          description: Select the disk provisioning type for the destination VM. The
            values are case sensitive.
          default: Auto
          enum:
          - Auto
          - Thick
          - Thin
          - ThickEagerZero
        transportMode:
          type: string
          description: Choose transport mode based on environment. Values are case
            sensitive
          default: Auto
          enum:
          - Auto
          - SAN
          - Hot_Add
          - NAS
          - NBD_SSL
          - NBD
        unconditionalOverwrite:
          type: boolean
          description: Replace an existing virtual machine with the same name in the
            target location
          default: false
        SnapshotsToRetain:
          type: integer
          description: Number of snapshots to retain on destination VM
          format: int32
          default: 0
      description: Advanced options for VMWare replication group
    ReplicationGroupAdvOptionsAmazon:
      title: ReplicationGroupAdvOptionsAmazon
      type: object
      properties:
        validateDestinationVM:
          type: boolean
          description: Validates that the destination VM is bootable by powering it
            on and then powering off
          default: true
        unconditionalOverwrite:
          type: boolean
          description: This will replace the instance at the destination if the instance
            with the same name already exists.
          default: false
      description: Advanced options for Amazon replication group
    ReplicationGroupAdvOptionsHyperV:
      title: ReplicationGroupAdvOptionsHyperV
      type: object
      properties:
        validateDestinationVM:
          type: boolean
          description: Validates that the destination VM is bootable by powering it
            on and then powering off
          default: true
        unconditionalOverwrite:
          type: boolean
          description: This will replace the instance at the destination if the instance
            with the same name already exists.
          default: false
      description: Advanced options for HyperV replication group
    ReplicationGroupAdvOptionsAzure:
      title: ReplicationGroupAdvOptionsAzure
      type: object
      properties:
        unconditionalOverwrite:
          type: boolean
          description: This will replace the instance at the destination if the instance
            with the same name already exists.
          default: false
        deployVmOnlyDuringfailover:
          type: boolean
          description: Select this option to deploy a VM only when a failover operation
            is requested
          default: true
      description: Advanced options for Azure replication group
      example:
        deployVmOnlyDuringfailover: true
        unconditionalOverwrite: false
    OverrideReplicationOptionsVMWareCreate:
      title: OverrideReplicationOptionsVMWare
      required:
      - datastore
      - destinationHost
      - resourcePool
      - sourceVM
      - vmDisplayName
      type: object
      properties:
        sourceVM:
          $ref: "#/components/schemas/NameGUID"
        vmDisplayName:
          type: string
          description: Enter the display name for the destination VM
        destinationHost:
          type: string
          description: Name of host where the destination VM will reside
        datastore:
          type: string
          description: The datastore to be used for virtual machine disks
        resourcePool:
          type: string
          description: The resource pool that will be used on the destination VM
        vmFolder:
          type: string
          description: "If the destination VM has to reside inside a folder, specify\
            \ the name here"
        networkSettings:
          type: array
          description: Mapping between a source network and a destination network
          items:
            $ref: "#/components/schemas/NetworkSetting"
        ipAddressSettings:
          type: array
          description: A mapping of IP between the source and the destination VM with
            an option to configure either a dynamic or a static IP.
          items:
            $ref: "#/components/schemas/IpAddressSettingVMWareCreate"
      description: Per VM Replication options for VMware. Provide both the name and
        the guid of the source VM.
    OverrideReplicationOptionsAmazonCreate:
      title: OverrideReplicationOptionsAmazon
      required:
      - availabilityZone
      - instanceName
      - regionName
      - sourceVM
      type: object
      properties:
        sourceVM:
          $ref: "#/components/schemas/NameGUID"
        instanceName:
          type: string
          description: Display name for the destination instance
        regionName:
          type: string
          description: The name of the AWS region where the destination instance will
            reside
        availabilityZone:
          type: string
          description: The name of AWS zone where the destination instance will reside
        volumeType:
          type: string
          description: ID of the volume type that will be used on the destination
            instance. Default value is Auto
        encryptionKey:
          type: string
          description: The ID of the encryption key that will be used to encrypt the
            data of the desination instance. Default value is Auto
        network:
          $ref: "#/components/schemas/NetworkVPCSubnet"
        securityGroups:
          type: array
          description: The security group to be applied to the destination instance
            that acts as a virtual firewall. Default value is Auto
          items:
            $ref: "#/components/schemas/SecurityGroup"
        instanceType:
          type: string
          description: The available CPU cores and memory to be used on the destination
            instance. Default value is Auto
        guestCredentials:
          $ref: "#/components/schemas/GuestCredentialsCreate"
      description: Replication options for Amazon. sourceVM should contain the name
        and the guid of the machine that has to be overriden
    OverrideReplicationOptionsAzureCreate:
      title: OverrideReplicationOptionsAzure
      required:
      - region
      - resourceGroup
      - sourceVM
      - storageAccount
      - vmDisplayName
      type: object
      properties:
        sourceVM:
          $ref: "#/components/schemas/NameGUID"
        vmDisplayName:
          type: string
          description: Display name of destination VM
        resourceGroup:
          type: string
          description: The resource group to be used for the destination VM
        region:
          type: string
          description: The name of the region where the destination VM will reside
        storageAccount:
          type: string
          description: The name of the storage account to be used on the destination
            VM
        vmSizeId:
          type: string
          description: The id of the vm size to be applied to the destination VM.
            Default value is Auto
        diskTypeId:
          type: string
          description: The id of the disk type to be used for the destination VM.
            Default value is Auto
        virtualNetwork:
          type: array
          description: The network to be used on the destination VM. Default value
            is Auto
          items:
            $ref: "#/components/schemas/NetworkSubnet"
        securityGroup:
          $ref: "#/components/schemas/SecurityGroup"
        createPublicIP:
          type: boolean
          description: Creates a public IP on the network
        restoreAsManagedVM:
          type: boolean
          description: Creates the destination as a managed VM
        privateIPaddress:
          type: string
          description: Private IP address of the network
        publicIPaddress:
          type: string
          description: Public IP address of the network
        publicIPaddressID:
          type: string
          description: Public IP address id of the network
      description: Replication options for Azure. Provide both of the name and the
        guid of the source VM and provide the id and the name of the security group
    OverrideReplicationOptionsHyperVCreate:
      title: OverrideReplicationOptionsHyperV
      required:
      - networkName
      - sourceVM
      - vmDisplayName
      type: object
      properties:
        sourceVM:
          $ref: "#/components/schemas/NameGUID"
        vmDisplayName:
          type: string
          description: Display name for the destination VM
        registerVMWithFailoverCluster:
          type: boolean
          description: Register replicated virtual machines to the failover cluster
            for the destination client.
        networkName:
          type: string
          description: The name of the network of destination VM
      description: Replication options for HyperV. Provide both the name and the guid
        of the source VM.
    StorageCopyCreate:
      title: StorageCopy
      required:
      - isDedupe
      - storagePool
      type: object
      properties:
        storagePool:
          $ref: "#/components/schemas/IdName"
        isDedupe:
          type: boolean
          description: Denotes if this is a deduplication copy
      description: "Copy to be configured for a replication group. The first copy\
        \ from the list is regarded as the Primary copy. Secondary copy, if provided,\
        \ is used for replication. Provide both the id and the name of the storage\
        \ pool"
    ReplicationGroupList:
      title: ReplicationGroupList
      type: object
      properties:
        id:
          type: integer
          description: id of the replication group. Either taskId or id is available
            in the list
          format: int32
        taskId:
          type: integer
          description: taskid of the replication group. Either taskId or id is available
            in the list
          format: int32
        name:
          type: string
          description: Replication group name
        source:
          $ref: "#/components/schemas/IdName"
        destination:
          $ref: "#/components/schemas/IdName"
        type:
          type: string
          description: The application type of replication group
          enum:
          - VIRTUAL_MACHINE
          - VM_HOT_SITE
          - VM_WARM_SITE
          - ORACLE
          - FILE_SYSTEM
          - BIG_DATA
          - SQL_SERVER
          - OBJECT_STORAGE
          - SAP_HANA
          - NOT_APPLICABLE
        replicationGroupType:
          type: string
          description: Replication group type
          enum:
          - PERIODIC
          - CONTINOUS
          - LIVE_SYNC
          - LIVE_SYNC_DIRECT
          - LIVE_SYNC_IO
          - NOT_APPLICABLE
        state:
          type: string
          description: State of replication group
          enum:
          - ENABLED
          - DISABLED
          - NOT_APPLICABLE
      description: List of replication groups. Source contains the replication source
        details. Destination contains the target of the replication
      example:
        replicationGroupType: PERIODIC
        name: name
        destination: null
        id: 0
        source:
          name: name
          id: 0
        state: ENABLED
        type: VIRTUAL_MACHINE
        taskId: 6
    ReplicationGroupListResp:
      title: ReplicationGroupListResp
      type: object
      properties:
        replicationGroups:
          type: array
          description: List of all replication groups
          items:
            $ref: "#/components/schemas/ReplicationGroupList"
      description: Used to get list of existing replication groups
      example:
        replicationGroups:
        - replicationGroupType: PERIODIC
          name: name
          destination: null
          id: 0
          source:
            name: name
            id: 0
          state: ENABLED
          type: VIRTUAL_MACHINE
          taskId: 6
        - replicationGroupType: PERIODIC
          name: name
          destination: null
          id: 0
          source:
            name: name
            id: 0
          state: ENABLED
          type: VIRTUAL_MACHINE
          taskId: 6
    ReplicationGroupSummary:
      title: ReplicationGroupSummary
      type: object
      properties:
        source:
          type: string
          description: Source hypervisor
        recoveryTarget:
          type: string
          description: Can be used to identify destination for full VM restore
        destinationVendor:
          $ref: "#/components/schemas/DestinationVendor"
        replicationType:
          $ref: "#/components/schemas/ReplicationType"
        state:
          type: string
          description: State of replication group. Values are case sensitive
          enum:
          - Enabled
          - Disabled
          - N/A
      description: Summary of replication group
    Rpo:
      title: Rpo
      type: object
      properties:
        replicationFrequency:
          type: integer
          description: Max amount of time for which data can be lost during a service
            disruption. Determines frequency of backup jobs in minutes
          format: int32
          default: 240
      description: Frequency of replication
    StorageCopy:
      title: StorageCopy
      type: object
      properties:
        name:
          type: string
          description: "Storage name. Primary, secondary "
        storagePool:
          $ref: "#/components/schemas/IdName"
        retention:
          type: integer
          description: How long the data is retained. Mentioned in days
          format: int32
      description: Copy configured for a replication group
    RecoveryOptionsCreate:
      title: RecoveryOptions
      required:
      - recoveryPointStore
      - recoveryType
      type: object
      properties:
        recoveryType:
          type: string
          description: Type of recovery.
          default: POINT_IN_TIME_RECOVERY
          enum:
          - LATEST_RECOVERY
          - POINT_IN_TIME_RECOVERY
        recoveryPointStore:
          $ref: "#/components/schemas/IdName"
        recoveryPointInterval:
          $ref: "#/components/schemas/RecoveryPointIntervalCreate"
        recoveryPointRetention:
          $ref: "#/components/schemas/RecoveryPointRetentionCreate"
      description: 'Recovery options for a continuous replication group. recoveryPointStore
        is an intermediate storage for recovery points. Provide both the id and the
        name of the recoveryPointStore. Either crash consistent or application consistent
        RP interval is mandatory. '
    RecoveryOptions:
      title: RecoveryOptions
      type: object
      properties:
        recoveryType:
          type: string
          description: Type of recovery. Values are case sensitive
          enum:
          - LIVE
          - SNAPSHOT
          - GRANULAR
          - GRANULARV2
        recoveryPointStore:
          type: string
          description: Select the Recovery Point Store on the destination site where
            journal entries for each recovery point are stored
        crashConsistentRpInterval:
          type: integer
          description: Option to create crash-consistent recovery points
          format: int32
        mergeRecoveryPointsOlderThan:
          type: integer
          description: Option to combine older recovery points into larger recovery
            points
          format: int32
        retainRecoveryPointsFor:
          type: integer
          description: Option to specify how long journal entries for a recovery point
            should be retained
          format: int32
        recoveryPointInterval:
          type: integer
          description: Option to specify the time interval between the oldest recovery
            points in the RP Store
          format: int32
        pruneAndMergeRecoveryPoints:
          type: boolean
          description: Specify whether to transfer updates for the oldest recovery
            points to destination computer during off-peak hours.
      description: Recovery options to be specified for a continuous replication group
    ReplicationGroupStorageList:
      title: ReplicationGroupStorageList
      type: object
      properties:
        copies:
          type: array
          description: List of all storages which are configured for that replication
            group
          items:
            $ref: "#/components/schemas/StorageCopy"
        copyForReplication:
          type: string
          description: Main storage which is used for replication
      description: List of storage configured for a replication group
    ReplicationConfigurationVMware:
      title: ReplicationConfigurationVMware
      type: object
      properties:
        sourceVM:
          type: string
          description: The source VM
        destinationVM:
          type: string
          description: The replicated VM
        destinationHost:
          type: string
          description: Destination hypervisor
        datastore:
          type: string
          description: Select a datastore to be used for virtual machine disks
        overrideReplicationOptions:
          $ref: "#/components/schemas/OverrideReplicationOptionsVMWare"
      description: Replication configuration for VMware
    OverrideReplicationOptionsVMWare:
      title: OverrideReplicationOptionsVMWare
      type: object
      properties:
        vmDisplayName:
          type: string
          description: Enter the display name for the destination VM
        destinationHost:
          type: string
          description: Host for the destination VM
        datastore:
          type: string
          description: Select a datastore to be used for virtual machine disks
        resourcePool:
          type: string
          description: Select a resource pool for the destination VM
        vmFolder:
          type: string
          description: VM folder replication
        networkSettings:
          type: array
          description: Mapping between a source network and a destination network
          items:
            $ref: "#/components/schemas/NetworkSetting"
        ipAddressSettings:
          type: array
          description: Customize IP address settings
          items:
            $ref: "#/components/schemas/IpAddressSetting"
      description: Replication options for VMware
    NetworkSetting:
      title: NetworkSetting
      type: object
      properties:
        source:
          type: string
          description: Source network name
        sourceId:
          type: string
          description: Source network ID
        destination:
          type: string
          description: Destination network name
      description: The schema for mapping source network with destination network
      example:
        sourceId: sourceId
        destination: destination
        source: source
    IpAddressSetting:
      title: IpAddressSetting
      type: object
      properties:
        sourceIp:
          type: string
          description: Source IP
        subnetMask:
          type: string
          description: Subnet mask
        defaultGateway:
          type: string
          description: Default gateway
        useDhcp:
          type: boolean
          description: Use DHCP
        hostName:
          type: string
          description: Hostname
        destinationIp:
          type: string
          description: Destination IP
        SubnetMaskNoDhcp:
          type: string
          description: Subnet mask when dhcp is not selected
        defaultGatewayNoDhcp:
          type: string
          description: Defaault gateway when dhcp is not selected
    IpAddressSettingVMWareCreate:
      title: IpAddressSetting
      type: object
      properties:
        sourceIP:
          type: string
          description: The full IP address or an IP address pattern of the source
            VM.
        sourceSubnetMask:
          type: string
          description: The subnet mask of the source VM.
        sourceDefaultGateway:
          type: string
          description: The default gateway of the source VM.
        useDhcp:
          type: boolean
          description: Automatically assigns available IP addresses to be used with
            the specified destination network.
          default: false
        destinationIP:
          type: string
          description: The full IP address or an IP address pattern for the destination
            VM. Provide only if DHCP is not enabled.
        destinationSubnetMask:
          type: string
          description: The subnet mask for the destination VM.  Provide only if DHCP
            is not enabled.
        destinationDefaultGateway:
          type: string
          description: The default gateway for the destination VM.  Provide only if
            DHCP is not enabled.
        destinationPreferredDNS:
          type: string
          description: The preferred DNS server for the destination VM.  Provide only
            if DHCP is not enabled
        destinationAlternateDNS:
          type: string
          description: The alternate DNS server for the destination VM.  Provide only
            if DHCP is not enabled
        destinationPreferredWINS:
          type: string
          description: The preferred WINS server for the destination VM.  Provide
            only if DHCP is not enabled
        destinationAlternateWINS:
          type: string
          description: The alternate WINS server for the destination VM.  Provide
            only if DHCP is not enabled
      description: A mapping of IP between the source and the destination VM with
        an option to configure either a dynamic or a static IP.
      example:
        sourceSubnetMask: sourceSubnetMask
        destinationIP: destinationIP
        destinationPreferredDNS: destinationPreferredDNS
        sourceIP: sourceIP
        destinationDefaultGateway: destinationDefaultGateway
        destinationAlternateWINS: destinationAlternateWINS
        destinationPreferredWINS: destinationPreferredWINS
        sourceDefaultGateway: sourceDefaultGateway
        destinationSubnetMask: destinationSubnetMask
        useDhcp: false
        destinationAlternateDNS: destinationAlternateDNS
    GuestCredentialsCreate:
      title: Guest credentials
      type: object
      properties:
        computerName:
          type: string
          description: The name of the computer
        userName:
          type: string
          description: The user to be used to access the computer
        password:
          type: string
          description: The password of the user in Base64 format
      description: Faster performance can be achieved during replication by using
        the VSA access node running on the Amazon instance. Applicable only if the
        source VM is Windows and the source hypervisor is not Amazon vendor.
    ReplicationGroup:
      title: ReplicationGroup
      type: object
      properties:
        id:
          type: integer
          description: Replication group id
          format: int32
        name:
          type: string
          description: Replication group name
        summary:
          $ref: "#/components/schemas/ReplicationGroupSummary"
        rpo:
          $ref: "#/components/schemas/Rpo"
        storage:
          $ref: "#/components/schemas/ReplicationGroupStorageList"
      description: Used to return details of a replication group whose replicationGroupId
        has been provided
    ReplicationConfigurationHyperV:
      title: ReplicationConfigurationHyperV
      type: object
      properties:
        sourceVM:
          type: string
          description: Source VM
        destinationVM:
          type: string
          description: Destination VM
        hypervHost:
          type: string
          description: Hypervisor
        destinationVolume:
          type: string
          description: Destination volume for hyperV
        overrideReplicationOptions:
          $ref: "#/components/schemas/OverrideReplicationOptionsHyperV"
      description: Replication configuration for HyperV
    OverrideReplicationOptionsHyperV:
      title: OverrideReplicationOptionsHyperV
      type: object
      properties:
        vmDisplayName:
          type: string
          description: Display name for the destination VM
        registerVMWithFailoverCluster:
          type: string
          description: Register replicated virtual machines to the failover cluster
            for the destination client.
        networkAdapter:
          type: array
          description: Select a network interface from the Network adapter list
          items:
            $ref: "#/components/schemas/NetworkName"
      description: Replication options for HyperV
    NetworkName:
      title: NetworkName
      type: object
      properties:
        networkName:
          type: string
          description: Name of network
      description: Select a network interface from the Network adapter list.
    ReplicationConfigurationAmazon:
      title: ReplicationConfigurationAmazon
      type: object
      properties:
        sourceVM:
          type: string
          description: Source instance
        destinationVM:
          type: string
          description: Destination instance
        availabilityZone:
          type: string
          description: Destination zone
        instanceType:
          type: string
          description: Provides the available CPU cores and memory for the instance.
        overrideReplicationOptions:
          $ref: "#/components/schemas/OverrideReplicationOptionsAmazon"
      description: Replication configuration for Amazon
    OverrideReplicationOptionsAmazon:
      title: OverrideReplicationOptionsAmazon
      type: object
      properties:
        guestCreds:
          $ref: "#/components/schemas/GuestCredentialsCreate"
        instanceName:
          type: string
          description: Display name for the destination instance
        availabilityZone:
          type: string
          description: Destination zone
        volumeType:
          type: string
          description: Type of volume used for replication
        encryptionKey:
          type: string
          description: Encryption key if used
        network:
          $ref: "#/components/schemas/AmazonNetwork"
        testFailoverNetwork:
          $ref: "#/components/schemas/AmazonNetwork"
        autoSelectSecurityGroup:
          type: array
          description: Select a security group for the destination instances
          items:
            $ref: "#/components/schemas/SecurityGroup"
        instanceType:
          type: string
          description: Provides the available CPU cores and memory for the instance.
        computerName:
          type: string
          description: Enable required drivers to be installed on the Amazon guest
            instance
        userName:
          type: string
          description: Enable required drivers to be installed on the Amazon guest
            instance
      description: Replication options for Amazon
    AmazonNetwork:
      title: AmazonNetwork
      type: object
      properties:
        displayName:
          type: string
          description: Network display name
        name:
          type: string
          description: Name of network
        subnetId:
          type: string
          description: subnet id of network
        networkId:
          type: string
          description: VPC Id of the network
        privateIPaddress:
          type: string
          description: Private IP address of the network
      description: Network interface for the destination instances
    Network:
      title: Network
      type: object
      properties:
        networkDisplayName:
          type: string
          description: Network display name
        networkName:
          type: string
          description: Name of network
        subnetId:
          type: string
          description: subnet id of network
        privateIPaddress:
          type: string
          description: Private IP address of the network
      description: Network interface for the destination instances
    NetworkVPCSubnet:
      title: Network
      type: object
      properties:
        vpc:
          type: string
          description: The ID of the VPC
        subnetId:
          type: string
          description: The ID of the subnet
        name:
          type: string
          description: The name of the network
        privateIPaddress:
          type: string
          description: The private IP address of the network
      description: Network info
    NetworkSubnet:
      title: Network
      type: object
      properties:
        subnetId:
          type: string
          description: The ID of the subnet
        network:
          type: string
          description: The name of the network
      description: Network info
    ReplicationConfigurationAzure:
      title: ReplicationConfigurationAzure
      type: object
      properties:
        sourceVM:
          type: string
          description: Source VM
        destinationVM:
          type: string
          description: Destination VM
        resourceGroup:
          type: string
          description: Resource group in which the converted virtual machine should
            be created.
        storageAccount:
          type: string
          description: Azure Standard or Premium general-purpose storage account.
        vmSize:
          type: string
          description: VM size
        createPublicIP:
          type: boolean
          description: Create a public IP.
        restoreAsManagedVm:
          type: boolean
          description: Restore the VM as a managed disk for the destination VMs.
        overrideReplicationOptions:
          $ref: "#/components/schemas/OverrideReplicationOptionsAzure"
        diskType:
          type: string
          description: Type of the disk
        sourceVMGuid:
          type: string
          description: GUID of the source VM
        region:
          type: string
          description: region of the VM
        testFailoverVmSize:
          type: string
          description: Vm size to be used during the test failover operation
      description: Replication configuration for Azure
      example:
        destinationVM: destinationVM
        resourceGroup: resourceGroup
        sourceVMGuid: sourceVMGuid
        testFailoverVmSize: testFailoverVmSize
        overrideReplicationOptions:
          testFailoverVirtualNetwork:
            subnetId: subnetId
            networkName: networkName
            networkAddressDetails:
              subnetId: subnetId
              publicIpAddress: publicIpAddress
              publicIpAddressId: publicIpAddressId
              networkId: networkId
              privateIpAddress: privateIpAddress
            publicIPaddressID: publicIPaddressID
            networkId: networkId
            networkDisplayName: networkDisplayName
            privateIPaddress: privateIPaddress
            publicIPAddress: publicIPAddress
          securityGroup:
            name: name
            id: id
          availabilityZone: availabilityZone
          virtualNetwork: null
        sourceVM: sourceVM
        createPublicIP: true
        restoreAsManagedVm: true
        vmSize: vmSize
        diskType: diskType
        storageAccount: storageAccount
        region: region
    OverrideReplicationOptionsAzure:
      title: OverrideReplicationOptionsAzure
      type: object
      properties:
        availabilityZone:
          type: string
          description: VM availability zone
        securityGroup:
          $ref: "#/components/schemas/SecurityGroup"
        testFailoverVirtualNetwork:
          $ref: "#/components/schemas/AzureNetwork"
        virtualNetwork:
          $ref: "#/components/schemas/AzureNetwork"
      description: Replication options for Azure
      example:
        testFailoverVirtualNetwork:
          subnetId: subnetId
          networkName: networkName
          networkAddressDetails:
            subnetId: subnetId
            publicIpAddress: publicIpAddress
            publicIpAddressId: publicIpAddressId
            networkId: networkId
            privateIpAddress: privateIpAddress
          publicIPaddressID: publicIPaddressID
          networkId: networkId
          networkDisplayName: networkDisplayName
          privateIPaddress: privateIPaddress
          publicIPAddress: publicIPAddress
        securityGroup:
          name: name
          id: id
        availabilityZone: availabilityZone
        virtualNetwork: null
    SecurityGroup:
      title: SecurityGroup
      type: object
      properties:
        id:
          type: string
          description: Security group id
        name:
          type: string
          description: security group name
      description: The id and the name of the security group
      example:
        name: name
        id: id
    VMwareReplicationGroup:
      title: VMwareReplicationGroup
      description: Replication group details pertaining to VMware
      allOf:
      - $ref: "#/components/schemas/ReplicationGroup"
      - required:
        - vendor
        type: object
        properties:
          advancedOption:
            $ref: "#/components/schemas/ReplicationGroupAdvOptionsVMWare"
          replicationConfiguration:
            type: array
            description: replication configuration for VMware replication group
            items:
              $ref: "#/components/schemas/ReplicationConfigurationVMware"
          vendor:
            type: string
            description: Vendor type of this replication group. Values in enum are
              case sensitive
            enum:
            - VMware
    AzureReplicationGroup:
      title: AzureReplicationGroup
      description: Replication group details pertaining to Azure
      allOf:
      - $ref: "#/components/schemas/ReplicationGroup"
      - required:
        - vendor
        type: object
        properties:
          advancedOption:
            $ref: "#/components/schemas/ReplicationGroupAdvOptionsAzure"
          replicationConfiguration:
            type: array
            items:
              $ref: "#/components/schemas/ReplicationConfigurationAzure"
          vendor:
            type: string
            description: Vendor type of this replication group. Values in enum are
              case sensitive
            enum:
            - Azure
    AmazonReplicationGroup:
      title: AmazonReplicationGroup
      description: Replication group details pertaining to Amazon
      allOf:
      - $ref: "#/components/schemas/ReplicationGroup"
      - required:
        - vendor
        type: object
        properties:
          advancedOption:
            $ref: "#/components/schemas/ReplicationGroupAdvOptionsAmazon"
          replicationConfiguration:
            type: array
            description: Replication configuration for an Amazon replication group
            items:
              $ref: "#/components/schemas/ReplicationConfigurationAmazon"
          vendor:
            type: string
            description: Vendor type of this replication group. Values in enum are
              case sensitive
            enum:
            - Amazon
    OCIReplicationGroup:
      title: OCIReplicationGroup
      description: Replication group details pertaining to GCP
      allOf:
      - $ref: "#/components/schemas/ReplicationGroup"
      - required:
        - vendor
        type: object
        properties:
          advancedOption:
            $ref: "#/components/schemas/ReplicationGroupAdvOptionsOCI"
          replicationConfiguration:
            type: array
            items:
              $ref: "#/components/schemas/ReplicationConfigurationOCI"
          vendor:
            type: string
            description: Vendor type of this replication group. Values in enum are
              case sensitive
            enum:
            - OCI
    ReplicationGroupAdvOptionsOCI:
      allOf:
      - $ref: "#/components/schemas/ReplicationGroupAdvancedOptions"
      - type: object
        properties:
          unconditionalOverwrite:
            type: boolean
            description: This will replace the instance at the destination if the
              instance with the same name already exists.
    ReplicationConfigurationOCI:
      title: ReplicationConfigurationOCI
      type: object
      properties:
        sourceVM:
          type: string
          description: Source VM instance name
        sourceVMGuid:
          type: string
          description: Source VM instance guid
        destinationVM:
          type: string
          description: Destination VM instance name
        availabilityDomain:
          type: string
          description: Destination VM instance availability domain
        stagingBucket:
          type: string
          description: Staged bucket name for restore operation
        region:
          type: string
          description: Instance region
        createPublicIP:
          type: boolean
          description: Public/External IP of the destination VM instance
        shape:
          type: string
          description: Destination VM instance shape
        overrideReplicationOptions:
          $ref: "#/components/schemas/OverrideReplicationOptionsOCI"
        compartment:
          $ref: "#/components/schemas/NameValue"
      description: Model to store configuration per VM for OCI vendor
    OverrideReplicationOptionsOCI:
      title: OverrideReplicationOptionsOCI
      type: object
      properties:
        network:
          $ref: "#/components/schemas/Network"
      description: Extended instance configuration options
    HyperVReplicationGroup:
      title: HyperVReplicationGroup
      description: Replication group details pertaining to hyperV
      allOf:
      - $ref: "#/components/schemas/ReplicationGroup"
      - required:
        - vendor
        type: object
        properties:
          advancedOption:
            $ref: "#/components/schemas/ReplicationGroupAdvOptionsHyperV"
          replicationConfiguration:
            type: array
            description: Replication configuration for a hyperv replication group
            items:
              $ref: "#/components/schemas/ReplicationConfigurationHyperV"
          vendor:
            type: string
            description: Vendor type of this replication group. Values in enum are
              case sensitive
            enum:
            - HyperV
    ContinuousReplicationGroup:
      title: ContinuousReplicationGroup
      required:
      - recoveryOptions
      type: object
      properties:
        summary:
          $ref: "#/components/schemas/ReplicationGroupSummary"
        recoveryOptions:
          $ref: "#/components/schemas/RecoveryOptions"
        replicationConfiguration:
          type: array
          description: replication configuration of a continuous group
          items:
            $ref: "#/components/schemas/ReplicationConfigurationVMware"
      description: Replication group details pertaining to a continuous replication
        group
    RecoveryPointIntervalCreate:
      title: RecoveryPointInterval
      type: object
      properties:
        crashConsistentRpInterval:
          type: integer
          description: Minimum time interval(in seconds) between VM recovery points.
            Applicable only for Point in time recovery.
          format: int32
          default: 300
        applicationConsistentRpInterval:
          type: integer
          description: Time(in seconds) after which the source VMs are quiesced to
            create application-consistent recovery points for destination VMs. Applicable
            only for Point in time recovery.
          format: int32
          default: 0
      description: Recovery point interval inputs for continuous replication group.
        Provide atleast one of crash consistent and application consistent interval.
    RecoveryPointRetentionCreate:
      title: RecoveryPointRetention
      required:
      - retainRecoveryPointsFor
      type: object
      properties:
        retainRecoveryPointsFor:
          minimum: 1
          type: integer
          description: The lengh of time(in seconds) to a retain the recovery point
            entries. Applicable only for Point in time recovery.
          format: int32
          default: 604800
        mergeRecoveryPoints:
          type: boolean
          description: Merge the recovery points beyond the time provided in mergeRecoveryPointsOlderThan
          default: true
        mergeRecoveryPointsOlderThan:
          minimum: 1
          type: integer
          description: "Applicable only if mergeRecoveryPoints is set to true. Beyond\
            \ this period(in seconds), older recovery points will be merged into progressively\
            \ coarser intervals going back in time. Applicable only for Point in time\
            \ recovery. The value cannot exceed the value of retainRecoveryPointsFor."
          format: int32
          default: 172800
        recoveryPointIntervalAtEndofRetention:
          maximum: 86400
          minimum: 1
          type: integer
          description: Applicable only if mergeRecoveryPoints is set to true.  Time
            interval(in seconds) between the older recovery points. Applicable only
            if mergeRecoveryPointsOlderThan and Point in time recovery is selected.
            The value cannot exceed the value of retainRecoveryPointsFor or 86400
            seconds(1 day).
          format: int32
          default: 21600
        rpStoreOfflineFor:
          minimum: 0
          type: integer
          description: Time(in seconds) after which the recovery type is switched
            to 'Latest recovery' if RP store is offline. Applicable only for Point
            in time recovery.
          format: int32
          default: 0
        pruneAndMergeDuringOffPeak:
          type: boolean
          description: Transfers the updates of the oldest recovery points to destination
            VM only during off-peak hours. The peak interval time should be configured
            in the RP store.  Applicable only for Point in time recovery.
          default: false
      description: Recovery point retention inputs for continuous replication group.
    DROperation:
      type: string
      description: The names of DR operations
      enum:
      - PlannedFailover
      - UnplannedFailover
      - Failback
      - RevertFailover
      - UndoFailover
      - TestBoot
      - PITFailover
      - ReverseReplication
      - CleanupDestinationVM
      - TestFailover
      - UndoTestFailover
    TestFailoverVMState:
      type: string
      description: Power state of the clone VM
      enum:
      - STOPPED
      - RUNNING
      - SUSPENDED
      - UNKNOWN
      - ARCHIVED
      - EXPIRED
      - UNAVAILABLE
      - CREATING
      - CLONING
      - CREATING_SNAPSHOT
      - REVERTING_SNAPSHOT
      - DELETING_SNAPSHOT
      - STARTING
      - STOPPING
      - SUSPENDING
      - RESTARTING
      - RECOVERING
      - RETRIEVING
    TestFailoverVirtualMachines:
      title: TestFailoverVirtualMachines
      type: object
      properties:
        name:
          type: string
          description: The name of the clone VM
        state:
          $ref: "#/components/schemas/TestFailoverVMState"
        ipAddress:
          type: string
          description: The IP address of the clone VM
        operatingSystem:
          type: string
          description: Name of operating system of VM
        creator:
          $ref: "#/components/schemas/IdNameGUID"
        expirationTime:
          type: integer
          description: Expiration timestamp of cloned VM in unix time (epoch) format
          format: int32
      description: Test failover virtual machine details
      example:
        creator:
          GUID: GUID
          name: name
          id: 0
        expirationTime: 0
        name: name
        ipAddress: ipAddress
        state: STOPPED
        operatingSystem: operatingSystem
    FailoverGroupHypervisorType:
      type: string
      description: The type of entity is used
      nullable: true
      enum:
      - CLIENT_GROUP
      - CLIENT
    FailoverGroupHypervisor:
      type: object
      properties:
        id:
          type: integer
          description: The Id of client/client group
          format: int32
        name:
          type: string
          description: The name of the hypervisor client/client group
          nullable: true
        type:
          $ref: "#/components/schemas/FailoverGroupHypervisorType"
        vendor:
          $ref: "#/components/schemas/VSVendor"
      description: The hypervisor client/client group information for failover groups
      example:
        vendor: NONE
        name: name
        id: 6
        type: CLIENT_GROUP
    FailoverGroupSource:
      type: string
      description: Failover group type
      enum:
      - ARRAY_REPLICATION_TEST_FAILOVER
      - ARRAY_REPLICATION_FAILOVER
      - REPLICATION
      - BACKUP
    FailoverGroupOperationType:
      type: string
      description: Failover group operation type
      nullable: true
      enum:
      - LIVE_MOUNT
      - LIVE_SYNC
      - RESTORE
      - LIVE_RECOVERY
      - FAILOVER
      - VIRTUAL_LAB
      - ORACLE_EBS_APP
      - GENERIC_ENTERPRISE_APP
      - TEST_FAILOVER
    AutomaticFailoverMonitoringStatus:
      type: string
      description: Automatic failover monitoring status
      enum:
      - DISABLED
      - FAILED
      - ENABLED
      - PAUSED
      - STARTING
      - NOT_CONFIGURED
    AutomaticFailoverStatus:
      type: string
      description: Automatic failover configuration status
      enum:
      - OFFLINE
      - ONLINE
    FailoverGroupAutomaticFailover:
      type: object
      properties:
        machines:
          type: array
          items:
            $ref: "#/components/schemas/IdName"
        monitoringStatus:
          $ref: "#/components/schemas/AutomaticFailoverMonitoringStatus"
        outageDelayTimeInMinutes:
          minimum: 0
          type: integer
          description: Delay time before declaring outage (in minutes)
          format: int32
        status:
          $ref: "#/components/schemas/AutomaticFailoverStatus"
      description: The failover group automatic failover information of access nodes
        and monitoring status
      nullable: true
      example:
        monitoringStatus: DISABLED
        outageDelayTimeInMinutes: 0
        machines:
        - null
        - null
        status: OFFLINE
    ESXServerMapping:
      type: object
      properties:
        sourceServer:
          type: string
          description: The name of source ESX server
        destinationServer:
          type: string
          description: The name of destination ESX server
        networkSettings:
          type: array
          description: The list of all source network interface to destination network
            interface mapping
          items:
            $ref: "#/components/schemas/NetworkSetting"
      description: An entity to represent one-one ESX server mapping rule
      example:
        destinationServer: destinationServer
        networkSettings:
        - sourceId: sourceId
          destination: destination
          source: source
        - sourceId: sourceId
          destination: destination
          source: source
        sourceServer: sourceServer
    OSType:
      type: string
      description: OS types
      enum:
      - WINDOWS
      - UNIX
    DROperationScriptPathType:
      type: string
      description: The type of path being used for DR operation script
      enum:
      - UNC
      - LOCAL
    DROperationScript:
      type: object
      properties:
        path:
          type: string
          description: The path of the script to be executed. Can be local path on
            VM or UNC path accessible by access node
        type:
          $ref: "#/components/schemas/DROperationScriptPathType"
        scriptCredentials:
          $ref: "#/components/schemas/guestCredentialInfo"
        guestCredentials:
          $ref: "#/components/schemas/guestCredentialInfo"
        guid:
          type: string
          description: Unique script identifier string
        scriptContent:
          type: string
          description: Content of the script to be executed
        scriptName:
          type: string
          description: Name of the script
        reset:
          type: boolean
          description: "On set to true, resets the script to empty"
        osType:
          $ref: "#/components/schemas/OSType"
      description: DR operation scripting information
      example:
        scriptContent: scriptContent
        path: path
        guestCredentials: null
        scriptCredentials: null
        osType: WINDOWS
        guid: guid
        scriptName: scriptName
        reset: true
        type: UNC
    FailoverGroupReplicationPair:
      type: object
      properties:
        id:
          type: integer
          description: The ID of the replication pair
          format: int32
        sourceId:
          type: integer
          description: The id of the source machine
          format: int32
        sourceName:
          type: string
          description: The name of the source machine
        destinationId:
          type: integer
          description: The id of the destination machine
          format: int32
        destinationName:
          type: string
          description: The name of the destination machine
        GUID:
          type: string
          description: The GUID of the source of replication pair
        priority:
          type: integer
          description: The priority of the replication pair for DR operation in failover
            group. The lower values signify higher priority
          format: int32
        copyPrecedence:
          minimum: 0
          type: integer
          description: The copy precedence of replication pair
          format: int32
          nullable: true
        preFailoverScript:
          $ref: "#/components/schemas/DROperationScript"
        postFailoverScript:
          $ref: "#/components/schemas/DROperationScript"
        preFailbackScript:
          $ref: "#/components/schemas/DROperationScript"
        postFailbackScript:
          $ref: "#/components/schemas/DROperationScript"
      description: A replication pair for failover group
      example:
        sourceId: 7
        copyPrecedence: 0
        preFailoverScript:
          scriptContent: scriptContent
          path: path
          guestCredentials: null
          scriptCredentials: null
          osType: WINDOWS
          guid: guid
          scriptName: scriptName
          reset: true
          type: UNC
        postFailbackScript: null
        destinationName: destinationName
        postFailoverScript: null
        GUID: GUID
        id: 2
        sourceName: sourceName
        destinationId: 9
        priority: 3
        preFailbackScript: null
    FailoverGroupArrayReplicationPair:
      type: object
      properties:
        id:
          type: integer
          description: The ID of the array replication pair
          format: int32
        sourceId:
          type: integer
          description: The id of the source machine
          format: int32
        sourceName:
          type: string
          description: The name of the source machine
        destinationId:
          type: integer
          description: The id of the destination machine
          format: int32
        destinationName:
          type: string
          description: The name of the destination machine
        GUID:
          type: string
          description: The GUID of the source of array replication pair
        priority:
          type: integer
          description: The priority of the array replication pair for DR operation
            in failover group. The lower values signify higher priority
          format: int32
        ipSettings:
          type: array
          description: The settings for IP address mapping
          items:
            $ref: "#/components/schemas/IpAddressSettingVMWareCreate"
        hostname:
          type: string
          description: The hostname specified for the destination machine
      description: An array replication pair for failover group
      example:
        sourceId: 7
        hostname: hostname
        destinationName: destinationName
        ipSettings:
        - sourceSubnetMask: sourceSubnetMask
          destinationIP: destinationIP
          destinationPreferredDNS: destinationPreferredDNS
          sourceIP: sourceIP
          destinationDefaultGateway: destinationDefaultGateway
          destinationAlternateWINS: destinationAlternateWINS
          destinationPreferredWINS: destinationPreferredWINS
          sourceDefaultGateway: sourceDefaultGateway
          destinationSubnetMask: destinationSubnetMask
          useDhcp: false
          destinationAlternateDNS: destinationAlternateDNS
        - sourceSubnetMask: sourceSubnetMask
          destinationIP: destinationIP
          destinationPreferredDNS: destinationPreferredDNS
          sourceIP: sourceIP
          destinationDefaultGateway: destinationDefaultGateway
          destinationAlternateWINS: destinationAlternateWINS
          destinationPreferredWINS: destinationPreferredWINS
          sourceDefaultGateway: sourceDefaultGateway
          destinationSubnetMask: destinationSubnetMask
          useDhcp: false
          destinationAlternateDNS: destinationAlternateDNS
        GUID: GUID
        id: 4
        sourceName: sourceName
        destinationId: 1
        priority: 1
    FailoverGroupSummary:
      title: FailoverGroupSummary
      type: object
      properties:
        id:
          type: integer
          description: Failover group ID
          format: int32
        name:
          type: string
          description: Failover group name
        source:
          $ref: "#/components/schemas/FailoverGroupSource"
        numberOfVirtualMachines:
          type: integer
          description: The number of VM pairs of failover groups
          format: int32
      description: Failover groups summary
      example:
        name: name
        id: 0
        source: ARRAY_REPLICATION_TEST_FAILOVER
        numberOfVirtualMachines: 6
    FailoverGroupsList:
      title: FailoverGroupsList
      type: object
      properties:
        failoverGroups:
          type: array
          items:
            $ref: "#/components/schemas/FailoverGroupSummary"
      description: The list of all failover groups
      example:
        failoverGroups:
        - name: name
          id: 0
          source: ARRAY_REPLICATION_TEST_FAILOVER
          numberOfVirtualMachines: 6
        - name: name
          id: 0
          source: ARRAY_REPLICATION_TEST_FAILOVER
          numberOfVirtualMachines: 6
    FailoverGroupDetails:
      title: FailoverGroupDetails
      type: object
      properties:
        id:
          type: integer
          description: Failover group Id
          format: int32
        name:
          type: string
          description: Failover group name
        sourceHypervisor:
          $ref: "#/components/schemas/FailoverGroupHypervisor"
        destinationHypervisor:
          $ref: "#/components/schemas/FailoverGroupHypervisor"
        source:
          $ref: "#/components/schemas/FailoverGroupSource"
        isApprovalRequired:
          type: boolean
          description: Whether a user approval is required for DR operations
        usersToNotify:
          type: array
          description: Users to notify/for approval of DR operations
          items:
            $ref: "#/components/schemas/IdNameDisplayNameCompany"
        operationType:
          $ref: "#/components/schemas/FailoverGroupOperationType"
        subclient:
          $ref: "#/components/schemas/IdName"
        storagePolicy:
          $ref: "#/components/schemas/IdName"
        copy:
          $ref: "#/components/schemas/IdName"
        priorityIntervalInMinutes:
          minimum: 1
          type: integer
          description: The interval between DR operations of different priorities
          format: int32
        continueDROnFailure:
          type: boolean
          description: Whether to continue to next priority on DR job failure
        recoveryTarget:
          $ref: "#/components/schemas/IdName"
        automaticFailover:
          $ref: "#/components/schemas/FailoverGroupAutomaticFailover"
        plannedFailoverSchedules:
          type: array
          description: The list of all planned failover schedules
          items:
            $ref: "#/components/schemas/PlanSchedule"
        testBootSchedules:
          type: array
          description: The list of all test boot schedules
          items:
            $ref: "#/components/schemas/PlanSchedule"
        esxServerMappings:
          type: array
          description: The list of all ESX server mappings
          nullable: true
          items:
            $ref: "#/components/schemas/ESXServerMapping"
        replicationPairs:
          type: array
          description: List of all replication pairs that are part of the failover
            group
          nullable: true
          items:
            $ref: "#/components/schemas/FailoverGroupReplicationPair"
        arrayReplicationPairs:
          type: array
          description: List of all array replication pairs for failover group
          nullable: true
          items:
            $ref: "#/components/schemas/FailoverGroupArrayReplicationPair"
        script:
          $ref: "#/components/schemas/ReplicationGroupScript"
      description: Failover group details
      example:
        recoveryTarget: null
        plannedFailoverSchedules:
        - scheduleName: scheduleName
          scheduleOption:
            daysBetweenAutoConvert: 8
            logsDiskUtilizationPercent: 6
            minBackupIntervalInMins: 6
            logFilesThreshold: 3
            commitFrequencyInHours: 6
            jobRunningTimeInMins: 9
            o365ItemSelectionOption: SELECT_ALL
            useDiskCacheForLogBackups: true
          policyId: 4
          isRetentionBasedSyntheticFull: false
          isAuxCopySchedule: false
          vmOperationType: PLANNED_FAILOVER
          forDatabasesOnly: false
          additionalInfo: additionalInfo
          scheduleOperation: MODIFY
          schedulePattern:
            endDate: 1
            maxBackupIntervalInMins: 9
            timezone: null
            weekOfMonth: FIRST
            daysBetweenSyntheticFulls: 6
            exceptions:
            - onWeekOfTheMonth:
              - null
              - null
              onDates:
              - 16
              - 16
              onDayOfTheWeek:
              - null
              - null
            - onWeekOfTheMonth:
              - null
              - null
              onDates:
              - 16
              - 16
              onDayOfTheWeek:
              - null
              - null
            frequency: 1
            weeklyDays:
            - SUNDAY
            - SUNDAY
            repeatUntilTime: 0
            monthOfYear: JANUARY
            dayOfWeek: SUNDAY
            dayOfMonth: 4
            scheduleFrequencyType: MINUTES
            startTime: 6
            noOfTimes: 4
            repeatIntervalInMinutes: 1
            startDate: 7
          scheduleId: 2
          backupType: FULL
        - scheduleName: scheduleName
          scheduleOption:
            daysBetweenAutoConvert: 8
            logsDiskUtilizationPercent: 6
            minBackupIntervalInMins: 6
            logFilesThreshold: 3
            commitFrequencyInHours: 6
            jobRunningTimeInMins: 9
            o365ItemSelectionOption: SELECT_ALL
            useDiskCacheForLogBackups: true
          policyId: 4
          isRetentionBasedSyntheticFull: false
          isAuxCopySchedule: false
          vmOperationType: PLANNED_FAILOVER
          forDatabasesOnly: false
          additionalInfo: additionalInfo
          scheduleOperation: MODIFY
          schedulePattern:
            endDate: 1
            maxBackupIntervalInMins: 9
            timezone: null
            weekOfMonth: FIRST
            daysBetweenSyntheticFulls: 6
            exceptions:
            - onWeekOfTheMonth:
              - null
              - null
              onDates:
              - 16
              - 16
              onDayOfTheWeek:
              - null
              - null
            - onWeekOfTheMonth:
              - null
              - null
              onDates:
              - 16
              - 16
              onDayOfTheWeek:
              - null
              - null
            frequency: 1
            weeklyDays:
            - SUNDAY
            - SUNDAY
            repeatUntilTime: 0
            monthOfYear: JANUARY
            dayOfWeek: SUNDAY
            dayOfMonth: 4
            scheduleFrequencyType: MINUTES
            startTime: 6
            noOfTimes: 4
            repeatIntervalInMinutes: 1
            startDate: 7
          scheduleId: 2
          backupType: FULL
        storagePolicy: null
        testBootSchedules:
        - null
        - null
        arrayReplicationPairs:
        - sourceId: 7
          hostname: hostname
          destinationName: destinationName
          ipSettings:
          - sourceSubnetMask: sourceSubnetMask
            destinationIP: destinationIP
            destinationPreferredDNS: destinationPreferredDNS
            sourceIP: sourceIP
            destinationDefaultGateway: destinationDefaultGateway
            destinationAlternateWINS: destinationAlternateWINS
            destinationPreferredWINS: destinationPreferredWINS
            sourceDefaultGateway: sourceDefaultGateway
            destinationSubnetMask: destinationSubnetMask
            useDhcp: false
            destinationAlternateDNS: destinationAlternateDNS
          - sourceSubnetMask: sourceSubnetMask
            destinationIP: destinationIP
            destinationPreferredDNS: destinationPreferredDNS
            sourceIP: sourceIP
            destinationDefaultGateway: destinationDefaultGateway
            destinationAlternateWINS: destinationAlternateWINS
            destinationPreferredWINS: destinationPreferredWINS
            sourceDefaultGateway: sourceDefaultGateway
            destinationSubnetMask: destinationSubnetMask
            useDhcp: false
            destinationAlternateDNS: destinationAlternateDNS
          GUID: GUID
          id: 4
          sourceName: sourceName
          destinationId: 1
          priority: 1
        - sourceId: 7
          hostname: hostname
          destinationName: destinationName
          ipSettings:
          - sourceSubnetMask: sourceSubnetMask
            destinationIP: destinationIP
            destinationPreferredDNS: destinationPreferredDNS
            sourceIP: sourceIP
            destinationDefaultGateway: destinationDefaultGateway
            destinationAlternateWINS: destinationAlternateWINS
            destinationPreferredWINS: destinationPreferredWINS
            sourceDefaultGateway: sourceDefaultGateway
            destinationSubnetMask: destinationSubnetMask
            useDhcp: false
            destinationAlternateDNS: destinationAlternateDNS
          - sourceSubnetMask: sourceSubnetMask
            destinationIP: destinationIP
            destinationPreferredDNS: destinationPreferredDNS
            sourceIP: sourceIP
            destinationDefaultGateway: destinationDefaultGateway
            destinationAlternateWINS: destinationAlternateWINS
            destinationPreferredWINS: destinationPreferredWINS
            sourceDefaultGateway: sourceDefaultGateway
            destinationSubnetMask: destinationSubnetMask
            useDhcp: false
            destinationAlternateDNS: destinationAlternateDNS
          GUID: GUID
          id: 4
          sourceName: sourceName
          destinationId: 1
          priority: 1
        source: ARRAY_REPLICATION_TEST_FAILOVER
        sourceHypervisor:
          vendor: NONE
          name: name
          id: 6
          type: CLIENT_GROUP
        automaticFailover:
          monitoringStatus: DISABLED
          outageDelayTimeInMinutes: 0
          machines:
          - null
          - null
          status: OFFLINE
        continueDROnFailure: true
        script:
          preFailover: null
          postFailover: null
          preFailback: null
          postFailback: null
        destinationHypervisor: null
        isApprovalRequired: true
        usersToNotify:
        - displayName: displayName
          name: name
          company:
            name: name
            id: 0
          id: 1
        - displayName: displayName
          name: name
          company:
            name: name
            id: 0
          id: 1
        subclient: null
        name: name
        operationType: LIVE_MOUNT
        id: 0
        copy: null
        esxServerMappings:
        - destinationServer: destinationServer
          networkSettings:
          - sourceId: sourceId
            destination: destination
            source: source
          - sourceId: sourceId
            destination: destination
            source: source
          sourceServer: sourceServer
        - destinationServer: destinationServer
          networkSettings:
          - sourceId: sourceId
            destination: destination
            source: source
          - sourceId: sourceId
            destination: destination
            source: source
          sourceServer: sourceServer
        priorityIntervalInMinutes: 1
        replicationPairs:
        - sourceId: 7
          copyPrecedence: 0
          preFailoverScript:
            scriptContent: scriptContent
            path: path
            guestCredentials: null
            scriptCredentials: null
            osType: WINDOWS
            guid: guid
            scriptName: scriptName
            reset: true
            type: UNC
          postFailbackScript: null
          destinationName: destinationName
          postFailoverScript: null
          GUID: GUID
          id: 2
          sourceName: sourceName
          destinationId: 9
          priority: 3
          preFailbackScript: null
        - sourceId: 7
          copyPrecedence: 0
          preFailoverScript:
            scriptContent: scriptContent
            path: path
            guestCredentials: null
            scriptCredentials: null
            osType: WINDOWS
            guid: guid
            scriptName: scriptName
            reset: true
            type: UNC
          postFailbackScript: null
          destinationName: destinationName
          postFailoverScript: null
          GUID: GUID
          id: 2
          sourceName: sourceName
          destinationId: 9
          priority: 3
          preFailbackScript: null
    FailoverGroupEligibleMachineList:
      title: FailoverGroupEligibleMachineList
      type: object
      properties:
        replicationPairs:
          type: array
          description: The list of all replication pairs eligible to be added to failover
            group with replication source
          nullable: true
          items:
            $ref: "#/components/schemas/FailoverGroupReplicationPair"
        arrayReplicationPairs:
          type: array
          description: List of all array replication pairs for failover group that
            are eligible to be added
          nullable: true
          items:
            $ref: "#/components/schemas/FailoverGroupArrayReplicationPair"
      description: The list of all machines that are eligible to be added to failover
        group
      example:
        arrayReplicationPairs:
        - sourceId: 7
          hostname: hostname
          destinationName: destinationName
          ipSettings:
          - sourceSubnetMask: sourceSubnetMask
            destinationIP: destinationIP
            destinationPreferredDNS: destinationPreferredDNS
            sourceIP: sourceIP
            destinationDefaultGateway: destinationDefaultGateway
            destinationAlternateWINS: destinationAlternateWINS
            destinationPreferredWINS: destinationPreferredWINS
            sourceDefaultGateway: sourceDefaultGateway
            destinationSubnetMask: destinationSubnetMask
            useDhcp: false
            destinationAlternateDNS: destinationAlternateDNS
          - sourceSubnetMask: sourceSubnetMask
            destinationIP: destinationIP
            destinationPreferredDNS: destinationPreferredDNS
            sourceIP: sourceIP
            destinationDefaultGateway: destinationDefaultGateway
            destinationAlternateWINS: destinationAlternateWINS
            destinationPreferredWINS: destinationPreferredWINS
            sourceDefaultGateway: sourceDefaultGateway
            destinationSubnetMask: destinationSubnetMask
            useDhcp: false
            destinationAlternateDNS: destinationAlternateDNS
          GUID: GUID
          id: 4
          sourceName: sourceName
          destinationId: 1
          priority: 1
        - sourceId: 7
          hostname: hostname
          destinationName: destinationName
          ipSettings:
          - sourceSubnetMask: sourceSubnetMask
            destinationIP: destinationIP
            destinationPreferredDNS: destinationPreferredDNS
            sourceIP: sourceIP
            destinationDefaultGateway: destinationDefaultGateway
            destinationAlternateWINS: destinationAlternateWINS
            destinationPreferredWINS: destinationPreferredWINS
            sourceDefaultGateway: sourceDefaultGateway
            destinationSubnetMask: destinationSubnetMask
            useDhcp: false
            destinationAlternateDNS: destinationAlternateDNS
          - sourceSubnetMask: sourceSubnetMask
            destinationIP: destinationIP
            destinationPreferredDNS: destinationPreferredDNS
            sourceIP: sourceIP
            destinationDefaultGateway: destinationDefaultGateway
            destinationAlternateWINS: destinationAlternateWINS
            destinationPreferredWINS: destinationPreferredWINS
            sourceDefaultGateway: sourceDefaultGateway
            destinationSubnetMask: destinationSubnetMask
            useDhcp: false
            destinationAlternateDNS: destinationAlternateDNS
          GUID: GUID
          id: 4
          sourceName: sourceName
          destinationId: 1
          priority: 1
        replicationPairs:
        - sourceId: 7
          copyPrecedence: 0
          preFailoverScript:
            scriptContent: scriptContent
            path: path
            guestCredentials: null
            scriptCredentials: null
            osType: WINDOWS
            guid: guid
            scriptName: scriptName
            reset: true
            type: UNC
          postFailbackScript: null
          destinationName: destinationName
          postFailoverScript: null
          GUID: GUID
          id: 2
          sourceName: sourceName
          destinationId: 9
          priority: 3
          preFailbackScript: null
        - sourceId: 7
          copyPrecedence: 0
          preFailoverScript:
            scriptContent: scriptContent
            path: path
            guestCredentials: null
            scriptCredentials: null
            osType: WINDOWS
            guid: guid
            scriptName: scriptName
            reset: true
            type: UNC
          postFailbackScript: null
          destinationName: destinationName
          postFailoverScript: null
          GUID: GUID
          id: 2
          sourceName: sourceName
          destinationId: 9
          priority: 3
          preFailbackScript: null
    ModifyFailoverGroupRequest:
      title: ModifyFailoverGroup
      type: object
      properties:
        name:
          type: string
          description: Failover Group name
        isApprovalRequired:
          type: boolean
          description: Whether a user approval is required for DR operations
        usersToNotify:
          type: array
          description: Users to notify/for approval of DR operations
          items:
            $ref: "#/components/schemas/IdNameDisplayNameCompany"
        priorityIntervalInMinutes:
          minimum: 1
          type: integer
          description: The interval between DR operations of different priorities
          format: int32
        esxServerMappings:
          type: array
          description: The list of all ESX server mappings
          nullable: true
          items:
            $ref: "#/components/schemas/ESXServerMapping"
        continueDROnFailure:
          type: boolean
          description: Whether to continue to next priority on DR job failure
        recoveryTarget:
          $ref: "#/components/schemas/IdName"
        replicationPairs:
          type: array
          description: List of all replication pairs that are part of the failover
            group
          nullable: true
          items:
            $ref: "#/components/schemas/FailoverGroupReplicationPair"
        arrayReplicationPairs:
          type: array
          description: List of all array replication pairs for failover group
          nullable: true
          items:
            $ref: "#/components/schemas/FailoverGroupArrayReplicationPair"
        script:
          $ref: "#/components/schemas/ReplicationGroupScript"
      description: Modify failover group request
    GCPInstanceList:
      title: GCPInstanceList
      type: object
      properties:
        error:
          $ref: "#/components/schemas/GenericResp"
        instances:
          type: array
          items:
            $ref: "#/components/schemas/GCPInstances"
      example:
        instances:
        - instanceName: instanceName
          displayName: displayName
          projectName: projectName
        - instanceName: instanceName
          displayName: displayName
          projectName: projectName
        error:
          errorMessage: errorMessage
          errorCode: 0
    GCPDatabaseList:
      title: GCPDatabaseList
      type: object
      properties:
        error:
          $ref: "#/components/schemas/GenericResp"
        databases:
          type: array
          items:
            $ref: "#/components/schemas/GCPDatabases"
      example:
        databases:
        - name: name
        - name: name
        error:
          errorMessage: errorMessage
          errorCode: 0
    GCPInstances:
      title: ""
      type: object
      properties:
        projectName:
          type: string
          description: google cloud project the instance belongs to
        instanceName:
          type: string
          description: the google spanner instance name
        displayName:
          type: string
          description: "Returns the name to be displayed on UI in the format: instanceName\
            \ [projectName]"
      example:
        instanceName: instanceName
        displayName: displayName
        projectName: projectName
    GCPDatabases:
      title: ""
      type: object
      properties:
        name:
          type: string
          description: the google spanner database name
      example:
        name: name
    VirtualMachinecontent:
      title: VirtualMachinecontent
      type: object
      properties:
        name:
          type: string
          description: name of the VM to be added as content
          x-terraform-set-key: true
        GUID:
          type: string
          description: GUID of the VM to be added as content
          x-terraform-set-key: true
        type:
          $ref: "#/components/schemas/VMContentType"
        guestCredentialAssocId:
          type: integer
          description: Credential association ID given to link entity with credential
            id.
          format: int32
        guestCredentials:
          $ref: "#/components/schemas/VMGuestCredentials"
        existingCredential:
          $ref: "#/components/schemas/VMExistingCredential"
      example:
        guestCredentialAssocId: 1
        guestCredentials:
          password: password
          userName: userName
        name: name
        GUID: GUID
        type: NONE
        existingCredential:
          credentialId: 1
          credentialName: credentialName
    MatchRuleContent:
      title: MatchRule
      type: string
      description: Enum which specifies the whether to match all rules or any of the
        rules
      enum:
      - ALL
      - ANY
    RuleContent:
      title: RuleContent
      type: object
      properties:
        name:
          type: string
          description: name of the VM to be added as content
          x-terraform-set-key: true
        type:
          $ref: "#/components/schemas/VMContentType"
        value:
          type: string
          description: value for the few type of VM Content like powerstate
        condition:
          $ref: "#/components/schemas/RuleOperationType"
        GUID:
          type: string
          description: GUID of the entity to be added as content
        displayName:
          type: string
          description: The display name of the entity to be added
      example:
        condition: CONTAINS
        displayName: displayName
        name: name
        GUID: GUID
        type: null
        value: value
    RuleGroupContent:
      title: RuleContent
      type: object
      properties:
        matchRule:
          $ref: "#/components/schemas/MatchRuleContent"
        rules:
          type: array
          items:
            $ref: "#/components/schemas/RuleContent"
      example:
        matchRule: ALL
        rules:
        - condition: CONTAINS
          displayName: displayName
          name: name
          GUID: GUID
          type: null
          value: value
        - condition: CONTAINS
          displayName: displayName
          name: name
          GUID: GUID
          type: null
          value: value
    RuleOperationType:
      title: RuleOperationType
      type: string
      description: Operation type for VM rules/filters
      enum:
      - CONTAINS
      - DOES_NOT_CONTAIN
      - DOES_NOT_EQUAL
      - ENDS_WITH
      - EQUALS
      - STARTS_WITH
    vmContent:
      title: RuleContent
      type: object
      properties:
        overwrite:
          type: boolean
          description: "True if content in vmgroup has to be overwritten, by default\
            \ it will append the content"
          default: false
        virtualMachines:
          type: array
          items:
            $ref: "#/components/schemas/VirtualMachinecontent"
          x-terraform-include: false
        ruleGroups:
          type: array
          items:
            $ref: "#/components/schemas/RuleGroupContent"
          x-terraform-computed: false
      example:
        ruleGroups:
        - matchRule: ALL
          rules:
          - condition: CONTAINS
            displayName: displayName
            name: name
            GUID: GUID
            type: null
            value: value
          - condition: CONTAINS
            displayName: displayName
            name: name
            GUID: GUID
            type: null
            value: value
        - matchRule: ALL
          rules:
          - condition: CONTAINS
            displayName: displayName
            name: name
            GUID: GUID
            type: null
            value: value
          - condition: CONTAINS
            displayName: displayName
            name: name
            GUID: GUID
            type: null
            value: value
        virtualMachines:
        - guestCredentialAssocId: 1
          guestCredentials:
            password: password
            userName: userName
          name: name
          GUID: GUID
          type: NONE
          existingCredential:
            credentialId: 1
            credentialName: credentialName
        - guestCredentialAssocId: 1
          guestCredentials:
            password: password
            userName: userName
          name: name
          GUID: GUID
          type: NONE
          existingCredential:
            credentialId: 1
            credentialName: credentialName
        overwrite: false
    vmFilter:
      title: vmFiltersummary
      type: object
      properties:
        overwrite:
          type: boolean
          description: "True if content in vmgroup has to be overwritten, by default\
            \ it will append the content"
          default: false
        type:
          $ref: "#/components/schemas/VMContentType"
        op:
          $ref: "#/components/schemas/RuleOperationType"
        name:
          type: string
          description: The string to be filtered against
        GUID:
          type: string
          description: GUID of the VM to be filtered
        customAttributeName:
          type: string
          description: Attribute name to check if filter type is VMCustomAttribute
        description:
          type: string
          description: Description for filter rule given by user
    CreatevmGroupReq:
      title: CreatevmGroupReq
      required:
      - Hypervisor
      - content
      - name
      - plan
      type: object
      properties:
        name:
          type: string
          description: 'subclient name '
        Hypervisor:
          $ref: "#/components/schemas/IdName"
        content:
          $ref: "#/components/schemas/vmContent"
        plan:
          $ref: "#/components/schemas/IdName"
        storage:
          $ref: "#/components/schemas/IdName"
        enableIntellisnap:
          type: boolean
          description: True if Intellisnap has to be  enabled
          default: false
          x-terraform-include: false
        Meditech:
          $ref: "#/components/schemas/meditechPropResp"
      description: ""
    UpdatevmGroupReq:
      title: UpdatevmGroupReq
      type: object
      properties:
        newName:
          type: string
          description: 'subclient name '
          x-terraform-mapping: name
        content:
          $ref: "#/components/schemas/vmContent"
        plan:
          $ref: "#/components/schemas/IdName"
        storage:
          $ref: "#/components/schemas/IdName"
        filters:
          $ref: "#/components/schemas/vmContent"
        diskFilters:
          $ref: "#/components/schemas/vmDiskFilterProp"
        securityAssociations:
          type: array
          items:
            $ref: "#/components/schemas/SecurityAssoc"
        settings:
          $ref: "#/components/schemas/vmGroupSettings"
        snapshotManagement:
          $ref: "#/components/schemas/snapCopyInfo"
        activityControl:
          $ref: "#/components/schemas/ActivityControlOptions"
        applicationValidation:
          $ref: "#/components/schemas/vmAppValidation"
        enableFileIndexing:
          type: boolean
          description: True if file indexing needs to be enabled
          default: false
        timeZone:
          $ref: "#/components/schemas/IdName"
        accessNode:
          type: array
          items:
            $ref: "#/components/schemas/accessNodeModel"
        meditechSystems:
          $ref: "#/components/schemas/meditechPropResp"
      description: ""
    KubernetesCloudStorage:
      type: object
      properties:
        region:
          $ref: "#/components/schemas/IdName"
        storagePool:
          $ref: "#/components/schemas/IdName"
      description: Used to store the cloud storage info of the Kubernetes cluster
    CreateKubernetesCluster:
      required:
      - endpointurl
      - hypervisorType
      allOf:
      - $ref: "#/components/schemas/CreateHypervisorGroupReq"
      - type: object
        properties:
          hypervisorType:
            type: string
            enum:
            - KUBERNETES
          endpointurl:
            type: string
            description: Endpoint url to connect
          serviceName:
            type: string
            description: Service Name to connect in case authentication mode is service
              account
          secretKey:
            type: string
            description: SecretKey to connect in case authentication mode is service
              account
          userName:
            type: string
            description: Username to connect in case authentication mode is Username
              and password
          password:
            type: string
            description: Username to connect in case authentication mode is Username
              and password
          k8ServiceType:
            type: string
            enum:
            - ONPREM
            - AZURE
            - AMAZON
          cloudStorage:
            $ref: "#/components/schemas/KubernetesCloudStorage"
    VSVendor:
      type: string
      format: ""
      enum:
      - NONE
      - VMW
      - MICROSOFT
      - XEN_SERVER
      - AMAZON
      - AZURE
      - REDHAT
      - AZURE_V2
      - SCVMM
      - NUTANIX
      - ORACLE_VM
      - DOCKER
      - OPENSTACK
      - ORACLE_CLOUD
      - FUSIONCOMPUTE
      - VCLOUD
      - GOOGLE_CLOUD
      - AZURE_STACK
      - ALIBABA_CLOUD
      - ORACLE_CLOUD_INFRASTRUCTURE
      - KUBERNETES
      - REDHAT_OPENSHIFT
      - MONGODB_ATLAS
      - PROXMOX
      - KUBERNETES_AKS
      - AZURE_STACK_HCI
    VMContentFilter:
      type: string
      enum:
      - RESOURCE_POOL
      - DATACENTER
      - FOLDER
      - CLUSTER
      - DATASTORE
      - VM
      - TAG
      - TAG_CATEGORY
    VMContentType:
      type: string
      format: ""
      enum:
      - NONE
      - SERVER
      - RES_POOL
      - VAPP
      - DATACENTER
      - FOLDER
      - CLUSTER
      - DATASTORE
      - DATASTORE_CLUSTER
      - VM
      - VM_NAME
      - VM_GUEST_OS
      - VM_GUEST_HOST_NAME
      - CLUSTER_SHARED_VOLUMES
      - LOCAL_DISK
      - CLUSTER_DISK
      - UNPROTECTED_VMS
      - ROOT
      - FILE_SERVER
      - SMB_SHARE
      - TYPES_FOLDER
      - VM_FOLDER
      - SERVER_FOLDER
      - TEMPLATE_FOLDER
      - STORAGE_REPOSITORY_FOLDER
      - VAPPFOLDER
      - DATACENTER_FOLDER
      - CLUSTER_FOLDER
      - VM_POWER_STATE
      - VM_NOTES
      - VM_CUSTOM_ATTRIBUTE
      - NETWORK
      - USER
      - VM_TEMPLATE
      - TAG
      - TAG_CATEGORY
      - SUBCLIENT
      - CLIENT_GROUP
      - PROTECTION_DOMAIN
      - CONSISTENCY_GROUP
      - INSTANCE_SIZE
      - ORGANIZATION
      - IMAGES
      - STORAGE_POLICY
      - DATABASE
      - TABLE
      - PROJECT
      - SELECTOR
      - MANAGED_BY
      - REPLICATION_MODE
      - METADATATAG
      - CATALOG
      - VAPPTEMPLATE
      - VOLUME
    vmBackupInfo:
      type: object
      properties:
        vmPendingCount:
          type: integer
          description: VMs pending for Backup
          format: int32
        vmProtectedCount:
          type: integer
          description: Protected vm Count
          format: int32
        vmNotProtectedCount:
          type: integer
          description: VM Missed to protect count
          format: int32
        vmNeverBackedUpCount:
          type: integer
          description: vm never Backed up count
          format: int32
        vmBackedUpWithErrorCount:
          type: integer
          description: VM Backed up with error count
          format: int32
        vmTotalCount:
          type: integer
          description: ' Total vm Count'
          format: int32
      example:
        vmPendingCount: 1
        vmProtectedCount: 5
        vmNotProtectedCount: 5
        vmNeverBackedUpCount: 2
        vmBackedUpWithErrorCount: 7
        vmTotalCount: 9
    snapCopyInfo:
      type: object
      properties:
        enableHardwareSnapshot:
          type: boolean
          description: True if hardware snapshot is enabled
          default: false
        snapEngine:
          $ref: "#/components/schemas/IdName"
        snapMountESXHost:
          type: string
          description: Name of ESX Host
        isIndependentDisksEnabled:
          type: boolean
          description: True if independent disk option is enabled
        isRawDeviceMapsEnabled:
          type: boolean
          description: True if raw device maps option is enabled
        useSeparateProxyForSnapToTape:
          type: boolean
          description: True if separate proxy client is used for snap to tape
        snapMountProxy:
          $ref: "#/components/schemas/IdName"
        vmApplicationUserName:
          type: string
          description: Virtual machine application user name
        backupCopyInterface:
          $ref: "#/components/schemas/backupCopyInterface"
      example:
        useSeparateProxyForSnapToTape: true
        snapEngine: null
        isIndependentDisksEnabled: true
        backupCopyInterface: FILE_SYSTEM
        enableHardwareSnapshot: false
        snapMountProxy: null
        vmApplicationUserName: vmApplicationUserName
        snapMountESXHost: snapMountESXHost
        isRawDeviceMapsEnabled: true
    backupCopyInterface:
      type: string
      enum:
      - FILE_SYSTEM
      - RMAN
      - VOLUME_COPY
    vmBackupType:
      type: string
      enum:
      - APPLICATION_AWARE
      - FILE_SYSTEM_AND_APPLICATION_CONSISTENT
      - CRASH_CONSISTENT
      - APP_BASED_BACKUP
      - INHERITED
    transportMode:
      type: string
      description: transport mode based on environment. Values are case sensitive
      default: AUTO
      enum:
      - AUTO
      - SAN
      - HOT_ADD
      - NAS
      - NBD_SSL
      - NBD
    resourceTag:
      title: resourceTag
      type: object
      properties:
        name:
          type: string
          description: represents name of the tag
        value:
          type: string
          description: represents value of the tag
      description: represents tag name and tag value of a resource
      example:
        name: name
        value: value
    vmGroupSettings:
      type: object
      properties:
        useChangedBlockTrackingOnVM:
          type: boolean
          description: True if Changed Block Tracking is enabled
          default: true
        customSnapshotResourceGroup:
          type: string
          description: Custom snapshot resource group name for Azure
        customSnapshotTags:
          type: array
          description: represents custom tags to be set on snapshots
          items:
            $ref: "#/components/schemas/resourceTag"
        regionalSnapshot:
          type: boolean
          description: True when snapshot storage location is regional
          default: true
        autoDetectVMOwner:
          type: boolean
          description: True if auto detect VM Owner enabled
        allowEmptySubclient:
          type: boolean
          description: True if empty subclient is allowed
        noOfReaders:
          type: integer
          description: Number of readers for backup
          format: int32
          default: 5
        isVMGroupDiskFiltersIncluded:
          type: boolean
          description: Is VM group disk filters included in VM instance disk filters
        vmBackupType:
          $ref: "#/components/schemas/vmBackupType"
        isApplicationAware:
          type: boolean
          description: Is the VM App Aware
        guestCredentials:
          $ref: "#/components/schemas/guestCredentialInfo"
        useVMCheckpointSetting:
          type: boolean
          description: True if use VM CheckPoint setting is enabled
          default: false
        transportMode:
          $ref: "#/components/schemas/transportMode"
        datastoreFreespaceCheck:
          type: boolean
          description: True if Datastore Free space check is enabled
          default: true
        datastoreFreespaceRequired:
          type: integer
          description: precentage of datastore free space check value
          format: int32
          default: 10
        collectFileDetailsforGranularRecovery:
          type: boolean
          description: True if metadata collection is enabled. Only applicable for
            Indexing v1
          default: false
        collectFileDetailsFromSnapshotCopy:
          type: boolean
          description: True if metadata collection is enabled for intellisnap jobs.
            Only applicable for Indexing v1
          default: false
        jobStartTime:
          type: integer
          description: Start Time for the VM Group Job
          format: int32
        crossAccount:
          $ref: "#/components/schemas/AmazonCrossAccount"
        quiesceGuestFileSystemAndApplications:
          type: boolean
          description: True if VM backup type is File system and application consistent
        useBackupsetDiskFilters:
          type: boolean
          description: True if use of backupset disk filters is allowed
      example:
        autoDetectVMOwner: true
        useBackupsetDiskFilters: true
        quiesceGuestFileSystemAndApplications: true
        collectFileDetailsforGranularRecovery: false
        noOfReaders: 1
        useChangedBlockTrackingOnVM: true
        jobStartTime: 7
        useVMCheckpointSetting: false
        customSnapshotResourceGroup: customSnapshotResourceGroup
        regionalSnapshot: true
        guestCredentials:
          credentials:
            password: password
            name: name
          savedCredentials: null
        vmBackupType: APPLICATION_AWARE
        isVMGroupDiskFiltersIncluded: true
        datastoreFreespaceCheck: true
        allowEmptySubclient: true
        datastoreFreespaceRequired: 6
        customSnapshotTags:
        - name: name
          value: value
        - name: name
          value: value
        isApplicationAware: true
        transportMode: AUTO
        collectFileDetailsFromSnapshotCopy: false
        crossAccount:
          shareOnly: true
          fullCopy: true
          destinationAccount: null
    AmazonCrossAccount:
      title: AmazonCrossAccount
      type: object
      properties:
        shareOnly:
          type: boolean
          description: True if replicate and copy or sharing of amazon snapshot to
            different amazon account in same or different geographic location is enabled
        fullCopy:
          type: boolean
          description: True if full copy of amazon snapshot to different amazon account
            is enabled
        destinationAccount:
          $ref: "#/components/schemas/IdName"
      example:
        shareOnly: true
        fullCopy: true
        destinationAccount: null
    VMGroupCommonProperties:
      type: object
      properties:
        isIndexingV2:
          type: boolean
          description: True if Indexing version is 2
        isDeletedHypervisor:
          type: boolean
          description: True if the hypervisor is deleted
        isETCDSubclient:
          type: boolean
          description: True if this is a ETCD Subclient
        showFullBackupLevel:
          type: boolean
          description: True if we need to show full backup level
        indexingInfo:
          $ref: "#/components/schemas/indexingInfo"
        isHypervisorDeconfigured:
          type: boolean
          description: true if the hypervisor has been deconfigured
        hypervisorType:
          $ref: "#/components/schemas/VSVendor"
        hypervisor:
          $ref: "#/components/schemas/hypervisorvmGroupCommonProp"
        instance:
          $ref: "#/components/schemas/IdName"
        backupset:
          $ref: "#/components/schemas/IdName"
        iDataAgent:
          $ref: "#/components/schemas/IdName"
        dataBackupStoragePolicy:
          $ref: "#/components/schemas/IdName"
      example:
        dataBackupStoragePolicy: null
        isDeletedHypervisor: true
        instance: null
        isETCDSubclient: true
        hypervisor:
          activityControl: null
          name: name
          id: 6
        backupset: null
        isIndexingV2: true
        showFullBackupLevel: true
        hypervisorType: NONE
        indexingInfo:
          message: message
          status: NOT_APPLICABLE
        isHypervisorDeconfigured: true
        iDataAgent: null
    hypervisorvmGroupCommonProp:
      title: hypervisorvmGroupCommonProp
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          description: Name of the hypervisor client
        activityControl:
          $ref: "#/components/schemas/ActivityControlOptions"
      description: Common properties of hypervisor in  vmgroup
      example:
        activityControl: null
        name: name
        id: 6
    ValidationScheduleObject:
      title: ValidationScheduleObject
      type: object
      properties:
        id:
          type: integer
          format: int32
        taskId:
          type: integer
          description: Job Id for the application validation task. 0 if schedule is
            disabled
          format: int32
        description:
          type: string
          description: Description for validation schedule
        isScheduleEnabled:
          type: boolean
          description: True if application validation schedule is enabled
      description: Schedule for application validation for VM Group
      example:
        isScheduleEnabled: true
        description: description
        id: 4
        taskId: 5
    vmAppValidation:
      title: vmAppValidation
      type: object
      properties:
        validateVMBackups:
          type: boolean
          description: True if VM Backup validation is enabled
        recoveryTarget:
          $ref: "#/components/schemas/IdName"
        schedule:
          $ref: "#/components/schemas/ValidationScheduleObject"
        useSourceVmESXToMount:
          type: boolean
          description: Use Source VM ESX To Mount
        keepValidatedVMsRunning:
          type: boolean
          description: If true then validated VMs will be available until expiration
            time set on the recovery target
        maximumNoOfThreads:
          type: integer
          description: Number of backup Validation Threads
          format: int32
        customValidationScript:
          $ref: "#/components/schemas/appValidationScript"
        guestCredentials:
          $ref: "#/components/schemas/guestCredentialInfo"
        copy:
          $ref: "#/components/schemas/AppValidationSourceCopy"
      example:
        recoveryTarget: null
        schedule:
          isScheduleEnabled: true
          description: description
          id: 4
          taskId: 5
        maximumNoOfThreads: 9
        guestCredentials: null
        keepValidatedVMsRunning: true
        validateVMBackups: true
        useSourceVmESXToMount: true
        customValidationScript:
          windows:
            path: path
            UNCCredentials:
              password: password
              name: name
            UNCSavedCredentials: null
            arguments: arguments
            isDisabled: false
            isLocal: true
          unix: null
        copy:
          copyPrecedence: 6
          isSnapCopy: true
          name: name
          id: 9
          isActive: true
          backupDestination: null
    guestCredentialInfo:
      title: guestCredentialInfo
      type: object
      properties:
        savedCredentials:
          $ref: "#/components/schemas/IdName"
        credentials:
          $ref: "#/components/schemas/UserNamePassword"
      example:
        credentials:
          password: password
          name: name
        savedCredentials: null
    meditechPropResp:
      title: meditechPropResp
      type: object
      properties:
        systemName:
          type: string
          description: Meditech system name
        listenerIP:
          type: string
          description: Meditech Listener IP of FQDN name
        listenerPort:
          type: integer
          description: Meditech Listener Port
          format: int32
        MBFtimeout:
          type: integer
          description: MBF timeout (in seconds)
          format: int32
          default: 60
        userAccount:
          $ref: "#/components/schemas/UserNamePassword"
      example:
        systemName: systemName
        listenerIP: listenerIP
        userAccount: null
        listenerPort: 3
        MBFtimeout: 6
    appValidationScript:
      title: appValidationScript
      type: object
      properties:
        windows:
          $ref: "#/components/schemas/ValidationScript"
        unix:
          $ref: "#/components/schemas/ValidationScript"
      description: Custom validation script to be used during VM backup validation
      example:
        windows:
          path: path
          UNCCredentials:
            password: password
            name: name
          UNCSavedCredentials: null
          arguments: arguments
          isDisabled: false
          isLocal: true
        unix: null
    ValidationScript:
      title: ValidationScript
      type: object
      properties:
        path:
          type: string
          description: Path for the validation script
        arguments:
          type: string
          description: Arguments for the script
        isDisabled:
          type: boolean
          description: Is the script disabled
          default: false
        isLocal:
          type: boolean
          description: True if the script is local
        UNCCredentials:
          $ref: "#/components/schemas/UserNamePassword"
        UNCSavedCredentials:
          $ref: "#/components/schemas/IdName"
      example:
        path: path
        UNCCredentials:
          password: password
          name: name
        UNCSavedCredentials: null
        arguments: arguments
        isDisabled: false
        isLocal: true
    vmGroupDetailsSummary:
      title: vmGroupDetailsSummary
      type: object
      properties:
        hypervisorName:
          type: string
        lastBackupTime:
          type: integer
          description: Last Backup time of the VMGroup
          format: int32
        lastBackupSize:
          type: integer
          description: Last Backup Job Size
          format: int64
        nextBackupTime:
          type: integer
          description: Next Backup Job start time
          format: int32
        isDefaultVMGroup:
          type: boolean
          description: True if subclient is default subclient
          default: false
        backupActivityStatus:
          type: string
          description: Current backup activity status
        plan:
          $ref: "#/components/schemas/PlanIdNameType"
        region:
          $ref: "#/components/schemas/RegionInfo"
        replicationGroup:
          $ref: "#/components/schemas/IdName"
        timeZone:
          $ref: "#/components/schemas/IdName"
      example:
        lastBackupSize: 2
        isDefaultVMGroup: false
        hypervisorName: hypervisorName
        backupActivityStatus: backupActivityStatus
        nextBackupTime: 4
        replicationGroup:
          name: name
          id: 0
        timeZone: null
        region:
          displayName: displayName
          latitude: latitude
          name: name
          id: 7
          longitude: longitude
        plan:
          name: name
          subType: ANY
          id: 6
        lastBackupTime: 3
    GetVMGroupResp:
      title: GetVMGroupResp
      type: object
      properties:
        id:
          type: integer
          format: int32
          x-terraform-id: true
        name:
          type: string
          nullable: true
        status:
          type: integer
          description: subclient entity status
          format: int32
        vmBackupInfo:
          $ref: "#/components/schemas/vmBackupInfo"
        summary:
          $ref: "#/components/schemas/vmGroupDetailsSummary"
        content:
          type: array
          items:
            $ref: "#/components/schemas/vmContent"
        filters:
          type: array
          items:
            $ref: "#/components/schemas/vmContent"
        diskFilters:
          type: array
          items:
            $ref: "#/components/schemas/vmDiskFilterProp"
        lastBackup:
          $ref: "#/components/schemas/LastBackupJobInfo"
        securityAssociations:
          type: array
          items:
            $ref: "#/components/schemas/SecurityAssoc"
        settings:
          $ref: "#/components/schemas/vmGroupSettings"
        snapshotManagement:
          $ref: "#/components/schemas/snapCopyInfo"
        activityControl:
          $ref: "#/components/schemas/ActivityControlOptions"
        applicationValidation:
          $ref: "#/components/schemas/vmAppValidation"
        accessNodeList:
          $ref: "#/components/schemas/accessNodeListModel"
        commonProperties:
          $ref: "#/components/schemas/VMGroupCommonProperties"
        meditechSystems:
          $ref: "#/components/schemas/meditechPropResp"
      description: ""
      example:
        summary:
          lastBackupSize: 2
          isDefaultVMGroup: false
          hypervisorName: hypervisorName
          backupActivityStatus: backupActivityStatus
          nextBackupTime: 4
          replicationGroup:
            name: name
            id: 0
          timeZone: null
          region:
            displayName: displayName
            latitude: latitude
            name: name
            id: 7
            longitude: longitude
          plan:
            name: name
            subType: ANY
            id: 6
          lastBackupTime: 3
        activityControl:
          restoreActivityControlOptions: null
          backupActivityControlOptions:
            delayTime:
              timeZone: null
              time: 1
              value: value
            activityType: BACKUP
            enableAfterADelay: true
            enableActivityType: true
          enableBackup: true
          enableRestore: true
        settings:
          autoDetectVMOwner: true
          useBackupsetDiskFilters: true
          quiesceGuestFileSystemAndApplications: true
          collectFileDetailsforGranularRecovery: false
          noOfReaders: 1
          useChangedBlockTrackingOnVM: true
          jobStartTime: 7
          useVMCheckpointSetting: false
          customSnapshotResourceGroup: customSnapshotResourceGroup
          regionalSnapshot: true
          guestCredentials:
            credentials:
              password: password
              name: name
            savedCredentials: null
          vmBackupType: APPLICATION_AWARE
          isVMGroupDiskFiltersIncluded: true
          datastoreFreespaceCheck: true
          allowEmptySubclient: true
          datastoreFreespaceRequired: 6
          customSnapshotTags:
          - name: name
            value: value
          - name: name
            value: value
          isApplicationAware: true
          transportMode: AUTO
          collectFileDetailsFromSnapshotCopy: false
          crossAccount:
            shareOnly: true
            fullCopy: true
            destinationAccount: null
        accessNodeList:
          accessNodeMessage: accessNodeMessage
          resourcePoolName: resourcePoolName
          accessNode:
          - displayName: displayName
            name: name
            id: 8
            type: 9
          - displayName: displayName
            name: name
            id: 8
            type: 9
        diskFilters:
        - rules:
          - condition: null
            vmName: vmName
            name: name
            filterType: NONE
            overwrite: false
            value: value
            vmGuid: vmGuid
          - condition: null
            vmName: vmName
            name: name
            filterType: NONE
            overwrite: false
            value: value
            vmGuid: vmGuid
          overwrite: false
        - rules:
          - condition: null
            vmName: vmName
            name: name
            filterType: NONE
            overwrite: false
            value: value
            vmGuid: vmGuid
          - condition: null
            vmName: vmName
            name: name
            filterType: NONE
            overwrite: false
            value: value
            vmGuid: vmGuid
          overwrite: false
        vmBackupInfo:
          vmPendingCount: 1
          vmProtectedCount: 5
          vmNotProtectedCount: 5
          vmNeverBackedUpCount: 2
          vmBackedUpWithErrorCount: 7
          vmTotalCount: 9
        securityAssociations:
        - role: null
          isCreatorAssociation: true
          externalUserGroup:
            providerId: 5
            name: name
            id: 1
            providerName: providerName
          permissionList:
          - permissionId: 5
            exclude: true
            type: ALL_CATEGORIES
            categoryName: categoryName
            categoryId: 2
            permissionName: permissionName
          - permissionId: 5
            exclude: true
            type: ALL_CATEGORIES
            categoryName: categoryName
            categoryId: 2
            permissionName: permissionName
          user: null
          userGroup: null
        - role: null
          isCreatorAssociation: true
          externalUserGroup:
            providerId: 5
            name: name
            id: 1
            providerName: providerName
          permissionList:
          - permissionId: 5
            exclude: true
            type: ALL_CATEGORIES
            categoryName: categoryName
            categoryId: 2
            permissionName: permissionName
          - permissionId: 5
            exclude: true
            type: ALL_CATEGORIES
            categoryName: categoryName
            categoryId: 2
            permissionName: permissionName
          user: null
          userGroup: null
        filters:
        - null
        - null
        content:
        - ruleGroups:
          - matchRule: ALL
            rules:
            - condition: CONTAINS
              displayName: displayName
              name: name
              GUID: GUID
              type: null
              value: value
            - condition: CONTAINS
              displayName: displayName
              name: name
              GUID: GUID
              type: null
              value: value
          - matchRule: ALL
            rules:
            - condition: CONTAINS
              displayName: displayName
              name: name
              GUID: GUID
              type: null
              value: value
            - condition: CONTAINS
              displayName: displayName
              name: name
              GUID: GUID
              type: null
              value: value
          virtualMachines:
          - guestCredentialAssocId: 1
            guestCredentials:
              password: password
              userName: userName
            name: name
            GUID: GUID
            type: NONE
            existingCredential:
              credentialId: 1
              credentialName: credentialName
          - guestCredentialAssocId: 1
            guestCredentials:
              password: password
              userName: userName
            name: name
            GUID: GUID
            type: NONE
            existingCredential:
              credentialId: 1
              credentialName: credentialName
          overwrite: false
        - ruleGroups:
          - matchRule: ALL
            rules:
            - condition: CONTAINS
              displayName: displayName
              name: name
              GUID: GUID
              type: null
              value: value
            - condition: CONTAINS
              displayName: displayName
              name: name
              GUID: GUID
              type: null
              value: value
          - matchRule: ALL
            rules:
            - condition: CONTAINS
              displayName: displayName
              name: name
              GUID: GUID
              type: null
              value: value
            - condition: CONTAINS
              displayName: displayName
              name: name
              GUID: GUID
              type: null
              value: value
          virtualMachines:
          - guestCredentialAssocId: 1
            guestCredentials:
              password: password
              userName: userName
            name: name
            GUID: GUID
            type: NONE
            existingCredential:
              credentialId: 1
              credentialName: credentialName
          - guestCredentialAssocId: 1
            guestCredentials:
              password: password
              userName: userName
            name: name
            GUID: GUID
            type: NONE
            existingCredential:
              credentialId: 1
              credentialName: credentialName
          overwrite: false
        lastBackup:
          jobId: 5
          failureReason: failureReason
          time: 5
          status: NEVER_BACKED_UP
        commonProperties:
          dataBackupStoragePolicy: null
          isDeletedHypervisor: true
          instance: null
          isETCDSubclient: true
          hypervisor:
            activityControl: null
            name: name
            id: 6
          backupset: null
          isIndexingV2: true
          showFullBackupLevel: true
          hypervisorType: NONE
          indexingInfo:
            message: message
            status: NOT_APPLICABLE
          isHypervisorDeconfigured: true
          iDataAgent: null
        snapshotManagement:
          useSeparateProxyForSnapToTape: true
          snapEngine: null
          isIndependentDisksEnabled: true
          backupCopyInterface: FILE_SYSTEM
          enableHardwareSnapshot: false
          snapMountProxy: null
          vmApplicationUserName: vmApplicationUserName
          snapMountESXHost: snapMountESXHost
          isRawDeviceMapsEnabled: true
        name: name
        id: 0
        applicationValidation:
          recoveryTarget: null
          schedule:
            isScheduleEnabled: true
            description: description
            id: 4
            taskId: 5
          maximumNoOfThreads: 9
          guestCredentials: null
          keepValidatedVMsRunning: true
          validateVMBackups: true
          useSourceVmESXToMount: true
          customValidationScript:
            windows:
              path: path
              UNCCredentials:
                password: password
                name: name
              UNCSavedCredentials: null
              arguments: arguments
              isDisabled: false
              isLocal: true
            unix: null
          copy:
            copyPrecedence: 6
            isSnapCopy: true
            name: name
            id: 9
            isActive: true
            backupDestination: null
        status: 6
        meditechSystems:
          systemName: systemName
          listenerIP: listenerIP
          userAccount: null
          listenerPort: 3
          MBFtimeout: 6
    GetVMGroupProperties:
      title: GetVMGroupProperties
      type: object
      properties:
        filterQueryCount:
          type: integer
          description: total count
          format: int32
        vmGroups:
          type: array
          items:
            $ref: "#/components/schemas/GetVMGroupResp"
      description: This is used to store VM group details cache
    CreateVMGroupResp:
      type: object
      properties:
        subclientId:
          type: integer
          format: int32
          x-terraform-id: true
        warningCode:
          type: integer
          format: int32
          default: 0
        errorCode:
          type: integer
          format: int32
          default: 0
        errorMessage:
          type: string
          description: Response message
        warningMessage:
          type: string
          description: Response message
          default: ""
      example:
        subclientId: 0
        warningCode: 6
        errorMessage: errorMessage
        errorCode: 1
        warningMessage: warningMessage
    ApplicationGroupResp:
      type: object
      properties:
        applicationGroup:
          $ref: "#/components/schemas/IdName"
        warningCode:
          type: integer
          format: int32
          default: 0
        errorCode:
          type: integer
          format: int32
          default: 0
        errorMessage:
          type: string
          description: Response message
        warningMessage:
          type: string
          description: Response message
          default: ""
    VMGroupSummary:
      title: ""
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        status:
          $ref: "#/components/schemas/VMSLASTATUS"
        HypervisorType:
          $ref: "#/components/schemas/VSVendor"
        vmGroup:
          $ref: "#/components/schemas/IdName"
        hypervisor:
          $ref: "#/components/schemas/IdNameDisplayName"
        instance:
          $ref: "#/components/schemas/IdName"
        plan:
          $ref: "#/components/schemas/PlanIdNameType"
        lastBackup:
          $ref: "#/components/schemas/LastBackupJobInfo"
        company:
          $ref: "#/components/schemas/companyInfo"
        replicationGroup:
          $ref: "#/components/schemas/IdName"
        isDefaultVMGroup:
          type: boolean
          description: True if subclient is default subclient
          default: false
        storagePolicyRetentionExtension:
          type: boolean
          description: True if extend storage policy Retention was set in VMGroup
            for deleted files
          default: false
        indexingStatus:
          $ref: "#/components/schemas/IndexingStatusType"
        SnapBackupEnabled:
          type: boolean
          description: ' true if snap backup enabled'
          default: false
        tags:
          type: array
          items:
            $ref: "#/components/schemas/IdNameValue"
      description: ""
      example:
        instance: null
        replicationGroup: null
        SnapBackupEnabled: false
        tags:
        - name: name
          id: 5
          value: value
        - name: name
          id: 5
          value: value
        HypervisorType: NONE
        lastBackup:
          jobId: 5
          failureReason: failureReason
          time: 5
          status: NEVER_BACKED_UP
        isDefaultVMGroup: false
        vmGroup:
          name: name
          id: 0
        storagePolicyRetentionExtension: false
        hypervisor:
          displayName: displayName
          name: name
          id: 2
        name: name
        company:
          name: name
          multiCommcellId: 5
          id: 1
        indexingStatus: NOT_APPLICABLE
        id: 0
        plan:
          name: name
          subType: ANY
          id: 6
        status: ALL
    ApplicationGroupListResp:
      type: object
      properties:
        applicationGroupCount:
          type: integer
          format: int32
        applicationGroups:
          type: array
          items:
            $ref: "#/components/schemas/ApplicationGroupSummary"
      example:
        applicationGroupCount: 0
        applicationGroups:
        - clusterType: NONE
          cluster:
            displayName: displayName
            name: name
            id: 2
          snapBackupEnabled: false
          instance: null
          lastBackup:
            jobId: 5
            failureReason: failureReason
            time: 5
            status: NEVER_BACKED_UP
          isDefaultApplicationGroup: false
          storagePolicyRetentionExtension: false
          applicationGroup:
            name: name
            id: 0
          name: name
          company:
            name: name
            multiCommcellId: 5
            id: 1
          indexingStatus: NOT_APPLICABLE
          id: 6
          plan: null
          status: ALL
        - clusterType: NONE
          cluster:
            displayName: displayName
            name: name
            id: 2
          snapBackupEnabled: false
          instance: null
          lastBackup:
            jobId: 5
            failureReason: failureReason
            time: 5
            status: NEVER_BACKED_UP
          isDefaultApplicationGroup: false
          storagePolicyRetentionExtension: false
          applicationGroup:
            name: name
            id: 0
          name: name
          company:
            name: name
            multiCommcellId: 5
            id: 1
          indexingStatus: NOT_APPLICABLE
          id: 6
          plan: null
          status: ALL
    ApplicationGroupSummary:
      title: ""
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        status:
          $ref: "#/components/schemas/VMSLASTATUS"
        clusterType:
          $ref: "#/components/schemas/VSVendor"
        applicationGroup:
          $ref: "#/components/schemas/IdName"
        cluster:
          $ref: "#/components/schemas/IdNameDisplayName"
        instance:
          $ref: "#/components/schemas/IdName"
        plan:
          $ref: "#/components/schemas/IdName"
        lastBackup:
          $ref: "#/components/schemas/LastBackupJobInfo"
        company:
          $ref: "#/components/schemas/companyInfo"
        isDefaultApplicationGroup:
          type: boolean
          description: True if subclient is default subclient
          default: false
        storagePolicyRetentionExtension:
          type: boolean
          description: True if extend storage policy Retention was set in VMGroup
            for deleted files
          default: false
        indexingStatus:
          $ref: "#/components/schemas/IndexingStatusType"
        snapBackupEnabled:
          type: boolean
          description: ' true if snap backup enabled'
          default: false
      description: ""
      example:
        clusterType: NONE
        cluster:
          displayName: displayName
          name: name
          id: 2
        snapBackupEnabled: false
        instance: null
        lastBackup:
          jobId: 5
          failureReason: failureReason
          time: 5
          status: NEVER_BACKED_UP
        isDefaultApplicationGroup: false
        storagePolicyRetentionExtension: false
        applicationGroup:
          name: name
          id: 0
        name: name
        company:
          name: name
          multiCommcellId: 5
          id: 1
        indexingStatus: NOT_APPLICABLE
        id: 6
        plan: null
        status: ALL
    companyInfo:
      title: companyInfo
      type: object
      properties:
        id:
          type: integer
          description: Id of company
          format: int32
        name:
          type: string
          description: Name of company
        multiCommcellId:
          type: integer
          description: Multi Commcell Id of company
          format: int32
      example:
        name: name
        multiCommcellId: 5
        id: 1
    DeviceTypeEnum:
      type: string
      description: Device type of the storage.
      enum:
      - DEFAULT
      - MAGNETIC
      - AMAZON_S3
      - MICROSOFT_AZURE_STORAGE
      - NIRVANIX_MFS
      - RACKSPACE_CLOUD_FILES
      - IRON_MOUNTAIN_ARCHIVE
      - EMC_ATMOS
      - ATT_SYNAPTIC
      - CV_OBJECT_SERVER
      - HITACHI_CONTENT_PLATFORM
      - MEZEO_CS
      - OPENSTACK_OBJECT_STORAGE
      - AMPLIDATA
      - CHINA_MOBILE_ONEST
      - HDFS
      - VERIZON_CLOUD
      - GOOGLE_CLOUD_STORAGE
      - VMWARE_CLOUD
      - ORACLE_STORAGE_CLOUD_SERVICE
      - ORACLE_STORAGE_CLOUD_ARCHIVE_SERVICE
      - ALIBABA_CLOUD_OBJECT_STORAGE_SERVICE
      - HUAWEI_OBJECT_STORAGE
      - ORACLE_CLOUD_INFRASTRUCTURE_OBJECT_STORAGE_S3
      - ORACLE_CLOUD_INFRASTRUCTURE_OBJECT_STORAGE
      - TELEFONICA_OPEN_CLOUD_OBJECT_STORAGE
      - ORACLE_CLOUD_INFRASTRUCTURE_ARCHIVE_STORAGE
      - INSPUR_CLOUD
      - IBM_CLOUD
      - AZURE_DATA_LAKE_STORE
      - KINGSOFT_KS3
      - MICROSOFT_ONEDRIVE
      - IRON_MOUNTAIN_CLOUD
      - MICROSOFT_FILE_SHARE
      - AZURE_DATA_LAKE_STORE_GEN2
      - MICROSOFT_AZURE_COMPATIBLE
      - S3_COMPATIBLE_STORAGE
      - CARINGO_CASTOR
      - DELL_DX_OBJECTSTORAGE
      - AMAZON_GLACIER
      - DDN_WOS
      - GENERIC_HARDWARE_DEDUPE_DEVICE
      - BOOST_HARDWARE_DEDUPE_DEVICE
      - HPE_CATALYST_STORAGE
      - ISILON_ONEFS
      - LOCAL_FILE
      - LOCAL_FILE_WITH_PROP_S3
      - LOCAL_FILE_WITH_PROP_AZURE
      - CEPH_OBJECT_GATEWAY_S3
      - CLOUDIAN_HYPERSTORE
      - DELL_EMC_ECS_S3
      - FUJITSU_STORAGE_ETERNUS
      - HITACHI_CLOUD_PLATOFORM_CLOUD_SCALE
      - IBM_CLOUD_OBJECT_STORAGE_S3
      - NETAPP_STORAGEGRID
      - CCL_VAULT_V2
      - SCALITY_RING
      - WASABI_HOT_CLOUD_STORAGE
      - NUTANIX_OBJECTS
      - NETAPP_ONTAP_S3
      - HITACHI_CLOUD_SCALE
      - PURE_STORAGE_FLASHBLADE
      - VAST_DATA
      - METALLIC_RECOVERY_RESERVE
      - METALLIC_RECOVERY_RESERVE_AZURE_HOT
      - METALLIC_RECOVERY_RESERVE_AZURE_COOL
      - METALLIC_RECOVERY_RESERVE_OCI_STANDARD
      - METALLIC_RECOVERY_RESERVE_OCI_INFREQUENT_ACCESS
      - METALLIC_BUNDLED_STORAGE_O365
      - METALLIC_BUNDLED_STORAGE_ENDPOINT
      - METALLIC_BUNDLED_STORAGE__SALESFORCE
      - METALLIC_BUNDLED_STORAGE_D365
      - METALLIC_BUNDLED_STORAGE_AZURE_AD
      - METALLIC_BUNDLED_STORAGE_AZURE_MAAS
      - MICROSOFT_AZURE_MANAGEMENT
      - MICROSOFT_AZURE_MANAGEMENT_BLOB
      - MICROSOFT_AZURE_MANAGEMENT_FILE
    DeviceType:
      title: DeviceType
      type: object
      properties:
        id:
          type: integer
          description: Device Type Id of the storage.
          format: int32
        name:
          $ref: "#/components/schemas/DeviceTypeEnum"
      example:
        name: DEFAULT
        id: 5
    StoragePool:
      title: StoragePool
      type: object
      properties:
        id:
          type: integer
          description: Id of Storage Pool
          format: int32
        name:
          type: string
          description: Name of Storage Pool
        type:
          $ref: "#/components/schemas/StoragePoolType"
        retentionPeriodDays:
          type: integer
          description: Retention period of pool in days
          format: int32
        wormStoragePoolFlag:
          type: integer
          description: "Bit flag indicating WORM configuration of storage pool. 0\
            \ means no lock, 1 means compliance lock, 2 means worm storage lock, 4\
            \ means Object worm lock and 8 means bucket worm lock."
          format: int32
        deviceType:
          $ref: "#/components/schemas/DeviceType"
        storageClass:
          type: string
          description: Storage class of the Storage Pool
          enum:
          - DEFAULT
          - AWS_STANDARD
          - AWS_REDUNDANCY
          - AWS_SIA
          - AWS_ONEZONE_IA
          - AWS_IT
          - AWS_GLACIER
          - AWS_GLACIER_STANDARD
          - AWS_GLACIER_SIA
          - AWS_GLACIER_OZIA
          - AWS_GLACIER_IT
          - AWS_DEEP_ARCHIVE
          - AWS_DA_STANDARD
          - AWS_DA_SIA
          - AWS_DA_OZIA
          - AWS_DA_IT
          - AWS_GLACIER_IR
          - AWS_GLACIER_IR_STANDARD
          - AWS_GLACIER_IR_SIA
          - AWS_GLACIER_IR_OZIA
          - AWS_GLACIER_IR_IT
          - AZURE_DEFAULT
          - AZURE_HOT
          - AZURE_COOL
          - AZURE_ARCHIVE
          - AZURE_HOT_ARCHIVE
          - AZURE_COOL_ARCHIVE
          - AZURE_COLD
          - AZURE_HOT_COLD
          - AZURE_COOL_COLD
          - GOOGLE_STANDARD
          - GOOGLE_DR_AVAILABILITY
          - GOOGLE_NEARLINE
          - GOOGLE_COLDLINE
          - GOOGLE_ARCHIVE
          - GOOGLE_DEFAULT
          - ALI_DEFAULT
          - ALI_STANDARD
          - ALI_IA
          - ALI_ARCHIVE
          - ALI_ARCHIVE_STANDARD
          - ALI_ARCHIVE_IA
          - K3S_STANDARD
          - K3S_IA
          - ORACLE_STANDARD
          - ORACLE_IA
          - ORACLE_ARCHIVE
          - ORACLE_STANDARD_ARCHIVE
          - ORACLE_IA_ARCHIVE
        isArchiveStorage:
          type: boolean
          description: Flag indicating whether the storage tier is archive.
        region:
          $ref: "#/components/schemas/IdNameDisplayName"
      example:
        deviceType:
          name: DEFAULT
          id: 5
        isArchiveStorage: true
        storageClass: DEFAULT
        retentionPeriodDays: 1
        wormStoragePoolFlag: 5
        name: name
        id: 6
        type: DEDUPLICATION
        region:
          displayName: displayName
          name: name
          id: 2
    StoragePoolType:
      title: ""
      type: string
      description: Type of Storage Pool
      enum:
      - DEDUPLICATION
      - SECONDARY_COPY
      - NON_DEDUPLICATION
      - SCALE_OUT
    StorageType:
      title: StorageType
      type: string
      enum:
      - ALL
      - DISK
      - CLOUD
      - HYPERSCALE
      - TAPE
    SnapshotCopyMapping:
      title: ""
      type: object
      properties:
        vendor:
          $ref: "#/components/schemas/SnapshotCopyMappingVendors"
        source:
          $ref: "#/components/schemas/IdName"
        target:
          $ref: "#/components/schemas/IdName"
        sourceVendor:
          $ref: "#/components/schemas/IdName"
        targetVendor:
          $ref: "#/components/schemas/IdName"
        subclients:
          type: array
          items:
            $ref: "#/components/schemas/IdName"
        mappingType:
          $ref: "#/components/schemas/MappingType"
      example:
        vendor: NETAPP
        mappingType: DEFAULT_MAPPING
        targetVendor: null
        source: null
        subclients:
        - null
        - null
        sourceVendor: null
        target: null
    MappingType:
      title: ""
      type: string
      description: Mapping type for pure storage replicaton
      enum:
      - DEFAULT_MAPPING
      - SUBCLIENT_MAPPING
    SnapshotCopyMappingVendors:
      title: ""
      type: string
      description: Snapshot vendors available for Snap Copy mappings
      enum:
      - NETAPP
      - AMAZON
      - PURE
      - AZURE
    ReplicationSubclientFilter:
      title: ""
      type: string
      properties:
        planId:
          type: integer
          format: int32
        copyId:
          type: integer
          format: int32
        snapEngineId:
          type: integer
          format: int32
      description: Get subclient for replications mapping association
    PlanCopyTypeName:
      title: ""
      type: string
      enum:
      - DEFAULT_MIRROR
      - DEFAULT_VAULT_REPLICA
      - MIRROR
      - VAULT_REPLICA
      - SNAPSHOT_PRIMARY
    PlanCopyType:
      title: ""
      type: string
      enum:
      - SYNCHRONOUS
      - SELECTIVE
      - PRIMARY
    JobsForSnapCatalog:
      type: object
      properties:
        jobs:
          type: array
          items:
            $ref: "#/components/schemas/JobDetailsForSnapCatalog"
        operationType:
          type: string
          enum:
          - UNPICK
          - PICK
    JobDetailsForSnapCatalog:
      type: object
      properties:
        jobId:
          type: integer
          description: Job Id to pick or unpick
          format: int32
        commcellId:
          type: integer
          description: CommCell Id on which job will be picked or unpicked
          format: int32
    UpdatePassKey:
      title: UpdatePassKey
      type: object
      properties:
        currentPassKey:
          type: string
          description: The current passkey for restricting backup restores.
        newPassKey:
          type: string
          description: The new passkey for restricting backup restores.
        confirmPassKey:
          type: string
          description: Confirm the new passkey for restricting backup restores.
        operationType:
          type: string
          description: The type of passkey operation
          enum:
          - CREATE
          - DISABLE
          - EDIT
      description: "Model to create, edit or disable passkey"
    UpdateAuthRestore:
      title: UpdateAuthRestore
      type: object
      properties:
        passKey:
          type: string
          description: The existing passkey for restricting backup restores.
        authOpType:
          type: boolean
          description: The type of authorize for restore operation
        expirationTime:
          type: integer
          description: "The duration(in unix time) for which a user can continue browsing\
            \ and restoring backup data without being prompted to enter the passkey,\
            \ again."
          format: int32
    VirtualMachineDetails:
      title: VirtualMachineDetails
      type: object
      properties:
        displayName:
          type: string
          description: The display name of the virtual machine
        summary:
          $ref: "#/components/schemas/VMDetailSummary"
        applicationValidationResults:
          $ref: "#/components/schemas/VMApplicationValidationResults"
        passkey:
          $ref: "#/components/schemas/VMPasskey"
        security:
          $ref: "#/components/schemas/VMSecurity"
        activityControl:
          type: array
          items:
            $ref: "#/components/schemas/ActivityControlOptionsProp"
        tags:
          type: array
          items:
            $ref: "#/components/schemas/IdNameValue"
      example:
        summary:
          os: os
          oldestRecoveryPoint: 5
          latestRecoveryPoint: 1
          SLA:
            reason: reason
            status: MET_SLA
          vmGroup: null
          vendor: NONE
          hypervisor:
            name: name
            id: 0
          host: host
          applicationSize: 6
          company: null
          vmSize: 0
          plan: null
          status: PROTECTED
        activityControl:
        - delayTime:
            timeZone: null
            time: 1
            value: value
          activityType: BACKUP
          enableAfterADelay: true
          enableActivityType: true
        - delayTime:
            timeZone: null
            time: 1
            value: value
          activityType: BACKUP
          enableAfterADelay: true
          enableActivityType: true
        security:
          associations:
          - role: null
            useGroup: null
            user:
              name: name
              company: null
              id: 1
          - role: null
            useGroup: null
            user:
              name: name
              company: null
              id: 1
          permissions:
          - permissionId: 5
            exclude: true
            type: ALL_CATEGORIES
            categoryName: categoryName
            categoryId: 2
            permissionName: permissionName
          - permissionId: 5
            exclude: true
            type: ALL_CATEGORIES
            categoryName: categoryName
            categoryId: 2
            permissionName: permissionName
          owners:
          - userGroupId: 2
            userGroupName: userGroupName
            userName: userName
            userId: 3
          - userGroupId: 2
            userGroupName: userGroupName
            userName: userName
            userId: 3
        passkey:
          expirationTime: 9
          passKeyRequiredForRestore: true
          enableAuthorizeForRestore: true
          authType: USE_LOGIN
        displayName: displayName
        applicationValidationResults:
          lastValidationJobId: 5
          backupCompletionDate: 7
          bootStatus: true
          appsDiscovered:
          - scriptStatus: true
            failureReason: failureReason
            name: name
          - scriptStatus: true
            failureReason: failureReason
            name: name
          backupValidated: 2
        tags:
        - name: name
          id: 5
          value: value
        - name: name
          id: 5
          value: value
    VMDetailSummary:
      title: VMDetailSummary
      type: object
      properties:
        hypervisor:
          $ref: "#/components/schemas/IdName"
        vmGroup:
          $ref: "#/components/schemas/IdName"
        host:
          type: string
          description: The host name for the computer where the source virtual machine
            or instance resides.
        os:
          type: string
          description: The operating system version for the VM or instance.
        vendor:
          $ref: "#/components/schemas/VSVendor"
        vmSize:
          type: integer
          description: The total space allocated(in bytes) for the virtual machine.
          format: int32
        applicationSize:
          type: integer
          description: The amount of data being protected for the VM client(in bytes)
          format: int32
        plan:
          $ref: "#/components/schemas/IdName"
        latestRecoveryPoint:
          type: integer
          description: The latest recovery time for the vm(in unix)
          format: int32
        oldestRecoveryPoint:
          type: integer
          description: The oldest recovery time for the vm(in unix)
          format: int32
        status:
          type: string
          description: "The status of the backup for the VM, instance, or  container."
          enum:
          - PROTECTED
          - NOT_PROTECTED
          - PENDING
          - BACKED_UP_WITH_ERROR
          - DISCOVERED
        SLA:
          $ref: "#/components/schemas/VMSla"
        company:
          $ref: "#/components/schemas/IdName"
      description: The Virtual Machine detail summary. Hypervisor is the software
        that creates and runs virtual machines(VMs).
      example:
        os: os
        oldestRecoveryPoint: 5
        latestRecoveryPoint: 1
        SLA:
          reason: reason
          status: MET_SLA
        vmGroup: null
        vendor: NONE
        hypervisor:
          name: name
          id: 0
        host: host
        applicationSize: 6
        company: null
        vmSize: 0
        plan: null
        status: PROTECTED
    VMPasskey:
      title: VMPasskey
      type: object
      properties:
        authType:
          type: string
          description: The authentication type set for browse and restore
          enum:
          - USE_LOGIN
          - USE_PASSKEY
        expirationTime:
          type: integer
          description: "The duration(in unix time) for which a user can continue browsing\
            \ and restoring backup data without being prompted to enter the passkey,\
            \ again."
          format: int32
        passKeyRequiredForRestore:
          type: boolean
          description: To tell if passkey is required for browse and restore
        enableAuthorizeForRestore:
          type: boolean
          description: To tell if user is authorized for restore
      example:
        expirationTime: 9
        passKeyRequiredForRestore: true
        enableAuthorizeForRestore: true
        authType: USE_LOGIN
    VMSecurity:
      title: VMSecurity
      type: object
      properties:
        associations:
          type: array
          items:
            $ref: "#/components/schemas/VMSecurityAssoc"
        permissions:
          type: array
          items:
            $ref: "#/components/schemas/PermissionResp"
        owners:
          type: array
          items:
            $ref: "#/components/schemas/SecurityOwnersAssoc"
      description: ""
      example:
        associations:
        - role: null
          useGroup: null
          user:
            name: name
            company: null
            id: 1
        - role: null
          useGroup: null
          user:
            name: name
            company: null
            id: 1
        permissions:
        - permissionId: 5
          exclude: true
          type: ALL_CATEGORIES
          categoryName: categoryName
          categoryId: 2
          permissionName: permissionName
        - permissionId: 5
          exclude: true
          type: ALL_CATEGORIES
          categoryName: categoryName
          categoryId: 2
          permissionName: permissionName
        owners:
        - userGroupId: 2
          userGroupName: userGroupName
          userName: userName
          userId: 3
        - userGroupId: 2
          userGroupName: userGroupName
          userName: userName
          userId: 3
    SecurityOwnersAssoc:
      title: ""
      type: object
      properties:
        userId:
          type: integer
          format: int32
        userName:
          type: string
        userGroupId:
          type: integer
          format: int32
        userGroupName:
          type: string
      description: A list of users or user groups which have permissions on the entity
      example:
        userGroupId: 2
        userGroupName: userGroupName
        userName: userName
        userId: 3
    VMSecurityAssoc:
      title: ""
      type: object
      properties:
        user:
          $ref: "#/components/schemas/IdNameCompany"
        useGroup:
          $ref: "#/components/schemas/IdNameCompany"
        role:
          $ref: "#/components/schemas/IdName"
      description: A list of users or user groups each having a specific set of roles
        that determine the kind of operations they can perform on the entity.
      example:
        role: null
        useGroup: null
        user:
          name: name
          company: null
          id: 1
    UpdateVMProperties:
      title: UpdateVMProperties
      type: object
      properties:
        plan:
          $ref: "#/components/schemas/IdName"
        security:
          $ref: "#/components/schemas/VMSecurity"
        requirePasskeyForRestore:
          $ref: "#/components/schemas/UpdatePassKey"
        authKeyRestore:
          $ref: "#/components/schemas/UpdateAuthRestore"
    MediaAgentListResponse:
      title: ""
      type: object
      properties:
        mediaAgents:
          type: array
          items:
            $ref: "#/components/schemas/MediaAgentSummary"
      example:
        mediaAgents:
        - offlineReasonValue: 6
          offlineReason: offlineReason
          releaseId: 1
          displayName: displayName
          name: name
          description: description
          company:
            name: name
            id: 0
          id: 0
          operatingSystem:
            name: name
            id: 1
            type: type
          version: version
          isUnlicensedMA: true
          status: ONLINE
        - offlineReasonValue: 6
          offlineReason: offlineReason
          releaseId: 1
          displayName: displayName
          name: name
          description: description
          company:
            name: name
            id: 0
          id: 0
          operatingSystem:
            name: name
            id: 1
            type: type
          version: version
          isUnlicensedMA: true
          status: ONLINE
    MediaAgentSummary:
      type: object
      properties:
        id:
          type: integer
          description: Id of the media agent.
          format: int32
        name:
          type: string
          description: Name of the media agent.
        displayName:
          type: string
          description: Display name of the media agent.
        status:
          type: string
          description: Current status of the media agent.
          enum:
          - ONLINE
          - OFFLINE
          - MAINTENANCE
        isUnlicensedMA:
          type: boolean
          description: Used to determine if the MA is licensed or not.
        offlineReason:
          type: string
          description: Provides a reason for the media agent being offline. Only given
            when the media agent is offline.
        offlineReasonValue:
          type: integer
          description: A flag for offline reason. Only given when the media agent
            is offline.
          format: int32
        operatingSystem:
          $ref: "#/components/schemas/IdNameType"
        version:
          type: string
          description: The service pack of the media agent.
        releaseId:
          type: integer
          description: Release version of the media agent.
          format: int32
        description:
          type: string
          description: Description of the media agent.
        company:
          $ref: "#/components/schemas/IdName"
      description: ""
      example:
        offlineReasonValue: 6
        offlineReason: offlineReason
        releaseId: 1
        displayName: displayName
        name: name
        description: description
        company:
          name: name
          id: 0
        id: 0
        operatingSystem:
          name: name
          id: 1
          type: type
        version: version
        isUnlicensedMA: true
        status: ONLINE
    MediaAgentGeneralSummary:
      type: object
      properties:
        id:
          type: integer
          description: Id of the media agent.
          format: int32
        name:
          type: string
          description: Name of the media agent.
        displayName:
          type: string
          description: Display name of the media agent.
        status:
          type: string
          description: Current status of the media agent.
          enum:
          - ONLINE
          - OFFLINE
          - MAINTENANCE
        offlineReason:
          type: string
          description: Provides a reason for the media agent being offline. Only given
            when the media agent is offline.
        operatingSystem:
          type: string
          description: Name of the operating system of the media agent.
        version:
          type: string
          description: The service pack of the media agent.
        description:
          type: string
          description: Description of the media agent.
      description: ""
      example:
        offlineReason: offlineReason
        displayName: displayName
        name: name
        description: description
        id: 0
        operatingSystem: operatingSystem
        version: version
        status: ONLINE
    MediaAgentForDDBListResponse:
      title: ""
      type: object
      properties:
        mediaAgents:
          type: array
          items:
            $ref: "#/components/schemas/MediaAgentForDDBSummary"
      example:
        mediaAgents:
        - isConfigured: true
          DDBDisks:
          - totalSpaceMB: 1
            diskPath: diskPath
            clientInfo:
              name: name
              id: 0
            diskId: 5
            consumedSpaceMB: 4
            numOfPartitions: 2
            freeSpaceMB: 7
            partitionList:
            - isSealed: true
              storeName: storeName
              subStoreId: 5
              storeId: 2
              moveStatusCode: 9
              lastFailedMoveJobId: 3
              estimatedSubstoreSizeInMB: 7
              moveStatusMsg: moveStatusMsg
            - isSealed: true
              storeName: storeName
              subStoreId: 5
              storeId: 2
              moveStatusCode: 9
              lastFailedMoveJobId: 3
              estimatedSubstoreSizeInMB: 7
              moveStatusMsg: moveStatusMsg
            status: OFFLINE
          - totalSpaceMB: 1
            diskPath: diskPath
            clientInfo:
              name: name
              id: 0
            diskId: 5
            consumedSpaceMB: 4
            numOfPartitions: 2
            freeSpaceMB: 7
            partitionList:
            - isSealed: true
              storeName: storeName
              subStoreId: 5
              storeId: 2
              moveStatusCode: 9
              lastFailedMoveJobId: 3
              estimatedSubstoreSizeInMB: 7
              moveStatusMsg: moveStatusMsg
            - isSealed: true
              storeName: storeName
              subStoreId: 5
              storeId: 2
              moveStatusCode: 9
              lastFailedMoveJobId: 3
              estimatedSubstoreSizeInMB: 7
              moveStatusMsg: moveStatusMsg
            status: OFFLINE
          releaseId: 6
          displayName: displayName
          OSType: OSType
          isDDBSubclientConfigured: true
          name: name
          id: 0
          SIMOSId: 1
        - isConfigured: true
          DDBDisks:
          - totalSpaceMB: 1
            diskPath: diskPath
            clientInfo:
              name: name
              id: 0
            diskId: 5
            consumedSpaceMB: 4
            numOfPartitions: 2
            freeSpaceMB: 7
            partitionList:
            - isSealed: true
              storeName: storeName
              subStoreId: 5
              storeId: 2
              moveStatusCode: 9
              lastFailedMoveJobId: 3
              estimatedSubstoreSizeInMB: 7
              moveStatusMsg: moveStatusMsg
            - isSealed: true
              storeName: storeName
              subStoreId: 5
              storeId: 2
              moveStatusCode: 9
              lastFailedMoveJobId: 3
              estimatedSubstoreSizeInMB: 7
              moveStatusMsg: moveStatusMsg
            status: OFFLINE
          - totalSpaceMB: 1
            diskPath: diskPath
            clientInfo:
              name: name
              id: 0
            diskId: 5
            consumedSpaceMB: 4
            numOfPartitions: 2
            freeSpaceMB: 7
            partitionList:
            - isSealed: true
              storeName: storeName
              subStoreId: 5
              storeId: 2
              moveStatusCode: 9
              lastFailedMoveJobId: 3
              estimatedSubstoreSizeInMB: 7
              moveStatusMsg: moveStatusMsg
            - isSealed: true
              storeName: storeName
              subStoreId: 5
              storeId: 2
              moveStatusCode: 9
              lastFailedMoveJobId: 3
              estimatedSubstoreSizeInMB: 7
              moveStatusMsg: moveStatusMsg
            status: OFFLINE
          releaseId: 6
          displayName: displayName
          OSType: OSType
          isDDBSubclientConfigured: true
          name: name
          id: 0
          SIMOSId: 1
    MediaAgentForDDBSummary:
      type: object
      properties:
        id:
          type: integer
          description: Id of the media agent.
          format: int32
        name:
          type: string
          description: Name of the media agent.
        displayName:
          type: string
          description: Display name of the media agent.
        releaseId:
          type: integer
          description: Release version of the media agent.
          format: int32
        SIMOSId:
          type: integer
          description: Operating System Id of the media agent.
          format: int32
        isDDBSubclientConfigured:
          type: boolean
          description: Used to determine if a DDB subclient has been configured for
            this media agent.
        OSType:
          type: string
          description: Media Agent operating system type.
        isConfigured:
          type: boolean
          description: Used to determine if the Media Agent is configured or not.
        DDBDisks:
          type: array
          description: List of DDB disks hosted on this MediaAgent
          items:
            $ref: "#/components/schemas/DDBDiskInfo"
      description: ""
      example:
        isConfigured: true
        DDBDisks:
        - totalSpaceMB: 1
          diskPath: diskPath
          clientInfo:
            name: name
            id: 0
          diskId: 5
          consumedSpaceMB: 4
          numOfPartitions: 2
          freeSpaceMB: 7
          partitionList:
          - isSealed: true
            storeName: storeName
            subStoreId: 5
            storeId: 2
            moveStatusCode: 9
            lastFailedMoveJobId: 3
            estimatedSubstoreSizeInMB: 7
            moveStatusMsg: moveStatusMsg
          - isSealed: true
            storeName: storeName
            subStoreId: 5
            storeId: 2
            moveStatusCode: 9
            lastFailedMoveJobId: 3
            estimatedSubstoreSizeInMB: 7
            moveStatusMsg: moveStatusMsg
          status: OFFLINE
        - totalSpaceMB: 1
          diskPath: diskPath
          clientInfo:
            name: name
            id: 0
          diskId: 5
          consumedSpaceMB: 4
          numOfPartitions: 2
          freeSpaceMB: 7
          partitionList:
          - isSealed: true
            storeName: storeName
            subStoreId: 5
            storeId: 2
            moveStatusCode: 9
            lastFailedMoveJobId: 3
            estimatedSubstoreSizeInMB: 7
            moveStatusMsg: moveStatusMsg
          - isSealed: true
            storeName: storeName
            subStoreId: 5
            storeId: 2
            moveStatusCode: 9
            lastFailedMoveJobId: 3
            estimatedSubstoreSizeInMB: 7
            moveStatusMsg: moveStatusMsg
          status: OFFLINE
        releaseId: 6
        displayName: displayName
        OSType: OSType
        isDDBSubclientConfigured: true
        name: name
        id: 0
        SIMOSId: 1
    MediaAgent:
      type: object
      properties:
        general:
          $ref: "#/components/schemas/MediaAgentGeneralSummary"
        indexCache:
          $ref: "#/components/schemas/IndexCache"
        control:
          $ref: "#/components/schemas/MediaAgentControl"
        security:
          type: array
          items:
            $ref: "#/components/schemas/SecurityAssoc"
      example:
        general:
          offlineReason: offlineReason
          displayName: displayName
          name: name
          description: description
          id: 0
          operatingSystem: operatingSystem
          version: version
          status: ONLINE
        security:
        - role: null
          isCreatorAssociation: true
          externalUserGroup:
            providerId: 5
            name: name
            id: 1
            providerName: providerName
          permissionList:
          - permissionId: 5
            exclude: true
            type: ALL_CATEGORIES
            categoryName: categoryName
            categoryId: 2
            permissionName: permissionName
          - permissionId: 5
            exclude: true
            type: ALL_CATEGORIES
            categoryName: categoryName
            categoryId: 2
            permissionName: permissionName
          user: null
          userGroup: null
        - role: null
          isCreatorAssociation: true
          externalUserGroup:
            providerId: 5
            name: name
            id: 1
            providerName: providerName
          permissionList:
          - permissionId: 5
            exclude: true
            type: ALL_CATEGORIES
            categoryName: categoryName
            categoryId: 2
            permissionName: permissionName
          - permissionId: 5
            exclude: true
            type: ALL_CATEGORIES
            categoryName: categoryName
            categoryId: 2
            permissionName: permissionName
          user: null
          userGroup: null
        indexCache:
          path: path
          logsCache:
            path: path
            enabled: true
        control:
          parallelDataTransferOperations: 6
          optimizeForConcurrentLANBackups: true
          maintenanceMode: true
          ransomwareProtection: true
          enabled: true
    IndexCache:
      type: object
      properties:
        path:
          type: string
          description: Path where the index cache is maintained.
        logsCache:
          $ref: "#/components/schemas/MediaAgentLogsCache"
      example:
        path: path
        logsCache:
          path: path
          enabled: true
    MediaAgentLogsCache:
      type: object
      properties:
        enabled:
          type: boolean
          description: 'This tag determines if the logs cache has been enabled or
            not. '
        path:
          type: string
          description: "If the logs cache is enabled, this tag gives the path to store\
            \ the logs cache."
      example:
        path: path
        enabled: true
    MediaAgentControl:
      type: object
      properties:
        enabled:
          type: boolean
          description: Determines if the media agent is currently enabled or disabled.
        optimizeForConcurrentLANBackups:
          type: boolean
          description: "Allows optimization for concurrent LAN backups. If set to\
            \ true, default value for parallel data transfer operations will be 100.\
            \ If set to false, default value of parallel data transfer operations\
            \ will be set to 25."
        maintenanceMode:
          type: boolean
          description: "Specifies whether the MediaAgent is available for data protection,\
            \ data recovery and auxiliary copy operations."
        ransomwareProtection:
          type: boolean
          description: "If set to true, ransomware protection against the media agent\
            \ is enabled. If set to false, ransomware protection against media agent\
            \ is disabled."
        parallelDataTransferOperations:
          type: integer
          description: 'Specifies the number of parallel data operations that can
            take place. '
          format: int32
      example:
        parallelDataTransferOperations: 6
        optimizeForConcurrentLANBackups: true
        maintenanceMode: true
        ransomwareProtection: true
        enabled: true
    UpdateMediaAgent:
      type: object
      properties:
        description:
          type: string
          description: Provides the media agent with a new description.
        control:
          $ref: "#/components/schemas/MediaAgentControl"
        indexCache:
          $ref: "#/components/schemas/IndexCache"
        security:
          $ref: "#/components/schemas/UpdateSecurityAssoc"
    CreateHypervisorGroupReq:
      required:
      - hypervisorType
      - name
      type: object
      properties:
        name:
          type: string
          description: The name of the hypervisor group being created
        skipCredentialValidation:
          type: boolean
          description: if credential validation has to be skipped.
          default: false
        accessNodes:
          type: array
          items:
            $ref: "#/components/schemas/accessNodeModel"
        credentials:
          $ref: "#/components/schemas/IdName"
        etcdProtection:
          $ref: "#/components/schemas/EtcdProtectionItem"
        planEntity:
          $ref: "#/components/schemas/IdName"
      description: Create a hypervisor group
    UpdateHypervisorGroupReq:
      required:
      - hypervisorType
      type: object
      properties:
        accessNodes:
          type: array
          items:
            $ref: "#/components/schemas/accessNodeModel"
        fbrUnixMediaAgent:
          $ref: "#/components/schemas/IdName"
        activityControl:
          $ref: "#/components/schemas/ActivityControlOptions"
        security:
          $ref: "#/components/schemas/VMHypervisorSecurityProp"
        newName:
          type: string
          description: The name of the hypervisor that has to be changed
          x-terraform-mapping: displayName
        settings:
          $ref: "#/components/schemas/hypervisorSettings"
        credentials:
          $ref: "#/components/schemas/IdName"
        skipCredentialValidation:
          type: boolean
          description: if credential validation has to be skipped.
          default: false
      description: Update a hypervisor group
    CreateHypervisorGroupVMWare:
      title: VMWare
      allOf:
      - $ref: "#/components/schemas/CreateHypervisorGroupReq"
      - required:
        - hypervisorType
        - password
        - userName
        - vcenterHostName
        type: object
        properties:
          hypervisorType:
            type: string
            enum:
            - VMW
            x-terraform-constant: VMW
          vcenterHostName:
            type: string
            description: Vcenter hostname
          userName:
            type: string
            description: Vcenter username
          password:
            type: string
            description: Vcenter password
        description: Create a hypervisor group with VMWare as the destination vendor
    CreateHypervisorGroupHyperV:
      title: HyperV
      allOf:
      - $ref: "#/components/schemas/CreateHypervisorGroupReq"
      - required:
        - hypervisorType
        - password
        - serverName
        - userName
        type: object
        properties:
          hypervisorType:
            type: string
            enum:
            - Hyper-V
            x-terraform-constant: Hyper-V
          serverName:
            type: string
            description: 'Hyper-V hostname '
          userName:
            type: string
            description: 'Hyper-V userName '
          password:
            type: string
            description: 'Hyper-V password '
        description: Create a hypervisor group with HyperV as the destination vendor
    CreateHypervisorGroupNutanix:
      title: Nutanix
      allOf:
      - $ref: "#/components/schemas/CreateHypervisorGroupReq"
      - required:
        - hostName
        - hypervisorType
        - password
        - userName
        type: object
        properties:
          hypervisorType:
            type: string
            enum:
            - NUTANIX
          hostName:
            type: string
            description: 'Nutanix hostname '
          userName:
            type: string
            description: 'Nutanix userName '
          password:
            type: string
            description: 'Nutanix password '
        description: Create a hypervisor group with Nutanix as the destination vendor
    CreateHypervisorGroupProxmox:
      title: Proxmox
      allOf:
      - $ref: "#/components/schemas/CreateHypervisorGroupReq"
      - required:
        - hostName
        - hypervisorType
        - password
        - userName
        type: object
        properties:
          hypervisorType:
            type: string
            enum:
            - PROXMOX
          hostName:
            type: string
            description: 'Proxmox hostname '
          userName:
            type: string
            description: 'proxmox userName '
          password:
            type: string
            description: 'proxmox password '
        description: Create a hypervisor group with Proxmox as the destination vendor
    CreateHypervisorGroupAmazon:
      title: Amazon
      allOf:
      - $ref: "#/components/schemas/CreateHypervisorGroupReq"
      - required:
        - accessKey
        - hypervisorType
        - regionEndPoints
        - secretKey
        - useIamRole
        type: object
        properties:
          hypervisorType:
            type: string
            enum:
            - Amazon
            x-terraform-constant: AMAZON
          accessKey:
            type: string
            description: Access Key of Amazon login
          RoleARN:
            type: string
            description: Role ARN for STS assume role with IAM policy
          secretKey:
            type: string
            description: secret Key of Amazon login
          Region:
            type: string
            description: AWS region if Iam role is used
          useIamRole:
            type: boolean
            description: if Iam Role is used
          enableAWSAdminAccount:
            type: boolean
          useServiceAccount:
            type: string
            description: Clientname to be used as Admin Account
          useHostedInfrastructure:
            type: boolean
            description: Use Metallic hosted infrastructure
        description: Create a hypervisor group with Amazon as the destination vendor
    CreateHypervisorGroupAzure:
      title: Azure
      allOf:
      - $ref: "#/components/schemas/CreateHypervisorGroupReq"
      - required:
        - hypervisorType
        - subscriptionId
        type: object
        properties:
          hypervisorType:
            type: string
            enum:
            - AZURE_V2
            x-terraform-constant: AZURE_V2
          useManagedIdentity:
            type: boolean
            description: "set to true, if you want to use System Managed identitiy\
              \ of Access node for Authentication"
            default: false
          subscriptionId:
            type: string
            description: Subscription ID of Azure
          workloadRegion:
            $ref: "#/components/schemas/IdName"
        description: Create a hypervisor group with Azure as the destination vendor
    CreateHypervisorGroupAzureStack:
      title: AzureStack
      allOf:
      - $ref: "#/components/schemas/CreateHypervisorGroupReq"
      - required:
        - ApplicationId
        - ApplicationPassword
        - hypervisorType
        - serverName
        - subscriptionId
        - tenantId
        type: object
        properties:
          hypervisorType:
            type: string
            enum:
            - AZURE_STACK
          resourceManagerURL:
            type: string
            description: resource Manager URL for Azure Stack
          tenantId:
            type: string
            description: Tenant id of Azure login Application
          subscriptionId:
            type: string
            description: 'subscription id of Azure '
          ApplicationId:
            type: string
            description: Application id of Azure login Application
          ApplicationPassword:
            type: string
            description: Application Password of Azure login Application
        description: Create a hypervisor group with Azure as the destination vendor
    CreateHypervisorGroupGoogleCloud:
      title: GoogleCloud
      allOf:
      - $ref: "#/components/schemas/CreateHypervisorGroupReq"
      - required:
        - hypervisorType
        - serviceAccountId
        - userName
        type: object
        properties:
          hypervisorType:
            type: string
            enum:
            - GOOGLE_CLOUD
            x-terraform-constant: GOOGLE_CLOUD
          serviceAccountId:
            type: string
            description: service account id of google cloud
          userName:
            type: string
            description: username of GCP login Application
        description: Create a hypervisor group with Google Cloud as the destination
          vendor
    CreateHypervisorGroupXen:
      title: Xen
      allOf:
      - $ref: "#/components/schemas/CreateHypervisorGroupReq"
      - required:
        - hypervisorType
        - password
        - serverName
        - userName
        type: object
        properties:
          hypervisorType:
            type: string
            enum:
            - XEN_SERVER
            x-terraform-constant: XEN_SERVER
          serverName:
            type: string
            description: 'Xen hostname '
          userName:
            type: string
            description: 'Xen userName '
          password:
            type: string
            description: 'Xen password '
        description: Create a hypervisor group with Google Cloud as the destination
          vendor
    CreateHypervisorGroupRhev:
      title: Rhev
      allOf:
      - $ref: "#/components/schemas/CreateHypervisorGroupReq"
      - required:
        - RhevMManager
        - hypervisorType
        - password
        - userName
        type: object
        properties:
          hypervisorType:
            type: string
            enum:
            - REDHAT
            x-terraform-constant: REDHAT
          RhevMManager:
            type: string
            description: 'Rhev Manager '
          userName:
            type: string
            description: 'Rhev userName '
          password:
            type: string
            description: 'Rhev password '
        description: Create a hypervisor group with Rhev  as the destination vendor
    CreateHypervisorGroupDocker:
      title: Docker
      allOf:
      - $ref: "#/components/schemas/CreateHypervisorGroupReq"
      - required:
        - hypervisorType
        - password
        - serverName
        - userName
        type: object
        properties:
          hypervisorType:
            type: string
            enum:
            - DOCKER
            x-terraform-constant: DOCKER
          serverName:
            type: string
            description: 'Docker hostname '
          userName:
            type: string
            description: 'Docker userName '
          password:
            type: string
            description: 'Docker password '
        description: Create a hypervisor group with Docker as the destination vendor
    CreateHypervisorGroupOpenstack:
      title: OpenStack
      allOf:
      - $ref: "#/components/schemas/CreateHypervisorGroupReq"
      - required:
        - hypervisorType
        - keynoteAddress
        - password
        - userName
        type: object
        properties:
          hypervisorType:
            type: string
            enum:
            - OPENSTACK
            x-terraform-constant: OPENSTACK
          keynoteAddress:
            type: string
            description: 'OpenStack KeyNote address '
          userName:
            type: string
            description: 'OpenStack userName '
          password:
            type: string
            description: 'OpenStack password '
          openstackDomain:
            type: string
            description: 'OpenStack Domain Name '
        description: Create a hypervisor group with OpenStack as the destination vendor
    CreateHypervisorGroupOracleCloud:
      title: OracleCloud
      allOf:
      - $ref: "#/components/schemas/CreateHypervisorGroupReq"
      - required:
        - fingerPrint
        - privateKeyFileName
        - regionName
        - tenancyOCId
        - userOCId
        type: object
        properties:
          hypervisorType:
            type: string
            enum:
            - ORACLE_CLOUD_INFRASTRUCTURE
            x-terraform-constant: ORACLE_CLOUD_INFRASTRUCTURE
          tenancyOCId:
            type: string
            description: OCID for the tenant.
          userOCId:
            type: string
            description: OCID for the admin user for the hypervisor
          fingerPrint:
            type: string
            description: Finger print for the private key
          privateKeyFileName:
            type: string
            description: File Name for the private key
          privateKeyPassword:
            type: string
            description: password for the private key.This is the passphrase that
              was used to encrypt the private key.
          regionName:
            type: string
            description: home region for the tenant
        description: Create a hypervisor group with oracleCloud as the destination
          vendor
    CreateHypervisorGroupAliCloud:
      title: AliCloud
      allOf:
      - $ref: "#/components/schemas/CreateHypervisorGroupReq"
      - required:
        - accessKey
        - hypervisorType
        - secretKey
        type: object
        properties:
          hypervisorType:
            type: string
            enum:
            - ALIBABA_CLOUD
            x-terraform-constant: ALIBABA_CLOUD
          accessKey:
            type: string
            description: Access key of alibaba cloud
          secretKey:
            type: string
            description: secret key of alibaba cloud
        description: Create a hypervisor group with Ali Baba as the destination vendor
    CreateHypervisorGroupOracleVM:
      title: OracleVM
      allOf:
      - $ref: "#/components/schemas/CreateHypervisorGroupReq"
      - required:
        - hypervisorType
        - oracleVMManager
        - password
        - userName
        type: object
        properties:
          hypervisorType:
            type: string
            enum:
            - ORACLE_VM
            x-terraform-constant: ORACLE_VM
          oracleVMManager:
            type: string
            description: oracle VM Manager
          userName:
            type: string
            description: Username of the oracle VM info
          password:
            type: string
            description: password of the oracle VM info
        description: Create a hypervisor group with Oracle VM as the destination vendor
    RedHatOpenShiftGluster:
      title: RedHatOpenShift
      required:
      - hostName
      type: object
      properties:
        hostName:
          type: string
          description: 'Gluster Host Hostname '
        authType:
          type: integer
          description: 'Gluster Host authtype '
          format: int32
        credentials:
          $ref: "#/components/schemas/UserNamePassword"
    CreateHypervisorGroupRedHatOpenShift:
      title: VCloud
      allOf:
      - $ref: "#/components/schemas/CreateHypervisorGroupReq"
      - required:
        - glusterHostCredentials
        - hostName
        - hypervisorType
        - password
        - userName
        type: object
        properties:
          hypervisorType:
            type: string
            enum:
            - REDHAT_OPENSHIFT
            x-terraform-constant: REDHAT_OPENSHIFT
          serverName:
            type: string
            description: 'redHatOpenShift hostname '
          userName:
            type: string
            description: 'redHatOpenShift userName '
          password:
            type: string
            description: 'redHatOpenShift password '
          glusterHostCredentials:
            $ref: "#/components/schemas/RedHatOpenShiftGluster"
        description: Create a hypervisor group with openShift as the destination vendor
    CreateHypervisorGroupVCloud:
      title: VCloud
      allOf:
      - $ref: "#/components/schemas/CreateHypervisorGroupReq"
      - required:
        - hostname
        - hypervisorType
        type: object
        properties:
          hypervisorType:
            type: string
            enum:
            - VCLOUD
          vOrganizationName:
            type: string
            description: Organization name of VMware Cloud Director
          vOrganizationGuid:
            type: string
            description: Organization Guid of VMware Cloud Director
          vCloudDirector:
            type: string
            description: VMware Cloud Director Name
          hostName:
            type: string
            description: VMware Cloud Director hostname or organization guid if org
              client
          userName:
            type: string
            description: VMware Cloud Director username
          password:
            type: string
            description: VMware Cloud Director password
          createOrgAccount:
            type: boolean
            description: True if organization account to be used
            default: false
          autoCompany:
            type: string
            description: indicates the mode for company association
            enum:
            - AUTO_CREATE_NEW
            - USE_EXISTING
            - DO_NOT_AUTO_CREATE
          companyId:
            type: integer
            description: company id is required if use existing mode is selected for
              org client
            format: int32
          companyName:
            type: string
            description: company name is required for org client
        description: Create a hypervisor group with VMware Cloud Director as the destination
          vendor
    CreateHypervisorGroupAzureStackHCI:
      title: AzureStackHCI
      allOf:
      - $ref: "#/components/schemas/CreateHypervisorGroupReq"
      - required:
        - clusterName
        - hypervisorType
        - password
        - userName
        type: object
        properties:
          hypervisorType:
            type: string
            enum:
            - AZURE_STACK_HCI
            x-terraform-constant: AZURE_STACK_HCI
          clusterName:
            type: string
            description: 'Azure Stack HCI cluster name '
          userName:
            type: string
            description: 'Azure Stack HCI userName '
          password:
            type: string
            description: 'Azure Stack HCI password '
        description: Create a hypervisor group with Azure Stack HCI as the destination
          vendor
    UpdateHypervisorGroupVMWare:
      title: VMWare
      allOf:
      - $ref: "#/components/schemas/UpdateHypervisorGroupReq"
      - type: object
        properties:
          hypervisorType:
            type: string
            enum:
            - VMW
          vcenterHostName:
            type: string
            description: Vcenter hostname
          userName:
            type: string
            description: Vcenter username
          password:
            type: string
            description: Vcenter password
        description: Update a hypervisor group with VMWare as the destination vendor
    UpdateHypervisorGroupHyperV:
      title: HyperV
      allOf:
      - $ref: "#/components/schemas/UpdateHypervisorGroupReq"
      - type: object
        properties:
          hypervisorType:
            type: string
            enum:
            - Hyper-V
          serverName:
            type: string
            description: 'Hyper-V hostname '
          userName:
            type: string
            description: 'Hyper-V userName '
          password:
            type: string
            description: 'Hyper-V password '
        description: Update a hypervisor group with VMWare as the destination vendor
    UpdateHypervisorGroupAmazon:
      title: Amazon
      allOf:
      - $ref: "#/components/schemas/UpdateHypervisorGroupReq"
      - type: object
        properties:
          hypervisorType:
            type: string
            enum:
            - Amazon
          accessKey:
            type: string
            description: Access Key of Amazon login
          RoleARN:
            type: string
            description: Role ARN for STS assume role with IAM policy
          secretKey:
            type: string
            description: secret Key of Amazon login
          Region:
            type: string
            description: AWS region if Iam role is used
          useIamRole:
            type: boolean
            description: if Iam Role is used
          useServiceAccount:
            type: string
            description: Clientname to be used as Admin Account
          useHostedInfrastructure:
            type: boolean
            description: Use Metallic hosted infrastructure
        description: Update a hypervisor group with Amazon as the destination vendor
    UpdateHypervisorGroupAzure:
      title: Azure
      allOf:
      - $ref: "#/components/schemas/UpdateHypervisorGroupReq"
      - type: object
        properties:
          hypervisorType:
            type: string
            enum:
            - Azure_V2
          tenantId:
            type: string
            description: Tenant id of Azure login Application
          serverName:
            type: string
            description: Client Name to Update
          subscriptionId:
            type: string
            description: 'subscription id of Azure '
          userName:
            type: string
            description: Application id of Azure login Application
          password:
            type: string
            description: Application Password of Azure login Application
          useManagedIdentity:
            type: boolean
            description: Use managed identities for Azure authentication
        description: Update a hypervisor group with Azure as the destination vendor
    UpdateHypervisorGroupAzureStack:
      title: AzureStack
      allOf:
      - $ref: "#/components/schemas/UpdateHypervisorGroupReq"
      - type: object
        properties:
          hypervisorType:
            type: string
            enum:
            - AZURE_STACK
          tenantId:
            type: string
            description: Tenant id of Azure Stack login Application
          serverName:
            type: string
            description: Client Name to Update
          subscriptionId:
            type: string
            description: subscription id of Azure Stack
          ApplicationId:
            type: string
            description: Application id of Azure login Application
          ApplicationPassword:
            type: string
            description: Application Password of Azure login Application
          resourceManagerURL:
            type: string
            description: Resource manager URL for Azure Stack client
          useManagedIdentity:
            type: boolean
            description: Use managed identities for Azure stack authentication
        description: Update a hypervisor group with Azure Stack as the destination
          vendor
    UpdateHypervisorGroupGoogleCloud:
      title: GoogleCloud
      allOf:
      - $ref: "#/components/schemas/UpdateHypervisorGroupReq"
      - type: object
        properties:
          hypervisorType:
            type: string
            enum:
            - GOOGLE_CLOUD
          serviceAccountId:
            type: string
            description: service account id of google cloud
          userName:
            type: string
            description: username of GCP login Application
          password:
            type: string
            description: Base64 encrypted Service Account ID
        description: Update a hypervisor group with Google Cloud as the destination
          vendor
    UpdateHypervisorGroupXen:
      title: Xen
      allOf:
      - $ref: "#/components/schemas/UpdateHypervisorGroupReq"
      - type: object
        properties:
          hypervisorType:
            type: string
            enum:
            - XEN_SERVER
          serverName:
            type: string
            description: 'Xen hostname '
          userName:
            type: string
            description: 'Xen userName '
          password:
            type: string
            description: 'Xen password '
        description: Update a hypervisor group with Google Cloud as the destination
          vendor
    UpdateHypervisorGroupRhev:
      title: Rhev
      allOf:
      - $ref: "#/components/schemas/UpdateHypervisorGroupReq"
      - type: object
        properties:
          hypervisorType:
            type: string
            enum:
            - REDHAT
          RhevMManager:
            type: string
            description: 'Rhev Manager '
          userName:
            type: string
            description: 'Rhev userName '
          password:
            type: string
            description: 'Rhev password '
        description: Update a hypervisor group with Rhev  as the destination vendor
    UpdateHypervisorGroupDocker:
      title: Docker
      allOf:
      - $ref: "#/components/schemas/UpdateHypervisorGroupReq"
      - type: object
        properties:
          hypervisorType:
            type: string
            enum:
            - DOCKER
          serverName:
            type: string
            description: 'Docker hostname '
          userName:
            type: string
            description: 'Docker userName '
          password:
            type: string
            description: 'Docker password '
        description: Update a hypervisor group with Docker as the destination vendor
    UpdateHypervisorGroupOpenstack:
      title: OpenStack
      allOf:
      - $ref: "#/components/schemas/UpdateHypervisorGroupReq"
      - type: object
        properties:
          hypervisorType:
            type: string
            enum:
            - OPENSTACK
          keynoteAddress:
            type: string
            description: 'OpenStack KeyNote address '
          userName:
            type: string
            description: 'OpenStack userName '
          password:
            type: string
            description: 'OpenStack password '
          openstackDomain:
            type: string
            description: 'OpenStack Domain Name '
        description: Update a hypervisor group with OpenStack as the destination vendor
    UpdateHypervisorGroupOracleCloud:
      title: OracleCloud
      allOf:
      - $ref: "#/components/schemas/UpdateHypervisorGroupReq"
      - type: object
        properties:
          hypervisorType:
            type: string
            enum:
            - ORACLE_CLOUD_INFRASTRUCTURE
          tenancyOCId:
            type: string
            description: OCID for the tenant.
          userOCId:
            type: string
            description: OCID for the admin user for the hypervisor
          fingerPrint:
            type: string
            description: Finger print for the private key
          privateKeyFileName:
            type: string
            description: File Name for the private key
          privateKeyPassword:
            type: string
            description: password for the private key.This is the passphrase that
              was used to encrypt the private key.
          regionName:
            type: string
            description: home region for the tenant
        description: Update a hypervisor group with oracleCloud as the destination
          vendor
    UpdateHypervisorGroupAliCloud:
      title: AliCLoud
      allOf:
      - $ref: "#/components/schemas/UpdateHypervisorGroupReq"
      - type: object
        properties:
          hypervisorType:
            type: string
            enum:
            - ALIBABA_CLOUD
          accessKey:
            type: string
            description: Access key of alibaba cloud
          secretKey:
            type: string
            description: secret key of alibaba cloud
          hostURL:
            type: string
            description: host URL of alibaba cloud
        description: Update a hypervisor group with Ali Baba as the destination vendor
    UpdateHypervisorGroupOracleVM:
      title: OracleVM
      allOf:
      - $ref: "#/components/schemas/UpdateHypervisorGroupReq"
      - type: object
        properties:
          hypervisorType:
            type: string
            enum:
            - ORACLE_VM
          oracleVMManager:
            type: string
            description: oracle VM Manager
          userName:
            type: string
            description: Username of the oracle VM info
          password:
            type: string
            description: password of the oracle VM info
        description: Update a hypervisor group with Oracle VM as the destination vendor
    UpdateHypervisorGroupRedHatOpenShift:
      title: RedHatOpenShift
      allOf:
      - $ref: "#/components/schemas/UpdateHypervisorGroupReq"
      - type: object
        properties:
          hypervisorType:
            type: string
            enum:
            - REDHAT_OPENSHIFT
          serverName:
            type: string
            description: 'redHatOpenShift hostname '
          userName:
            type: string
            description: 'redHatOpenShift userName '
          password:
            type: string
            description: 'redHatOpenShift password '
          glusterHostCredentials:
            $ref: "#/components/schemas/RedHatOpenShiftGluster"
        description: Update a hypervisor group with openShift as the destination vendor
    UpdateHypervisorGroupVCloud:
      title: VCloud
      allOf:
      - $ref: "#/components/schemas/UpdateHypervisorGroupReq"
      - required:
        - hypervisorType
        type: object
        properties:
          hypervisorType:
            type: string
            enum:
            - VCLOUD
          vOrganizationName:
            type: string
            description: Organization name of VCloud Director
          vOrganizationGuid:
            type: string
            description: Organization Guid of VCloud Director
          hostName:
            type: string
            description: VCloud Director Name
          vcenterHostName:
            type: string
            description: Vcenter hostname
          vcenterUserName:
            type: string
            description: Vcenter username
          vcenterPassword:
            type: string
            description: Vcenter password
          createOrgAccount:
            type: boolean
            description: True if organization account to be used
            default: false
          userName:
            type: string
            description: vCloud username
          password:
            type: string
            description: VCloud base 64 encoded password
        description: Update a hypervisor group with VMware Cloud Director as the destination
          vendor
    UpdateHypervisorGroupNutanix:
      title: Nutanix
      allOf:
      - $ref: "#/components/schemas/UpdateHypervisorGroupReq"
      - type: object
        properties:
          hypervisorType:
            type: string
            enum:
            - NUTANIX
          hostName:
            type: string
            description: 'Nutanix hostname '
          userName:
            type: string
            description: 'Nutanix userName '
          password:
            type: string
            description: 'Nutanix password '
        description: Update a hypervisor group with Nutanix as the destination vendor
    UpdateHypervisorGroupAzureStackHCI:
      title: AzureStackHCI
      allOf:
      - $ref: "#/components/schemas/UpdateHypervisorGroupReq"
      - type: object
        properties:
          hypervisorType:
            type: string
            enum:
            - AZURE_STACK_HCI
          clusterName:
            type: string
            description: 'Azure Stack HCI cluster name '
          userName:
            type: string
            description: 'Azure Stack HCI userName '
          password:
            type: string
            description: 'Azure Stack HCI password '
        description: Update a hypervisor group with Azure Stack HCI as the destination
          vendor
    VMHypervisorSecurityProp:
      type: object
      properties:
        clientOwners:
          type: string
          description: Client owners for the Hypervisor
        associatedUserGroups:
          type: array
          items:
            $ref: "#/components/schemas/IdName"
    hypervisorGeneralProperties:
      title: hypervisorGeneralProperties
      type: object
      properties:
        vendor:
          $ref: "#/components/schemas/VSVendor"
        vmBackupInfo:
          $ref: "#/components/schemas/vmBackupInfo"
        version:
          type: string
          description: Hypervisor OS version
      example:
        vmBackupInfo:
          vmPendingCount: 1
          vmProtectedCount: 5
          vmNotProtectedCount: 5
          vmNeverBackedUpCount: 2
          vmBackedUpWithErrorCount: 7
          vmTotalCount: 9
        vendor: NONE
        version: version
    hypervisorAccountDetails:
      title: hypervisorAccountDetails
      type: object
      properties:
        hostName:
          type: string
          description: Host Name
      example:
        hostName: hostName
    hypervisorMonitoringPolicy:
      type: object
      properties:
        id:
          type: integer
          description: Metrics Moitoring PolicyId
          format: int32
        name:
          type: string
          description: Metrics Moitoring Policy Name
          nullable: true
        isEnabled:
          type: boolean
          description: True if Metrics Monioring policy is enabled
      example:
        isEnabled: true
        name: name
        id: 6
    hypervisorSettings:
      title: hypervisorSettings
      type: object
      properties:
        regionInfo:
          $ref: "#/components/schemas/RegionInfo"
        timeZone:
          $ref: "#/components/schemas/IdName"
        metricsMonitoringPolicy:
          $ref: "#/components/schemas/hypervisorMonitoringPolicy"
        customAttributes:
          type: array
          description: Array of all the customAttributes associated with hypervisor.
          items:
            $ref: "#/components/schemas/hypervisorCustomAttribute"
        guestCredentials:
          $ref: "#/components/schemas/UserNamePassword"
        applicationCredentials:
          $ref: "#/components/schemas/UserNamePassword"
        mountAccessNode:
          $ref: "#/components/schemas/IdName"
      example:
        metricsMonitoringPolicy:
          isEnabled: true
          name: name
          id: 6
        applicationCredentials: null
        guestCredentials:
          password: password
          name: name
        mountAccessNode: null
        regionInfo:
          displayName: displayName
          latitude: latitude
          name: name
          id: 7
          longitude: longitude
        timeZone: null
        customAttributes:
        - type: 1
          value: value
        - type: 1
          value: value
    hypervisorCustomAttribute:
      type: object
      properties:
        type:
          type: integer
          description: client custom attribute type . Ex- 3 - For client 8- For clientGroup
          format: int32
        value:
          type: string
          description: client/Client Group custom attribute value
          nullable: true
      example:
        type: 1
        value: value
    HypervisorPropertiesResp:
      type: object
      properties:
        id:
          type: integer
          format: int32
          x-terraform-id: true
        name:
          type: string
          description: Hypervisor Name
          nullable: true
        displayName:
          type: string
          description: Display Name
        instance:
          $ref: "#/components/schemas/IdName"
        general:
          $ref: "#/components/schemas/hypervisorGeneralProperties"
        accountDetails:
          $ref: "#/components/schemas/hypervisorAccountDetails"
        activityControl:
          $ref: "#/components/schemas/ActivityControlOptions"
        settings:
          $ref: "#/components/schemas/hypervisorSettings"
        accessNodeList:
          $ref: "#/components/schemas/accessNodeListModel"
        hypervisorCommonProperties:
          $ref: "#/components/schemas/hypervisorCommonProps"
        manageSnapshot:
          $ref: "#/components/schemas/IdName"
      example:
        activityControl:
          restoreActivityControlOptions: null
          backupActivityControlOptions:
            delayTime:
              timeZone: null
              time: 1
              value: value
            activityType: BACKUP
            enableAfterADelay: true
            enableActivityType: true
          enableBackup: true
          enableRestore: true
        general:
          vmBackupInfo:
            vmPendingCount: 1
            vmProtectedCount: 5
            vmNotProtectedCount: 5
            vmNeverBackedUpCount: 2
            vmBackedUpWithErrorCount: 7
            vmTotalCount: 9
          vendor: NONE
          version: version
        settings:
          metricsMonitoringPolicy:
            isEnabled: true
            name: name
            id: 6
          applicationCredentials: null
          guestCredentials:
            password: password
            name: name
          mountAccessNode: null
          regionInfo:
            displayName: displayName
            latitude: latitude
            name: name
            id: 7
            longitude: longitude
          timeZone: null
          customAttributes:
          - type: 1
            value: value
          - type: 1
            value: value
        accessNodeList:
          accessNodeMessage: accessNodeMessage
          resourcePoolName: resourcePoolName
          accessNode:
          - displayName: displayName
            name: name
            id: 8
            type: 9
          - displayName: displayName
            name: name
            id: 8
            type: 9
        instance:
          name: name
          id: 0
        hypervisorCommonProperties:
          isRegionBasedBackup: true
          isDeconfigured: true
          retirePhase: UNKNOWN
          isSnapBackupEnabled: true
          company: null
          isIndexingV2: true
        displayName: displayName
        accountDetails:
          hostName: hostName
        name: name
        id: 0
        manageSnapshot: null
    accessNodeListModel:
      title: accessNodeListModel
      type: object
      properties:
        accessNodeMessage:
          type: string
          nullable: true
        resourcePoolName:
          type: string
          nullable: true
        accessNode:
          type: array
          items:
            $ref: "#/components/schemas/accessNodeModel"
      example:
        accessNodeMessage: accessNodeMessage
        resourcePoolName: resourcePoolName
        accessNode:
        - displayName: displayName
          name: name
          id: 8
          type: 9
        - displayName: displayName
          name: name
          id: 8
          type: 9
    accessNodeModel:
      title: accessNodeModel
      type: object
      properties:
        id:
          type: integer
          format: int32
          x-terraform-set-key: true
        name:
          type: string
          nullable: true
        displayName:
          type: string
          description: Display name of the access node
          nullable: true
        type:
          type: integer
          description: "Type of access node , Ex: 3 - access Node , 28 - Access Node\
            \ Groups"
          format: int32
          x-terraform-set-key: true
      example:
        displayName: displayName
        name: name
        id: 8
        type: 9
    hypervisorCommonProps:
      title: hypervisorCommonProps
      type: object
      properties:
        isIndexingV2:
          type: boolean
          description: True if Indexing version is 2
        company:
          $ref: "#/components/schemas/IdName"
        isDeconfigured:
          type: boolean
          description: True if the hypervisor is deconfigured
        retirePhase:
          $ref: "#/components/schemas/RetireClientPhase"
        isSnapBackupEnabled:
          type: boolean
          description: True if the hypervisor is snap backup enabled
        isRegionBasedBackup:
          type: boolean
          description: True if region based backup is enabled
      example:
        isRegionBasedBackup: true
        isDeconfigured: true
        retirePhase: UNKNOWN
        isSnapBackupEnabled: true
        company: null
        isIndexingV2: true
    RetireClientPhase:
      title: RetireClientPhase
      type: string
      enum:
      - UNKNOWN
      - RETIRE_IN_PROGRESS
      - DECONFIGURED
    ActivityControlOptions:
      type: object
      properties:
        enableBackup:
          type: boolean
          description: true if Backup is enabled
        enableRestore:
          type: boolean
          description: true if Restore is enabled
        backupActivityControlOptions:
          $ref: "#/components/schemas/ActivityControlOptionsProp"
        restoreActivityControlOptions:
          $ref: "#/components/schemas/ActivityControlOptionsProp"
      example:
        restoreActivityControlOptions: null
        backupActivityControlOptions:
          delayTime:
            timeZone: null
            time: 1
            value: value
          activityType: BACKUP
          enableAfterADelay: true
          enableActivityType: true
        enableBackup: true
        enableRestore: true
    backupActivityControlOptionsProp:
      type: object
      properties:
        enableAfterDelay:
          type: boolean
          description: True if the activity will be enabled after a delay time interval
        delayTime:
          type: string
          description: Delayed by n Hrs
        timeZone:
          $ref: "#/components/schemas/IdName"
    ActivityControlOptionsProp:
      type: object
      properties:
        activityType:
          type: string
          description: denotes the activity type being considered
          enum:
          - BACKUP
          - RESTORE
          - ONLINECI
          - ARCHIVEPRUNE
        enableAfterADelay:
          type: boolean
          description: True if the activity will be enabled after a delay time interval
        enableActivityType:
          type: boolean
          description: True if the activity type is enabled
        delayTime:
          $ref: "#/components/schemas/ActivityControlTileDelayTime"
      example:
        delayTime:
          timeZone: null
          time: 1
          value: value
        activityType: BACKUP
        enableAfterADelay: true
        enableActivityType: true
    HypervisorListResp:
      type: object
      properties:
        id:
          type: integer
          description: This gives the id of the Hypervisor.
          format: int32
        name:
          type: string
          description: This give the name of the Hypervisor.
        displayName:
          type: string
          description: This gives the name of the Hypervisor as it shown on the admin
            console or GUI.
        hostName:
          type: string
          description: This give the host name of the Hypervisor.
        HypervisorType:
          $ref: "#/components/schemas/VSVendor"
        status:
          $ref: "#/components/schemas/RetireClientPhase"
        version:
          type: string
          description: VMware Vcenter Version
        instance:
          $ref: "#/components/schemas/IdName"
        clientActivityControl:
          $ref: "#/components/schemas/ActivityControlOptionsProp"
        tags:
          type: array
          description: Array of all the tags associated with hypervisor.
          items:
            $ref: "#/components/schemas/IdNameValue"
        commcell:
          $ref: "#/components/schemas/CommcellInfo"
        manageSnapshot:
          $ref: "#/components/schemas/IdName"
        isManagedIdentity:
          type: boolean
          description: True if hypervisor is configured using Azure Managed Service
            Identity.
        useHostedInfrastructure:
          type: boolean
          description: Use Metallic hosted infrastructure
          default: false
      example:
        isManagedIdentity: true
        hostName: hostName
        instance:
          name: name
          id: 0
        displayName: displayName
        useHostedInfrastructure: false
        version: version
        tags:
        - name: name
          id: 5
          value: value
        - name: name
          id: 5
          value: value
        HypervisorType: NONE
        clientActivityControl:
          delayTime:
            timeZone: null
            time: 1
            value: value
          activityType: BACKUP
          enableAfterADelay: true
          enableActivityType: true
        name: name
        commcell:
          name: name
        id: 6
        manageSnapshot: null
        status: UNKNOWN
    ClusterListResp:
      type: object
      properties:
        id:
          type: integer
          description: This gives the id of the cluster.
          format: int32
        name:
          type: string
          description: This give the name of the cluster.
        displayName:
          type: string
          description: This gives the name of the cluster as it shown on the admin
            console or GUI.
        hostName:
          type: string
          description: This give the host name of the cluster.
        clusterType:
          $ref: "#/components/schemas/VSVendor"
        status:
          type: string
          description: status of the cluster
        instance:
          $ref: "#/components/schemas/IdName"
        clientActivityControl:
          $ref: "#/components/schemas/ActivityControlOptionsProp"
      example:
        hostName: hostName
        clusterType: NONE
        instance:
          name: name
          id: 0
        displayName: displayName
        clientActivityControl:
          delayTime:
            timeZone: null
            time: 1
            value: value
          activityType: BACKUP
          enableAfterADelay: true
          enableActivityType: true
        name: name
        id: 6
        status: status
    ListHypervisors:
      title: ListHypervisors
      type: object
      properties:
        HypervisorCount:
          type: integer
          format: int32
        Hypervisors:
          type: array
          items:
            $ref: "#/components/schemas/HypervisorListResp"
      description: ""
      example:
        Hypervisors:
        - isManagedIdentity: true
          hostName: hostName
          instance:
            name: name
            id: 0
          displayName: displayName
          useHostedInfrastructure: false
          version: version
          tags:
          - name: name
            id: 5
            value: value
          - name: name
            id: 5
            value: value
          HypervisorType: NONE
          clientActivityControl:
            delayTime:
              timeZone: null
              time: 1
              value: value
            activityType: BACKUP
            enableAfterADelay: true
            enableActivityType: true
          name: name
          commcell:
            name: name
          id: 6
          manageSnapshot: null
          status: UNKNOWN
        - isManagedIdentity: true
          hostName: hostName
          instance:
            name: name
            id: 0
          displayName: displayName
          useHostedInfrastructure: false
          version: version
          tags:
          - name: name
            id: 5
            value: value
          - name: name
            id: 5
            value: value
          HypervisorType: NONE
          clientActivityControl:
            delayTime:
              timeZone: null
              time: 1
              value: value
            activityType: BACKUP
            enableAfterADelay: true
            enableActivityType: true
          name: name
          commcell:
            name: name
          id: 6
          manageSnapshot: null
          status: UNKNOWN
        HypervisorCount: 0
    ListClusters:
      title: ListClusters
      type: object
      properties:
        clusterCount:
          type: integer
          format: int32
        clusters:
          type: array
          items:
            $ref: "#/components/schemas/ClusterListResp"
      description: ""
      example:
        clusterCount: 0
        clusters:
        - hostName: hostName
          clusterType: NONE
          instance:
            name: name
            id: 0
          displayName: displayName
          clientActivityControl:
            delayTime:
              timeZone: null
              time: 1
              value: value
            activityType: BACKUP
            enableAfterADelay: true
            enableActivityType: true
          name: name
          id: 6
          status: status
        - hostName: hostName
          clusterType: NONE
          instance:
            name: name
            id: 0
          displayName: displayName
          clientActivityControl:
            delayTime:
              timeZone: null
              time: 1
              value: value
            activityType: BACKUP
            enableAfterADelay: true
            enableActivityType: true
          name: name
          id: 6
          status: status
    CreateETCDSubclientResp:
      type: object
      properties:
        subclientId:
          type: integer
          format: int32
        errorCode:
          type: integer
          format: int32
          default: 0
        errorMessage:
          type: string
          description: Response message
          default: ""
      example:
        subclientId: 5
        errorMessage: errorMessage
        errorCode: 5
    CreateClusterResp:
      type: object
      properties:
        clusterId:
          type: integer
          format: int32
        warningCode:
          type: integer
          format: int32
          default: 0
        errorCode:
          type: integer
          format: int32
          default: 0
        clusterName:
          type: string
          description: Name of the cluster created
        errorMessage:
          type: string
          description: Response message
        warningMessage:
          type: string
          description: Response message
          default: ""
        etcdSubclientResponse:
          type: array
          items:
            $ref: "#/components/schemas/CreateETCDSubclientResp"
      example:
        etcdSubclientResponse:
        - subclientId: 5
          errorMessage: errorMessage
          errorCode: 5
        - subclientId: 5
          errorMessage: errorMessage
          errorCode: 5
        warningCode: 6
        clusterName: clusterName
        errorMessage: errorMessage
        errorCode: 1
        warningMessage: warningMessage
        clusterId: 0
    CreateHypervisorResp:
      type: object
      properties:
        hypervisorId:
          type: integer
          format: int32
          x-terraform-id: true
        warningCode:
          type: integer
          format: int32
          default: 0
        errorCode:
          type: integer
          format: int32
          default: 0
        errorMessage:
          type: string
          description: Response message
        warningMessage:
          type: string
          description: Response message
          default: ""
      example:
        warningCode: 6
        errorMessage: errorMessage
        errorCode: 1
        warningMessage: warningMessage
        hypervisorId: 0
    DatastoreInventoryResponse:
      type: object
      properties:
        dataCenterName:
          type: string
          description: dataCenter Name of the datastore.
        dnsHostName:
          type: string
          description: dns Hostname  of the datastore.
        esxServerName:
          type: string
          description: esx server name  of the datastore.
        dataStore:
          type: array
          items:
            $ref: "#/components/schemas/dataStoreentityResponse"
      description: Inventory response of hypervisor for datastore entity
    dataStoreentityResponse:
      type: object
      properties:
        dataStoreName:
          type: string
          description: name  of the datastore.
        dataStoreLocation:
          type: string
          description: location  of the datastore.
        dataStoreType:
          type: string
          description: type  of the datastore.
      description: Inventory response of hypervisor for datastore entity
    DatastoreInventoryResponseList:
      title: DatastoreInventoryResponseList
      type: object
      properties:
        hostInfo:
          type: array
          items:
            $ref: "#/components/schemas/DatastoreInventoryResponse"
      description: To display the list of Inventory response of Datastore
    ResourcePoolInventoryResponse:
      type: object
      properties:
        dataCenterName:
          type: string
          description: dataCenter Name of the ResourcePool.
        dnsHostName:
          type: string
          description: dns Hostname  of the ResourcePool.
        esxServerName:
          type: string
          description: esx server name  of the ResourcePool.
        resources:
          type: array
          items:
            $ref: "#/components/schemas/resourcepoolentityResponse"
      description: Inventory response of hypervisor for ResourcePool entity
    resourcepoolentityResponse:
      type: object
      properties:
        resourcePoolPath:
          type: string
          description: path  of the resource pool.
        name:
          type: string
          description: name  of the resource pool.
        type:
          type: string
          description: type  of the resource pool.
      description: Inventory response of hypervisor for resource pool entity
    ResourcePoolInventoryResponseList:
      title: ResourcePoolInventoryResponseList
      type: object
      properties:
        hostInfo:
          type: array
          items:
            $ref: "#/components/schemas/ResourcePoolInventoryResponse"
      description: To display the list of Inventory response of Resource Pool
    NetworkInventoryResponseList:
      title: NetworkInventoryResponseList
      type: object
      properties:
        hostInfo:
          type: array
          items:
            $ref: "#/components/schemas/NetworkInventoryResponse"
      description: To display the list of Inventory response of network
    NetworkInventoryResponse:
      type: object
      properties:
        dataCenterName:
          type: string
          description: dataCenter Name of the Network.
        dnsHostName:
          type: string
          description: dns Hostname  of the Network.
        esxServerName:
          type: string
          description: esx server name  of the Network.
        networkSettings:
          type: array
          items:
            $ref: "#/components/schemas/IdName"
      description: Inventory response of hypervisor for Network entity
    VMSLASTATUS:
      type: string
      format: ""
      enum:
      - ALL
      - PROTECTED
      - NOT_PROTECTED
      - PENDING
      - BACKED_UP_WITH_ERROR
      - DISCOVERED
    AddLaptop:
      title: ""
      required:
      - clientNames
      - os
      - password
      - userName
      type: object
      properties:
        clientNames:
          type: array
          description: list of hostName of computers
          items:
            type: string
        os:
          type: string
          description: the os type of computers
          enum:
          - WINDOWS
          - UNIX_AND_MAC
        userName:
          type: string
          description: username required for authentication of jobs
        password:
          type: string
          description: password (base64 encoded) required for authentication of jobs
    AddLaptopResp:
      title: AddLaptopResp
      type: object
      properties:
        taskId:
          type: integer
          format: int32
        jobIds:
          type: array
          items:
            type: string
      example:
        jobIds:
        - jobIds
        - jobIds
        taskId: 0
    RegionInfo:
      title: RegionInfo
      type: object
      properties:
        id:
          type: integer
          description: Region Id
          format: int32
        name:
          type: string
          description: Region Name
        displayName:
          type: string
          description: Display Name of Region
        latitude:
          type: string
          description: Geolocation Latitude
        longitude:
          type: string
          description: Geolocation Longitude
      example:
        displayName: displayName
        latitude: latitude
        name: name
        id: 7
        longitude: longitude
    vmDiskFilterType:
      type: string
      format: ""
      enum:
      - NONE
      - DISK_PATH
      - DISK_PATTERN
      - DISK_VIRTUAL_DEVICE_NODE
      - DISK_DATASTORE
      - DISK_LABEL
      - DISK_TYPE
      - DISK_ADDRESS
      - CONTAINER_PATTERN
      - DISK_TAG
    vmDiskFilterProp:
      title: vmDiskFilterProp
      type: object
      properties:
        overwrite:
          type: boolean
          description: "True if content in vmgroup has to be overwritten, by default\
            \ it will append the content"
          default: false
        rules:
          type: array
          items:
            $ref: "#/components/schemas/vmDiskFilter"
      example:
        rules:
        - condition: null
          vmName: vmName
          name: name
          filterType: NONE
          overwrite: false
          value: value
          vmGuid: vmGuid
        - condition: null
          vmName: vmName
          name: name
          filterType: NONE
          overwrite: false
          value: value
          vmGuid: vmGuid
        overwrite: false
    vmDiskFilter:
      title: vmDiskFilter
      type: object
      properties:
        overwrite:
          type: boolean
          description: "True if disk filter in vmgroup has to be overwritten, by default\
            \ it will append the content"
          default: false
        filterType:
          $ref: "#/components/schemas/vmDiskFilterType"
        name:
          type: string
          description: The string to be filtered
        value:
          type: string
          description: "The value string to be filtered, in case of disk tag , value\
            \ of tag to be filtered"
        condition:
          $ref: "#/components/schemas/RuleOperationType"
        vmName:
          type: string
          description: "VM Name of the Virtual Machine whose disk has to be filtered\
            \ . This is optional. if not given, all disks of name and type from all\
            \ Vms added in content will be filtered"
        vmGuid:
          type: string
          description: "VM Guid of the Virtual Machine whose disk has to be filtered\
            \ . This is optional. if not given, all disks of name and type from all\
            \ Vms added in content will be filtered"
      example:
        condition: null
        vmName: vmName
        name: name
        filterType: NONE
        overwrite: false
        value: value
        vmGuid: vmGuid
    indexingInfo:
      title: indexingInfo
      type: object
      properties:
        status:
          $ref: "#/components/schemas/IndexingStatusType"
        message:
          type: string
          description: Indexing Message
      example:
        message: message
        status: NOT_APPLICABLE
    FirewallTopology:
      title: ""
      type: object
      properties:
        topology:
          $ref: "#/components/schemas/IdName"
        topologyType:
          $ref: "#/components/schemas/firewallTopologyTypes"
        clientType:
          $ref: "#/components/schemas/firewallClientType"
      example:
        clientType: SERVER
        topologyType: NETWORK_GATEWAY
        topology:
          name: name
          id: 0
    firewallTopologyTypes:
      title: firewallTopologyTypes
      type: string
      description: The type of topology of client groups (and sometimes network gateway)
        for this instance.
      enum:
      - NETWORK_GATEWAY
      - ONE_WAY
      - TWO_WAY
      - CASCADING_GATEWAYS
      - ONEWAY_FORWARDING
    firewallClientType:
      title: firewallClientType
      type: string
      description: The type of clients associated with the topology.
      enum:
      - SERVER
      - LAPTOP
    FirewallTopologyDetails:
      title: FirewallTopologyDetails
      type: object
      properties:
        topology:
          $ref: "#/components/schemas/IdName"
        topologyType:
          $ref: "#/components/schemas/firewallTopologyTypes"
        clientType:
          $ref: "#/components/schemas/firewallClientType"
        useWildCardProxy:
          type: boolean
          description: Flag determining wether network gateways are used to connect
            all infrastructure machines
        firewallGroups:
          type: array
          items:
            $ref: "#/components/schemas/FirewallTopologyGroups"
        encryptTraffic:
          type: boolean
          description: Flag determining if we want the data from tunnel to use HTTPS
            protocol
        tunnelProtocol:
          $ref: "#/components/schemas/FirewallTopologyTunnelProtocol"
        tunnelsPerRoute:
          type: integer
          description: The number of tunnel connections per route
          format: int32
      example:
        firewallGroups:
        - groupType: INTERNAL
          clientGroupId: 0
          advancedOptions:
            keepAliveInterval: 1
            tunnelPort: 6
          mnemonic: MY_COMMSERVE
        - groupType: INTERNAL
          clientGroupId: 0
          advancedOptions:
            keepAliveInterval: 1
            tunnelPort: 6
          mnemonic: MY_COMMSERVE
        clientType: SERVER
        useWildCardProxy: true
        topologyType: NETWORK_GATEWAY
        tunnelsPerRoute: 5
        topology:
          name: name
          id: 0
        tunnelProtocol: REGULAR
        encryptTraffic: true
    FirewallTopologyTunnelProtocol:
      title: FirewallTopologyTunnelProtocol
      type: string
      description: The protocol for outgoing communication
      enum:
      - REGULAR
      - ENCRYPTED
      - AUTHENTICATED
      - RAW
    FirewallTopologyGroups:
      title: ""
      type: object
      properties:
        groupType:
          $ref: "#/components/schemas/FirewallFwGroupType"
        clientGroupId:
          type: integer
          description: The id of the client group
          format: int32
        mnemonic:
          $ref: "#/components/schemas/FirewallGroupMnemonic"
        advancedOptions:
          $ref: "#/components/schemas/FirewallGroupAdvancedOptions"
      example:
        groupType: INTERNAL
        clientGroupId: 0
        advancedOptions:
          keepAliveInterval: 1
          tunnelPort: 6
        mnemonic: MY_COMMSERVE
    FirewallGroupAdvancedOptions:
      title: ""
      type: object
      properties:
        tunnelPort:
          type: integer
          description: The port defined for communications
          format: int32
        keepAliveInterval:
          type: integer
          description: "The interval in seconds for sending keep-alive packets, to\
            \ maintain the session if backup traffic has an extended pause."
          format: int32
      example:
        keepAliveInterval: 1
        tunnelPort: 6
    FirewallTopologyCreateReq:
      title: FirewallTopologyReq
      type: object
      properties:
        topologyName:
          type: string
        clientType:
          $ref: "#/components/schemas/firewallClientType"
        topologyType:
          $ref: "#/components/schemas/firewallTopologyTypes"
        tunnelProtocol:
          $ref: "#/components/schemas/FirewallTopologyTunnelProtocol"
        tunnelsPerRoute:
          type: integer
          description: The number of tunnel connections per route
          format: int32
        useWildCardProxy:
          type: boolean
          description: Flag determining wether network gateways are used to connect
            all infrastructure machines
        encryptTraffic:
          type: boolean
          description: Flag determining if we want the data from tunnel to use HTTPS
            protocol
        firewallGroups:
          type: array
          items:
            $ref: "#/components/schemas/FirewallTopologyGroups"
    FirewallTopologyCreateResp:
      title: FirewallTopologyCreateResp
      type: object
      properties:
        topologyId:
          type: integer
        error:
          $ref: "#/components/schemas/GenericResp"
      example:
        topologyId: 0
        error:
          errorMessage: errorMessage
          errorCode: 0
    FirewallFwGroupType:
      title: FirewallFwGroupType
      type: string
      enum:
      - INTERNAL
      - EXTERNAL
      - PROXIES
      - PROXY_PERIMETER
    FirewallGroupMnemonic:
      title: FirewallGroupMnemonic
      type: string
      description: Custom names(mnemonics) given to pre-defined smart client groups
      enum:
      - MY_COMMSERVE
      - MY_MEDIAAGENTS
      - MY_COMMSERVE_AND_MEDIAAGENTS
      - NONE
    SAML:
      title: SAML
      type: object
      properties:
        name:
          type: string
          description: SAML name.
        appKey:
          type: string
          description: Unique key for the SAML app
        description:
          type: string
          description: SAML description
        enabled:
          type: boolean
          description: Boolean to indicate whether SAML is enabled.
        autoCreateUser:
          type: boolean
          description: This auto-creates non-existing user if the user detail match
            with the identity rule.
        userGroups:
          type: array
          description: "By default, auto-created users will be associated to the Tenant\
            \ Users group of the company. Add mapping to override this behaviour for\
            \ a company."
          items:
            $ref: "#/components/schemas/CompanyWithUserGroupAssocDetails"
        nameIDAttribute:
          type: string
          description: nameID in SAML assertion subject is used to perform login.
        userGroup:
          $ref: "#/components/schemas/IdName"
        createdForCompany:
          $ref: "#/components/schemas/IdName"
        attributeMappings:
          type: array
          description: attribute mapping details
          items:
            $ref: "#/components/schemas/SAMLAttributes"
        identityProviderMetaData:
          $ref: "#/components/schemas/SAMLIDPMetaDataResp"
        serviceProviderMetaData:
          $ref: "#/components/schemas/SAMLSPMetaDataResp"
        associations:
          $ref: "#/components/schemas/SAMLAssociations"
      description: Get SAML response
      example:
        associations:
          userGroups:
          - null
          - null
          companies:
          - null
          - null
          emailSuffixes:
          - emailSuffixes
          - emailSuffixes
          domains:
          - null
          - null
        attributeMappings:
        - customAttribute: COMPANY_NAME
          SAMLAttribute: SAMLAttribute
        - customAttribute: COMPANY_NAME
          SAMLAttribute: SAMLAttribute
        description: description
        identityProviderMetaData:
          redirectUrl: redirectUrl
          logoutUrl: logoutUrl
          entityId: entityId
        createdForCompany: null
        enabled: true
        userGroups:
        - userGroupInfo: null
          companyInfo:
            name: name
            id: 0
        - userGroupInfo: null
          companyInfo:
            name: name
            id: 0
        autoCreateUser: true
        nameIDAttribute: nameIDAttribute
        name: name
        appKey: appKey
        userGroup: null
        serviceProviderMetaData:
          singleLogoutUrl: singleLogoutUrl
          singleSignOnUrl: singleSignOnUrl
          entityId: entityId
    SAMLIDPMetaDataResp:
      title: SAMLIDPMetaDataResp
      type: object
      properties:
        entityId:
          type: string
          description: Identity provider entity
        redirectUrl:
          type: string
          description: Identity provider redirect URL
        logoutUrl:
          type: string
          description: Identity Provider log-out URL
      description: SAML Identity provider meta data response
      example:
        redirectUrl: redirectUrl
        logoutUrl: logoutUrl
        entityId: entityId
    SAMLAssociations:
      title: SAMLAssociations
      type: object
      properties:
        emailSuffixes:
          type: array
          description: Email suffixes associated with SAML
          items:
            type: string
        companies:
          type: array
          description: Companies associated with SAML
          items:
            $ref: "#/components/schemas/IdName"
        domains:
          type: array
          description: Domains associated with SAML
          items:
            $ref: "#/components/schemas/IdName"
        userGroups:
          type: array
          description: user groups associated with SAML
          items:
            $ref: "#/components/schemas/IdName"
      example:
        userGroups:
        - null
        - null
        companies:
        - null
        - null
        emailSuffixes:
        - emailSuffixes
        - emailSuffixes
        domains:
        - null
        - null
    SAMLAttributes:
      title: SAMLAttributes
      type: object
      properties:
        customAttribute:
          $ref: "#/components/schemas/SAMLCustomAttributes"
        SAMLAttribute:
          type: string
          description: SAML attribute
      example:
        customAttribute: COMPANY_NAME
        SAMLAttribute: SAMLAttribute
    CompanyWithUserGroupAssocDetails:
      title: CompanyWithUserGroupAssocDetails
      type: object
      properties:
        companyInfo:
          $ref: "#/components/schemas/IdName"
        userGroupInfo:
          $ref: "#/components/schemas/IdName"
      description: This object will hold company and selected user group for saml.
      example:
        userGroupInfo: null
        companyInfo:
          name: name
          id: 0
    SAMLCustomAttributes:
      title: SAMLCustomAttributes
      type: string
      description: SAML custom attribute types
      enum:
      - COMPANY_NAME
      - EMAIL
      - SID
      - USER_GROUPS
      - USER_GUID
      - USER_NAME
    SAMLReq:
      title: SAMLReq
      required:
      - description
      - identityProviderMetaData
      - name
      type: object
      properties:
        name:
          type: string
          description: SAML name.
        description:
          type: string
          description: SAML description
        identityProviderMetaData:
          $ref: "#/components/schemas/SAMLIDPMetaDataReq"
        serviceProviderMetaData:
          $ref: "#/components/schemas/SAMLSPMetaData"
        associations:
          $ref: "#/components/schemas/SAMLAssociations"
      description: Create SAML request
    SAMLSPMetaData:
      title: SAMLSPMetaData
      required:
      - autoGenerateSPMetaData
      - serviceProviderEndpoint
      type: object
      properties:
        serviceProviderEndpoint:
          type: string
          description: web console URL.
        spAliases:
          type: array
          description: web console URL list.
          items:
            type: string
        autoGenerateSPMetaData:
          type: boolean
        certificateData:
          type: string
          description: certificate alias name.
        JKSPrivateKey:
          type: string
          description: key store password.
        jksFileContents:
          type: array
          description: jks file contents as byte array
          items:
            type: string
        aliasName:
          type: string
          description: certificate alias name
        privateKeyPassword:
          type: string
          description: certificate private key password
        keyStorePassword:
          type: string
          description: jks contents key store password.
      description: SAML service provider meta data
      x-examples:
        example-1:
          serviceProviderEndpoint: string
          autoGenerateSPMetaData: true
          certificateData: string
          JKSPrivateKey: string
    SAMLIDPMetaDataReq:
      title: SAMLIDPMetaDataReq
      required:
      - SAMLProtocolVersion
      - certificateData
      - entityId
      - logoutUrl
      - redirectUrl
      type: object
      properties:
        entityId:
          type: string
          description: Identity provider entity
        redirectUrl:
          type: string
          description: Identity provider redirect URL
        logoutUrl:
          type: string
          description: Identity Provider log-out URL
        certificateData:
          type: string
          description: IDP certificate public key
        secondaryCertificateData:
          type: string
          description: IDP's secondary certificate
        SAMLProtocolVersion:
          type: string
          description: 'SAML Protocol version '
      description: SAML IDP meta data request
      x-examples:
        example-1:
          entityId: http://servername/adfs/services/trust
          redirectUrl: https://servername/adfs/ls/
          logoutUrl: https://servername/adfs/ls/
          certificateData: MIIC4jCCAcqgA1hcmlvLm1hcSCdgTTDPDgDrTpcjdmOIWuDpiW6anBaH0jlCRi4IVuBkKJ1lYdh1mG96gfdh8oA103RvtxMWo3qq9muMDmxyRFgGFOuFod60In8QY9kNcsu+ujOWIFaKMI3iDBg2+esbI8S/rov1+0HRKqnP4BARdtK70JhOTikNwQsxINNZD2C79gQKrXItJtbmrPNLIF8Pf4UYrgFPA8RB+jQ3yJiVS67oQswX9UmeLjepVcCAwEAATANBgkqhkiG9w0BAQsFAAOCAQEAWOLOPLQxUfbbG9goGKHqXlaAxRrrb/+K2KpWke5NmpjQl+RRkaFkJCS/vQM14XMep+e/xajtc1Nxrwjjb699muGr0llC8UI5erDmwvlJ2RWNd8j4SBvWVFaarMdwlhd7Istj0ZB5aZr5ZN+scW7Irt7d0Vr1PODhybEwwlcDU5HnGzWacMttErBsCYSH90wO2mp6CFFQf9Ygn9jX4kbaSMiFO8IHG86vLT8TxYSP4GtbT5diICOVhO6ShkBtrfkTSytekwx8vFPKKCi5ml9pYa6CqKNl93QiLglPY9yJDJTP4v1TXv+M7ti+I39apDhXzD0ueB4m9iPcijn/FLyWdw==
          secondaryCertificateData: MIICoTCCAYkCBgGGWY9ArjANBgkqhkiG9w0BAQsFADAUMRIwEAYDVQQDDAlDT01NVkFVTFQwHhcNMjMwMjE2MDkzMDA1WhcNMzMwMjEzMDkzMDA1WjAUMRIwEAYDVQQDDAlDT01NVkFVTFQwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCZGzz5mTld1wuQC5+FA16MF2kfNmz+3OkOFJXOtngknp8iwiukne0q6G4Sf9qruOrHeFMumJmU4Hiv2WUZyhZkry2sV73tKvg5uvxHqqZpDAYKmbm\u002fBLzBDN8X0P9LQDxi4xjGXUVP02fFpr27a09ly5l8syfc2LkR\u002ftXgms7LEPBdB9sBlCz0wfvDFS7nXg8crp3GihoDIrgxtrT55L3r399g0LcGhR64XBSQBmG1QfzMIY65d\u002frGXIhkRgiT5OKYGIEiQDlY9WnnlhP<....................stripped
            for security.............>BFrko+7RF\u002f1i4UDywH7bLGCZal5NFg+QU4FRMBWjeSG8iddODQZXBsrl4SJnd81uFJgz\u002fY4DQeyL1NGA=
          SAMLProtocolVersion: urn:oasis:names:tc:SAML:2.0:protocol
    SAMLSPMetaDataResp:
      title: SAMLSPMetaDataResp
      type: object
      properties:
        entityId:
          type: string
          description: Service provider entity
        singleSignOnUrl:
          type: string
          description: single sign on URL
        singleLogoutUrl:
          type: string
          description: single log out url
      example:
        singleLogoutUrl: singleLogoutUrl
        singleSignOnUrl: singleSignOnUrl
        entityId: entityId
    SAMLUpdate:
      title: SAMLUpdate
      type: object
      properties:
        description:
          type: string
          description: SAML description
        enabled:
          type: boolean
          description: Boolean to indicate whether SAML is enabled.
        autoCreateUser:
          type: boolean
          description: This auto-creates non-existing user if the user detail match
            with the identity rule.
        userGroups:
          type: array
          description: "By default, auto-created users will be associated to the Tenant\
            \ Users group of the company. Add mapping to override this behaviour for\
            \ a company."
          items:
            $ref: "#/components/schemas/CompanyWithUserGroupAssocDetails"
        nameIDAttribute:
          type: string
          description: nameID in SAML assertion subject is used to perform login.
        attributeMappings:
          type: array
          description: attribute mapping details
          items:
            $ref: "#/components/schemas/SAMLAttributes"
        identityProviderMetaData:
          $ref: "#/components/schemas/SAMLIDPMetaDataReq"
        serviceProviderMetaData:
          $ref: "#/components/schemas/SAMLSPMetaData"
        associations:
          $ref: "#/components/schemas/SAMLAssociations"
      description: Updates SAML details
    PlanEntityRuleInfo:
      title: PlanEntityRuleInfo
      required:
      - plan
      - rule
      type: object
      properties:
        rule:
          $ref: "#/components/schemas/IdName"
        plan:
          $ref: "#/components/schemas/IdNameGUID"
        workloads:
          type: array
          description: This will include list of apptypes that should be evaluated
            against workload for plan association
          items:
            $ref: "#/components/schemas/IdName"
        regions:
          type: array
          description: This will include list of regions that should be evaluated
            against workload region for plan association
          items:
            $ref: "#/components/schemas/IdNameGUID"
        tags:
          type: array
          description: This will include list of tags that should be evaluated against
            workload tags (if any) for plan association
          items:
            $ref: "#/components/schemas/PlanEntityRuleTag"
        serverGroups:
          type: array
          description: This will include list of Server groups that should be evaluated
            against workload server group for plan association
          items:
            $ref: "#/components/schemas/IdNameGUID"
        rank:
          type: integer
          description: This will suggest rank/priority of the plan rule.
          format: int32
        solutions:
          type: array
          description: This will include list of solutions that should be evaluated
            against workload for plan association.
          items:
            $ref: "#/components/schemas/IdName"
        company:
          $ref: "#/components/schemas/IdName"
        globalConfigInfo:
          $ref: "#/components/schemas/GlobalConfigInfo"
      description: This object will hold each plan rule details.
      example:
        serverGroups:
        - null
        - null
        regions:
        - null
        - null
        solutions:
        - null
        - null
        workloads:
        - null
        - null
        globalConfigInfo:
          scopeFilterQuery: scopeFilterQuery
          applyOnAllCommCells: true
          commcells:
          - name: name
            guid: guid
            id: 5
          - name: name
            guid: guid
            id: 5
          scope: scope
          isMarkedForDeletion: true
          name: name
          id: id
          status: status
        rule:
          name: name
          id: 0
        rank: 6
        company: null
        plan:
          GUID: GUID
          name: name
          id: 0
        tags:
        - GUID: GUID
          name: name
          id: 0
          value: value
        - GUID: GUID
          name: name
          id: 0
          value: value
    CreatePlanEntityRule:
      title: CreatePlanEntityRule
      required:
      - plan
      type: object
      properties:
        plan:
          $ref: "#/components/schemas/IdNameGUID"
        rank:
          type: integer
          description: "Optional field to suggest priority/rank of the rule. If not\
            \ present, we will process rule in the same order they are created."
          format: int32
        workloads:
          type: array
          description: This will include list of apptypes that should be evaluated
            against workload apptype for plan association.
          items:
            $ref: "#/components/schemas/IdName"
        serverGroups:
          type: array
          description: This will include list of Server groups that should be evaluated
            against workload server group for plan association.
          items:
            $ref: "#/components/schemas/IdNameGUID"
        regions:
          type: array
          description: This will include list of regions that should be evaluated
            against workload region for plan association.
          items:
            $ref: "#/components/schemas/IdNameGUID"
        solutions:
          type: array
          description: This will include list of solutions that should be evaluated
            against workload for plan association
          items:
            $ref: "#/components/schemas/IdName"
        company:
          $ref: "#/components/schemas/IdName"
        tags:
          type: array
          description: This will include list of tags that should be evaluated against
            workload for plan association
          items:
            $ref: "#/components/schemas/PlanEntityRuleTag"
        globalConfigInfo:
          $ref: "#/components/schemas/CreateGlobalConfigInfo"
      description: "This object will send details to create new plan rule. User can\
        \ provide all rule options or can specify a specific rule group. Be default,\
        \ for rule to be applicable for association to a workload,  ALL specified\
        \ rules in that Rule need to be matched."
    UpdatePlanEntityRule:
      title: UpdatePlanEntityRule
      required:
      - rule
      type: object
      properties:
        rule:
          $ref: "#/components/schemas/IdNameGUID"
        plan:
          $ref: "#/components/schemas/IdNameGUID"
        workloads:
          type: array
          description: This will include list of apptypes that should be evaluated
            against workload apptype for plan association.
          items:
            $ref: "#/components/schemas/IdName"
        serverGroups:
          type: array
          description: This will include list of Server groups that should be evaluated
            against workload server group for plan association.
          items:
            $ref: "#/components/schemas/IdNameGUID"
        regions:
          type: array
          description: This will include list of regions that should be evaluated
            against workload region for plan association.
          items:
            $ref: "#/components/schemas/IdNameGUID"
        rank:
          type: integer
          description: "[Optional] - This field will suggest rank/priority of rule."
          format: int32
        solutions:
          type: array
          description: This will include list of solutions that should be evaluated
            against workload for plan association.
          items:
            $ref: "#/components/schemas/IdName"
        tags:
          type: array
          description: This will include list of tags that should be evaluated against
            workload for plan association
          items:
            $ref: "#/components/schemas/PlanEntityRuleTag"
      description: |-
        Plan entity rule update object. Fields in this object need to be populated to suggest what need to be changed in the rule.
        User can provide all rule options or can specify a specific rule group. Be default, for rule to be applicable for association to a workload,  ALL specified rules in that Rule need to be matched.
    PlanEntityRuleList:
      title: PlanEntityRuleList
      type: object
      properties:
        rules:
          type: array
          description: list of rules
          items:
            $ref: "#/components/schemas/PlanEntityRuleInfo"
      description: List holding details of various plan rules
      example:
        rules:
        - serverGroups:
          - null
          - null
          regions:
          - null
          - null
          solutions:
          - null
          - null
          workloads:
          - null
          - null
          globalConfigInfo:
            scopeFilterQuery: scopeFilterQuery
            applyOnAllCommCells: true
            commcells:
            - name: name
              guid: guid
              id: 5
            - name: name
              guid: guid
              id: 5
            scope: scope
            isMarkedForDeletion: true
            name: name
            id: id
            status: status
          rule:
            name: name
            id: 0
          rank: 6
          company: null
          plan:
            GUID: GUID
            name: name
            id: 0
          tags:
          - GUID: GUID
            name: name
            id: 0
            value: value
          - GUID: GUID
            name: name
            id: 0
            value: value
        - serverGroups:
          - null
          - null
          regions:
          - null
          - null
          solutions:
          - null
          - null
          workloads:
          - null
          - null
          globalConfigInfo:
            scopeFilterQuery: scopeFilterQuery
            applyOnAllCommCells: true
            commcells:
            - name: name
              guid: guid
              id: 5
            - name: name
              guid: guid
              id: 5
            scope: scope
            isMarkedForDeletion: true
            name: name
            id: id
            status: status
          rule:
            name: name
            id: 0
          rank: 6
          company: null
          plan:
            GUID: GUID
            name: name
            id: 0
          tags:
          - GUID: GUID
            name: name
            id: 0
            value: value
          - GUID: GUID
            name: name
            id: 0
            value: value
    StatusModel:
      title: StatusModel
      type: object
      properties:
        status:
          type: boolean
      example:
        status: true
    RegionSummary:
      title: RegionSummary
      type: object
      properties:
        id:
          type: integer
          description: ""
          format: int32
        name:
          type: string
        displayName:
          type: string
        regionType:
          $ref: "#/components/schemas/RegionType"
        locations:
          minItems: 1
          uniqueItems: true
          type: array
          description: List of locations in the region
          items:
            $ref: "#/components/schemas/LocationSummary"
        associatedServers:
          type: integer
          description: Number of servers associated to the region
          format: int32
        associatedRegionBasedPlans:
          type: integer
          description: Number of plans associated to the region
          format: int32
        company:
          $ref: "#/components/schemas/IdName"
        globalConfigInfo:
          $ref: "#/components/schemas/GlobalConfigInfo"
      description: Summary of the region
      example:
        regionType: DEFAULT
        displayName: displayName
        name: name
        globalConfigInfo:
          scopeFilterQuery: scopeFilterQuery
          applyOnAllCommCells: true
          commcells:
          - name: name
            guid: guid
            id: 5
          - name: name
            guid: guid
            id: 5
          scope: scope
          isMarkedForDeletion: true
          name: name
          id: id
          status: status
        locations:
        - country: country
          city: city
          state: state
        - country: country
          city: city
          state: state
        company:
          name: name
          id: 0
        id: 0
        associatedRegionBasedPlans: 1
        associatedServers: 6
    RegionType:
      title: RegionType
      type: string
      description: Type of region
      enum:
      - DEFAULT
      - AZURE
      - AWS
      - USER_CREATED
      - OCI
      - GCP
    RegionsListResp:
      title: RegionsListResp
      type: object
      properties:
        regions:
          uniqueItems: true
          type: array
          description: Regions list
          items:
            $ref: "#/components/schemas/RegionSummary"
      description: List of regions
      example:
        regions:
        - regionType: DEFAULT
          displayName: displayName
          name: name
          globalConfigInfo:
            scopeFilterQuery: scopeFilterQuery
            applyOnAllCommCells: true
            commcells:
            - name: name
              guid: guid
              id: 5
            - name: name
              guid: guid
              id: 5
            scope: scope
            isMarkedForDeletion: true
            name: name
            id: id
            status: status
          locations:
          - country: country
            city: city
            state: state
          - country: country
            city: city
            state: state
          company:
            name: name
            id: 0
          id: 0
          associatedRegionBasedPlans: 1
          associatedServers: 6
        - regionType: DEFAULT
          displayName: displayName
          name: name
          globalConfigInfo:
            scopeFilterQuery: scopeFilterQuery
            applyOnAllCommCells: true
            commcells:
            - name: name
              guid: guid
              id: 5
            - name: name
              guid: guid
              id: 5
            scope: scope
            isMarkedForDeletion: true
            name: name
            id: id
            status: status
          locations:
          - country: country
            city: city
            state: state
          - country: country
            city: city
            state: state
          company:
            name: name
            id: 0
          id: 0
          associatedRegionBasedPlans: 1
          associatedServers: 6
    LocationDetails:
      title: LocationDetails
      required:
      - country
      - latitude
      - longitude
      type: object
      properties:
        city:
          type: string
          description: Name of city
        state:
          type: string
          description: Name of state
        country:
          type: string
          description: Name of country
        latitude:
          type: number
          description: Latitude for the location
          format: double
        longitude:
          type: number
          description: Longitude for the location
          format: double
      description: Details for a location in a region
    CreateRegion:
      title: CreateRegion
      required:
      - locations
      - name
      type: object
      properties:
        name:
          type: string
          description: Region name
        type:
          type: string
          description: Type of the region
          default: USER_CREATED
          enum:
          - USER_CREATED
          - AWS
          - AZURE
          - OCI
          - GCP
        locations:
          minItems: 1
          uniqueItems: true
          type: array
          description: List of locations which are part of the region
          items:
            $ref: "#/components/schemas/LocationDetails"
        globalConfigInfo:
          $ref: "#/components/schemas/CreateGlobalConfigInfo"
      description: Details of the new region
    LocationSummary:
      title: LocationSummary
      type: object
      properties:
        city:
          type: string
        state:
          type: string
        country:
          type: string
      description: Summary of a location in a region
      example:
        country: country
        city: city
        state: state
    BlackoutWindowsListResponse:
      type: object
      properties:
        blackoutWindows:
          type: array
          description: Returns a summary of all blackout windows
          items:
            $ref: "#/components/schemas/BlackoutWindowSummary"
      example:
        blackoutWindows:
        - allDays:
          - days:
            - SUNDAY
            - SUNDAY
            time:
              start: 6
              end: 1
          - days:
            - SUNDAY
            - SUNDAY
            time:
              start: 6
              end: 1
          betweenDates: null
          name: name
          company:
            name: name
            id: 0
          id: 0
        - allDays:
          - days:
            - SUNDAY
            - SUNDAY
            time:
              start: 6
              end: 1
          - days:
            - SUNDAY
            - SUNDAY
            time:
              start: 6
              end: 1
          betweenDates: null
          name: name
          company:
            name: name
            id: 0
          id: 0
    BlackoutWindowSummary:
      type: object
      properties:
        id:
          type: integer
          description: blackout window Id
          format: int32
        name:
          type: string
          description: blackout window name
        company:
          $ref: "#/components/schemas/IdName"
        allDays:
          type: array
          description: Days of the week along with the time on which the black out
            window will be in effect.
          items:
            $ref: "#/components/schemas/DaysAndTimes"
        betweenDates:
          $ref: "#/components/schemas/StartEnd"
      description: company refers to company to which the blackout window is associated.
        dates refers to the dates where the blackout window will be in effect. Dates
        are given in unix time format.doNotRunBetween refers to the time between which
        jobs cannot be run. The time is provided in seconds.
      example:
        allDays:
        - days:
          - SUNDAY
          - SUNDAY
          time:
            start: 6
            end: 1
        - days:
          - SUNDAY
          - SUNDAY
          time:
            start: 6
            end: 1
        betweenDates: null
        name: name
        company:
          name: name
          id: 0
        id: 0
    V4BlackoutWindowsListResponse:
      type: object
      properties:
        blackoutWindows:
          type: array
          description: Returns a summary of all blackout windows
          items:
            $ref: "#/components/schemas/V4BlackoutWindowSummary"
      example:
        blackoutWindows:
        - betweenDates:
            start: 6
            end: 1
          name: name
          days:
          - SUNDAY
          - SUNDAY
          company:
            name: name
            id: 0
          id: 0
          time:
          - null
          - null
        - betweenDates:
            start: 6
            end: 1
          name: name
          days:
          - SUNDAY
          - SUNDAY
          company:
            name: name
            id: 0
          id: 0
          time:
          - null
          - null
    V4BlackoutWindowSummary:
      type: object
      properties:
        id:
          type: integer
          description: blackout window Id
          format: int32
        name:
          type: string
          description: blackout window name
        company:
          $ref: "#/components/schemas/IdName"
        days:
          type: array
          description: Days of the week on which the black out window will be in effect.
          items:
            $ref: "#/components/schemas/DayOfTheWeek"
        betweenDates:
          $ref: "#/components/schemas/StartEnd"
        time:
          type: array
          description: Refers to the time between which the blackout window will be
            in effect. It has to be provided in seconds.
          items:
            $ref: "#/components/schemas/StartEnd"
      description: company refers to company to which the blackout window is associated.
        dates refers to the dates where the blackout window will be in effect. Dates
        are given in unix time format.doNotRunBetween refers to the time between which
        jobs cannot be run. The time is provided in seconds.
      example:
        betweenDates:
          start: 6
          end: 1
        name: name
        days:
        - SUNDAY
        - SUNDAY
        company:
          name: name
          id: 0
        id: 0
        time:
        - null
        - null
    DaysAndTimes:
      type: object
      properties:
        days:
          type: array
          description: Days of the week when the blackout window will be in effect.
          items:
            $ref: "#/components/schemas/DayOfTheWeek"
        time:
          $ref: "#/components/schemas/StartEnd"
      description: Days of the week along with the time on which the black out window
        will be in effect
      example:
        days:
        - SUNDAY
        - SUNDAY
        time:
          start: 6
          end: 1
    StartEnd:
      type: object
      properties:
        start:
          type: integer
          description: the blackout window comes into effect at this point.
          format: int64
        end:
          type: integer
          description: the blackout window is no longer in effect from this point
            on.
          format: int64
      example:
        start: 6
        end: 1
    CreateBlackoutWindow:
      required:
      - name
      type: object
      properties:
        name:
          type: string
          description: Name of the blackout window to be created.
        company:
          $ref: "#/components/schemas/IdName"
        backupOperations:
          type: array
          description: Refers to backup types to include in the blackout window
          items:
            type: string
            enum:
            - FULL
            - INCREMENTAL_AND_DIFFERENTIAL
            - SYNTHETIC_FULL
            - TRANSACTION_LOG
            - ALL_OPERATIONS
        allDays:
          type: array
          description: Days of the week along with the time on which the black out
            window will be in effect.
          items:
            $ref: "#/components/schemas/DaysAndTimes"
        weeks:
          type: array
          description: Refers to the weeks of the month that the blackout window will
            be in effect.
          items:
            $ref: "#/components/schemas/WeekOfMonth"
        betweenDates:
          $ref: "#/components/schemas/StartEnd"
        doNotSubmitJob:
          type: boolean
          description: "Allows or Denies submitting a job when the blackout window\
            \ is in effect. If set to false, the job is submitted and resumed once\
            \ the blackout window ends."
      description: betweenDates refers to the dates where the blackout window will
        be in effect. Dates have to be given in unix time format. time has to be provided
        in seconds. company refers to company to which the blackout window is associated.Id
        is given first preference if both are id and name are provided.
    V4CreateBlackoutWindow:
      required:
      - name
      type: object
      properties:
        name:
          type: string
          description: Name of the blackout window to be created.
        company:
          $ref: "#/components/schemas/IdName"
        backupOperations:
          type: array
          description: Refers to backup types to include in the blackout window
          items:
            type: string
            enum:
            - FULL
            - INCREMENTAL_AND_DIFFERENTIAL
            - SYNTHETIC_FULL
            - TRANSACTION_LOG
            - ALL_OPERATIONS
        days:
          type: array
          description: Days of the week when the blackout window will be in effect.
          items:
            $ref: "#/components/schemas/DayOfTheWeek"
        weeks:
          type: array
          description: Refers to the weeks of the month that the blackout window will
            be in effect.
          items:
            $ref: "#/components/schemas/WeekOfMonth"
        time:
          type: array
          description: Refers to the time between which the blackout window will be
            in effect. It has to be provided in seconds
          items:
            $ref: "#/components/schemas/StartEnd"
        betweenDates:
          $ref: "#/components/schemas/StartEnd"
        doNotSubmitJob:
          type: boolean
          description: "Allows or Denies submitting a job when the blackout window\
            \ is in effect. If set to false, the job is submitted and resumed once\
            \ the blackout window ends."
      description: betweenDates refers to the dates where the blackout window will
        be in effect. Dates have to be given in unix time format. time has to be provided
        in seconds. company refers to company to which the blackout window is associated.Id
        is given first preference if both are id and name are provided.
    BlackoutWindow:
      type: object
      properties:
        id:
          type: integer
          description: Id of the blackout window.
          format: int32
        name:
          type: string
          description: Name of the blackout window.
        company:
          $ref: "#/components/schemas/IdName"
        backupOperations:
          type: array
          description: backupOperations refers to the backup types to include in the
            blackout window
          items:
            $ref: "#/components/schemas/BackupOperations"
        allDays:
          type: array
          description: Days of the week along with the time on which the black out
            window will be in effect.
          items:
            $ref: "#/components/schemas/DaysAndTimes"
        weeks:
          type: array
          description: Refers to the weeks of the month that the blackout window will
            be in effect and jobs will not run.
          items:
            $ref: "#/components/schemas/WeekOfMonth"
        betweenDates:
          $ref: "#/components/schemas/StartEnd"
        doNotSubmitJob:
          type: boolean
          description: "Allows or Denies submitting a job when the blackout window\
            \ is in effect. If allowed, the job is submitted and resumed once the\
            \ blackout window ends."
      description: company refers to company to which the blackout window is associated.
        Dates are provided in unix time format.
      example:
        doNotSubmitJob: true
        allDays:
        - days:
          - SUNDAY
          - SUNDAY
          time:
            start: 6
            end: 1
        - days:
          - SUNDAY
          - SUNDAY
          time:
            start: 6
            end: 1
        betweenDates:
          start: 6
          end: 1
        weeks:
        - FIRST
        - FIRST
        name: name
        company:
          name: name
          id: 0
        id: 0
        backupOperations:
        - FULL
        - FULL
    V4BlackoutWindow:
      type: object
      properties:
        id:
          type: integer
          description: Id of the blackout window.
          format: int32
        name:
          type: string
          description: Name of the blackout window.
        company:
          $ref: "#/components/schemas/IdName"
        backupOperations:
          type: array
          description: backupOperations refers to the backup types to include in the
            blackout window
          items:
            $ref: "#/components/schemas/BackupOperations"
        days:
          type: array
          description: Days of the week when the blackout window will be in effect
            and jobs will not run.
          items:
            $ref: "#/components/schemas/DayOfTheWeek"
        weeks:
          type: array
          description: Refers to the weeks of the month that the blackout window will
            be in effect and jobs will not run.
          items:
            $ref: "#/components/schemas/WeekOfMonth"
        time:
          type: array
          description: Refers to the time between which the blackout window will be
            in effect. It has to be provided in seconds.
          items:
            $ref: "#/components/schemas/StartEnd"
        betweenDates:
          $ref: "#/components/schemas/StartEnd"
        doNotSubmitJob:
          type: boolean
          description: "Allows or Denies submitting a job when the blackout window\
            \ is in effect. If allowed, the job is submitted and resumed once the\
            \ blackout window ends."
      description: company refers to company to which the blackout window is associated.
        Dates are provided in unix time format.
      example:
        doNotSubmitJob: true
        betweenDates: null
        weeks:
        - FIRST
        - FIRST
        name: name
        days:
        - SUNDAY
        - SUNDAY
        company:
          name: name
          id: 0
        id: 0
        time:
        - start: 6
          end: 1
        - start: 6
          end: 1
        backupOperations:
        - FULL
        - FULL
    UpdateBlackoutWindow:
      type: object
      properties:
        newName:
          type: string
          description: Refers to the newName given to the blackout Window.
        backupOperations:
          type: array
          description: Refers to backup types to include in the blackout window
          items:
            type: string
            enum:
            - FULL
            - INCREMENTAL_AND_DIFFERENTIAL
            - SYNTHETIC_FULL
            - TRANSACTION_LOG
            - ALL_OPERATIONS
        company:
          $ref: "#/components/schemas/IdName"
        allDays:
          type: array
          description: Days of the week along with the time on which the black out
            window will be in effect.
          items:
            $ref: "#/components/schemas/DaysAndTimes"
        weeks:
          type: array
          description: Refers to the weeks of the month that the blackout window will
            be in effect.
          items:
            $ref: "#/components/schemas/WeekOfMonth"
        betweenDates:
          $ref: "#/components/schemas/StartEnd"
        doNotSubmitJob:
          type: boolean
          description: "Allows or Denies submitting a job when the blackout window\
            \ is in effect. If allowed, the job is submitted and resumed once the\
            \ blackout window ends."
      description: company-refers to company to which the blackout window is associated.Dates
        have to be provided in unix time format.
    V4UpdateBlackoutWindow:
      type: object
      properties:
        newName:
          type: string
          description: Refers to the newName given to the blackout Window.
        backupOperations:
          type: array
          description: Refers to backup types to include in the blackout window
          items:
            type: string
            enum:
            - FULL
            - INCREMENTAL_AND_DIFFERENTIAL
            - SYNTHETIC_FULL
            - TRANSACTION_LOG
            - ALL_OPERATIONS
        company:
          $ref: "#/components/schemas/IdName"
        days:
          type: array
          description: Days of the week when the blackout window will be in effect.
          items:
            $ref: "#/components/schemas/DayOfTheWeek"
        weeks:
          type: array
          description: Refers to the weeks of the month that the blackout window will
            be in effect.
          items:
            $ref: "#/components/schemas/WeekOfMonth"
        time:
          type: array
          description: Refers to the time between which the blackout window will be
            in effect. It has to be provided in seconds
          items:
            $ref: "#/components/schemas/StartEnd"
        betweenDates:
          $ref: "#/components/schemas/StartEnd"
        doNotSubmitJob:
          type: boolean
          description: "Allows or Denies submitting a job when the blackout window\
            \ is in effect. If allowed, the job is submitted and resumed once the\
            \ blackout window ends."
      description: company-refers to company to which the blackout window is associated.Dates
        have to be provided in unix time format.
    BackupOperations:
      type: string
      format: ""
      enum:
      - FULL
      - INCREMENTAL_AND_DIFFERENTIAL
      - SYNTHETIC_FULL
      - TRANSACTION_LOG
      - ALL_OPERATIONS
      - DATA_RECOVERY
      - AUXILIARY_COPY
      - DISASTER_RECOVERY_BACKUP
      - DATA_VERIFICATION
      - ERASE_SPARE_MEDIA
      - SHELF_MANAGEMENT
      - DELETE_DATA_BY_BROWSING
      - DELETE_ARCHIVED_DATA
      - OFFLINE_CONTENT_INDEXING
      - ONLINE_CONTENT_INDEXING
      - INFORMATION_MANAGEMENT
      - MEDIA_REFRESHING
      - DATA_ANALYTICS
      - DATA_PRUNING
      - BACKUP_COPY
      - STUBBING
      - INSTALL_UPDATES
    IndexServersListResp:
      type: object
      properties:
        indexServers:
          type: array
          items:
            $ref: "#/components/schemas/IndexServerSummary"
      description: List of index servers
      example:
        indexServers:
        - OS: OS
          displayName: displayName
          cloudId: 6
          name: name
          id: 0
        - OS: OS
          displayName: displayName
          cloudId: 6
          name: name
          id: 0
    IndexServerSummary:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        displayName:
          type: string
          description: Display name for the index server
        OS:
          type: string
          description: Operating system of the index server
        cloudId:
          type: integer
          description: Id of the index server cloud
          format: int32
      description: Summary of an index server
      example:
        OS: OS
        displayName: displayName
        cloudId: 6
        name: name
        id: 0
    HybridFileStoresListResp:
      type: object
      properties:
        hybridFileStores:
          type: array
          description: Hybrid file stores list
          items:
            $ref: "#/components/schemas/HybridFileStoreSummary"
      description: List of hybrid file stores
      example:
        hybridFileStores:
        - statusSummary: statusSummary
          indexServer: null
          name: name
          id: 0
          plan:
            name: name
            id: 0
          status: READY
          fileServer: null
        - statusSummary: statusSummary
          indexServer: null
          name: name
          id: 0
          plan:
            name: name
            id: 0
          status: READY
          fileServer: null
    HybridFileStoreSummary:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        status:
          type: string
          description: Status of the hybrid file store
          enum:
          - READY
          - IN_PROCESS
        statusSummary:
          type: string
          description: A summary of the current status
        plan:
          $ref: "#/components/schemas/IdName"
        indexServer:
          $ref: "#/components/schemas/IdName"
        fileServer:
          $ref: "#/components/schemas/IdName"
      description: Summary of a hybrid file store
      example:
        statusSummary: statusSummary
        indexServer: null
        name: name
        id: 0
        plan:
          name: name
          id: 0
        status: READY
        fileServer: null
    ResourcePoolListResponse:
      type: object
      properties:
        resourcePools:
          type: array
          description: Resource Pool Summary.
          items:
            $ref: "#/components/schemas/ResourcePoolSummary"
      description: "A resource pool is a logical entity that combines infrastructure\
        \ settings such as storage, access nodes, and index servers."
      example:
        resourcePools:
        - indexServer: null
          associatedPlans: 1
          name: name
          accessNodes:
          - name: name
            id: 6
            type: CLIENT
          - name: name
            id: 6
            type: CLIENT
          id: 0
          storage:
            name: name
            id: 0
          solutionType: GENERIC
          isIndexingEnabledOnAnyPlan: true
        - indexServer: null
          associatedPlans: 1
          name: name
          accessNodes:
          - name: name
            id: 6
            type: CLIENT
          - name: name
            id: 6
            type: CLIENT
          id: 0
          storage:
            name: name
            id: 0
          solutionType: GENERIC
          isIndexingEnabledOnAnyPlan: true
    ResourcePoolSummary:
      type: object
      properties:
        id:
          type: integer
          description: Resource Pool id
          format: int32
        name:
          type: string
          description: Resource Pool name.
        solutionType:
          $ref: "#/components/schemas/SolutionTypes"
        storage:
          $ref: "#/components/schemas/IdName"
        indexServer:
          $ref: "#/components/schemas/IdName"
        accessNodes:
          type: array
          description: List of access nodes associated to the resource pool
          items:
            $ref: "#/components/schemas/AccessNodes"
        associatedPlans:
          type: integer
          description: Refers to the number of plans associated to the resource pool.
          format: int32
        isIndexingEnabledOnAnyPlan:
          type: boolean
          description: Denotes if the resource pool is associated to any plan with
            indexing enabled
      description: "solutionType is the solution used to create resource pool. It\
        \ cannot be changed once the resource pool has been created. indexServer is\
        \ a server that stores, amalgamates, and processes indexes that contain metadata\
        \ corresponding to the data protection jobs. The list of index servers is\
        \ populated with clients that are installed with the index store package.\
        \ storage refers to the Storage Pool to associate to resource pool. accessNodes\
        \ is the list of access nodes associated to the resource pool."
      example:
        indexServer: null
        associatedPlans: 1
        name: name
        accessNodes:
        - name: name
          id: 6
          type: CLIENT
        - name: name
          id: 6
          type: CLIENT
        id: 0
        storage:
          name: name
          id: 0
        solutionType: GENERIC
        isIndexingEnabledOnAnyPlan: true
    SolutionTypes:
      type: string
      enum:
      - GENERIC
      - O365
      - SALESFORCE
      - EXCHANGE
      - SHAREPOINT
      - ONEDRIVE
      - TEAMS
      - DYNAMICS_365
      - VSA
      - FILESYSTEM
      - KUBERNETES
      - AZURE_AD
      - CLOUD_LAPTOP
      - FILE_STORAGE_OPTIMIZATION
      - DATA_GOVERNANCE
      - E_DISCOVERY
      - SQL_SERVER
      - ORACLEDB
      - DB2
      - ACTIVE_DIRECTORY
      - DATABASE
    EntityRegionInfo:
      type: object
      properties:
        entityRegionType:
          $ref: "#/components/schemas/EntityRegionTypes"
        region:
          $ref: "#/components/schemas/IdName"
      description: ""
    EntityRegionTypes:
      type: string
      format: ""
      enum:
      - BACKUP
      - WORKLOAD
    EntityTypes:
      type: string
      format: ""
      enum:
      - COMMCELL
      - CLIENT
      - INSTANCE
      - BACKUPSET
      - SUBCLIENT
      - CLIENT_GROUP
      - USER
      - USER_GROUP
      - LIBRARY
      - MEDIAAGENT
      - RESOURCEPOOL
      - STORAGE_POOL
      - STORAGE_POLICY
      - SCHEDULE_POLICY
      - SUBCLIENT_POLICY
      - ALERT
      - PLAN
      - VIRTUAL_MACHINE
      - ROLE
      - DEVICE
      - REGION
      - NETWORK_TOPOLOGY
      - COMPANY
    GetEntityRegionResp:
      title: GetEntityRegionResp
      type: object
      properties:
        regions:
          type: array
          items:
            $ref: "#/components/schemas/EntityRegion"
        entityType:
          $ref: "#/components/schemas/EntityTypes"
        regionType:
          $ref: "#/components/schemas/EntityRegionTypes"
        error:
          $ref: "#/components/schemas/GenericResp"
      example:
        regions:
        - name: name
          entityId: 6
          id: 0
        - name: name
          entityId: 6
          id: 0
        regionType: BACKUP
        entityType: COMMCELL
        error:
          errorMessage: errorMessage
          errorCode: 0
    EntityRegion:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        entityId:
          type: integer
          format: int32
      example:
        name: name
        entityId: 6
        id: 0
    ConfigureSMTPServerReq:
      title: ConfigureSMTPServerReq
      required:
      - SMTPPort
      - SMTPServerName
      - senderEmail
      - senderName
      type: object
      properties:
        SMTPServerName:
          type: string
          description: "The name of the mail server that sends alerts, scheduled reports,\
            \ log files, and additional information."
        SMTPPort:
          type: integer
          description: The port number that connects to the mail server.
          format: int32
        senderEmail:
          type: string
          description: The sender email address used for emails sent from the software.
        senderName:
          type: string
          description: The sender name used for emails sent from the software.
        encryptionAlgorithm:
          $ref: "#/components/schemas/SMTPServerEncryptionAlgorithm"
        username:
          type: string
          description: This option is used when authentication on the mail server
            is required
        password:
          type: string
          description: "Password must be in base64 encoded format. Similar to username,\
            \ if authentication on the mail server is required, this option is required."
    UpdateEmailServerReq:
      title: ""
      type: object
      properties:
        SMTPServerName:
          type: string
          description: "The name of the mail server that sends alerts, scheduled reports,\
            \ log files, and additional information."
        SMTPPort:
          type: integer
          description: The port number that connects to the mail server.
          format: int32
        senderEmail:
          type: string
          description: The sender email address used for emails sent from the software.
        senderName:
          type: string
          description: The sender name used for emails sent from the software.
        encryptionAlgorithm:
          $ref: "#/components/schemas/SMTPServerEncryptionAlgorithm"
        useAuthentication:
          type: boolean
          description: The option to use authentication on the mail server. This is
            typically used in external or internet mail server configurations.
        username:
          type: string
          description: "when useAuthentication is true, username must be present"
        password:
          type: string
          description: Password must be in base 64 encoded format. Password attribute
            can be left out to reuse the already saved password
      description: None of the fields are mandatory. whichever field is specified
        should be updated. Rest should be untouched.
    GetEmailServerDetails:
      type: object
      properties:
        SMTPServerName:
          type: string
          description: "The name of the mail server that sends alerts, scheduled reports,\
            \ log files, and additional information."
        SMTPPort:
          type: integer
          description: The port number that connects to the mail server.
          format: int32
        senderEmail:
          type: string
          description: The sender email address used for emails sent from the software.
        senderName:
          type: string
          description: The sender name used for emails sent from the software.
        encryptionAlgorithm:
          $ref: "#/components/schemas/SMTPServerEncryptionAlgorithm"
        useAuthentication:
          type: boolean
          description: The option to use authentication on the mail server. This is
            typically used in external or internet mail server configurations.
        username:
          type: string
          description: "only when useAuthentication is true, username would be populated"
      description: ""
      example:
        SMTPPort: 0
        senderName: senderName
        senderEmail: senderEmail
        useAuthentication: true
        SMTPServerName: SMTPServerName
        encryptionAlgorithm: NONE
        username: username
    SendTestMailReq:
      title: ""
      required:
      - SMTPPort
      - SMTPServerName
      - senderEmail
      - senderName
      type: object
      properties:
        SMTPServerName:
          minLength: 1
          type: string
          description: "The name of the mail server that sends alerts, scheduled reports,\
            \ log files, and additional information."
        SMTPPort:
          type: integer
          description: The port number that connects to the mail server.
          format: int32
        senderEmail:
          minLength: 1
          type: string
          description: The sender email address used for emails sent from the software.
        senderName:
          minLength: 1
          type: string
          description: The sender name used for emails sent from the software.
        encryptionAlgorithm:
          $ref: "#/components/schemas/SMTPServerEncryptionAlgorithm"
        useAuthentication:
          type: boolean
          description: The option to use authentication on the mail server. This is
            typically used in external or internet mail server configurations.
        username:
          type: string
          description: "If username is specified, password field must also be specified.\
            \ To use previously saved username and password, leave out username and\
            \ password in payload."
        password:
          type: string
          description: "If password is specified, username must also be specified.\
            \ password should be a base 64 encoded string. To use previoulsy saved\
            \ username and password, leave out username and password in payload."
      description: ""
    SMTPServerEncryptionAlgorithm:
      type: string
      default: NONE
      enum:
      - NONE
      - TLS
      - SSL
    IndexingStatusType:
      type: string
      description: Type of indexing status.
      default: NOT_APPLICABLE
      enum:
      - NOT_APPLICABLE
      - ENABLED
      - SETUP_IN_PROGRESS
    AlertsTriggeredListResp:
      title: AlertsTriggeredListResp
      type: object
      properties:
        totalCount:
          type: integer
          description: Total count of the Alerts Triggered
          format: int32
        unreadCount:
          type: integer
          description: Total unread Alerts Triggered
          format: int32
        alertsTriggered:
          type: array
          items:
            $ref: "#/components/schemas/AlertTriggeredSummary"
      description: Used to return a list of alerts triggered
      example:
        alertsTriggered:
        - severity: AUTO_PICK
          detectedTime: 5
          readStatus: true
          detectedCriterion: Alert CommServe License Expires Within n Days
          notes: notes
          pinStatus: true
          type: Configuration - Clients
          jobId: 5
          commcell:
            displayName: displayName
            name: name
          client:
            name: name
            id: 0
          company: null
          id: 1
          info: info
        - severity: AUTO_PICK
          detectedTime: 5
          readStatus: true
          detectedCriterion: Alert CommServe License Expires Within n Days
          notes: notes
          pinStatus: true
          type: Configuration - Clients
          jobId: 5
          commcell:
            displayName: displayName
            name: name
          client:
            name: name
            id: 0
          company: null
          id: 1
          info: info
        unreadCount: 6
        totalCount: 0
    AlertTriggeredSummary:
      title: AlertTriggeredSummary
      type: object
      properties:
        id:
          type: integer
          description: Triggered Alert Id
          format: int32
        severity:
          $ref: "#/components/schemas/AlertSeverity"
        detectedCriterion:
          type: string
          description: detection criteria for the triggered alert to be generated
          enum:
          - Alert CommServe License Expires Within n Days
          - Alert Modified
          - Alert every n attempts (Network failures)
          - Alert every n attempts (Phase failures)
          - Alert every n failed login attempts
          - Alert when License Consumed reaches n Percent
          - Alert when client certificate Expires Within n Days
          - Alert when jobs in pending state exceed n percent or count of n
          - Auxiliary Copy fallen behind alert
          - Backup for subclient failed consecutively for n attempts
          - Classification Failed
          - DDB Store got corrupted
          - DDB disk space low
          - Data backed up exceeds n GB
          - Decrease in Data size by n %
          - Delayed by n Hrs
          - Disk Space Low
          - Drive went Offline
          - Force De-configured
          - Increase in Data size by n %
          - Insufficient Storage
          - Job Activity
          - Job Failed
          - Job Initiated
          - Job Skipped
          - Job Started
          - Job Succeeded
          - Job Succeeded with Errors
          - Job exceeded running time of n Hrs
          - Library went Offline
          - Maintenance Occurred
          - Maintenance Required
          - Media Handling Required
          - Media Picked Up
          - Media Reached Destination
          - Media Recalled
          - Media Returned to Source
          - MediaAgent went offline
          - Mount Path went Offline
          - No Backup for last n Days
          - No Data Protection
          - Non-encrypted media exported
          - Number of failed files is more than n
          - Percentage of failed files is more than n
          - Properties Modified
          - Release Upgrade Required
          - Rolled Back
          - Scheduler Changes
          - Updates Available to Download
          - User Overwrite of Media
        info:
          type: string
          description: Name of the Alert Triggered
        notes:
          type: string
          description: contains any descriptive note written for the alert
        type:
          type: string
          description: alert type for which the triggered alert was generated
          enum:
          - Configuration - Clients
          - Configuration - Edge drive-Share operations
          - Configuration - License
          - Configuration - MediaAgents
          - Configuration - Users
          - Custom Rules - Client Group License Usage Check
          - Custom Rules - Data aging is disabled for n days
          - Custom Rules - Expiring clones
          - Custom Rules - Index Backup Status
          - Custom Rules - Index State
          - Custom Rules - Notify decommissioned Virtual Machines
          - Job Management - Auxiliary Copy
          - Job Management - Data Aging
          - Job Management - Data Protection
          - Job Management - Data Recovery
          - Job Management - DeDup DB Reconstruction
          - Job Management - Disaster Recovery Backup
          - Media Management - Device Status
          - Media Management - Library Management
          - Operation - Admin Alert
          - Operation - Event Viewer Events
          - Software Updates - Updates Available to Download
        detectedTime:
          type: integer
          description: Unix Epoch Time
          format: int32
        client:
          $ref: "#/components/schemas/IdName"
        readStatus:
          type: boolean
          description: Gives the Alert Read Status. True if Read and False if Unread
        pinStatus:
          type: boolean
          description: Gives the Alert Pin Status. True if pinned and False if not
            pinned.
        jobId:
          type: integer
          description: Job Id by which this Alert was Triggered
          format: int32
        company:
          $ref: "#/components/schemas/IdName"
        commcell:
          $ref: "#/components/schemas/CommcellNameDisplayNameInfo"
      description: Summary of the Alert Triggered
      example:
        severity: AUTO_PICK
        detectedTime: 5
        readStatus: true
        detectedCriterion: Alert CommServe License Expires Within n Days
        notes: notes
        pinStatus: true
        type: Configuration - Clients
        jobId: 5
        commcell:
          displayName: displayName
          name: name
        client:
          name: name
          id: 0
        company: null
        id: 1
        info: info
    AlertSeverity:
      title: AlertSeverity
      type: string
      description: Alert Severity Level
      enum:
      - AUTO_PICK
      - CRITICAL
      - MAJOR
      - INFORMATION
    InstallMediaAgent:
      required:
      - hostNames
      - username
      type: object
      properties:
        hostNames:
          minItems: 1
          uniqueItems: true
          type: array
          description: Host names where MediaAgent package is required to be installed
          items:
            minLength: 1
            type: string
        username:
          type: string
          description: Username to access hostnames
        password:
          type: string
          description: password should be in base64 encoded string. password is optional
            only if SSHKeyFilePassphrase is specified
        OSType:
          $ref: "#/components/schemas/MediaAgentInstallOSType"
        installLocation:
          type: string
          description: Holds install path according to the chosen OSType
        rebootIfRequired:
          type: boolean
          default: false
        SSHKeyPath:
          type: string
          description: Applicable only for Unix OSType. Path provided should be valid
            on the CommServ Client
        SSHKeyFilePassphrase:
          type: string
          description: Applicable only for Unix OSType and should be in base64 encoded
            string
    MediaAgentInstallOSType:
      type: string
      default: WINDOWS
      enum:
      - WINDOWS
      - UNIX
    JobId:
      title: ""
      type: object
      properties:
        jobId:
          type: string
      example:
        jobId: jobId
    RegionDetails:
      title: RegionDetails
      type: object
      properties:
        id:
          type: integer
          description: Region ID
          format: int32
        name:
          type: string
          description: Region name
        displayName:
          type: string
          description: Display name for the region
        regionType:
          $ref: "#/components/schemas/RegionType"
        locations:
          type: array
          description: List of locations in the region
          items:
            $ref: "#/components/schemas/LocationDetailsWithZone"
        associatedServers:
          $ref: "#/components/schemas/RegionAssociatedServers"
        associatedRegionBasedPlans:
          $ref: "#/components/schemas/AssociatedRegionBasedPlans"
        globalConfigInfo:
          $ref: "#/components/schemas/GlobalConfigInfo"
      description: Details for a region
      example:
        regionType: DEFAULT
        displayName: displayName
        name: name
        globalConfigInfo:
          scopeFilterQuery: scopeFilterQuery
          applyOnAllCommCells: true
          commcells:
          - name: name
            guid: guid
            id: 5
          - name: name
            guid: guid
            id: 5
          scope: scope
          isMarkedForDeletion: true
          name: name
          id: id
          status: status
        locations:
        - continent: continent
          country: country
          city: city
          zone:
            name: name
            id: 0
          latitude: 6.027456183070403
          state: state
          longitude: 1.4658129805029452
        - continent: continent
          country: country
          city: city
          zone:
            name: name
            id: 0
          latitude: 6.027456183070403
          state: state
          longitude: 1.4658129805029452
        id: 0
        associatedRegionBasedPlans:
          plansCount: 7
          plans:
          - type: Server
            plan: null
            associatedServers: 9
          - type: Server
            plan: null
            associatedServers: 9
        associatedServers:
          servers:
          - server: null
            latitude: 5.637376656633329
            longitude: 2.3021358869347655
          - server: null
            latitude: 5.637376656633329
            longitude: 2.3021358869347655
          serversCount: 5
    LocationDetailsWithZone:
      title: LocationDetailsWithZone
      required:
      - country
      - latitude
      - longitude
      type: object
      properties:
        continent:
          type: string
          description: Name of continent for the location
        country:
          type: string
          description: Name of country for the location
        state:
          type: string
          description: Name of state for the location
        city:
          type: string
          description: Name of city for the location
        latitude:
          type: number
          description: Latitude for the location
          format: double
        longitude:
          type: number
          description: Longitude for the location
          format: double
        zone:
          $ref: "#/components/schemas/IdName"
      description: Details of a location with Zone
      example:
        continent: continent
        country: country
        city: city
        zone:
          name: name
          id: 0
        latitude: 6.027456183070403
        state: state
        longitude: 1.4658129805029452
    RegionAssociatedServers:
      title: RegionAssociatedServers
      type: object
      properties:
        serversCount:
          type: integer
          format: int32
        servers:
          type: array
          items:
            $ref: "#/components/schemas/RegionAssociatedServersList"
      description: Details of servers associated to a region
      example:
        servers:
        - server: null
          latitude: 5.637376656633329
          longitude: 2.3021358869347655
        - server: null
          latitude: 5.637376656633329
          longitude: 2.3021358869347655
        serversCount: 5
    RegionAssociatedServersList:
      title: RegionAssociatedServersList
      type: object
      properties:
        server:
          $ref: "#/components/schemas/IdName"
        latitude:
          type: number
          format: double
        longitude:
          type: number
          format: double
      description: List of servers associated to a region
      example:
        server: null
        latitude: 5.637376656633329
        longitude: 2.3021358869347655
    AssociatedRegionBasedPlans:
      title: AssociatedRegionBasedPlans
      type: object
      properties:
        plansCount:
          type: integer
          format: int32
        plans:
          type: array
          items:
            $ref: "#/components/schemas/AssociatedRegionBasedPlansList"
      description: Details of plans associated to the region
      example:
        plansCount: 7
        plans:
        - type: Server
          plan: null
          associatedServers: 9
        - type: Server
          plan: null
          associatedServers: 9
    AssociatedRegionBasedPlansList:
      title: AssociatedRegionBasedPlansList
      type: object
      properties:
        plan:
          $ref: "#/components/schemas/IdName"
        associatedServers:
          type: integer
          format: int32
        type:
          $ref: "#/components/schemas/PlanType"
      description: List of plans associated to the region
      example:
        type: Server
        plan: null
        associatedServers: 9
    UpdateRegion:
      title: UpdateRegion
      type: object
      properties:
        newName:
          type: string
          description: New name for the region
        locationsOperationType:
          type: string
          description: Type of operation to be performed for locations
          default: ADD
          enum:
          - NONE
          - OVERWRITE
          - ADD
          - DELETE
          - CLEAR
        locations:
          type: array
          items:
            $ref: "#/components/schemas/LocationDetailsWithZone"
      description: "For newly added location - country, latitude and longitude are\
        \ mandatory fields. Any existing location added to locations array needs to\
        \ have all the existing fields. "
    ServersListResp:
      title: ServersListResp
      type: object
      properties:
        totalServers:
          type: integer
          format: int32
        servers:
          type: array
          items:
            $ref: "#/components/schemas/ServerSummary"
      description: Response for servers listing API
      example:
        servers:
        - configured: true
          updateState: UNKNOWN
          hostName: hostName
          OS: OS
          displayName: displayName
          networkReadiness: OFFLINE
          version: 11.22.5
          isInfrastructure: true
          agents:
          - name: name
            id: 0
          - name: name
            id: 0
          tags:
          - name: name
            id: 5
            value: value
          - name: name
            id: 5
            value: value
          serverGroups:
          - null
          - null
          name: name
          isMARoleSet: true
          commcell:
            name: name
          company: null
          id: 6
          isMAPackageInstalled: true
          region:
            displayName: displayName
            name: name
            id: 2
          clientRoles:
          - null
          - null
        - configured: true
          updateState: UNKNOWN
          hostName: hostName
          OS: OS
          displayName: displayName
          networkReadiness: OFFLINE
          version: 11.22.5
          isInfrastructure: true
          agents:
          - name: name
            id: 0
          - name: name
            id: 0
          tags:
          - name: name
            id: 5
            value: value
          - name: name
            id: 5
            value: value
          serverGroups:
          - null
          - null
          name: name
          isMARoleSet: true
          commcell:
            name: name
          company: null
          id: 6
          isMAPackageInstalled: true
          region:
            displayName: displayName
            name: name
            id: 2
          clientRoles:
          - null
          - null
        totalServers: 0
    ServerSummary:
      title: ServerSummary
      type: object
      properties:
        id:
          type: integer
          description: Id of server
          format: int32
        name:
          type: string
          description: Name of the client
        displayName:
          type: string
          description: Name to be displayed in UI
        hostName:
          type: string
          description: Hostname of the client
        agents:
          type: array
          description: List of agents the server has installed
          items:
            $ref: "#/components/schemas/IdName"
        serverGroups:
          type: array
          description: List of server groups for this server
          items:
            $ref: "#/components/schemas/IdName"
        configured:
          type: boolean
          description: Property to show whether client is in configured state or not
        version:
          type: string
          description: "Version of Commvault software server is running. Version is\
            \ in the format: Release.SPversion.Hotfixpack. eg: 11.22.5"
          example: 11.22.5
        OS:
          type: string
          description: "The operating system, for example, Windows Server 2008 R2\
            \ Enterprise."
        updateState:
          $ref: "#/components/schemas/UpdateStatus"
        isInfrastructure:
          type: boolean
          description: "By default, a server is classified as infrastructure if has\
            \ one of the following packages installed: CommServe, Index Store, Web\
            \ Server, Content Extractor, Virtual Server Agent (VSA), Web Console,\
            \ Content Analyzer, Exchange, Cloud Apps"
        isMARoleSet:
          type: boolean
          description: Used to determine if MA role is set on the client
        isMAPackageInstalled:
          type: boolean
          description: Used to determine if MA package is instlaled on the client
        networkReadiness:
          $ref: "#/components/schemas/FileServerStatus"
        company:
          $ref: "#/components/schemas/IdName"
        tags:
          type: array
          items:
            $ref: "#/components/schemas/IdNameValue"
        commcell:
          $ref: "#/components/schemas/CommcellInfo"
        clientRoles:
          type: array
          items:
            $ref: "#/components/schemas/IdName"
        region:
          $ref: "#/components/schemas/IdNameDisplayName"
      description: Summary of individual server in servers list response
      example:
        configured: true
        updateState: UNKNOWN
        hostName: hostName
        OS: OS
        displayName: displayName
        networkReadiness: OFFLINE
        version: 11.22.5
        isInfrastructure: true
        agents:
        - name: name
          id: 0
        - name: name
          id: 0
        tags:
        - name: name
          id: 5
          value: value
        - name: name
          id: 5
          value: value
        serverGroups:
        - null
        - null
        name: name
        isMARoleSet: true
        commcell:
          name: name
        company: null
        id: 6
        isMAPackageInstalled: true
        region:
          displayName: displayName
          name: name
          id: 2
        clientRoles:
        - null
        - null
    UpdateStatus:
      title: UpdateStatus
      type: string
      description: Enum which specifies the status of update on a server
      enum:
      - UNKNOWN
      - UP_TO_DATE
      - NEEDS_UPDATE
      - AHEAD_OF_CACHE
      - NOT_APPLICABLE
      - HAS_DIAGNOSTIC_UPDATES
      - OTHER_SOFTWARE
      - PENDING
    SolutionsList:
      title: SolutionsList
      type: object
      properties:
        id:
          type: array
          description: Detail of the workload solution that is supported for the user
          items:
            $ref: "#/components/schemas/SolutionDetail"
      description: This will return list of supported workload solutions for a command
        center user
      example:
        id:
        - name: name
          id: 0
          commandCenterStateValue: 6
          commandCenterState: commandCenterState
        - name: name
          id: 0
          commandCenterStateValue: 6
          commandCenterState: commandCenterState
    StorageUpdateType:
      type: string
      description: Enum which specifies the type of storage update
      enum:
      - DISRUPTIVE
      - NON_DISRUPTIVE
    DownloadOrCopySoftware:
      title: DownloadOrCopySoftware
      type: object
      properties:
        downloadConfiguration:
          $ref: "#/components/schemas/DownloadConfiguration"
        copyConfiguration:
          $ref: "#/components/schemas/CopyConfiguration"
        notifyWhenJobCompletes:
          type: boolean
          description: Boolean which determines whether to notify when software is
            downloaded or copied.
      description: Request body for download or copy software
    DownloadConfiguration:
      title: DownloadConfiguration
      type: object
      properties:
        latestFixesForCurrentRelease:
          type: boolean
          description: Boolean which determines whether to download latest fixews
            for current release.
        upgradeToLatestRelease:
          type: boolean
          description: Boolean which determines whether to upgrade to latest release.
        featureRelease:
          type: string
          description: Which specific feature release to download.
        windowsDownloadOptions:
          type: array
          description: gives list of all the target windows operating systems to download
            software for.
          nullable: true
          items:
            type: string
            enum:
            - WINDOWS_X32
            - WINDOWS_X64
        unixDownloadOptions:
          type: array
          description: gives list of all the target unix and MAC operating systems
            to download software for.
          nullable: true
          items:
            type: string
            enum:
            - AIX_PPC
            - FREEBSD_X86
            - FREEBSD_X86_64
            - HP_IA64
            - LINUX_ARM64
            - LINUX_PPC64
            - LINUX_PPC64LE
            - LINUX_X86
            - LINUX_X86_64
            - MAC_OS
            - SOLARIS_SPARC
            - SOLARIS_X86_64
      description: Configurations for software download from the internet
    CopyConfiguration:
      title: CopyConfiguration
      type: object
      properties:
        downloadPath:
          type: string
          description: Path from where the software has to be downloaded.
        username:
          type: string
          description: "If impersonation a user the, give the username of the user."
        password:
          type: string
          description: Corresponding password of the user
      description: Configurations for software download from the internet
    UpgradeSoftware:
      title: UpgradeSoftware
      type: object
      properties:
        rebootIfRequired:
          type: boolean
          description: Boolean which determines whether to reboot if required.
        runDBMaintenance:
          type: boolean
          description: Boolean which determines whether or not to run a database maintenance.
        notifyWhenJobCompletes:
          type: boolean
          description: Boolean which determines whether to notify when software is
            upgraded.
        installOSUpdates:
          type: boolean
          description: Boolean which determines whether to install operating system
            updates.
        installStorageUpdates:
          $ref: "#/components/schemas/StorageUpdateType"
        waitForDownloadJobToComplete:
          type: boolean
          description: Boolean which determines whether to wait for Download software
            job to complete before software is upgraded.
        entities:
          type: array
          description: List of all the client and client groups on which UpgradeSoftware
            should be run
          nullable: true
          items:
            $ref: "#/components/schemas/IdNameGUIDType"
      description: Request body for server and server group upgrade software
    JobIdResponse:
      type: object
      properties:
        jobId:
          type: integer
          format: int32
      example:
        jobId: 0
    SolutionDetail:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          description: ""
        commandCenterStateValue:
          type: integer
          format: int32
        commandCenterState:
          type: string
      description: Consist of workload solution details.
      example:
        name: name
        id: 0
        commandCenterStateValue: 6
        commandCenterState: commandCenterState
    ExecutePlanRules:
      title: ExecutePlanRules
      type: object
      properties:
        subclients:
          type: array
          description: List of subclients against which plan rules need to be  executed
            and evaluated.
          items:
            $ref: "#/components/schemas/IdName"
        backupsets:
          type: array
          description: List of backupsets against which plan rules need to be  executed
            and evaluated.
          items:
            $ref: "#/components/schemas/IdName"
        instances:
          type: array
          description: List of instances against which plan rules need to be  executed
            and evaluated.
          items:
            $ref: "#/components/schemas/IdName"
        clients:
          type: array
          description: List of clients against which plan rules need to be  executed
            and evaluated.
          items:
            $ref: "#/components/schemas/IdName"
        ignorePreviousPlanAssociation:
          type: boolean
          description: Boolean to indicate if we want to evaluate rule for entities
            associated to plan. Default is false. Only entities with no plan associated
            will be evaluated.
        isPreviewOnly:
          type: boolean
          description: Boolean to indicate if request is to preview list of subclients
            that will be associated via plan rules
      description: Message object to hold information of entities against which plan
        rule need to be analyzed
    WorkloadEntity:
      title: WorkloadEntity
      type: object
      properties:
        subclient:
          $ref: "#/components/schemas/IdName"
        backupset:
          $ref: "#/components/schemas/IdName"
        instance:
          $ref: "#/components/schemas/IdName"
        client:
          $ref: "#/components/schemas/IdName"
        apptype:
          $ref: "#/components/schemas/IdName"
      description: Core object for workload entity
      example:
        instance: null
        subclient:
          name: name
          id: 0
        apptype: null
        backupset: null
        client: null
    PlanRuleExcludedEntitiesList:
      title: PlanRuleExcludedEntitiesList
      type: object
      properties:
        entities:
          type: array
          description: Details of entity excluded for plan association via plan rules.
          items:
            $ref: "#/components/schemas/WorkloadEntity"
      description: List of entities that are excluded from plan rule evaluation.
      example:
        entities:
        - instance: null
          subclient:
            name: name
            id: 0
          apptype: null
          backupset: null
          client: null
        - instance: null
          subclient:
            name: name
            id: 0
          apptype: null
          backupset: null
          client: null
    IncludeEntitiesForPlanRuleEvaluation:
      title: IncludeEntitiesForPlanRuleEvaluation
      type: object
      properties:
        subclients:
          type: array
          items:
            $ref: "#/components/schemas/IdName"
      description: Entities that need to be included for plan rule evaluation
    PlanRuleApplicableEntity:
      title: PlanRuleApplicableEntity
      type: object
      properties:
        subclient:
          $ref: "#/components/schemas/IdName"
        backupset:
          $ref: "#/components/schemas/IdName"
        instance:
          $ref: "#/components/schemas/IdName"
        client:
          $ref: "#/components/schemas/IdName"
        apptype:
          $ref: "#/components/schemas/IdName"
        evaluatedPlan:
          $ref: "#/components/schemas/IdName"
        currentPlan:
          $ref: "#/components/schemas/IdName"
        ruleDetails:
          $ref: "#/components/schemas/PlanEntityRuleInfo"
      description: Entity applicable for plan association via plan assignment rules.
      example:
        instance: null
        subclient:
          name: name
          id: 0
        currentPlan: null
        apptype: null
        evaluatedPlan: null
        backupset: null
        client: null
        ruleDetails:
          serverGroups:
          - null
          - null
          regions:
          - null
          - null
          solutions:
          - null
          - null
          workloads:
          - null
          - null
          globalConfigInfo:
            scopeFilterQuery: scopeFilterQuery
            applyOnAllCommCells: true
            commcells:
            - name: name
              guid: guid
              id: 5
            - name: name
              guid: guid
              id: 5
            scope: scope
            isMarkedForDeletion: true
            name: name
            id: id
            status: status
          rule:
            name: name
            id: 0
          rank: 6
          company: null
          plan:
            GUID: GUID
            name: name
            id: 0
          tags:
          - GUID: GUID
            name: name
            id: 0
            value: value
          - GUID: GUID
            name: name
            id: 0
            value: value
    PlanRuleApplicableEntitiesList:
      title: PlanRuleApplicableEntitiesList
      type: object
      properties:
        entities:
          type: array
          description: Details of entity applicable for plan association.
          items:
            $ref: "#/components/schemas/PlanRuleApplicableEntity"
      description: List of entities that are applicable for plan association via plan
        assignment rules.
      example:
        entities:
        - instance: null
          subclient:
            name: name
            id: 0
          currentPlan: null
          apptype: null
          evaluatedPlan: null
          backupset: null
          client: null
          ruleDetails:
            serverGroups:
            - null
            - null
            regions:
            - null
            - null
            solutions:
            - null
            - null
            workloads:
            - null
            - null
            globalConfigInfo:
              scopeFilterQuery: scopeFilterQuery
              applyOnAllCommCells: true
              commcells:
              - name: name
                guid: guid
                id: 5
              - name: name
                guid: guid
                id: 5
              scope: scope
              isMarkedForDeletion: true
              name: name
              id: id
              status: status
            rule:
              name: name
              id: 0
            rank: 6
            company: null
            plan:
              GUID: GUID
              name: name
              id: 0
            tags:
            - GUID: GUID
              name: name
              id: 0
              value: value
            - GUID: GUID
              name: name
              id: 0
              value: value
        - instance: null
          subclient:
            name: name
            id: 0
          currentPlan: null
          apptype: null
          evaluatedPlan: null
          backupset: null
          client: null
          ruleDetails:
            serverGroups:
            - null
            - null
            regions:
            - null
            - null
            solutions:
            - null
            - null
            workloads:
            - null
            - null
            globalConfigInfo:
              scopeFilterQuery: scopeFilterQuery
              applyOnAllCommCells: true
              commcells:
              - name: name
                guid: guid
                id: 5
              - name: name
                guid: guid
                id: 5
              scope: scope
              isMarkedForDeletion: true
              name: name
              id: id
              status: status
            rule:
              name: name
              id: 0
            rank: 6
            company: null
            plan:
              GUID: GUID
              name: name
              id: 0
            tags:
            - GUID: GUID
              name: name
              id: 0
              value: value
            - GUID: GUID
              name: name
              id: 0
              value: value
    IdType:
      title: IdType
      type: object
      properties:
        id:
          type: integer
          format: int32
        type:
          type: string
      example:
        id: 0
        type: type
    GlobalSettingsItem:
      title: GlobalSettingsItem
      type: object
      properties:
        name:
          type: string
          description: Name of the setting
        displayLabel:
          type: string
          description: Display Label of the setting
        description:
          type: string
          description: Description of the setting
        acceptableValues:
          type: array
          description: Specifies values which are acceptable when modifying the setting
            value. This will only be returned if there are specific set of values
            which can be accepted.
          items:
            type: string
        defaultValue:
          type: string
          description: Value used to get default system behaviour
        value:
          type: string
          description: Value of the setting if the setting was modified.
        comment:
          type: string
          description: Comment set by the user while modifying the setting
        isModified:
          type: boolean
          description: Specifies if the setting is already modified by the user
        type:
          type: string
          description: Type of the setting
          enum:
          - Integer
          - String
          - Boolean
          - Multi String
        isRestartRequired:
          type: boolean
          description: Specifies if it is required to restart the services for any
            changes to take effect
        minValue:
          type: integer
          description: Specifies minimum value that can be set to modify specified
            global setting. It is only returned if the setting type is Integer
          format: int32
        maxValue:
          type: integer
          description: Specifies maximum value that can be set to modify specified
            global setting. It is only returned if the setting type is Integer
          format: int32
        category:
          type: string
          description: Category to which setting belongs
      example:
        displayLabel: displayLabel
        isRestartRequired: true
        defaultValue: defaultValue
        maxValue: 6
        description: description
        type: Integer
        acceptableValues:
        - acceptableValues
        - acceptableValues
        minValue: 0
        isModified: true
        name: name
        comment: comment
        category: category
        value: value
    GlobalSettingsResponse:
      title: GlobalSettingsResponse
      type: object
      properties:
        globalSettings:
          type: array
          items:
            $ref: "#/components/schemas/GlobalSettingsItem"
      example:
        globalSettings:
        - displayLabel: displayLabel
          isRestartRequired: true
          defaultValue: defaultValue
          maxValue: 6
          description: description
          type: Integer
          acceptableValues:
          - acceptableValues
          - acceptableValues
          minValue: 0
          isModified: true
          name: name
          comment: comment
          category: category
          value: value
        - displayLabel: displayLabel
          isRestartRequired: true
          defaultValue: defaultValue
          maxValue: 6
          description: description
          type: Integer
          acceptableValues:
          - acceptableValues
          - acceptableValues
          minValue: 0
          isModified: true
          name: name
          comment: comment
          category: category
          value: value
    ModifyAdditionalSetting:
      title: ModifyAdditionalSetting
      required:
      - category
      - name
      - type
      type: object
      properties:
        name:
          type: string
          description: Name of the setting to be modified. This cannot be modified
            but is required to identify the setting for which the new value is to
            be set.
        category:
          type: string
          description: Category of the setting to be modified. This cannot be modified
            but is required to identify the setting for which the new value is to
            be set.
        type:
          type: string
          description: Type of the setting to be modified. This cannot be modified
            but is required to identify the setting for which the new value is to
            be set.
          enum:
          - Integer
          - String
          - Boolean
          - Multi string
        newValue:
          type: string
          description: "New value which will be set for the specified setting, there\
            \ can be fixed acceptables values for some settings. To get more details\
            \ about what are acceptable value for a setting, use GET GlobalSettings\
            \ or GET EntitySettings."
        comment:
          type: string
          description: Comment to specify why this value was set for the specified
            setting
        reset:
          type: boolean
          description: "To reset the value of any already modified setting, set this\
            \ to true to reset the value and regain default behaviour"
    AddedEntitySettingInfo:
      title: AddedEntitySettingInfo
      type: object
      properties:
        displayLabel:
          type: string
          description: Name of the setting
        type:
          type: string
          description: Data Type of the entity setting
        enabled:
          type: integer
          description: If the setting is enabled
          format: int64
        name:
          type: string
          description: Name of the setting
        category:
          type: string
          description: Category of the entity setting
        values:
          $ref: "#/components/schemas/EntitySettingsValueArray"
      example:
        displayLabel: displayLabel
        values:
        - comment: comment
          value: value
          entity:
            name: name
            id: 1
            type: type
        - comment: comment
          value: value
          entity:
            name: name
            id: 1
            type: type
        name: name
        type: type
        category: category
        enabled: 0
    ListAddedEntitySettings:
      title: ListAddedEntitySettings
      type: object
      properties:
        entitySettings:
          type: array
          items:
            $ref: "#/components/schemas/AddedEntitySettingInfo"
      example:
        entitySettings:
        - displayLabel: displayLabel
          values:
          - comment: comment
            value: value
            entity:
              name: name
              id: 1
              type: type
          - comment: comment
            value: value
            entity:
              name: name
              id: 1
              type: type
          name: name
          type: type
          category: category
          enabled: 0
        - displayLabel: displayLabel
          values:
          - comment: comment
            value: value
            entity:
              name: name
              id: 1
              type: type
          - comment: comment
            value: value
            entity:
              name: name
              id: 1
              type: type
          name: name
          type: type
          category: category
          enabled: 0
    ListAdditionalSettings:
      title: ListAdditionalSettings
      type: object
      properties:
        additionalSettings:
          type: array
          items:
            $ref: "#/components/schemas/AdditionalSettingInfo"
      example:
        additionalSettings:
        - displayLabel: displayLabel
          minValue: 0
          isRestartRequired: true
          defaultValue: defaultValue
          maxValue: 6
          name: name
          description: description
          type: Integer
          category: category
        - displayLabel: displayLabel
          minValue: 0
          isRestartRequired: true
          defaultValue: defaultValue
          maxValue: 6
          name: name
          description: description
          type: Integer
          category: category
    AdditionalSettingInfo:
      title: AdditionalSettingInfo
      type: object
      properties:
        name:
          type: string
          description: Name of the setting
        displayLabel:
          type: string
          description: Display name of the setting
        description:
          type: string
          description: Description of the setting
        defaultValue:
          type: string
          description: Default value of the setting
        type:
          type: string
          description: Data type of the value
          enum:
          - Integer
          - String
          - Boolean
          - Multi String
        isRestartRequired:
          type: boolean
          description: Specifies if it is required to restart the services for any
            changes to take effect
        minValue:
          type: integer
          description: Specifies minimum value that can be set to modify specified
            global setting. It is only returned if the setting type is Integer
          format: int32
        maxValue:
          type: integer
          description: Maximum supported value
          format: int64
        category:
          type: string
          description: Category of the setting
      example:
        displayLabel: displayLabel
        minValue: 0
        isRestartRequired: true
        defaultValue: defaultValue
        maxValue: 6
        name: name
        description: description
        type: Integer
        category: category
    ListAddedGlobalSettings:
      type: object
      properties:
        globalSettings:
          type: array
          items:
            $ref: "#/components/schemas/GlobalSettingInfo"
      example:
        globalSettings:
        - displayLabel: displayLabel
          name: name
          comment: comment
          type: type
          category: category
          value: value
          enabled: 0
        - displayLabel: displayLabel
          name: name
          comment: comment
          type: type
          category: category
          value: value
          enabled: 0
    GlobalSettingInfo:
      title: GlobalSettingInfo
      type: object
      properties:
        name:
          type: string
          description: Name of the setting
        displayLabel:
          type: string
          description: Display name of the setting
        value:
          type: string
          description: Value of the setting
        comment:
          type: string
          description: Comment added along with setting
        type:
          type: string
          description: Data type of the setting
        category:
          type: string
          description: Category of the setting
        enabled:
          type: integer
          description: If the setting is enabled or not
          format: int64
      example:
        displayLabel: displayLabel
        name: name
        comment: comment
        type: type
        category: category
        value: value
        enabled: 0
    ModifyGlobalSettings:
      title: ModifyGlobalSettings
      type: object
      properties:
        globalSettings:
          type: array
          items:
            $ref: "#/components/schemas/ModifyAdditionalSetting"
    EntitySettingsValue:
      title: EntitySettingsValue
      type: object
      properties:
        value:
          type: string
          description: Value set for the specified setting linked to the specified
            entity
        comment:
          type: string
          description: Comment set by user while modifying the specified entity setting
            for the given entity
        entity:
          $ref: "#/components/schemas/IdNameType"
      example:
        comment: comment
        value: value
        entity:
          name: name
          id: 1
          type: type
    EntitySettingsValueArray:
      title: EntitySettingsValueArray
      type: array
      items:
        $ref: "#/components/schemas/EntitySettingsValue"
      x-schema-name: EntitySettingsValueArray
    EntitySettingsListItem:
      title: EntitySettingsListItem
      type: object
      properties:
        name:
          type: string
          description: Name of the setting
        description:
          type: string
          description: Description of the setting
        acceptableValues:
          type: array
          description: Specifies values which are acceptable when modifying the setting
            value. This will only be returned if there are specific set of values
            which can be accepted.
          items:
            type: string
        defaultValue:
          type: string
          description: Value used to get default system behaviour
        values:
          $ref: "#/components/schemas/EntitySettingsValueArray"
        isModified:
          type: boolean
          description: Specifies if the setting is already modified by the user
        type:
          type: string
          description: Type of the setting
          enum:
          - Integer
          - String
          - Boolean
          - Multi String
        isRestartRequired:
          type: boolean
          description: Specifies if it is required to restart the services for any
            changes to take effect
        minValue:
          type: integer
          description: Specifies minimum value that can be set to modify specified
            global setting. It is only returned if the setting type is Integer
          format: int32
        maxValue:
          type: integer
          description: Specifies maximum value that can be set to modify specified
            global setting. It is only returned if the setting type is Integer
          format: int32
        category:
          type: string
          description: Category to which setting belongs
      example:
        acceptableValues:
        - acceptableValues
        - acceptableValues
        minValue: 0
        isModified: true
        isRestartRequired: true
        defaultValue: defaultValue
        maxValue: 6
        values:
        - comment: comment
          value: value
          entity:
            name: name
            id: 1
            type: type
        - comment: comment
          value: value
          entity:
            name: name
            id: 1
            type: type
        name: name
        description: description
        type: Integer
        category: category
    EntitySettingsResponse:
      title: EntitySettingsResponse
      type: object
      properties:
        entitySettings:
          type: array
          items:
            $ref: "#/components/schemas/EntitySettingsListItem"
      example:
        entitySettings:
        - acceptableValues:
          - acceptableValues
          - acceptableValues
          minValue: 0
          isModified: true
          isRestartRequired: true
          defaultValue: defaultValue
          maxValue: 6
          values:
          - comment: comment
            value: value
            entity:
              name: name
              id: 1
              type: type
          - comment: comment
            value: value
            entity:
              name: name
              id: 1
              type: type
          name: name
          description: description
          type: Integer
          category: category
        - acceptableValues:
          - acceptableValues
          - acceptableValues
          minValue: 0
          isModified: true
          isRestartRequired: true
          defaultValue: defaultValue
          maxValue: 6
          values:
          - comment: comment
            value: value
            entity:
              name: name
              id: 1
              type: type
          - comment: comment
            value: value
            entity:
              name: name
              id: 1
              type: type
          name: name
          description: description
          type: Integer
          category: category
    ModifyEntitySettingsItem:
      title: ModifyEntitySettingsItem
      required:
      - category
      - entity
      - name
      - type
      type: object
      properties:
        name:
          type: string
          description: Name of the setting to be modified. This cannot be modified
            but is required to identify the setting for which the new value is to
            be set.
        category:
          type: string
          description: Category of the setting to be modified. This cannot be modified
            but is required to identify the setting for which the new value is to
            be set.
        type:
          type: string
          description: Type of the setting to be modified. This cannot be modified
            but is required to identify the setting for which the new value is to
            be set.
          enum:
          - Integer
          - String
          - Boolean
          - Multi string
        value:
          type: string
          description: "Value which will be set for the specified setting, there can\
            \ be fixed acceptables values for some settings. To get more details about\
            \ what are acceptable value for a setting, use GET GlobalSettings or GET\
            \ EntitySettings."
        comment:
          type: string
          description: Comment to specify why this value was set for the specified
            setting
        reset:
          type: boolean
          description: "To reset the value of any already modified setting, set this\
            \ to true to reset the value and regain default behaviour"
        entity:
          $ref: "#/components/schemas/IdType"
      description: Id and Type of the entity is required in entity property to which
        the entity setting is to be applied. Type of entity can be Server or Server
        group.
    ModifyEntitySettings:
      title: ModifyEntitySettings
      type: object
      properties:
        entitySettings:
          type: array
          items:
            $ref: "#/components/schemas/ModifyEntitySettingsItem"
    GetGlobalExceptions:
      title: GetGlobalExceptions
      type: object
      properties:
        useGlobalExceptionsOnAllSubclients:
          type: boolean
          description: Boolean which signifies application of global execption on
            all subclients
        windowsGlobalExceptions:
          type: array
          description: gives list of all the windowsglobal execptions
          nullable: true
          items:
            type: string
        unixGlobalExceptions:
          type: array
          description: List of global unix execptions
          nullable: true
          items:
            type: string
      description: Get list of global windows and unix execptions
      example:
        useGlobalExceptionsOnAllSubclients: true
        windowsGlobalExceptions:
        - windowsGlobalExceptions
        - windowsGlobalExceptions
        unixGlobalExceptions:
        - unixGlobalExceptions
        - unixGlobalExceptions
    SetGlobalExceptions:
      title: SetGlobalExceptions
      type: object
      properties:
        windowsGlobalExceptions:
          $ref: "#/components/schemas/GlobalExceptionOperation"
        unixGlobalExceptions:
          $ref: "#/components/schemas/GlobalExceptionOperation"
        useGlobalExceptionsOnAllSubclients:
          type: boolean
          description: Boolean value which updates the property useGlobalExceptionsOnAllSubclients
      description: Used to set global exceptions
    GlobalExceptionOperation:
      title: GlobalExceptionOperation
      type: object
      properties:
        operationType:
          type: string
          description: The operations on global exceptions provided would be executed
            based on the operation type provided
          default: OVERWRITE
          enum:
          - NONE
          - OVERWRITE
          - ADD
          - DELETE
          - CLEAR
        exceptions:
          type: array
          description: Array of exceptions which will be operated upon based on the
            operation type
          items:
            type: string
      description: Information conatins the operation to be done on exceptions
    RecoveryPointStoreDetails:
      title: RecoveryPointStoreDetails
      type: object
      properties:
        storageName:
          type: string
          description: Name of the storage library.
        associatedMediaAgent:
          type: string
          description: Tape library MediaAgent association
        totalCapacity:
          type: string
          description: Magnetic library capacity.
        freeSpace:
          type: string
          description: Magnetic library total free space
        maximumSize:
          type: string
          description: Magnetic library capacity size
        maxPairs:
          type: string
          description: Maximum allowed pairs per RPStore
        peakInterval:
          type: array
          description: Interval window containing day and time details
          items:
            $ref: "#/components/schemas/DayAndTime"
        locations:
          type: array
          description: Mount Path locations details
          items:
            $ref: "#/components/schemas/MountLocationDetails"
      description: Details about Recovery Point Stores
      example:
        maxPairs: maxPairs
        freeSpace: freeSpace
        totalCapacity: totalCapacity
        maximumSize: maximumSize
        locations:
        - mountPath:
            name: name
            id: 0
          dataServerType: NONE
          deviceId: 0
          enabled: true
          status: status
        - mountPath:
            name: name
            id: 0
          dataServerType: NONE
          deviceId: 0
          enabled: true
          status: status
        associatedMediaAgent: associatedMediaAgent
        storageName: storageName
        peakInterval:
        - dayOfWeek:
          - null
          - null
          startTime: 1
          endTime: 2
        - dayOfWeek:
          - null
          - null
          startTime: 1
          endTime: 2
    MountLocationDetails:
      title: MountLocationDetails
      type: object
      properties:
        status:
          type: string
          description: Status of the mount path.
        mountPath:
          $ref: "#/components/schemas/IdName"
        enabled:
          type: boolean
          description: Describe whether mount path is enabled or not.
        dataServerType:
          type: string
          description: Type of device access server type.
          enum:
          - NONE
          - DATASERVER_ISCSI_DEVICEACCESS
          - DATASERVER_IP_DEVICEACCESS
          - DATASERVER_SAN_DEVICEACCESS
        deviceId:
          type: integer
          description: Unique device identifier.
          format: int32
      description: Mount location details
      example:
        mountPath:
          name: name
          id: 0
        dataServerType: NONE
        deviceId: 0
        enabled: true
        status: status
    CredentialManagerListResp:
      title: CredentialManagerListResp
      type: object
      properties:
        credentialManager:
          type: array
          items:
            $ref: "#/components/schemas/CredentialSummary"
      example:
        credentialManager:
        - vendorType: ALICLOUD_OSS
          accountType: WINDOWSACCOUNT
          name: name
          commcell: null
          description: description
          company:
            name: name
            id: 0
          id: 0
          authType: AMAZON_S3
        - vendorType: ALICLOUD_OSS
          accountType: WINDOWSACCOUNT
          name: name
          commcell: null
          description: description
          company:
            name: name
            id: 0
          id: 0
          authType: AMAZON_S3
    CredentialSummary:
      title: CredentialSummary
      type: object
      properties:
        id:
          type: integer
          description: Id of Credential
          format: int32
        name:
          type: string
          description: Name of Credential
        accountType:
          $ref: "#/components/schemas/CredentialAccountType"
        vendorType:
          $ref: "#/components/schemas/CloudVendorType"
        authType:
          type: string
          description: Aunthentication type applicable only for Cloud Accounts with
            Amazon Web Services or Microsoft Azure as vendor.
          enum:
          - AMAZON_S3
          - AMAZON_STS_IAM_ROLE
          - MICROSOFT_AZURE
          - AZUREACCOUNT
        description:
          type: string
          description: Description of Credential
        company:
          $ref: "#/components/schemas/IdName"
        commcell:
          $ref: "#/components/schemas/IdName"
      description: Summary of a credential
      example:
        vendorType: ALICLOUD_OSS
        accountType: WINDOWSACCOUNT
        name: name
        commcell: null
        description: description
        company:
          name: name
          id: 0
        id: 0
        authType: AMAZON_S3
    CredentialOwner:
      title: CredentialOwner
      type: object
      properties:
        user:
          $ref: "#/components/schemas/IdName"
        userGroup:
          $ref: "#/components/schemas/IdName"
      description: Owner of a credential can be a user or user group
    CreateCredential:
      title: CreateCredential
      required:
      - accountType
      - name
      type: object
      properties:
        accountType:
          $ref: "#/components/schemas/CredentialAccountType"
        vendorType:
          $ref: "#/components/schemas/CloudVendorType"
        name:
          type: string
          description: Name of Credential
      description: To create a new Credential
    CredentialSecurity:
      title: CredentialSecurity
      required:
      - owner
      type: object
      properties:
        owner:
          $ref: "#/components/schemas/CredentialOwner"
        associations:
          type: array
          items:
            $ref: "#/components/schemas/CredentialSecurityAssociations"
      description: Security association of a list of users and user groups
    UpdateCredentialSecurity:
      title: UpdateCredentialSecurity
      type: object
      properties:
        owner:
          $ref: "#/components/schemas/CredentialOwner"
        associations:
          type: array
          items:
            $ref: "#/components/schemas/CredentialSecurityAssociations"
      description: Update Security association of a list of users and user groups
    CloudVendorType:
      title: CloudVendorType
      type: string
      description: Cloud vendor types appilcable only for Cloud Account type
      enum:
      - ALICLOUD_OSS
      - AMAZON_GLACIER
      - AMAZON
      - ATT_SYNAPTIC
      - REVERA_VAULT
      - CEPH_OBJECT_GATEWAY_S3
      - CMCC_ONEST
      - CLOUDIAN_HYPERSTORE
      - DELL_EMC_ECS_S3
      - EMC_ATMOS
      - FUJITSU_STORAGE_ETERNUS
      - GOOGLE_CLOUD
      - HDS_HCP
      - HITACHI_VANTARA_HCP_S3
      - HUAWEI_OSS
      - IBM_CLOUD
      - IBM_CLOUD_S3
      - INSPUR_CLOUD
      - IRON_MOUNTAIN_CLOUD
      - KINGSOFT_KS3
      - MICROSOFT_AZURE_TYPE
      - NETAPP_STORAGEGRID
      - NUTANIX_BUCKETS
      - OPENSTACK
      - AMPLIDATA
      - RACKSPACE_CLOUD_FILES
      - S3_COMPATIBLE
      - SALESFORCE_CONNECTED_APP
      - SCALITY_RING
      - TELEFONICA_OPEN_CLOUD_OBJECT_STORAGE
      - VERIZON_CLOUD
      - WASABI_HOT_CLOUD_STORAGE
    CredentialAccountType:
      title: CredentialAccountType
      type: string
      description: ""
      enum:
      - WINDOWSACCOUNT
      - LINUXACCOUNT
      - STORAGE_ARRAY_ACCOUNT
      - CLOUD_ACCOUNT
    CredentialSecurityAssociations:
      title: CredentialSecurityAssociations
      type: object
      properties:
        user:
          $ref: "#/components/schemas/IdName"
        userGroup:
          $ref: "#/components/schemas/IdName"
        permissions:
          $ref: "#/components/schemas/PermissionResp"
        isCreatorAssociation:
          type: boolean
          description: To check if the user/user group associated is the owner.
      description: Reference to a user and user group
      x-terraform-ignore-child: name
    AzureEndpoints:
      title: AzureEndpoints
      type: object
      properties:
        activeDirectory:
          type: string
        storage:
          type: string
        resourceManager:
          type: string
      description: "Endpoints for Aunthentication, Storage and Management"
    CredentialInfo:
      title: CredentialInfo
      description: "Applicable for Credentials with Linux Account, Windows Account,\
        \ Storage Array Account or Cloud Account with Vendor Type as Hitachi Content\
        \ Platform "
      allOf:
      - $ref: "#/components/schemas/CreateCredential"
      - required:
        - password
        - userAccount
        type: object
        properties:
          userAccount:
            type: string
            description: User account of Credential
          password:
            type: string
            description: Password of Credential. Password must be in base64 encoded
              format.
      - $ref: "#/components/schemas/CommonCredentialInfo"
    CloudCredentialInfo:
      title: CloudCredentialInfo
      description: "Applicable only for credentials with Cloud Account and Vendor\
        \ Type as Cloud Object Storage Service, Amazon Glacier, CCL Vault V2, Ceph\
        \ Object Gateway, China, Cloudian HyperStore, Dell EMC ECS, Fujitsu Storage\
        \ ETERNUS CD10000, Google Cloud, Hitachi Content Platform for Cloud Scale,\
        \ Huawei Object Storage, IBM Cloud Object Storage (S3-compatible), Inspur\
        \ Cloud Object Storage, Iron Mountain Iron Cloud, Kingsoft Standard Storage\
        \ Service, NetApp StorageGRID, Nutanix Objects, Quantum ActiveScale, S3 Compatible\
        \ Storage, Scality RING, Telefonica Open Cloud Object Storage, Verizon Cloud\
        \ Storage or Wasabi Hot Cloud Storage "
      allOf:
      - $ref: "#/components/schemas/CreateCredential"
      - required:
        - accessKeyId
        - secretAccessKey
        type: object
        properties:
          accessKeyId:
            type: string
            description: Access Key ID of Credential
          secretAccessKey:
            type: string
            description: Secret Access Key of Credential and must be in base64 encoded
              format.
      - $ref: "#/components/schemas/CommonCredentialInfo"
    CloudCredentialInfoWithTokenId:
      title: CloudCredentialInfoWithTokenId
      description: Applicable only for credentials with Cloud Account and Vendor Type
        as AT&T Synaptic Storage or EMC Atmos
      allOf:
      - $ref: "#/components/schemas/CreateCredential"
      - required:
        - sharedSecret
        - tokenId
        type: object
        properties:
          tokenId:
            type: string
            description: Token ID of Credential
          sharedSecret:
            type: string
            description: Shared secret of Credential and must be in base64 encoded
              format.
      - $ref: "#/components/schemas/CommonCredentialInfo"
    CloudCredentialInfoWithAPIKey:
      title: CloudCredentialInfoWithAPIKey
      description: "Applicable only for credentials with Cloud Account and Vendor\
        \ Type as IBM Cloud Object Storage, OpenStack Object Storage or Rackspace\
        \ Cloud Files"
      allOf:
      - $ref: "#/components/schemas/CreateCredential"
      - required:
        - apiKey
        - userAccount
        type: object
        properties:
          userAccount:
            type: string
            description: User account of Credential
          apiKey:
            type: string
            description: API Key of Credential and must be in base64 encoded format.
      - $ref: "#/components/schemas/CommonCredentialInfo"
    SalesforceCredentialInfo:
      title: SalesforceCredentialInfo
      description: Applicable only for credentials with Cloud Account and Vendor Type
        as Salesforce Connected App
      allOf:
      - $ref: "#/components/schemas/CreateCredential"
      - required:
        - consumerKey
        - consumerSecret
        type: object
        properties:
          consumerKey:
            type: string
            description: Consumer key of Credential
          consumerSecret:
            type: string
            description: Consumer secret of Credential
      - $ref: "#/components/schemas/CommonCredentialInfo"
    AmazonCredentialInfo:
      title: AmazonCredentialInfo
      description: "Applicable only for credentials with Cloud Account, Vendor Type\
        \ as Amazon Web Services and  authType is Access and Secret Keys"
      allOf:
      - $ref: "#/components/schemas/CreateCredential"
      - required:
        - accessKeyId
        - authType
        - secretAccessKey
        type: object
        properties:
          authType:
            type: string
            description: Aunthentication type
            enum:
            - AMAZON_S3
            x-terraform-constant: AMAZON_S3
          accessKeyId:
            type: string
            description: Access Key ID of Credential
          secretAccessKey:
            type: string
            description: Secret Access Key of Credential and must be in base64 encoded
              format.
      - $ref: "#/components/schemas/CommonCredentialInfo"
    AmazonCredentialInfoWithRoleArn:
      title: AmazonCredentialInfoWithRoleArn
      description: "Applicable only for credentials with Cloud Account, Vendor Type\
        \ as Amazon Web Services and  authType is STS Assume Role with IAM Role Policy"
      allOf:
      - $ref: "#/components/schemas/CreateCredential"
      - required:
        - authType
        - roleArn
        type: object
        properties:
          authType:
            type: string
            description: Aunthentication type.
            enum:
            - AMAZON_STS_IAM_ROLE
            x-terraform-constant: AMAZON_STS_IAM_ROLE
          roleArn:
            type: string
            description: Role ARN of credential
          password:
            type: string
            description: Role ARN of credential
      - $ref: "#/components/schemas/CommonCredentialInfo"
    AzureCredentialInfo:
      title: AzureCredentialInfo
      description: "Applicable only for credentials with Cloud Account, Vendor Type\
        \ is Microsoft Azure and authType is Access Key"
      allOf:
      - $ref: "#/components/schemas/CreateCredential"
      - required:
        - accessKeyId
        - accountName
        - authType
        type: object
        properties:
          authType:
            type: string
            description: Aunthentication type applicable only for Cloud Accounts with
              Microsoft Azure as vendor.
            enum:
            - MICROSOFT_AZURE
            x-terraform-constant: MICROSOFT_AZURE
          accountName:
            type: string
            description: "Account name of Credential, applicable only if authType\
              \ is Access Key"
          accessKeyId:
            type: string
            description: "Access key ID of Credential, applicable only if authType\
              \ is Access Secret Key and must be in base64 encoded format."
      - $ref: "#/components/schemas/CommonCredentialInfo"
    AzureCredentialInfoWithCertificate:
      title: AzureCredentialInfoWithCertificate
      description: Applicable only for Cloud Accounts with Microsoft Azure vendor
        and authType as IAM AD Application Role Assignment
      allOf:
      - $ref: "#/components/schemas/CreateCredential"
      - required:
        - applicationCertificatePassword
        - applicationId
        - applicationSecret
        - authType
        - certificate
        - certificateThumbprint
        - environment
        - tenantId
        type: object
        properties:
          authType:
            type: string
            description: Aunthentication type applicable only for Cloud Accounts with
              Microsoft Azure as vendor.
            enum:
            - AZUREACCOUNT
            x-terraform-constant: AZUREACCOUNT
          tenantId:
            type: string
            description: Unique Azure active directory ID
          applicationId:
            type: string
            description: Unique Azure application ID
          applicationSecret:
            type: string
            description: Application secret of Credential and must be in base64 encoded
              format.
          applicationCertificatePassword:
            type: string
            description: Password of the certificate and must be in base64 encoded
              format.
          certificate:
            type: string
            description: "Content of the certificate file. It should be base64 encoded.\
              \ Accepted fileTypes are pfx, p12."
          certificateThumbprint:
            type: string
            description: Thumbprint of the certificate file.
          environment:
            type: string
            description: Azure cloud deployed region
            enum:
            - AZURE_CLOUD
            - AZURE_USGOV
            - AZURE_GERMANCLOUD
            - AZURE_CHINACLOUD
            - AZURE_STACK
          endpoints:
            $ref: "#/components/schemas/AzureEndpoints"
      - $ref: "#/components/schemas/CommonCredentialInfo"
    AzureCredentialInfoWithTenantId:
      title: AzureCredentialInfoWithTenantId
      description: Applicable only for Cloud Accounts with Microsoft Azure vendor
        and authType as IAM AD Application Role Assignment
      allOf:
      - $ref: "#/components/schemas/CreateCredential"
      - required:
        - applicationId
        - applicationSecret
        - authType
        - environment
        - tenantId
        type: object
        properties:
          authType:
            type: string
            description: Aunthentication type applicable only for Cloud Accounts with
              Microsoft Azure as vendor.
            enum:
            - AZUREACCOUNT
            x-terraform-constant: AZUREACCOUNT
          tenantId:
            type: string
            description: Unique Azure active directory ID
          applicationId:
            type: string
            description: Unique Azure application ID
          applicationSecret:
            type: string
            description: Application secret of Credential and must be in base64 encoded
              format.
          environment:
            type: string
            description: Azure cloud deployed region
            enum:
            - AZURE_CLOUD
            - AZURE_USGOV
            - AZURE_GERMANCLOUD
            - AZURE_CHINACLOUD
            - AZURE_STACK
          endpoints:
            $ref: "#/components/schemas/AzureEndpoints"
      - $ref: "#/components/schemas/CommonCredentialInfo"
    GoogleCredentialInfo:
      title: GoogleCredentialInfo
      description: "Applicable only for credentials with Cloud Account, Vendor Type\
        \ as Google and Auth Type as Access and Secret key"
      allOf:
      - $ref: "#/components/schemas/CreateCredential"
      - required:
        - accessKeyId
        - authType
        - certificate
        - connectString
        - dbName
        - projectId
        - secretAccessKey
        type: object
        properties:
          authType:
            type: string
            description: Aunthentication type applicable only for Cloud Accounts with
              Google as vendor.
            enum:
            - GOOGLE_SERVICE_ACCOUNT
            - GOOGLE_CLOUD
          accessKeyId:
            type: string
            description: "Access key ID of Credential, applicable only if authType\
              \ is Access Secret Key."
          secretAccessKey:
            type: string
            description: Secret Access Key of Credential and must be in base64 encoded
              format.
          connectString:
            type: string
            description: Connect String for Credential
          dbName:
            type: string
            description: DB Name for Credential
          certificate:
            type: string
            description: Certificate of Credential
          projectId:
            type: string
            description: Project ID of credential
      - $ref: "#/components/schemas/CommonCredentialInfo"
    GoogleServiceAccountCredentialInfo:
      title: GoogleServiceAccountCredentialInfo
      description: "Applicable only for credentials with Cloud Account, Vendor Type\
        \ as Google and Auth Type as Service Account"
      allOf:
      - $ref: "#/components/schemas/CreateCredential"
      - required:
        - authType
        - certificate
        - connectString
        - dbName
        - projectId
        - userAccount
        type: object
        properties:
          authType:
            type: string
            description: Aunthentication type applicable only for Cloud Accounts with
              Google as vendor.
            enum:
            - GOOGLE_SERVICE_ACCOUNT
            - GOOGLE_CLOUD
          userAccount:
            type: string
            description: User Account of Credential
          connectString:
            type: string
            description: Connect String for Credential
          dbName:
            type: string
            description: DB Name for Credential
          certificate:
            type: string
            description: Certificate of Credential
          projectId:
            type: string
            description: Project ID of credential
      - $ref: "#/components/schemas/CommonCredentialInfo"
    OracleCredentialInfo:
      title: OracleCredentialInfo
      description: Applicable only for credentials with Cloud Account and Vendor Type
        as Oracle Infrastructure
      allOf:
      - $ref: "#/components/schemas/CreateCredential"
      - required:
        - certificate
        - connectString
        - dbName
        - password
        - tenancyOCID
        - userAccount
        - userOCID
        type: object
        properties:
          userAccount:
            type: string
            description: User Account of Credential
          password:
            type: string
            description: Password of Credential. Password must be in base64 encoded
              format.
          connectString:
            type: string
            description: Connect String for Credential
          dbName:
            type: string
            description: DB Name for Credential
          certificate:
            type: string
            description: Certificate of Credential
          tenancyOCID:
            type: string
            description: Oracle Cloud ID
          userOCID:
            type: string
            description: User name for the Oracle Cloud ID
      - $ref: "#/components/schemas/CommonCredentialInfo"
    CredentialContent:
      title: CredentialContent
      required:
      - newPassword
      - userAccount
      type: object
      properties:
        newName:
          type: string
          description: Updated name of credential
          x-terraform-mapping: name
        userAccount:
          type: string
          description: User account of Credential. If updated the updated user account
            is considered else the existing user account is considered.
        newPassword:
          type: string
          description: Updated password of credential. The password has to be provided
            in Base64 format.
          x-terraform-mapping: password
        description:
          type: string
          description: Updated description of Credential
        security:
          $ref: "#/components/schemas/UpdateCredentialSecurity"
      description: "Applicable for Credentials with Linux Account, Windows Account,\
        \ Storage Array Account or Cloud Account with Vendor Type as Hitachi Content\
        \ Platform. "
    CloudCredentialContent:
      title: CloudCredentialContent
      required:
      - accessKeyId
      - secretAccessKey
      type: object
      properties:
        newName:
          type: string
          description: Updated name of credential
        accessKeyId:
          type: string
          description: Access Key ID of Credential. If updated the updated Access
            Key ID is considered else the existing Access Key ID is considered.
        secretAccessKey:
          type: string
          description: Secret Access Key of Credential and must be in base64 encoded
            format.
        description:
          type: string
          description: Updated description of Credential
        security:
          $ref: "#/components/schemas/UpdateCredentialSecurity"
      description: "Applicable only for credentials with Cloud Account and Vendor\
        \ Type as Cloud Object Storage Service, Amazon Glacier, CCL Vault V2, Ceph\
        \ Object Gateway, China, Cloudian HyperStore, Dell EMC ECS, Fujitsu Storage\
        \ ETERNUS CD10000, Google Cloud, Hitachi Content Platform for Cloud Scale,\
        \ Huawei Object Storage, IBM Cloud Object Storage (S3-compatible), Inspur\
        \ Cloud Object Storage, Iron Mountain Iron Cloud, Kingsoft Standard Storage\
        \ Service, NetApp StorageGRID, Nutanix Objects, Quantum ActiveScale, S3 Compatible\
        \ Storage, Scality RING, Telefonica Open Cloud Object Storage, Verizon Cloud\
        \ Storage or Wasabi Hot Cloud Storage "
    CloudCredentialContentWithTokenId:
      title: CloudCredentialContentWithTokenId
      required:
      - sharedSecret
      - tokenId
      type: object
      properties:
        newName:
          type: string
          description: Updated name of credential
        tokenId:
          type: string
          description: Token ID of Credential. If updated the updated token Id is
            considered else the existing token Id is considered.
        sharedSecret:
          type: string
          description: Updated Shared secret of Credential and must be in base64 encoded
            format.
        description:
          type: string
          description: Updated description of Credential
        security:
          $ref: "#/components/schemas/UpdateCredentialSecurity"
      description: Applicable only for credentials with Cloud Account and Vendor Type
        as AT&T Synaptic Storage or EMC Atmos
    CloudCredentialContentWithAPIKey:
      title: CloudCredentialContentWithAPIKey
      required:
      - apiKey
      - userAccount
      type: object
      properties:
        newName:
          type: string
          description: Updated name of credential
        userAccount:
          type: string
          description: User account of Credential. If updated the updated user account
            is considered else the existing user account is considered.
        apiKey:
          type: string
          description: Updated API Key of Credential and must be in base64 encoded
            format.
        description:
          type: string
          description: Updated description of Credential
        security:
          $ref: "#/components/schemas/UpdateCredentialSecurity"
      description: "Applicable only for credentials with Cloud Account and Vendor\
        \ Type as IBM Cloud Object Storage, OpenStack Object Storage or Rackspace\
        \ Cloud Files"
    SalesforceCredentialContent:
      title: SalesforceCredentialContent
      required:
      - consumerKey
      - consumerSecret
      type: object
      properties:
        newName:
          type: string
          description: Updated name of credential
        consumerKey:
          type: string
          description: Consumer key of Credential
        consumerSecret:
          type: string
          description: Consumer secret of Credential
        description:
          type: string
          description: Updated description of Credential
        security:
          $ref: "#/components/schemas/UpdateCredentialSecurity"
      description: Applicable only for credentials with Cloud Account and Vendor Type
        as Salesforce Connected App
    AmazonCredentialContent:
      title: AmazonCredentialContent
      required:
      - accessKeyId
      - secretAccessKey
      type: object
      properties:
        newName:
          type: string
          description: Updated name of credential
          x-terraform-mapping: name
        accessKeyId:
          type: string
          description: Access Key ID of Credential. If updated the updated access
            key ID is considered.
        secretAccessKey:
          type: string
          description: Updated Secret Access Key of Credential and must be in base64
            encoded format.
        description:
          type: string
          description: Updated description of Credential
          x-terraform-always-update: true
        security:
          $ref: "#/components/schemas/UpdateCredentialSecurity"
      description: "Applicable only for credentials with Cloud Account, Vendor Type\
        \ as Amazon Web Services and authType is Access and Secret Keys"
    AmazonCredentialContentWithRoleArn:
      title: AmazonCredentialContentWithRoleArn
      required:
      - roleArn
      type: object
      properties:
        newName:
          type: string
          description: Updated name of credential
          x-terraform-mapping: name
        password:
          type: string
        roleArn:
          type: string
          description: Role ARN of credential. If updated the updated role ARN is
            considered.
        description:
          type: string
          description: Updated description of Credential
          x-terraform-always-update: true
        security:
          $ref: "#/components/schemas/UpdateCredentialSecurity"
      description: "Applicable only for credentials with Cloud Account, Vendor Type\
        \ as Amazon Web Services and authType is STS Assume Role with IAM Role Policy"
    AzureCredentialContent:
      title: AzureCredentialContent
      required:
      - accessKeyId
      - accountName
      type: object
      properties:
        newName:
          type: string
          description: Updated name of credential
          x-terraform-mapping: name
        accountName:
          type: string
          description: Account name of Credential. If updated the updated account
            name is considered else the existing account name is considered.
        accessKeyId:
          type: string
          description: Access key ID of Credential and must be in base64 encoded format.
        description:
          type: string
          description: Updated description of Credential
          x-terraform-always-update: true
        security:
          $ref: "#/components/schemas/CredentialSecurity"
      description: "Applicable only for credentials with Cloud Account, Vendor Type\
        \ as Microsoft Azure and authType is Access Key"
    AzureCredentialContentWithCertificate:
      title: AzureCredentialContentWithCertificate
      required:
      - applicationCertificatePassword
      - applicationId
      - certificate
      - certificateThumbprint
      - endpoints
      - environment
      - newApplicationSecret
      - tenantId
      type: object
      properties:
        authType:
          type: string
          description: Aunthentication type applicable only for Cloud Accounts with
            Microsoft Azure as vendor.
          enum:
          - AZUREACCOUNT
          x-terraform-constant: AZUREACCOUNT
        newName:
          type: string
          description: Updated name of credential
          x-terraform-mapping: name
        tenantId:
          type: string
          description: Unique Azure active directory ID
        applicationId:
          type: string
          description: Unique Azure application ID
        newApplicationSecret:
          type: string
          description: Application secret of Credential and must be in base64 encoded
            format.
          x-terraform-mapping: applicationSecret
        applicationCertificatePassword:
          type: string
          description: Password of the certificate and must be in base64 encoded format.
        certificate:
          type: string
          description: "Content of the certificate file. It should be base64 encoded.\
            \ Accepted fileTypes are pfx, p12."
        certificateThumbprint:
          type: string
          description: Thumbprint of the certificate file.
        environment:
          type: string
          description: Azure cloud deployed region
          enum:
          - AZURE_CLOUD
          - AZURE_USGOV
          - AZURE_GERMANCLOUD
          - AZURE_CHINACLOUD
          - AZURE_STACK
        endpoints:
          $ref: "#/components/schemas/AzureEndpoints"
        description:
          type: string
          description: Updated description of Credential
          x-terraform-always-update: true
        security:
          $ref: "#/components/schemas/CredentialSecurity"
      description: Applicable only for credentials with Cloud Account and Vendor Type
        as Microsoft Azure
    AzureCredentialContentWithTenantId:
      title: AzureCredentialContentWithTenantId
      required:
      - applicationId
      - endpoints
      - environment
      - newApplicationSecret
      - tenantId
      type: object
      properties:
        authType:
          type: string
          description: Aunthentication type applicable only for Cloud Accounts with
            Microsoft Azure as vendor.
          enum:
          - AZUREACCOUNT
          x-terraform-constant: AZUREACCOUNT
        newName:
          type: string
          description: Updated name of credential
          x-terraform-mapping: name
        tenantId:
          type: string
          description: Unique Azure active directory ID
        applicationId:
          type: string
          description: Unique Azure application ID
        newApplicationSecret:
          type: string
          description: Application secret of Credential and must be in base64 encoded
            format.
          x-terraform-mapping: applicationSecret
        environment:
          type: string
          description: Azure cloud deployed region
          enum:
          - AZURE_CLOUD
          - AZURE_USGOV
          - AZURE_GERMANCLOUD
          - AZURE_CHINACLOUD
          - AZURE_STACK
        endpoints:
          $ref: "#/components/schemas/AzureEndpoints"
        description:
          type: string
          description: Updated description of Credential
          x-terraform-always-update: true
        security:
          $ref: "#/components/schemas/CredentialSecurity"
      description: Applicable only for credentials with Cloud Account and Vendor Type
        as Microsoft Azure
    GoogleCredentialContent:
      title: GoogleCredentialContent
      required:
      - accessKeyId
      - secretAccessKey
      type: object
      properties:
        newName:
          type: string
          description: Updated name of credential
        accessKeyId:
          type: string
          description: "Access key ID of Credential, applicable only if authType is\
            \ Access Secret Key."
        secretAccessKey:
          type: string
          description: Secret Access Key of Credential and must be in base64 encoded
            format.
        connectString:
          type: string
          description: Connect String for Credential
        dbName:
          type: string
          description: DB Name for Credential
        certificate:
          type: string
          description: Certificate of Credential
        projectId:
          type: string
          description: Project ID of credential
        description:
          type: string
          description: Updated description of Credential
        security:
          $ref: "#/components/schemas/CredentialSecurity"
      description: "Applicable only for credentials with Cloud Account, Vendor Type\
        \ as Google and Auth Type as Access and Secret key"
    GoogleServiceAccountCredentialContent:
      title: GoogleServiceAccountCredentialContent
      required:
      - certificate
      - projectId
      - userAccount
      type: object
      properties:
        newName:
          type: string
          description: Updated name of credential
        userAccount:
          type: string
          description: User Account of Credential
        connectString:
          type: string
          description: Connect String for Credential
        dbName:
          type: string
          description: DB Name for Credential
        certificate:
          type: string
          description: Certificate of Credential
        projectId:
          type: string
          description: Project ID of credential
        description:
          type: string
          description: Updated description of Credential
        security:
          $ref: "#/components/schemas/CredentialSecurity"
      description: "Applicable only for credentials with Cloud Account, Vendor Type\
        \ as Google and Auth Type as Service Account"
    OracleCredentialContent:
      title: OracleCredentialContent
      required:
      - certificate
      - password
      - tenancyOCID
      - userOCID
      type: object
      properties:
        newName:
          type: string
          description: Updated name of credential
        userAccount:
          type: string
          description: User Account of Credential
        password:
          type: string
          description: Password of Credential. Password must be in base64 encoded
            format.
        connectString:
          type: string
          description: Connect String for Credential
        dbName:
          type: string
          description: DB Name for Credential
        certificate:
          type: string
          description: Certificate of Credential
        tenancyOCID:
          type: string
          description: Oracle Cloud ID
        userOCID:
          type: string
          description: User name for the Oracle Cloud ID
        description:
          type: string
          description: Updated description of Credential
        security:
          $ref: "#/components/schemas/CredentialSecurity"
      description: "Applicable only for credentials with Cloud Account, Vendor Type\
        \ as Oracle Cloud Infrastructutre"
    CommonCredentialInfo:
      title: CommonCredentialInfo
      type: object
      properties:
        description:
          type: string
          description: Description of Credential
        security:
          $ref: "#/components/schemas/CredentialSecurity"
      description: ""
    GetPseudoClientsForCompanyResp:
      title: GetPseudoClientsForCompanyResp
      type: object
      properties:
        clients:
          type: array
          items:
            $ref: "#/components/schemas/IdNameDisplayName"
      description: Response template for list of servers with no packages a company
      example:
        clients:
        - displayName: displayName
          name: name
          id: 2
        - displayName: displayName
          name: name
          id: 2
    GetAssociationsForCompanyResp:
      title: GetAssociationsForCompanyResp
      type: object
      properties:
        associatedEntities:
          type: array
          items:
            $ref: "#/components/schemas/IdName"
      description: Response template for list of associationsfor  a company
      example:
        associatedEntities:
        - name: name
          id: 0
        - name: name
          id: 0
    UpdateReplicationGroup:
      title: UpdateReplicationGroupReq
      type: object
      properties:
        newName:
          type: string
          description: Used to change the name of a replication group
        enable:
          type: boolean
          description: Used to enable a replication group
        disable:
          type: boolean
          description: Used to disable a replication group
        advancedOptions:
          $ref: "#/components/schemas/ReplicationGroupAdvancedOptions"
    GetRecoveryTargetListResponse:
      title: GetRecoveryTargetListResponse
      type: object
      properties:
        recoveryTargets:
          type: array
          items:
            $ref: "#/components/schemas/GetRecoveryTargetListSummary"
      description: To display the list of recovery targets
      example:
        recoveryTargets:
        - destinationHypervisor:
            name: name
            id: 0
          applicationType: REPLICATION
          policyType: policyType
          name: name
          id: 0
        - destinationHypervisor:
            name: name
            id: 0
          applicationType: REPLICATION
          policyType: policyType
          name: name
          id: 0
    GetRecoveryTargetListSummary:
      title: GetRecoveryTargetListSummary
      type: object
      properties:
        id:
          type: integer
          description: Recovery Target Id
          format: int32
        name:
          type: string
          description: Recovery Target name
        policyType:
          type: string
          description: Recovery target policy type name
        applicationType:
          type: string
          description: Recovery target application type
          enum:
          - REPLICATION
          - REGULAR
          - AUTO_SCALE_MANAGEMENT
        destinationHypervisor:
          $ref: "#/components/schemas/IdName"
      example:
        destinationHypervisor:
          name: name
          id: 0
        applicationType: REPLICATION
        policyType: policyType
        name: name
        id: 0
    IdentityServersListResp:
      type: object
      properties:
        identityServers:
          type: array
          description: Identity servers list
          items:
            $ref: "#/components/schemas/IdentityServer"
      description: List of identity servers
      example:
        identityServers:
        - configured: true
          name: name
          globalConfigInfo:
            scopeFilterQuery: scopeFilterQuery
            applyOnAllCommCells: true
            commcells:
            - name: name
              guid: guid
              id: 5
            - name: name
              guid: guid
              id: 5
            scope: scope
            isMarkedForDeletion: true
            name: name
            id: id
            status: status
          samlType: UNKNOWN
          company:
            name: name
            id: 0
          id: 0
          type: SAML
        - configured: true
          name: name
          globalConfigInfo:
            scopeFilterQuery: scopeFilterQuery
            applyOnAllCommCells: true
            commcells:
            - name: name
              guid: guid
              id: 5
            - name: name
              guid: guid
              id: 5
            scope: scope
            isMarkedForDeletion: true
            name: name
            id: id
            status: status
          samlType: UNKNOWN
          company:
            name: name
            id: 0
          id: 0
          type: SAML
    IdentityServer:
      title: IdentityServer
      type: object
      properties:
        id:
          type: integer
          description: Identity server id
          format: int32
        name:
          type: string
          description: Identity server name
        type:
          type: string
          description: Identity server service type in Enum string
          enum:
          - SAML
          - ACTIVE_DIRECTORY
          - APPLE_DIRECTORY_SERVICE
          - ORACLE_DIRECTORY
          - OPEN_LDAP
          - LDAP_SERVER
          - OTHER
        samlType:
          type: string
          description: Name of the IdP. Available only if type is SAML.
          enum:
          - UNKNOWN
          - AZURE
          - ADFS
          - OKTA
        company:
          $ref: "#/components/schemas/IdName"
        configured:
          type: boolean
          description: Boolean to indicate whether Identity server is configured.
        globalConfigInfo:
          $ref: "#/components/schemas/GlobalConfigInfo"
      description: Get identity server response
      example:
        configured: true
        name: name
        globalConfigInfo:
          scopeFilterQuery: scopeFilterQuery
          applyOnAllCommCells: true
          commcells:
          - name: name
            guid: guid
            id: 5
          - name: name
            guid: guid
            id: 5
          scope: scope
          isMarkedForDeletion: true
          name: name
          id: id
          status: status
        samlType: UNKNOWN
        company:
          name: name
          id: 0
        id: 0
        type: SAML
    LDAPRequest:
      title: ""
      required:
      - password
      - username
      type: object
      properties:
        id:
          type: integer
          description: Required when configuring an existing dummy domain as LDAP/AD
          format: int32
        username:
          type: string
          description: Username to create LDAP/AD app
        password:
          type: string
          description: "Password to create LDAP app, it should be base64 encoded"
          format: base64
        accessViaClient:
          type: boolean
          description: Denotes if the domain is accessed via a proxy
        proxies:
          type: array
          description: List of proxies used to connect to the domain. Required if
            accessViaClient is true.
          items:
            $ref: "#/components/schemas/IdName"
        doNotValidateNetBIOSName:
          type: boolean
          description: "If true, the NetBIOS name will not be validated. Providing\
            \ a custom name without validation may cause problems during Single Sign-On."
      description: Create LDAP request
      x-tags:
      - IdentityServers
    ADLDAPDetails:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        domainName:
          type: string
          description: Domain to which the users are associated
        directoryType:
          $ref: "#/components/schemas/ADLDAPDirectoryTypeForGet"
        credentials:
          type: string
          description: Username of the domain user used to connect to the domain
        company:
          $ref: "#/components/schemas/IdName"
        users:
          type: integer
          description: Number of users in the domain
          format: int32
        userGroups:
          type: integer
          description: Number of user groups in the domain
          format: int32
        baseDNForCardUsers:
          type: string
          description: Base DN for card users. Available only if domainType is ACTIVE_DIRECTORY.
        useSecureLDAP:
          type: boolean
          description: Boolean to indicate if the identity server uses secure LDAP
        enableSSO:
          type: boolean
          description: Denotes if SSO is enabled
        accessViaClient:
          type: boolean
          description: Denotes if the domain is accessed via a proxy
        proxies:
          type: array
          description: List of proxies used to connect to the domain. Available only
            if accessViaClient is true.
          items:
            $ref: "#/components/schemas/IdName"
        LDAPQueryParameters:
          uniqueItems: true
          type: array
          description: List of query parameters for the LDAP domain. Available only
            if the directory type is LDAP_SERVER
          items:
            $ref: "#/components/schemas/LDAPAttribute"
        attributeMap:
          uniqueItems: false
          type: array
          description: List of attribute mappings for the LDAP domain. Available only
            if the directoryType is LDAP_SERVER.
          items:
            $ref: "#/components/schemas/LDAPAttribute"
        globalConfigInfo:
          $ref: "#/components/schemas/GlobalConfigInfo"
      description: Details of an AD/LDAP domain
      example:
        accessViaClient: true
        credentials: credentials
        useSecureLDAP: true
        attributeMap:
        - null
        - null
        globalConfigInfo:
          scopeFilterQuery: scopeFilterQuery
          applyOnAllCommCells: true
          commcells:
          - name: name
            guid: guid
            id: 5
          - name: name
            guid: guid
            id: 5
          scope: scope
          isMarkedForDeletion: true
          name: name
          id: id
          status: status
        directoryType: ACTIVE_DIRECTORY
        users: 6
        LDAPQueryParameters:
        - isOverridden: true
          defaultValue: defaultValue
          name: name
          id: 5
          value: value
        - isOverridden: true
          defaultValue: defaultValue
          name: name
          id: 5
          value: value
        userGroups: 1
        enableSSO: true
        domainName: domainName
        baseDNForCardUsers: baseDNForCardUsers
        name: name
        company:
          name: name
          id: 0
        proxies:
        - null
        - null
        id: 0
    LDAPAttribute:
      required:
      - id
      - value
      type: object
      properties:
        id:
          type: integer
          description: ID of the attribute
          format: int32
        name:
          type: string
          description: Name of the attribute
        value:
          type: string
          description: Current value of the attribute
        defaultValue:
          type: string
          description: Default value of the attribute
        isOverridden:
          type: boolean
          description: Denotes if the value of the attribute is overridden
      description: Attribute of an LDAP server
      example:
        isOverridden: true
        defaultValue: defaultValue
        name: name
        id: 5
        value: value
    ADLDAPDirectoryType:
      type: string
      description: Directory type of an AD/LDAP domain
      enum:
      - ACTIVE_DIRECTORY
      - APPLE_DIRECTORY_SERVICE
      - LDAP_SERVER
      - OPEN_LDAP
      - ORACLE_DIRECTORY
    ADLDAPDirectoryTypeForGet:
      type: string
      description: Directory type of an AD/LDAP domain
      enum:
      - ACTIVE_DIRECTORY
      - APPLE_DIRECTORY_SERVICE
      - LDAP_SERVER
      - OPEN_LDAP
      - ORACLE_DIRECTORY
      - OTHER
    UpdateADLDAP:
      required:
      - directoryType
      - name
      type: object
      properties:
        directoryType:
          $ref: "#/components/schemas/ADLDAPDirectoryType"
        host:
          type: string
          description: The fully qualified domain name that you use to identify this
            network resource. Required only if directoryType is LDAP_SERVER
        OSXServerName:
          type: string
          description: The fully qualified domain name that you use to identify this
            network resource. Required only if directoryType is APPLE_DIRECTORY_SERVICE
        NETBIOSName:
          type: string
          description: "The fully qualified domain name that you use to identify this\
            \ network resource. Required only if directoryType is ACTIVE_DIRECTORY,\
            \ OPEN_LDAP or ORACLE_DIRECTORY "
        name:
          type: string
          description: "The fully qualified domain name, for example, my.domain.example.com"
        username:
          type: string
          description: The username for a user who has at least read permission for
            the domain
        password:
          type: string
          description: Password for the domain user. Should be in Base64 encoded format.
        baseDNForCardUsers:
          type: string
          description: Base DN for card users
        useSecureLDAP:
          type: boolean
          description: "Boolean to indicate if the app use secure LDAP. Valid only\
            \ for directory types - ACTIVE_DIRECTORY, ORACLE_DIRECTORY and LDAP_SERVER."
        enableSSO:
          type: boolean
          description: Denotes if SSO should be enabled for the domain. Valid only
            for ACTIVE_DIRECTORY.
        accessViaClient:
          type: boolean
          description: Denotes if the domain is to be accessed via a proxy
        proxies:
          type: array
          description: List of proxies used to connect to the domain. Available only
            if accessViaClient is true.
          items:
            $ref: "#/components/schemas/IdName"
        LDAPQueryParameters:
          uniqueItems: true
          type: array
          description: List of overridden query parameters for the LDAP domain. Valid
            only if the directory type is LDAP_SERVER
          items:
            $ref: "#/components/schemas/LDAPAttribute"
        attributeMap:
          uniqueItems: true
          type: array
          description: List of overridden attribute mappings for the LDAP domain.
            Valid only if the directoryType is LDAP_SERVER.
          items:
            $ref: "#/components/schemas/LDAPAttribute"
      description: Update the properties of an AD/LDAP
    ActiveDirectoryType:
      title: ""
      description: Model to create new LDAP identity servers for active directory
        type
      allOf:
      - required:
        - NETBIOSName
        - directoryType
        - name
        type: object
        properties:
          directoryType:
            type: string
            description: Active directory type
            enum:
            - ACTIVE_DIRECTORY
          NETBIOSName:
            type: string
            description: Domain name (short name) to create LDAP app
          name:
            type: string
            description: Domain connect name
          useSecureLDAP:
            type: boolean
            description: Boolean to indicate if the app use secure LDAP
          enableSSO:
            type: boolean
            description: Boolean to indicate if the app use enable SSO
          globalConfigInfo:
            $ref: "#/components/schemas/CreateGlobalConfigInfo"
      - $ref: "#/components/schemas/LDAPRequest"
      x-tags:
      - IdentityServer
    AppleDirectoryServiceType:
      title: ""
      description: Model to create LDAP app for Apple Directory Service type
      allOf:
      - required:
        - OSXServerName
        - directoryType
        - name
        type: object
        properties:
          directoryType:
            type: string
            description: Apple directory service type
            enum:
            - APPLE_DIRECTORY_SERVICE
          OSXServerName:
            type: string
            description: Domain shortname to create apple directory type app
          name:
            type: string
            description: Domain connect name
        description: Specific properties for apple directory service type
      - $ref: "#/components/schemas/LDAPRequest"
      x-tags:
      - IdentityServer
    LDAPServerType:
      title: ""
      description: Model to create new LDAP identity server for LDAP Server type
      allOf:
      - required:
        - directoryType
        - host
        type: object
        properties:
          directoryType:
            type: string
            description: LDAP server directory type - 14
            enum:
            - LDAP_SERVER
          host:
            type: string
            description: Domain shortname
          useSecureLDAP:
            type: boolean
            description: Boolean to indicate if the app use secure LDAP
          LDAPQueryParameters:
            $ref: "#/components/schemas/LDAPAttributes"
        description: Specific properties for LDAP Server app
      - $ref: "#/components/schemas/LDAPRequest"
      x-tags:
      - IdentityServers
    LDAPAttributes:
      title: ""
      type: object
      properties:
        userGroupFilter:
          type: string
          description: Custom attribute string of LDAP query paramters
          default: (objectClass=group)
        userFilter:
          type: string
          description: Custom attribute string of LDAP query paramters
          default: (&(objectCategory=User)(sAMAccountName=*))
        uniqueIdentifier:
          type: string
          description: Custom attribute string of LDAP query paramters
          default: sAMAccountName
        baseDN:
          type: string
          description: Custom attribute string of LDAP query paramters
          default: base DN
      description: Provider attributes for LDAP app
      x-tags:
      - IdentityServer
    OpenLDAPType:
      title: ""
      description: Model to create new LDAP identity servers for Open LDAP type
      allOf:
      - required:
        - NETBIOSName
        - directoryType
        - name
        type: object
        properties:
          directoryType:
            type: string
            description: Open LDAP directory type
            enum:
            - OPEN_LDAP
          NETBIOSName:
            type: string
            description: Connect name to create open LDAP type app
          name:
            type: string
            description: Domain connect name
        description: Specific properties for Open LDAP type
      - $ref: "#/components/schemas/LDAPRequest"
      x-tags:
      - IdentityServers
    OracleDirectoryType:
      title: ""
      description: Model to create new LDAP identity servers for Oracle type
      allOf:
      - required:
        - NETBIOSName
        - directoryType
        - name
        type: object
        properties:
          directoryType:
            type: string
            description: Oracle directory type
            enum:
            - ORACLE_DIRECTORY
          NETBIOSName:
            type: string
            description: Domain shortname
          name:
            type: string
            description: Domain connect name
          useSecureLDAP:
            type: boolean
            description: Boolean to indicate if the app use secure LDAP
        description: Specific properties for Oracle directory type
      - $ref: "#/components/schemas/LDAPRequest"
      x-tags:
      - IdentityServers
    RecoveryTargetDetails:
      title: RecoveryTargetDetails
      type: object
      properties:
        entity:
          $ref: "#/components/schemas/GetRecoveryTargetListSummary"
        accessNode:
          $ref: "#/components/schemas/IdNameType"
        vmDisplayName:
          $ref: "#/components/schemas/VMDisplayName"
        vmStoragePolicyName:
          type: string
          description: Name of Storage policy linked with the vm
        securityOptions:
          $ref: "#/components/schemas/SecurityOptions"
        destinationOptions:
          $ref: "#/components/schemas/DestinationOptions"
        networkOptions:
          $ref: "#/components/schemas/NetworkOptions"
        provisioningOptions:
          $ref: "#/components/schemas/ProvisioningOptions"
        cloudDestinationOptions:
          $ref: "#/components/schemas/cloudDestinationOptions"
        isoInfo:
          type: array
          description: Info for the Windows/Unix ISO files
          items:
            $ref: "#/components/schemas/IsoInfo"
        zone:
          $ref: "#/components/schemas/Zone"
        associatedClientGroup:
          $ref: "#/components/schemas/IdName"
        liveMountOptions:
          $ref: "#/components/schemas/LiveMountOptions"
        virtualLabOptions:
          $ref: "#/components/schemas/VirtualLabOptions"
      description: Recovery target info
      example:
        associatedClientGroup: null
        destinationOptions:
          iamRole: null
          dataStoreClusterName: dataStoreClusterName
          resourcePoolPath: resourcePoolPath
          vmFolder: vmFolder
          dataStore: dataStore
          destinationHost: destinationHost
        networkOptions:
          networkCard:
            subnetId: subnetId
            networkNames:
            - networkNames
            - networkNames
            destinationNetworks:
            - destinationNetworks
            - destinationNetworks
            networkId: networkId
            networkDisplayName: networkDisplayName
            network: network
          cloudNetwork:
            networkName: networkName
            subnetNames:
              name: name
              value: value
            label: label
        vmDisplayName:
          prefix: prefix
          suffix: suffix
        cloudDestinationOptions:
          volumeType: volumeType
          instanceTypes:
          - instanceTypes
          - instanceTypes
          testDiskType: testDiskType
          publicIP: true
          encryptionKey: null
          availabilityZone: availabilityZone
          tags:
          - null
          - null
          soleTenancyNodes:
          - null
          - null
          keyPair: keyPair
          restoreAsManagedVM: true
          region:
            name: name
            id: id
          machineType: null
          vmInstanceType: vmInstanceType
        accessNode:
          name: name
          id: 1
          type: type
        securityOptions:
          userGroups:
          - name: name
            id: 0
          - name: name
            id: 0
          testSecurityGroups:
          - null
          - null
          securityGroups:
          - name: name
            id: id
          - name: name
            id: id
          users:
          - name: name
            fullName: fullName
            id: 0
          - name: name
            fullName: fullName
            id: 0
        virtualLabOptions:
          ipSettings:
          - ipAddressRange: ipAddressRange
            networkName: networkName
            subnetMask: subnetMask
            defaultGatewayIP: defaultGatewayIP
          - ipAddressRange: ipAddressRange
            networkName: networkName
            subnetMask: subnetMask
            defaultGatewayIP: defaultGatewayIP
          gatewayTemplate: gatewayTemplate
          externalNetwork: externalNetwork
          configureIsolatedNetwork: true
          gatewayNetwork: gatewayNetwork
        zone:
          primaryZoneName: primaryZoneName
          secondaryZoneName: secondaryZoneName
        isoInfo:
        - isoPath: isoPath
          osType: UNIX
        - isoPath: isoPath
          osType: UNIX
        provisioningOptions:
          templates:
          - vmName: vmName
            vmGUID: vmGUID
          - vmName: vmName
            vmGUID: vmGUID
          maximumMemory: maximumMemory
          numberOfVMs: 1
          maximumCPUCores: 6
        vmStoragePolicyName: vmStoragePolicyName
        liveMountOptions:
          isLiveMountEnabled: true
          mediaAgent: null
          expirationTime:
            minutesRetainUntil: minutesRetainUntil
            daysRetainUntil: daysRetainUntil
          migrateVMs: true
        entity:
          destinationHypervisor:
            name: name
            id: 0
          applicationType: REPLICATION
          policyType: policyType
          name: name
          id: 0
    IsoInfo:
      title: IsoInfo
      type: object
      properties:
        isoPath:
          type: string
          description: Path for the Windows/Unix ISO files
        osType:
          type: string
          description: OS Type name
          enum:
          - UNIX
          - WINDOWS
      description: Info for the Windows/Unix ISO files
      example:
        isoPath: isoPath
        osType: UNIX
    VMDisplayName:
      title: VMDisplayName
      type: object
      properties:
        prefix:
          type: string
          description: A prefix string that will be appended to the source VM to create
            a display name for each destination VM
        suffix:
          type: string
          description: A suffix string that will be appended to the source VM to create
            a display name for each destination VM
      description: Prefix or Suffix appended to create display name for destination
        instance
      example:
        prefix: prefix
        suffix: suffix
    ExpirationTime:
      title: ExpirationTime
      type: object
      properties:
        minutesRetainUntil:
          type: string
          description: Expiration Time if in minutes
        daysRetainUntil:
          type: string
          description: Expiration Time if in days
      example:
        minutesRetainUntil: minutesRetainUntil
        daysRetainUntil: daysRetainUntil
    Template:
      title: Template
      type: object
      properties:
        vmName:
          type: string
          description: VM name of template
        vmGUID:
          type: string
          description: VM guid of template
      example:
        vmName: vmName
        vmGUID: vmGUID
    Zone:
      title: Zone
      type: object
      properties:
        primaryZoneName:
          type: string
          description: Name of Primary Zone for the VM to deploy
        secondaryZoneName:
          type: string
          description: Name of Secondary Zone for the VM to deploy
      example:
        primaryZoneName: primaryZoneName
        secondaryZoneName: secondaryZoneName
    CloudNetwork:
      title: CloudNetwork
      type: object
      properties:
        label:
          type: string
          description: Cloud network label
        networkName:
          type: string
          description: Cloud network name
        subnetNames:
          $ref: "#/components/schemas/NameValue"
      example:
        networkName: networkName
        subnetNames:
          name: name
          value: value
        label: label
    SecurityOptions:
      title: SecurityOptions
      type: object
      properties:
        users:
          type: array
          description: Users that have access to the recovery target
          items:
            $ref: "#/components/schemas/IdNameFullName"
        userGroups:
          type: array
          description: User groups that have access to the recovery target
          items:
            $ref: "#/components/schemas/IdName"
        securityGroups:
          type: array
          description: List of security groups that provide controlled access of the
            DR VM
          items:
            $ref: "#/components/schemas/SecurityGroup"
        testSecurityGroups:
          type: array
          description: List of security groups that provide controlled access of the
            VM in cloud for test failover
          items:
            $ref: "#/components/schemas/SecurityGroup"
      example:
        userGroups:
        - name: name
          id: 0
        - name: name
          id: 0
        testSecurityGroups:
        - null
        - null
        securityGroups:
        - name: name
          id: id
        - name: name
          id: id
        users:
        - name: name
          fullName: fullName
          id: 0
        - name: name
          fullName: fullName
          id: 0
    DestinationOptions:
      title: DestinationOptions
      type: object
      properties:
        destinationHost:
          type: string
          description: Destination host for the VM to deploy
        dataStore:
          type: string
          description: "Datastore for the destination VM to store the disks and its\
            \ config files. In-case of Microsoft Hyper-V, datastore refers to the\
            \ destination folder for restore when default folder is not set."
        dataStoreClusterName:
          type: string
          description: Datastore cluster for the destination VM to store disks and
            config files in the datastore associated with the datastore cluster.
        resourcePoolPath:
          type: string
          description: Resource pool for the destination VM
        vmFolder:
          type: string
          description: Folder path where the destination VM will be located
        iamRole:
          $ref: "#/components/schemas/IdName"
      example:
        iamRole: null
        dataStoreClusterName: dataStoreClusterName
        resourcePoolPath: resourcePoolPath
        vmFolder: vmFolder
        dataStore: dataStore
        destinationHost: destinationHost
    NetworkOptions:
      title: NetworkOptions
      type: object
      properties:
        networkCard:
          $ref: "#/components/schemas/NetworkCard"
        cloudNetwork:
          $ref: "#/components/schemas/CloudNetwork"
      example:
        networkCard:
          subnetId: subnetId
          networkNames:
          - networkNames
          - networkNames
          destinationNetworks:
          - destinationNetworks
          - destinationNetworks
          networkId: networkId
          networkDisplayName: networkDisplayName
          network: network
        cloudNetwork:
          networkName: networkName
          subnetNames:
            name: name
            value: value
          label: label
    ProvisioningOptions:
      title: ProvisioningOptions
      type: object
      properties:
        maximumCPUCores:
          type: integer
          description: Maximum cores for the VM
          format: int32
        numberOfVMs:
          type: integer
          description: Number of VMs that each user can create using this recovery
            target
          format: int32
        maximumMemory:
          type: string
          description: Maximum memory of the VM in GBs
        templates:
          type: array
          items:
            $ref: "#/components/schemas/Template"
      example:
        templates:
        - vmName: vmName
          vmGUID: vmGUID
        - vmName: vmName
          vmGUID: vmGUID
        maximumMemory: maximumMemory
        numberOfVMs: 1
        maximumCPUCores: 6
    cloudDestinationOptions:
      title: cloudDestinationOptions
      type: object
      properties:
        region:
          $ref: "#/components/schemas/Region"
        keyPair:
          type: string
          description: Name of key pair that associates with the VM for authentication
        restoreAsManagedVM:
          type: boolean
          description: "If true, restore creates the destination VM as a managed VM\
            \ in Azure"
        machineType:
          $ref: "#/components/schemas/IdName"
        soleTenancyNodes:
          type: array
          items:
            $ref: "#/components/schemas/NameValue"
        tags:
          type: array
          items:
            $ref: "#/components/schemas/NameValue"
        availabilityZone:
          type: string
          description: Availability zone name for the destination instance
        vmInstanceType:
          type: string
          description: Instance type that provides the available cpu cores and memory
            to the machine
        encryptionKey:
          $ref: "#/components/schemas/IdName"
        volumeType:
          type: string
          description: Volume type of destination VM
        testDiskType:
          type: string
          description: Disk / Volume type for test failover VM
        instanceTypes:
          type: array
          items:
            type: string
        publicIP:
          type: boolean
          description: "If true, public IP address are configured for destination\
            \ VMs"
      example:
        volumeType: volumeType
        instanceTypes:
        - instanceTypes
        - instanceTypes
        testDiskType: testDiskType
        publicIP: true
        encryptionKey: null
        availabilityZone: availabilityZone
        tags:
        - null
        - null
        soleTenancyNodes:
        - null
        - null
        keyPair: keyPair
        restoreAsManagedVM: true
        region:
          name: name
          id: id
        machineType: null
        vmInstanceType: vmInstanceType
    LiveMountOptions:
      title: LiveMountOptions
      type: object
      properties:
        mediaAgent:
          $ref: "#/components/schemas/IdName"
        isLiveMountEnabled:
          type: boolean
          description: Indiciates whether the Live mount is allowed from this recovery
            target
        migrateVMs:
          type: boolean
          description: Whether migrate VMs options is turned on for test failover
        expirationTime:
          $ref: "#/components/schemas/ExpirationTime"
      example:
        isLiveMountEnabled: true
        mediaAgent: null
        expirationTime:
          minutesRetainUntil: minutesRetainUntil
          daysRetainUntil: daysRetainUntil
        migrateVMs: true
    NetworkCard:
      title: NetworkCard
      type: object
      properties:
        networkDisplayName:
          type: string
          description: Selected network display name
        network:
          type: string
          description: Name of network switch
        subnetId:
          type: string
          description: Subnet id of the subnet
        networkId:
          type: string
          description: VPC id for the amazon network
        destinationNetworks:
          type: array
          description: Destination network name
          items:
            type: string
        networkNames:
          type: array
          description: Name of network to which the nic is connected
          items:
            type: string
      example:
        subnetId: subnetId
        networkNames:
        - networkNames
        - networkNames
        destinationNetworks:
        - destinationNetworks
        - destinationNetworks
        networkId: networkId
        networkDisplayName: networkDisplayName
        network: network
    Region:
      title: Region
      type: object
      properties:
        id:
          type: string
          description: GUID of the destination region.
        name:
          type: string
          description: "Region name of destination. In-case of VMWare, region name\
            \ refers to the destination host cluster name."
      example:
        name: name
        id: id
    VirtualLabOptions:
      title: VirtualLabOptions
      type: object
      properties:
        externalNetwork:
          type: string
          description: To use virtual lab VM to connect to the existing network
        gatewayTemplate:
          type: string
          description: Gateway template provision VMs to communicate to VMs outside
            the virtual lab
        gatewayNetwork:
          type: string
          description: Primary network associated on the Provisioning Gateway VM that
            has production network access
        configureIsolatedNetwork:
          type: boolean
          description: To use isolated network for the virtual lab VM
        ipSettings:
          type: array
          items:
            $ref: "#/components/schemas/VirtualLabIPSettings"
      description: Virtual lab options configured in the recovery target
      example:
        ipSettings:
        - ipAddressRange: ipAddressRange
          networkName: networkName
          subnetMask: subnetMask
          defaultGatewayIP: defaultGatewayIP
        - ipAddressRange: ipAddressRange
          networkName: networkName
          subnetMask: subnetMask
          defaultGatewayIP: defaultGatewayIP
        gatewayTemplate: gatewayTemplate
        externalNetwork: externalNetwork
        configureIsolatedNetwork: true
        gatewayNetwork: gatewayNetwork
    VMApplicationValidationResults:
      title: VMApplicationValidationResults
      type: object
      properties:
        bootStatus:
          type: boolean
          description: true if backup validation is set
        lastValidationJobId:
          type: integer
          description: job id of the last backup validation job
          format: int32
        backupValidated:
          type: integer
          description: job id of the last backup job that was validated
          format: int32
        backupCompletionDate:
          type: integer
          description: timestamp(in unix) for the last backup job completed
          format: int32
        appsDiscovered:
          type: array
          items:
            $ref: "#/components/schemas/VMAppsDiscovered"
      example:
        lastValidationJobId: 5
        backupCompletionDate: 7
        bootStatus: true
        appsDiscovered:
        - scriptStatus: true
          failureReason: failureReason
          name: name
        - scriptStatus: true
          failureReason: failureReason
          name: name
        backupValidated: 2
    VMAppsDiscovered:
      title: VMAppsDiscovered
      type: object
      properties:
        name:
          type: string
          description: name of the VM apps discovered for validation
        scriptStatus:
          type: boolean
          description: true if validation status is true
        failureReason:
          type: string
          description: reason for failure of validation of app
      example:
        scriptStatus: true
        failureReason: failureReason
        name: name
    SyslogStatus:
      title: SyslogStatus
      type: object
      properties:
        hostname:
          type: string
          description: The hostname or the IP address of the syslog server.
        port:
          maximum: 65535
          minimum: 1
          type: integer
          description: The port on which the syslog server accepts the logs.
          format: int32
        enabled:
          type: boolean
          description: Specifies if the syslog server is enabled or disabled
        secureMessaging:
          type: boolean
          description: "When false UDP port will be used, when true TLS encryption\
            \ will be used to connect to Syslog Server. To upload Certificate Authority\
            \ file it should be enabled."
        certificateAuthorityName:
          type: string
          description: File name of the uploaded certificate authority file
        forwardToSyslog:
          $ref: "#/components/schemas/SyslogPolicies"
      description: Get status of a syslog server.
      example:
        hostname: hostname
        port: 5249
        forwardToSyslog:
          alerts: true
          audit: true
          events: true
        secureMessaging: true
        certificateAuthorityName: certificateAuthorityName
        enabled: true
      x-tags:
      - SyslogServer
    SyslogPolicies:
      title: SyslogPolicies
      type: object
      properties:
        alerts:
          type: boolean
          description: Forward the system log for alerts to the server.
        audit:
          type: boolean
          description: Forward the system log for audit trails to the server.
        events:
          type: boolean
          description: Forward the system log for events to the server.
      description: Select the log types that you want to forward to the syslog server.
      example:
        alerts: true
        audit: true
        events: true
      x-tags:
      - SyslogServer
    SyslogConfigure:
      title: SyslogConfigure
      required:
      - hostname
      type: object
      properties:
        hostname:
          type: string
          description: The hostname or the IP address of the syslog server.
        port:
          maximum: 65535
          minimum: 1
          type: integer
          description: The port on which the syslog server accepts the logs.
          format: int32
        enabled:
          type: boolean
          description: Specifies if the syslog server is enabled or disabled
        secureMessaging:
          type: boolean
          description: "When false UDP port will be used, when true TLS encryption\
            \ will be used to connect to Syslog Server. To upload Certificate Authority\
            \ file it should be enabled."
        certificateAuthorityName:
          type: string
          description: File name of the uploaded certificate authority file
        certificateAuthorityContent:
          type: string
          description: "Content of the uploaded certificate authority file. It should\
            \ be base64 encoded. Accepted fileTypes are key,crt,pem."
        forwardToSyslog:
          $ref: "#/components/schemas/SyslogPolicies"
      description: This operation configures a syslog server.
      x-tags:
      - SyslogServer
    ServiceCommcells:
      title: ServiceCommcells
      type: object
      properties:
        id:
          type: integer
          description: Id of the commcell
          format: int32
        name:
          type: string
          description: Name of the commcell entity
        hostName:
          type: string
          description: hostname of the Commcell
        syncStatus:
          $ref: "#/components/schemas/SyncStatus"
        role:
          type: string
          description: Role of the commcell
          enum:
          - NOTCONFIGURED
          - ROUTERCOMMCELL
          - ROUTERCOMMCELL_SERVICECOMMCELL
          - IDPCOMMCELL
          - IDPCOMMCELL_SERVICECOMMCELL
          - CLOUDSERVICE
          - ONPRIM_SUBSCRIBER_OF_CLOUDSERVICE
          - MSP_CLOUDSERVICE
        useUniversalCommandCenter:
          type: boolean
          description: if enabled the Command Center of the commcell belong to the
            primary CommCell
      description: Returns a list of service commcells
      example:
        hostName: hostName
        useUniversalCommandCenter: true
        role: NOTCONFIGURED
        name: name
        id: 0
        syncStatus:
          lastSyncedWithIDP: 6
          errorMessage:
          - name: name
            message: message
          - name: name
            message: message
          status: SUCCESSFUL
      x-tags:
      - ServiceCommcells
    SyncStatus:
      title: SyncStatus
      required:
      - errorMessage
      type: object
      properties:
        status:
          type: string
          description: status of the commcell
          enum:
          - SUCCESSFUL
          - FAILED
        errorMessage:
          $ref: "#/components/schemas/ErrorMessage"
        lastSyncedWithIDP:
          type: integer
          description: returns the last synced time with IDP(unix time format)
          format: int32
      description: Sync status of the commcell
      example:
        lastSyncedWithIDP: 6
        errorMessage:
        - name: name
          message: message
        - name: name
          message: message
        status: SUCCESSFUL
      x-tags:
      - ServiceCommcells
    ErrorMessage:
      title: ErrorMessage
      type: array
      description: errorMessage if the commcell failed to sync
      items:
        $ref: "#/components/schemas/NameMessage"
      x-tags:
      - ServiceCommcells
      x-schema-name: ErrorMessage
    NameMessage:
      type: object
      properties:
        name:
          type: string
          description: Name of the error
        message:
          type: string
          description: Description of the error
      example:
        name: name
        message: message
    RMRequestList:
      title: RMRequestList
      type: object
      properties:
        requests:
          type: array
          description: List of Request Manager Requests
          items:
            $ref: "#/components/schemas/RMRequestSummary"
      description: ""
      example:
        requests:
        - owner:
            name: name
            id: 0
          application: NONE
          name: name
          approvers:
          - null
          - null
          id: 0
          type: EXPORT
          createdOn: 6
          reviewers:
          - null
          - null
          requestor: ""
          status: TaskCreated
        - owner:
            name: name
            id: 0
          application: NONE
          name: name
          approvers:
          - null
          - null
          id: 0
          type: EXPORT
          createdOn: 6
          reviewers:
          - null
          - null
          requestor: ""
          status: TaskCreated
    RMRequestSummary:
      title: RMRequestSummary
      type: object
      properties:
        id:
          type: integer
          description: Request id
          format: int32
        name:
          type: string
          description: Request name
        type:
          $ref: "#/components/schemas/RMRequestType"
        status:
          $ref: "#/components/schemas/RMRequestStatus"
        requestor:
          type: string
          description: Email of the requestor
          format: email
        application:
          $ref: "#/components/schemas/ActivateApplication"
        createdOn:
          type: integer
          description: Request creation time in unix epoch format
          format: int64
        owner:
          $ref: "#/components/schemas/IdName"
        reviewers:
          type: array
          description: List of request reviewers
          items:
            $ref: "#/components/schemas/IdName"
        approvers:
          type: array
          description: List of the request approvers
          items:
            $ref: "#/components/schemas/IdName"
      description: ""
      example:
        owner:
          name: name
          id: 0
        application: NONE
        name: name
        approvers:
        - null
        - null
        id: 0
        type: EXPORT
        createdOn: 6
        reviewers:
        - null
        - null
        requestor: ""
        status: TaskCreated
    RMRequestStatus:
      title: RMRequestStatus
      type: string
      description: Signifies the progress of the request
      enum:
      - TaskCreated
      - TaskConfigured
      - ReviewInProgress
      - ReviewCompleted
      - ApproveCompleted
      - TaskCompleted
      - ApprovalRequested
      - ActionInProgress
      - CompletedWithErrors
      - Failed
      - ReviewDeclined
    PlanEntityRuleTag:
      title: PlanEntityRuleTag
      type: object
      properties:
        GUID:
          type: string
          description: GUID for the tag
        id:
          type: integer
          description: Id for the tag
          format: int32
        name:
          type: string
          description: Name for the plan rule tag which need to be matched against
            tag of the workload.
        value:
          type: string
          description: Possible value that need to matched against value of tag associated
            to workload.
      description: Object to suggest possible plan rule tags that can be part of plan
        entity rule
      example:
        GUID: GUID
        name: name
        id: 0
        value: value
    UpdatePlanEntityRuleRanks:
      title: UpdatePlanEntityRuleRanks
      type: object
      properties:
        rules:
          type: array
          description: Lits of plan entity rule object suggesting their ranks.
          items:
            $ref: "#/components/schemas/PlanEntityRuleRank"
      description: Plan entity rule update rank object. Fields in this object need
        to be populated to suggest what rank need to be set for the said rule.
    PlanEntityRuleRank:
      title: PlanEntityRuleRank
      type: object
      properties:
        rule:
          $ref: "#/components/schemas/IdName"
        rank:
          type: integer
          description: This will suggest rank/priority of the plan rule.
          format: int32
      description: This object will hold detail for plan rule entity and its rank.
    UpdateTimezoneForClientsReq:
      title: UpdateTimezoneForClientsReq
      type: object
      properties:
        clients:
          type: array
          items:
            $ref: "#/components/schemas/IdName"
        updateAll:
          type: boolean
          description: Boolean which determines if all servers(with no package) should
            be updated with the company timezone.
      description: Request body for updating timezone for clients
    RMRequestDetails:
      title: RMRequestDetails
      description: ""
      allOf:
      - $ref: "#/components/schemas/RMRequestSummary"
      - type: object
        properties:
          properties:
            type: array
            description: Properties of the request
            items:
              $ref: "#/components/schemas/NameValues"
    NameValues:
      title: NameValues
      type: object
      properties:
        name:
          type: string
        value:
          type: string
          nullable: true
        values:
          type: array
          nullable: true
          items:
            type: string
    NameValue:
      title: NameValue
      type: object
      properties:
        name:
          type: string
        value:
          type: string
      example:
        name: name
        value: value
    EntityAuditInformation:
      title: EntityAuditInformation
      type: object
      properties:
        severity:
          $ref: "#/components/schemas/AuditLevel"
        time:
          type: integer
          description: Unix epoch time representation of audit entry
          format: int32
        user:
          type: string
          description: Name of the user
        operation:
          type: string
          description: Operation performed
        messages:
          type: array
          description: All the audit messages for this entry
          items:
            type: string
      example:
        severity: LOW
        messages:
        - messages
        - messages
        time: 0
        user: user
        operation: operation
    AuditLevel:
      title: AuditLevel
      type: string
      description: Defines the serverity of the audit entry
      enum:
      - LOW
      - MEDIUM
      - HIGH
      - CRITICAL
    EntityAuditList:
      title: EntityAuditList
      type: object
      properties:
        auditDetails:
          type: array
          description: List of audit information for an entity
          items:
            $ref: "#/components/schemas/EntityAuditInformation"
      description: ""
      example:
        auditDetails:
        - severity: LOW
          messages:
          - messages
          - messages
          time: 0
          user: user
          operation: operation
        - severity: LOW
          messages:
          - messages
          - messages
          time: 0
          user: user
          operation: operation
    KeyManagementServer:
      title: KeyManagementServer
      type: object
      properties:
        id:
          type: integer
          description: Gives the key management server id
          format: int32
        name:
          type: string
          description: Gives the name of the key management server
        type:
          type: string
          description: Gives the key provider type for the key management server
          enum:
          - NONE
          - COMMVAULT
          - KMIP
          - AWS_KMS
          - AZURE_KEY_VAULT
          - SAFENET
          - PASSPHRASE
      description: ""
      example:
        name: name
        id: 0
        type: NONE
      x-tags:
      - KeyManagementServer
    ReplicationMonitorDetail:
      title: ReplicationMonitorDetail
      type: object
      properties:
        summary:
          $ref: "#/components/schemas/ReplicationMonitorDetailSummary"
        recoveryOptions:
          $ref: "#/components/schemas/ReplicationMonitorDetailRecoveryOptions"
        replicationCopyDetails:
          type: array
          description: Gives copy details information for replication group
          items:
            $ref: "#/components/schemas/ReplicationMonitorDetailReplicationCopyDetails"
        statistics:
          type: array
          description: Gives statistics information for Replication performance and
            Journal retention
          items:
            $ref: "#/components/schemas/ReplicationMonitorDetailStats"
      description: Details of continuous replication group
      example:
        summary:
          eventMessage: eventMessage
          replicationLag: 6
          synchronizationStatus: BLR_BACKUP
          destination: null
          id: 0
          source:
            name: name
            id: 0
          recoveryType: LIVE
        recoveryOptions:
          RPIntervalAfterRetention: 2
          switchToLatestIfStoreOfflineFor: 9
          mergeRecoveryPointsOlderThan: 5
          retainRecoveryPointsFor: 5
          pruneAndMergeOffPeakOnly: true
          ACRPInterval: 7
          recoverypointStore: null
          CCRPInterval: 1
        replicationCopyDetails:
        - statusDescription: statusDescription
          creationTime: 3
          expirationTime: 2
          name: name
          UUID: UUID
          type: TESTBOOT
          status: IN_PROGRESS
        - statusDescription: statusDescription
          creationTime: 3
          expirationTime: 2
          name: name
          UUID: UUID
          type: TESTBOOT
          status: IN_PROGRESS
        statistics:
        - timeStamp: 4
          IODelta: 1
          repDataDeltaActual: 7
          repSetSize: 1
          sizeInRpStore: 6
          id: 4
          IOPSDelta: 1
          repDataDeltaComp: 7
          retention: 1
        - timeStamp: 4
          IODelta: 1
          repDataDeltaActual: 7
          repSetSize: 1
          sizeInRpStore: 6
          id: 4
          IOPSDelta: 1
          repDataDeltaComp: 7
          retention: 1
    ReplicationMonitorDetailSummary:
      title: ReplicationMonitorDetailSummary
      type: object
      properties:
        id:
          type: integer
          description: Id of replication pair
          format: int32
        source:
          $ref: "#/components/schemas/IdName"
        destination:
          $ref: "#/components/schemas/IdName"
        recoveryType:
          type: string
          description: Gives information about the recovery type of replication group
          enum:
          - LIVE
          - SNAPSHOT
          - GRANULAR
          - GRANULARV2
        synchronizationStatus:
          type: string
          description: Gives information about the synchronization status
          enum:
          - BLR_BACKUP
          - BLR_RESTORE
          - BLR_RESYNC
          - BLR_RUNNING
          - BLR_PAUSED
          - BLR_STOPPED
          - BLR_VERIFYING
          - BLR_TROUBLE
          - BLR_FAILED
          - BLR_STARTING
          - BLR_STOPPING
          - BLR_SUSPENDING
          - BLR_RESUMING
          - BLR_FAILING_OVER
          - BLR_FAILOVER_FAILED
          - BLR_FAILOVER_DONE
          - BLR_FAILING_BACK
          - BLR_FAILBACK_FAILED
          - BLR_SWITCHING_ROLES
          - BLR_SWITCH_ROLE_FAILED
        replicationLag:
          type: integer
          description: Lag time in seconds
          format: int32
        eventMessage:
          type: string
          description: additional description of current pair status
      description: Gives summary of replication group.
      example:
        eventMessage: eventMessage
        replicationLag: 6
        synchronizationStatus: BLR_BACKUP
        destination: null
        id: 0
        source:
          name: name
          id: 0
        recoveryType: LIVE
    ReplicationMonitorDetailRecoveryOptions:
      title: ReplicationMonitorDetailRecoveryOptions
      type: object
      properties:
        recoverypointStore:
          $ref: "#/components/schemas/IdName"
        CCRPInterval:
          type: integer
          description: Time interval between crash consistent recovery points in seconds
          format: int32
        mergeRecoveryPointsOlderThan:
          type: integer
          description: Time which should be satisfied to merge recovery points in
            seconds
          format: int32
        retainRecoveryPointsFor:
          type: integer
          description: Recovery points retention time in seconds
          format: int32
        RPIntervalAfterRetention:
          type: integer
          description: Recovery point interval at the end of retention time in seconds
          format: int32
        pruneAndMergeOffPeakOnly:
          type: boolean
          description: Boolean which determines Prune and Merge Recovery Points during
            off peak time only.
        ACRPInterval:
          type: integer
          description: Gives information about application consistent recovery point
            interval in seconds
          format: int32
        switchToLatestIfStoreOfflineFor:
          type: integer
          description: Gives information about switching to  latest recovery point
            store to latest if it is offline for time  in seconds
          format: int32
      description: Gives information about the recovery options for replication group
      example:
        RPIntervalAfterRetention: 2
        switchToLatestIfStoreOfflineFor: 9
        mergeRecoveryPointsOlderThan: 5
        retainRecoveryPointsFor: 5
        pruneAndMergeOffPeakOnly: true
        ACRPInterval: 7
        recoverypointStore: null
        CCRPInterval: 1
    ReplicationMonitorDetailReplicationCopyDetails:
      title: ReplicationMonitorDetailReplicationCopyDetails
      type: object
      properties:
        name:
          type: string
          description: Name of replication copy
        UUID:
          type: string
          description: UUID of replication copy
        status:
          type: string
          description: Status of replication copy
          enum:
          - IN_PROGRESS
          - SUCCESS
          - FAILED
          - ABOUT_TO_EXPIRE
          - EXPIRED
          - USER_DELETED
          - DELETE_FAILED
          - PARTIAL_SUCCESS
        statusDescription:
          type: string
          description: Status description
        type:
          type: string
          description: Type of replication copy
          enum:
          - TESTBOOT
          - PERMANENT
        creationTime:
          type: integer
          description: Creation time (Unix Time)
          format: int32
        expirationTime:
          type: integer
          description: Expiration time
          format: int32
      description: Gives copy details information for replication group
      example:
        statusDescription: statusDescription
        creationTime: 3
        expirationTime: 2
        name: name
        UUID: UUID
        type: TESTBOOT
        status: IN_PROGRESS
    ReplicationMonitorDetailStats:
      title: ReplicationMonitorDetailStats
      type: object
      properties:
        id:
          type: integer
          format: int32
        repDataDeltaActual:
          type: integer
          format: int32
        IODelta:
          type: integer
          format: int32
        repSetSize:
          type: integer
          format: int32
        IOPSDelta:
          type: integer
          format: int32
        sizeInRpStore:
          type: integer
          format: int32
        repDataDeltaComp:
          type: integer
          format: int32
        retention:
          type: integer
          format: int32
        timeStamp:
          type: integer
          format: int32
      description: Gives statistics information for Replication performance and Journal
        retention
      example:
        timeStamp: 4
        IODelta: 1
        repDataDeltaActual: 7
        repSetSize: 1
        sizeInRpStore: 6
        id: 4
        IOPSDelta: 1
        repDataDeltaComp: 7
        retention: 1
    ArrayReplicationDatastoreReplication:
      title: ArrayReplicationDatastoreReplication
      type: object
      properties:
        id:
          type: integer
          description: The ID of datastore relationship mapping
          format: int32
        sourceDatastore:
          $ref: "#/components/schemas/NameGUID"
        destinationDatastore:
          $ref: "#/components/schemas/NameGUID"
      description: The replication information for each datastore pair mapping
      example:
        destinationDatastore: null
        sourceDatastore: null
        id: 6
    FailoverStatus:
      type: string
      description: The types of failover statuses
      enum:
      - NONE
      - FAILOVER_COMPLETE
      - FAILOVER_RUNNING
      - FAILOVER_PAUSED
      - FAILOVER_FAILED
      - FAILBACK_COMPLETE
      - FAILBACK_RUNNING
      - FAILBACK_PAUSED
      - FAILBACK_FAILED
      - FAILBACK_PARTIAL
      - FAILOVER_PARTIAL
      - FAILOVER_SKIPPED
      - FAILBACK_SKIPPED
      - REVERT_FAILOVER_COMPLETE
      - REVERT_FAILOVER_RUNNING
      - REVERT_FAILOVER_FAILED
      - REVERT_FAILOVER_PAUSED
    ArrayReplicationMonitorInfo:
      title: ArrayReplicationMonitorInfo
      type: object
      properties:
        id:
          type: integer
          description: The ID of array replication pair
          format: int32
        source:
          $ref: "#/components/schemas/NameGUID"
        destination:
          $ref: "#/components/schemas/NameGUID"
        datastores:
          type: array
          items:
            $ref: "#/components/schemas/ArrayReplicationDatastoreReplication"
        failoverStatus:
          $ref: "#/components/schemas/FailoverStatus"
        testFailoverStatus:
          $ref: "#/components/schemas/FailoverStatus"
        lastReplicationFailureStatus:
          type: string
          description: The reason for last replication job failure
      description: Gives array replication monitor site information
      example:
        testFailoverStatus: null
        destination: null
        id: 0
        source:
          GUID: GUID
          name: name
        datastores:
        - destinationDatastore: null
          sourceDatastore: null
          id: 6
        - destinationDatastore: null
          sourceDatastore: null
          id: 6
        failoverStatus: NONE
        lastReplicationFailureStatus: lastReplicationFailureStatus
    ArrayReplicationMonitorResp:
      title: ArrayReplicationMonitorResp
      type: object
      properties:
        arrayReplicationMonitorInfo:
          type: array
          description: The list of array replication pair information
          items:
            $ref: "#/components/schemas/ArrayReplicationMonitorInfo"
      description: The response for array replication monitor
      example:
        arrayReplicationMonitorInfo:
        - testFailoverStatus: null
          destination: null
          id: 0
          source:
            GUID: GUID
            name: name
          datastores:
          - destinationDatastore: null
            sourceDatastore: null
            id: 6
          - destinationDatastore: null
            sourceDatastore: null
            id: 6
          failoverStatus: NONE
          lastReplicationFailureStatus: lastReplicationFailureStatus
        - testFailoverStatus: null
          destination: null
          id: 0
          source:
            GUID: GUID
            name: name
          datastores:
          - destinationDatastore: null
            sourceDatastore: null
            id: 6
          - destinationDatastore: null
            sourceDatastore: null
            id: 6
          failoverStatus: NONE
          lastReplicationFailureStatus: lastReplicationFailureStatus
    LicenseInfo:
      title: LicenseInfo
      type: object
      properties:
        commCellId:
          type: integer
          description: ID of the registered CommCell
          format: int32
        commServeIPAddress:
          minLength: 7
          type: string
          description: IP Address of CommServe
        licenseIPAddress:
          minLength: 7
          type: string
          description: IP Address of License
        edition:
          type: string
          description: The license is for this software product
          enum:
          - Commvault
          - Hitachi
          - Net Apps
          - Commvault Express
          - Showcase
          - Netapp
          - Virtual Server
          - Medical Imaging
          - IntelliSnap Recovery Manager
          - fujitsu
          - Sapphire
          - HP Snap Manager
          - Commvault Edge
          - MSP
          - IntelliSnap for NetApp
          - Commvault Marketplace
          - Flexential
          - Zeal
          - Metallic
        licenseMode:
          type: string
          description: This license is intended for the specified usage scenario
          enum:
          - EVALUATION
          - PRODUCTION
          - DR_PRODUCTION
        serialNumber:
          type: string
          description: Serial number of CommServe
        registrationCode:
          type: string
          description: Registration code of CommServe
        expiryDate:
          type: integer
          description: Expiry date of current license in epoch format
          format: int32
      description: License details
      example:
        expiryDate: 6
        licenseMode: EVALUATION
        serialNumber: serialNumber
        licenseIPAddress: licenseIPAddress
        commCellId: 0
        edition: Commvault
        registrationCode: registrationCode
        commServeIPAddress: commServeIPAddress
    AccessControl:
      title: AccessControl
      type: object
      properties:
        ownerPermissions:
          type: array
          description: List of owner permissions
          items:
            $ref: "#/components/schemas/IdName"
        automaticLaptopOwnershipAssignment:
          $ref: "#/components/schemas/LaptopOwnership"
      description: Owner permissions and laptop ownership details
      example:
        ownerPermissions:
        - name: name
          id: 0
        - name: name
          id: 0
        automaticLaptopOwnershipAssignment:
          laptopOwnerOption: ALL_LOGGED_IN_AD_USERS
          userGroups: userGroups
          assignLaptopOwnerAutomatically: true
    LaptopOwnership:
      title: LaptopOwnership
      type: object
      properties:
        assignLaptopOwnerAutomatically:
          type: boolean
          description: Whether the laptop ownership assignment is automatic or not
        laptopOwnerOption:
          $ref: "#/components/schemas/LaptopOwnerOption"
        userGroups:
          type: string
          description: "Comma seperated usergroups to add users from, when the laptopOwnerOption\
            \ is 'ALL_USERS_OF_USERGROUPS'"
          nullable: true
      description: Details of automatic laptop ownership assignment
      example:
        laptopOwnerOption: ALL_LOGGED_IN_AD_USERS
        userGroups: userGroups
        assignLaptopOwnerAutomatically: true
    LaptopOwnerOption:
      title: LaptopOwnerOption
      type: string
      description: Options to automatically assign laptop owners
      nullable: true
      enum:
      - ALL_LOGGED_IN_AD_USERS
      - FIRST_USER_TO_LOGIN
      - ALL_USERS_OF_USERGROUPS
    LaptopsWebConsole:
      type: object
      properties:
        id:
          type: integer
          description: id of the laptop client
          format: int32
        name:
          type: string
          description: name of the laptop client
        lastBackupTime:
          type: integer
          description: This specifies the last backup time (in unix timestamp)
          format: int32
        lastBackupJobInfo:
          $ref: "#/components/schemas/LastBackupJobInfo"
        totalBackupSize:
          type: integer
          description: This specifies the total backup size (in bytes)
          format: int32
        nextBackupTime:
          type: integer
          description: This species the timestamp (in unix timestamp) of the next
            scheduled backup
          format: int32
        slaStatus:
          $ref: "#/components/schemas/SLAStatus"
        slaReason:
          type: string
          description: reason for the current sla status
    LaptopsList:
      title: LaptopsList
      oneOf:
      - $ref: "#/components/schemas/LaptopsListWebConsole"
      - $ref: "#/components/schemas/LaptopsListAdminConsole"
    RMConfigureRequest:
      title: RMConfigureRequest
      required:
      - projectIds
      - reviewers
      type: object
      properties:
        projectIds:
          type: array
          description: List of project ids
          items:
            minimum: 1
            type: integer
            format: int32
        reviewers:
          type: array
          description: List of reviewers for the request
          items:
            $ref: "#/components/schemas/IdNameDisplayName"
        approvers:
          type: array
          description: List of approvers for the request
          items:
            $ref: "#/components/schemas/IdNameDisplayName"
    RMCreateRequest:
      title: RMCreateRequest
      required:
      - entities
      - name
      - requestor
      - type
      type: object
      properties:
        name:
          type: string
          description: Name of the request
        type:
          $ref: "#/components/schemas/RMRequestType"
        deleteFromBackup:
          type: boolean
          default: false
        enableRedaction:
          type: boolean
          description: This option redacts sensitive information from the files in
            the request
          default: false
        enableDocumentChaining:
          type: boolean
          description: "If additional entities are found in a document, include documents\
            \ that contain those additional entities in search results"
          default: false
        requestor:
          type: string
          format: email
        entities:
          type: array
          description: List of personal entities with their values to form the criteria
            for the request
          items:
            $ref: "#/components/schemas/NameValues"
    RMRequestType:
      title: RMRequestType
      type: string
      description: ""
      enum:
      - EXPORT
      - DELETE
      - MOVE
      - RETENTION
      - IGNORE
      - ARCHIVE
      - TAG
    ActivateApplication:
      title: ActivateApplication
      type: string
      description: Enum to signify the application under Activate
      enum:
      - NONE
      - SDG
      - FSO
    RMProjectsList:
      title: RMProjectsList
      type: object
      properties:
        projects:
          type: array
          items:
            $ref: "#/components/schemas/RMProjectInfo"
      example:
        projects:
        - name: name
          id: 0
          status: VALID
        - name: name
          id: 0
          status: VALID
    RMProjectInfo:
      title: RMProjectInfo
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        status:
          $ref: "#/components/schemas/RMProjectStatus"
      example:
        name: name
        id: 0
        status: VALID
    RMProjectStatus:
      title: RMProjectStatus
      type: string
      description: INVALID_PLAN_ENTITIES signifies the plan configuration associated
        to project does not contain at least one entity that is configured for the
        request in consideration. DATASOURCE_UNAVAILABLE signifies no data sources
        associated to the project.
      enum:
      - VALID
      - DATASOURCE_UNAVAILABLE
      - INVALID_PLAN_ENTITIES
    ActivityControlTileDelayTime:
      title: ActivityControlTileDelayTime
      type: object
      properties:
        timeZone:
          $ref: "#/components/schemas/IdName"
        time:
          type: integer
          description: delay time in unix timestamp
          format: int32
        value:
          type: string
          description: actual delay time value in string format according to the timezone
      example:
        timeZone: null
        time: 1
        value: value
    accessNodesList:
      title: accessNodesList
      type: object
      properties:
        accesNodes:
          type: array
          items:
            $ref: "#/components/schemas/accessNodeInfo"
      example:
        accesNodes:
        - hostName: hostName
          displayName: displayName
          name: name
          GUID: GUID
          id: 0
          type: 6
        - hostName: hostName
          displayName: displayName
          name: name
          GUID: GUID
          id: 0
          type: 6
    accessNodeInfo:
      title: accessNodeInfo
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        displayName:
          type: string
          nullable: true
        hostName:
          type: string
          description: client Host Name of the Access Node
        GUID:
          type: string
          description: client GUID of the Access
        type:
          type: integer
          description: "Type of access node , Ex: 3 - access Node , 28 - Access Node\
            \ Groups"
          format: int32
      example:
        hostName: hostName
        displayName: displayName
        name: name
        GUID: GUID
        id: 0
        type: 6
    AssociatePlanRuleEntity:
      title: AssociatePlanRuleEntity
      type: object
      properties:
        subclient:
          $ref: "#/components/schemas/IdName"
        plan:
          $ref: "#/components/schemas/IdName"
        rule:
          $ref: "#/components/schemas/IdName"
      description: Message object to hold information of entities to which selected
        plan and plan rule need to be associated
    AssociatePlanRuleEntityList:
      title: AssociatePlanRuleEntityList
      type: object
      properties:
        entities:
          type: array
          description: Details of entity that will be associated to plan and rule.
          items:
            $ref: "#/components/schemas/AssociatePlanRuleEntity"
      description: List of entities that are will be associated to provided plan and
        said rule
    ExcludeEntitiesFromPlanRuleEvaluation:
      title: ExcludeEntitiesFromPlanRuleEvaluation
      type: object
      properties:
        subclients:
          type: array
          items:
            $ref: "#/components/schemas/IdName"
      description: Entities that need to be excluded from plan rule evaluation
    PlanRuleExecutionSettings:
      title: PlanRuleExecutionSettings
      type: object
      properties:
        executionMode:
          $ref: "#/components/schemas/PlanRuleExecutionMode"
        executionInterval:
          type: integer
          description: Setting to suggest evaluation frequency in case of evaluation
            mode being Automatic.
          format: int32
        enableAlertNotification:
          type: boolean
          description: "Set this to enable/disable notification over email for subclients\
            \ pending plan associationover 24 hours. By default, notification will\
            \ be enabled."
      description: Message object to hold settings for plan rule execution.
      example:
        enableAlertNotification: true
        executionMode: "OFF"
        executionInterval: 0
    PlanRuleExecutionMode:
      title: PlanRuleExecutionMode
      type: string
      description: Plan rule execution mode
      enum:
      - "OFF"
      - MANUAL
      - AUTOMATIC
    vmGroupPreviewReq:
      title: vmGroupPreviewReq
      type: object
      properties:
        content:
          $ref: "#/components/schemas/vmContent"
        filters:
          $ref: "#/components/schemas/vmContent"
        diskFilters:
          $ref: "#/components/schemas/vmDiskFilterProp"
        createClientsForDiscoveredVms:
          type: boolean
        skipNonexistentVms:
          type: boolean
    vmGroupPreviewResp:
      title: vmGroupPreviewResponse
      type: object
      properties:
        ProtectedVMCount:
          type: integer
          format: int32
        managementVersion:
          type: string
          description: "management Version of the Hypervisor like vcenter version\
            \ , Hyperv version"
        vmGroup:
          $ref: "#/components/schemas/IdName"
        vmList:
          $ref: "#/components/schemas/vmPreviewInfo"
      example:
        ProtectedVMCount: 0
        vmGroup:
          name: name
          id: 0
        vmList:
          poweredStatus: poweredStatus
          toolStatus: toolStatus
          name: name
          GUID: GUID
          host: host
        managementVersion: managementVersion
    vmPreviewInfo:
      title: vmPreviewInfo
      type: object
      properties:
        name:
          type: string
          description: name  of the VM
        GUID:
          type: string
          description: GUID  of the VM
        poweredStatus:
          type: string
          description: "Power status of the VM from the hypervisor Eg- Powered on\
            \ ,  Running if the VM is powered on . Values might differ based on hypervisor\
            \ type"
        toolStatus:
          type: string
          description: if Installed then the corresponding tools version of the VM.
            VMWare - VMWare tools version Hyper-V - Integration services version Values
            might differ based on hypervisor type status would be not installed if
            tools is not installed.
        host:
          type: string
          description: host of the VM
      example:
        poweredStatus: poweredStatus
        toolStatus: toolStatus
        name: name
        GUID: GUID
        host: host
    DistributedStorageListResp:
      type: object
      properties:
        distributedStorage:
          type: array
          description: List of distributed storages
          items:
            $ref: "#/components/schemas/DistributedStorageSummary"
      description: List of distributed storages
      example:
        distributedStorage:
        - canManage: true
          clusterURL: http://example.com/aeiou
          name: name
          id: 0
          username: username
        - canManage: true
          clusterURL: http://example.com/aeiou
          name: name
          id: 0
          username: username
    DistributedStorageSummary:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        clusterURL:
          type: string
          description: URL of the distributed storage cluster
          format: uri
        username:
          type: string
          description: Username of the distributed storage user
        canManage:
          type: boolean
          description: Denotes if the user can manage the cluster
      description: Summary of a distributed storage
      example:
        canManage: true
        clusterURL: http://example.com/aeiou
        name: name
        id: 0
        username: username
    UpdateTriggeredAlertsNotes:
      title: UpdateTriggeredAlertsNotes
      type: object
      properties:
        notes:
          type: string
          description: Notes that you want to add to the triggered alerts. Leave it
            empty if you want to delete the alert
    AlertDefinition:
      title: AlertDefinition
      type: object
      properties:
        id:
          type: integer
          description: Id of the alert definition
          format: int32
        name:
          type: string
          description: Name of the alert definition
        type:
          type: string
          description: category of the alert definition
          enum:
          - Clients
          - Edge drive-Share operations
          - License
          - MediaAgents
          - Users
          - Client Group License Usage Check
          - Data aging is disabled for n days
          - Expiring clones
          - Index Backup Status
          - Index State
          - Notify decommissioned Virtual Machines
          - Auxiliary Copy
          - Data Aging
          - Data Protection
          - Data Recovery
          - DeDup DB Reconstruction
          - Disaster Recovery Backup
          - Device Status
          - Library Management
          - Admin Alert
          - Event Viewer Events
          - Updates Available to Download
          - No DDB Verification Job in last n days
          - HyperScale-HardwareAlerts
        company:
          $ref: "#/components/schemas/IdName"
        enabled:
          type: boolean
          description: denotes if the alert definition is enabled or disabled
        globalConfigInfo:
          $ref: "#/components/schemas/GlobalConfigInfo"
      example:
        name: name
        globalConfigInfo:
          scopeFilterQuery: scopeFilterQuery
          applyOnAllCommCells: true
          commcells:
          - name: name
            guid: guid
            id: 5
          - name: name
            guid: guid
            id: 5
          scope: scope
          isMarkedForDeletion: true
          name: name
          id: id
          status: status
        company:
          name: name
          id: 0
        id: 0
        type: Clients
        enabled: true
    AlertDefinitionsList:
      title: AlertDefinitionsList
      type: object
      properties:
        alertDefinitions:
          type: array
          items:
            $ref: "#/components/schemas/AlertDefinition"
        globalConfigInfo:
          $ref: "#/components/schemas/GlobalConfigInfo"
      example:
        alertDefinitions:
        - name: name
          globalConfigInfo:
            scopeFilterQuery: scopeFilterQuery
            applyOnAllCommCells: true
            commcells:
            - name: name
              guid: guid
              id: 5
            - name: name
              guid: guid
              id: 5
            scope: scope
            isMarkedForDeletion: true
            name: name
            id: id
            status: status
          company:
            name: name
            id: 0
          id: 0
          type: Clients
          enabled: true
        - name: name
          globalConfigInfo:
            scopeFilterQuery: scopeFilterQuery
            applyOnAllCommCells: true
            commcells:
            - name: name
              guid: guid
              id: 5
            - name: name
              guid: guid
              id: 5
            scope: scope
            isMarkedForDeletion: true
            name: name
            id: id
            status: status
          company:
            name: name
            id: 0
          id: 0
          type: Clients
          enabled: true
        globalConfigInfo: null
    TriggeredAlertsDetails:
      title: TriggeredAlertsDetails
      type: object
      properties:
        id:
          type: integer
          description: id of the triggered alert
          format: int32
        severity:
          $ref: "#/components/schemas/AlertSeverity"
        alertType:
          type: string
          description: alert type for which the triggered alert was generated
          enum:
          - Configuration - Clients
          - Configuration - Edge drive-Share operations
          - Configuration - License
          - Configuration - MediaAgents
          - Configuration - Users
          - Custom Rules - Client Group License Usage Check
          - Custom Rules - Data aging is disabled for n days
          - Custom Rules - Expiring clones
          - Custom Rules - Index Backup Status
          - Custom Rules - Index State
          - Custom Rules - Notify decommissioned Virtual Machines
          - Job Management - Auxiliary Copy
          - Job Management - Data Aging
          - Job Management - Data Protection
          - Job Management - Data Recovery
          - Job Management - DeDup DB Reconstruction
          - Job Management - Disaster Recovery Backup
          - Media Management - Device Status
          - Media Management - Library Management
          - Operation - Admin Alert
          - Operation - Event Viewer Events
          - Software Updates - Updates Available to Download
        description:
          type: string
          description: The HTML template for the triggered alert containing description
        detectedCriteria:
          type: string
          description: detection criteria for the triggered alert to be generated
          enum:
          - Alert CommServe License Expires Within n Days
          - Alert Modified
          - Alert every n attempts (Network failures)
          - Alert every n attempts (Phase failures)
          - Alert every n failed login attempts
          - Alert when License Consumed reaches n Percent
          - Alert when client certificate Expires Within n Days
          - Alert when jobs in pending state exceed n percent or count of n
          - Auxiliary Copy fallen behind alert
          - Backup for subclient failed consecutively for n attempts
          - Classification Failed
          - DDB Store got corrupted
          - DDB disk space low
          - Data backed up exceeds n GB
          - Decrease in Data size by n %
          - Delayed by n Hrs
          - Disk Space Low
          - Drive went Offline
          - Force De-configured
          - Increase in Data size by n %
          - Insufficient Storage
          - Job Activity
          - Job Failed
          - Job Initiated
          - Job Skipped
          - Job Started
          - Job Succeeded
          - Job Succeeded with Errors
          - Job exceeded running time of n Hrs
          - Library went Offline
          - Maintenance Occurred
          - Maintenance Required
          - Media Handling Required
          - Media Picked Up
          - Media Reached Destination
          - Media Recalled
          - Media Returned to Source
          - MediaAgent went offline
          - Mount Path went Offline
          - No Backup for last n Days
          - No Data Protection
          - Non-encrypted media exported
          - Number of failed files is more than n
          - Percentage of failed files is more than n
          - Properties Modified
          - Release Upgrade Required
          - Rolled Back
          - Scheduler Changes
          - Updates Available to Download
          - User Overwrite of Media
      example:
        severity: AUTO_PICK
        alertType: Configuration - Clients
        detectedCriteria: Alert CommServe License Expires Within n Days
        description: description
        id: 0
    LaptopsAdminConsole:
      type: object
      properties:
        id:
          type: integer
          description: id of the laptop
          format: int32
        name:
          type: string
          description: name of the laptop
        owners:
          type: array
          items:
            $ref: "#/components/schemas/IdName"
        username:
          type: string
          description: comma seperated value for username of the laptop
        email:
          type: string
          description: comma seperated value for email of the laptop
        configured:
          type: boolean
          description: defines if the laptop is configured or not
        lastBackupJobInfo:
          $ref: "#/components/schemas/LastBackupJobInfo"
        totalBackupSize:
          type: integer
          description: application size (in bytes) for the laptop
          format: int32
        plan:
          $ref: "#/components/schemas/IdName"
        sla:
          $ref: "#/components/schemas/SLADetails"
        slaReason:
          type: string
          description: reason for the current sla status
        lastSuccessfulBackup:
          type: integer
          description: time (in unix timestamp) for the last successful backup
          format: int32
        tags:
          type: array
          items:
            $ref: "#/components/schemas/IdNameType"
    MigrationConfiguration:
      title: MigrationConfiguration
      type: object
      properties:
        source:
          $ref: "#/components/schemas/MigrationSource"
        destination:
          $ref: "#/components/schemas/MigrationDestination"
        migrationPairs:
          $ref: "#/components/schemas/ManagePaths"
        migrationSettings:
          $ref: "#/components/schemas/MigrationSettings"
        plan:
          $ref: "#/components/schemas/IdName"
        kickOffMigrationImmediately:
          type: boolean
          description: Kick off migration immediately?
        startAnalysisNow:
          type: boolean
      description: Configuration for Migration to Azure
    MigrationPair:
      title: MigrationPair
      type: object
      properties:
        SourcePath:
          type: string
        DestinationPath:
          type: string
    AccessNodes:
      title: AccessNode
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        type:
          type: string
          default: CLIENT
          enum:
          - CLIENT
          - CLIENT_GROUP
      description: ""
      example:
        name: name
        id: 6
        type: CLIENT
    MigrationSource:
      title: Source
      type: object
      properties:
        sourceName:
          type: string
          description: NAS filer name
        NASType:
          type: string
          description: NAS type
          default: CIFS
          enum:
          - CIFS
          - NFS
        sourceCredentials:
          $ref: "#/components/schemas/IdName"
        accessNode:
          type: array
          description: Access nodes for source clients
          items:
            $ref: "#/components/schemas/AccessNodes"
      description: Source of the migration NAS data
    MigrationDestination:
      title: Destination
      type: object
      properties:
        region:
          $ref: "#/components/schemas/IdName"
        accessNode:
          type: array
          description: Access nodes for the destination client
          items:
            $ref: "#/components/schemas/AccessNodes"
        destinationName:
          type: string
          description: Azure storage account
        destinationCredentials:
          $ref: "#/components/schemas/IdName"
      description: Specify node with write access to Azure File share. The destincation
        type (NFS/CIFS) is determined by source.
    Credentials:
      title: Credentials
      type: object
      properties:
        sourceCredentials:
          $ref: "#/components/schemas/IdName"
        destinationCredentials:
          $ref: "#/components/schemas/IdName"
      description: Credentials for source client and destination client
    ManagePaths:
      title: ManagePaths
      type: object
      properties:
        pair:
          type: array
          items:
            $ref: "#/components/schemas/MigrationPair"
      description: Define migration paths to ensure proper mapping
    MigrationSettings:
      title: MigrationSettings
      type: object
      properties:
        migrationWindow:
          type: array
          items:
            $ref: "#/components/schemas/CreateBlackoutWindow"
        migrationFrequency:
          $ref: "#/components/schemas/PlanPattern"
        name:
          type: string
      description: Name the migration group and define the frequency
    MigrationGroupDetails:
      title: MigrationGroupDetailsResp
      type: object
      properties:
        sourceClient:
          $ref: "#/components/schemas/IdName"
        destinationClient:
          $ref: "#/components/schemas/IdName"
        sourceAccessNode:
          type: array
          items:
            $ref: "#/components/schemas/AccessNodes"
        destinationAccessNode:
          type: array
          items:
            $ref: "#/components/schemas/AccessNodes"
        credentials:
          $ref: "#/components/schemas/Credentials"
        updateFrequency:
          $ref: "#/components/schemas/PlanPattern"
        migrationGroupName:
          type: string
        migrationMonitors:
          type: array
          items:
            $ref: "#/components/schemas/MigrationMonitor"
        migrationGroupState:
          type: boolean
        sourceBackupset:
          $ref: "#/components/schemas/IdName"
        destinationBackupset:
          $ref: "#/components/schemas/IdName"
        sourceInstance:
          $ref: "#/components/schemas/IdName"
        destinationInstance:
          $ref: "#/components/schemas/IdName"
        sourceSubclient:
          $ref: "#/components/schemas/IdName"
        destinationSubclient:
          $ref: "#/components/schemas/IdName"
        sourceApplication:
          $ref: "#/components/schemas/IdName"
        destinationApplication:
          $ref: "#/components/schemas/IdName"
        migrationSize:
          type: integer
          format: int64
        numOfFiles:
          type: integer
          format: int64
        failures:
          type: string
        backupJobId:
          type: integer
          format: int32
        restoreJobId:
          type: integer
          format: int32
        migrationStatus:
          $ref: "#/components/schemas/ReplicationStatus"
        lastSyncTime:
          type: integer
          format: int64
        backupSchedulePolicy:
          $ref: "#/components/schemas/IdName"
        backupSchedule:
          $ref: "#/components/schemas/IdName"
        failureReason:
          type: string
        region:
          $ref: "#/components/schemas/IdName"
    MigrationMonitor:
      title: MigrationMonitor
      type: object
      properties:
        destinationPath:
          type: string
        type:
          type: string
        lastSyncTime:
          type: integer
          format: int64
        migrationSize:
          type: number
          format: float
        numOfFiles:
          type: integer
          format: int64
        sourcePath:
          type: string
        syncStatus:
          $ref: "#/components/schemas/ReplicationStatus"
        replicationId:
          type: integer
          format: int32
    ReplicationStatus:
      title: ReplicationStatus
      type: string
      enum:
      - VSAREP_NONE = 0
      - VSAREP_COMPLETE = 1
      - VSAREP_PENDING = 2
      - VSAREP_RUNNING = 3
      - VSAREP_PAUSED = 4
      - VSAREP_FAILED = 5
      - VSAREP_DISABLED = 6
      - VSAREP_ENABLED= 7
      - VSAREP_VALIDATION_FAILED = 8
      - VSAREP_JOB_QUEUED = 9
      - VSAREP_REVERT_FAILED = 10
      - VSAREP_STARTING = 11
    SNMPConfigurationSummary:
      title: SNMPConfigurationSummary
      type: object
      properties:
        id:
          type: integer
          description: Id of SNMP host
          format: int32
        name:
          type: string
          description: Name of SNMP host
        userName:
          type: string
          description: Username used to access SNMP host
        authenticationAlgorithm:
          type: string
          description: Authentication algorithm of SNMP host
          enum:
          - HMAC_MD5
          - HMAC_SHA
          - HMAC128_SHA224
          - HMAC192_SHA256
          - HMAC256_SHA384
          - HMAC384_SHA512
        privacyAlgorithm:
          type: string
          description: Privacy algorithm of SNMP host
          enum:
          - None
          - CBC_DES
          - CFB128_AES128
          - CFB128_AES192
          - CFB128_AES256
          - CBC_AES128
          - CBC_AES192
          - CBC_AES256
      description: SNMP host configuration
      example:
        authenticationAlgorithm: HMAC_MD5
        name: name
        privacyAlgorithm: None
        id: 0
        userName: userName
    AlertIds:
      title: AlertIds
      type: object
      properties:
        alertId:
          type: array
          items:
            type: integer
            format: int32
      description: Array of ids of an entity
    LaptopsListWebConsole:
      type: array
      items:
        $ref: "#/components/schemas/LaptopsWebConsole"
    LaptopsListAdminConsole:
      type: array
      items:
        $ref: "#/components/schemas/LaptopsAdminConsole"
    ServiceAccount:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
      description: Google cloud service account details
    GoogleCloudDestinationInfo:
      type: object
      properties:
        googleCloudVMInfoList:
          type: array
          description: List of Google Cloud VMs that are to be restored
          items:
            $ref: "#/components/schemas/GoogleCloudVMInfo"
        namePrefix:
          type: string
          description: Adds prefix for VM display name
        nameSuffix:
          type: string
          description: Adds suffix for VM display name
      description: Destination information for the GCP VMs to restore
    GoogleCloudVMInfo:
      type: object
      properties:
        instanceId:
          type: string
          description: "Instance ID of the google cloud virtual machine to be restored.\
            \ Ex: 123456789123456789."
          example: "123456789123456"
        name:
          type: string
          description: The new name of the instance after restore. Defaults to source
            name after restore.
          default: Defaults to source VM name
        projectId:
          type: string
          description: GCP Project ID
        zone:
          type: string
          description: "GCP zones. Ex: asia-east1-a. Defaults to source instance zone\
            \ after restore. For reference: cloud.google.com/compute/docs/regions-zones#available"
          example: asia-east1-a
          default: "Defaults to source instance zone after restore. For reference:\
            \ cloud.google.com/compute/docs/regions-zones#available'"
        region:
          type: string
          description: "GCP Region. Ex: asia-east1. Defaults to source instance region\
            \ after restore. For reference: cloud.google.com/compute/docs/regions-zones#available"
          example: asia-east1
          default: "Defaults to source instance region after restore. For reference:\
            \ cloud.google.com/compute/docs/regions-zones#available"
        machineType:
          type: string
          description: "GCP Machine Family. Ex: c2d-highmem-8. Defaults to --Auto\
            \ Select--. For Reference: cloud.google.com/compute/docs/machine-resource"
          example: c2d-highmem-8
          default: --Auto Select--
        createPublicIP:
          type: boolean
          description: Flag to create external IP after restore. Defaults to false.
          default: false
        networkInterfaces:
          type: array
          description: Google Cloud VM network interfaces list
          items:
            $ref: "#/components/schemas/GoogleCloudNetworkInterfaceInfo"
        customMetadata:
          type: array
          description: GCP custom metadata key-value pairs
          items:
            $ref: "#/components/schemas/NameValue"
        nodeAffinities:
          type: array
          description: "Node affinity for the virtual machine to provision virtual\
            \ machine as sole tenanat VM. Defaults to no node affinity. Format: '[{name:\
            \ compute.googleapis.com/node-group-name, value: {Node Group Name} },\
            \ {name: compute.googleapis.com/node-name, value: {Node Name} }]'"
          items:
            $ref: "#/components/schemas/NameValue"
        serviceAccount:
          $ref: "#/components/schemas/ServiceAccount"
        encryptionKey:
          type: string
          description: Customer Managed Encryption Key
          example: kmsKeyName:projects/projectName/locations/global/keyRings/enc-key/cryptoKeys/enc-key-name
        keyProtectionLevel:
          type: string
          description: Protection level of encryption key
          example: SOFTWARE
      description: VM restore information for the Google Cloud VM
    GoogleCloudNetworkInterfaceInfo:
      type: object
      properties:
        name:
          type: string
          description: "Name of the network interface card. Ex: nic0."
          example: nic0
        networkName:
          type: string
          description: "Network Name. Ex: default. Defaults to source network name."
          example: default
          default: Defaults to source network name.
        subnetId:
          type: string
          description: "Subnet self-link. Format: googleapis.com/compute/v1/projects/<Project\
            \ ID>/regions/<Region>/subnetworks/{Subnet Name}. Defaults to source subnet\
            \ self-link."
          default: Defaults to source subnet
        networkId:
          type: string
          description: "Network self-link. Format: googleapis.com/compute/v1/projects/<Project\
            \ ID>/global/networks/{Network Name}. Defaults to source network self-link."
          default: Defaults to source network self-link.
        internalIP:
          type: string
          description: Internal IP address. Defaults to the source internal IP after
            restore.
          format: ipv4
          default: Defaults to the source internal IP after restore.
        externalIP:
          type: string
          description: External IP Address. Defaults to null and is not set after
            restore.
          format: ipv4
          default: Defaults to null and is not set after restore.
      description: Google cloud network interface information
    GoogleCloudDiskInfo:
      type: object
      properties:
        name:
          type: string
          description: Google Cloud VM disk name
      description: Google cloud disk information
    AzureDestinationInfo:
      type: object
      properties:
        azureVMInfoList:
          type: array
          description: List of Azure VMs that are to be restored
          items:
            $ref: "#/components/schemas/AzureVMInfo"
        namePrefix:
          type: string
          description: Adds prefix for VM display name
        nameSuffix:
          type: string
          description: Adds suffix for VM display name
      description: Destination information for the Azure VMs to restore
    AzureVMInfo:
      required:
      - storageAccount
      type: object
      properties:
        sourceVMGuid:
          type: string
          description: Azure VM ID
          example: c1231de123-4309-41be-123123-123abc123
        name:
          type: string
          description: Azure VM name to be set after restore. Defaults to source VM
            name.
          default: Defaults to source VM name
        resourceGroup:
          type: string
          description: Azure Resource Group Name. Defaults to source VM resource group
            name.
          default: Defaults to source VM resource group name
        region:
          type: string
          description: "Azure region name. Ex: For azure region (West US 3) the region\
            \ value will be westus3. For reference: learn.microsoft.com/en-us/rest/api/resources/subscriptions/list-locations"
          example: For azure region (West US 3) the region value will be westus3
          default: Defaults to source VM region
        availabilityZone:
          type: string
          description: "Azure availablity zones. Defaults to Auto. Values can be as\
            \ follows: 'Auto' (Select from the source VM config), 'None' (Will not\
            \ restore to any zone), '{Zone Number}' (Availablity zone number the restored\
            \ VM should be in. Ex: 2)."
          default: Defaults to Auto
        storageAccount:
          type: string
          description: Azure staging storage account. Defaults to source storage account.
          default: Defaults to source storage account
        vmSize:
          type: string
          description: "VM size to be after restore. Defaults to --Auto Select--.\
            \ Ex: Standard_A1."
          example: Standard_A1
          default: --Auto Select--
        diskType:
          type: string
          description: "Disk type to set after restore. Ex: Standard_LRS."
          example: Standard_LRS
        createPublicIP:
          type: boolean
          description: Boolean to specify if VM should have publice IP. Defaults to
            false.
          default: false
        restoreAsManagedVM:
          type: boolean
          description: Boolean to specify if VM need to be restored as managed VM.
            Defaults to true.
          default: true
        securityGroupId:
          type: string
          description: Azure security group to be set for the VM. Defaults to source
            configuration.
          default: Defaults to source configuration
        diskEncryptionSetTypeId:
          type: string
          description: "Azure Disk Encryption Type. Values can be: 'EncryptionAtRestWithCustomerKey'\
            \ or 'EncryptionAtRestWithPlatformAndCustomerKeys' or 'EncryptionAtRestWithPlatformAndCustomerKeys'.\
            \ For reference: learn.microsoft.com/en-us/dotnet/api/microsoft.azure.management.compute.models.encryptiontype?view=azure-dotnet&viewFallbackFrom=azure-dotnet"
        diskEncryptionSetId:
          type: string
          description: "Azure Disk Encryption Set ID. Format: /subscriptions/{Subscription\
            \ ID}/resourceGroups/{Resource Group Name}/providers/Microsoft.Compute/diskEncryptionSets/{Disk\
            \ Encryption Set}."
        nics:
          type: array
          description: Azure VM network interface list
          items:
            $ref: "#/components/schemas/AzureDestinationInfoNic"
        vmTags:
          type: array
          description: Azure VM tag list
          items:
            $ref: "#/components/schemas/NameValue"
        restoreSourceVMTags:
          type: boolean
          description: Restore source VM tags.
          default: true
      description: VM restore information for the Azure VM
    AzureDestinationInfoNic:
      type: object
      properties:
        networkId:
          type: string
          description: "Azure network ID. Format: /subscriptions/{Subscription ID}/resourceGroups/{Resource\
            \ Group Name}/providers/Microsoft.Network/virtualNetworks/{Network Name}."
        subnetId:
          type: string
          description: "Azure subnet ID. Format: /subscriptions/{Subscription ID}/resourceGroups/{Resource\
            \ Group Name}/providers/Microsoft.Network/virtualNetworks/{Network Name}/subnets/{Subnet\
            \ Name}."
        privateIpAddress:
          type: string
          description: Azure private IP address.
          format: ipv4
        publicIpAddress:
          type: string
          description: Azure publice IP address.
          format: ipv4
        publicIpAddressId:
          type: string
          description: "Azure public IP address ID. Format: /subscriptions/{Subscription\
            \ ID}/resourceGroups/{Resource Group Name}/providers/Microsoft.Network/publicIPAddresses/{Public\
            \ IP Address Name}."
      description: Azure nic info for restore
      example:
        subnetId: subnetId
        publicIpAddress: publicIpAddress
        publicIpAddressId: publicIpAddressId
        networkId: networkId
        privateIpAddress: privateIpAddress
    AzureDestinationInfoDisk:
      type: object
      properties:
        storageAccount:
          type: string
          description: Azure storage account name
        name:
          type: string
          description: Azure disk name
      description: Azure disk info for restore
    VSAEncryptionOption:
      type: object
      properties:
        isEncrypted:
          type: boolean
        encryptionKey:
          type: string
        diskEncryptionSetId:
          type: string
        diskEncryptionSetTypeId:
          type: string
    AWSNetworkInterfaceInfo:
      type: object
      properties:
        vpcId:
          type: string
        networkName:
          type: string
        subnetId:
          type: string
        eniId:
          type: string
      description: AWS nic info for restore
    VMSecurityGroupInfo:
      type: object
      properties:
        groupId:
          type: string
        groupName:
          type: string
      description: AWS security group info for restore
    VMKeyPairInfo:
      type: object
      properties:
        keyId:
          type: string
        keyName:
          type: string
      description: VM Key pair info
    AWSDestinationInfo:
      type: object
      properties:
        awsInstanceInfoList:
          type: array
          description: List of AWS instances that are to be restored
          items:
            $ref: "#/components/schemas/AWSInstanceInfo"
        namePrefix:
          type: string
          description: Adds prefix for instance display name
        nameSuffix:
          type: string
          description: Adds suffix for instance display name
      description: Destination information for the AWS instances to restore
    AWSInstanceInfo:
      type: object
      properties:
        instanceId:
          type: string
          description: AWS instance ID
          example: i-0f90bef70bd90c9e0
        instanceName:
          type: string
          description: AWS instance name to be set after restore. Defaults to source
            instance name.
          default: Defaults to source instance name
        zone:
          type: string
          description: AWS Availability zone. Defaults to source instance availability
            zone.
          default: Defaults to source instance availability zone.
        region:
          type: string
        instanceSize:
          type: string
          description: Instance size to be after restore. Defaults to source instance
            size
          example: t2.micro
          default: Defaults to source instance size
        volumeType:
          type: string
        encryptionKey:
          $ref: "#/components/schemas/VSAEncryptionOption"
        nics:
          type: array
          description: AWS instance network interface list
          items:
            $ref: "#/components/schemas/AWSNetworkInterfaceInfo"
        securityGroups:
          type: array
          description: List of AWS security groups to be set for the instance.
          items:
            $ref: "#/components/schemas/VMSecurityGroupInfo"
        vmTags:
          type: array
          description: AWS VM tag list
          items:
            $ref: "#/components/schemas/NameValue"
        restoreSourceVMTags:
          type: boolean
          description: Restore source VM tags.
          default: true
        keyPairs:
          type: array
          description: List of key pairs
          items:
            $ref: "#/components/schemas/VMKeyPairInfo"
        restoreSourceNetworkConfig:
          type: boolean
          description: "If set to true, we will use the source network configuration\
            \ during restore"
          default: true
      description: VM restore information for the AWS VM
    VMDestinationInfo:
      type: object
      properties:
        googleCloud:
          $ref: "#/components/schemas/GoogleCloudDestinationInfo"
        azure:
          $ref: "#/components/schemas/AzureDestinationInfo"
        aws:
          $ref: "#/components/schemas/AWSDestinationInfo"
      description: Destination informantion for the VM to restore
    VmWareTransportMode:
      type: string
      description: Backup transport modes enum
      enum:
      - Auto
      - SAN
      - Hot_Add
      - NAS
      - NBD_SSL
      - NBD
      - EBS_DIRECT
      - IMPORT
    RestoreFlavour:
      title: ""
      type: string
      description: Type of restore for virtual machine
      enum:
      - NONE
      - VIRTUAL_MACHINE
      - PHYSICAL_VOLUME
      - VMDK_FILES
      - VIRTUAL_HARD_DISKS
      - VDI_OBJECT
      - DISK_ATTACH
      - RESTORE_AS_FILE
      - INSTANT_VM
    VMGroupRestoreRequest:
      required:
      - inPlaceRestore
      - vmDestinationInfo
      type: object
      properties:
        powerOnVmAfterRestore:
          type: boolean
          description: Turn ON virtual machine after restore. Defaults to false.
          default: false
        overwriteVM:
          type: boolean
          description: Unconditionally overwrite VM during restore. Defaults to false.
          default: false
        inPlaceRestore:
          type: boolean
          description: Flag to set if restore is in-place or out-of-place. Defaults
            to false.
          default: false
        backupSource:
          type: integer
          description: "Backup source information from where you want to restore.\
            \ 0 (Automatic), 1 (Snap Copy), 2 (Primary), 3 to N (Aux Copy)"
          format: int32
          example: 2
          default: 0
        destination:
          $ref: "#/components/schemas/IdName"
        accessNode:
          $ref: "#/components/schemas/IdName"
        accessNodeGroup:
          $ref: "#/components/schemas/IdName"
        vmDestinationInfo:
          $ref: "#/components/schemas/VMDestinationInfo"
        transportMode:
          $ref: "#/components/schemas/VmWareTransportMode"
        restoreFlavour:
          $ref: "#/components/schemas/RestoreFlavour"
        notifyOnJobCompletion:
          type: boolean
          description: Enable email notificaiton for job status. Defaults to false.
          default: false
        reuseVMClient:
          type: boolean
          description: Reuse the existing VM client instance of creating new one after
            restore. Defaults to true for inplace restore and false for out of place
            restore.
      description: VM or VMGroup restore request body
    CreateTaskRespforBackup:
      type: object
      properties:
        taskId:
          type: integer
          format: int32
        jobIds:
          type: array
          description: JobIds for the immediate run request
          items:
            type: string
      description: Create task response for backup
      example:
        jobIds:
        - jobIds
        - jobIds
        taskId: 0
    ServerPlanBackupRequest:
      type: object
      properties:
        scheduleId:
          type: integer
          format: int32
        policyId:
          type: integer
          format: int32
      description: Server plan immediate backup request
    AnomalousConditionInfo:
      type: object
      properties:
        time:
          type: integer
          description: Time when anomalous condition has happened
          format: int64
        clientInfo:
          $ref: "#/components/schemas/IdName"
        description:
          type: string
        anomalyType:
          type: string
          enum:
          - Anomalous runtime
          - Anomalous event
          - Offline client
          - High CPU usage
          - High memory usage
      example:
        anomalyType: Anomalous runtime
        clientInfo:
          name: name
          id: 0
        description: description
        time: 0
    AlertDefinitonsCreate:
      title: AlertDefinitonsCreate
      type: object
      properties:
        name:
          type: string
        alertType:
          $ref: "#/components/schemas/AlertDefinitionsCreateAlertType"
        sendIndividualNotifications:
          type: boolean
          description: Flag indicating the functionality to send individual notifications
          default: false
        subscriptionBasedAlert:
          type: boolean
          description: Flag to indicate whether its a subscription based alert.
          default: false
        processDiscoveredVMs:
          type: boolean
          description: Flag indicating the functionality to send individual notifications
            for each discovered virtual machine
          default: false
        associations:
          $ref: "#/components/schemas/AlertDefinitionsAssociations"
        alertTarget:
          $ref: "#/components/schemas/AlertDefinitionsTarget"
        templates:
          $ref: "#/components/schemas/AlertDefinitionsTemplate"
        tokens:
          $ref: "#/components/schemas/TokenRuleGroups"
        eventCriteriaDetails:
          $ref: "#/components/schemas/EventCriteriaDetails"
        globalConfigInfo:
          $ref: "#/components/schemas/CreateGlobalConfigInfo"
    AlertDefinitionsEdit:
      title: AlertDefinitionsEdit
      type: object
      properties:
        newName:
          type: string
          description: The new name of the alert definition
        criteriaList:
          type: array
          description: List of alert criteria
          items:
            $ref: "#/components/schemas/AlertCriteriaIdName"
        sendIndividualNotifications:
          type: boolean
          description: Flag indicating the functionality to send individual notifications
        subscriptionBasedAlert:
          type: boolean
          description: Flag to indicate whether its a subscription based alert.
        processDiscoveredVMs:
          type: boolean
          description: Flag indicating the functionality to send individual notifications
            for each discovered virtual machine
        associationsOperationType:
          type: string
          description: "Allows adding to, overwriting and deleting existing alert\
            \ associations. default is adding to existing alert associations"
          default: ADD
          enum:
          - ADD
          - DELETE
          - OVERWRITE
        associations:
          $ref: "#/components/schemas/AlertDefinitionsAssociations"
        alertTarget:
          $ref: "#/components/schemas/AlertDefinitionsTarget"
        templates:
          $ref: "#/components/schemas/AlertDefinitionsTemplate"
        tokens:
          $ref: "#/components/schemas/TokenRuleGroups"
        eventCriteriaDetails:
          $ref: "#/components/schemas/EventCriteriaDetails"
        globalConfigInfo:
          $ref: "#/components/schemas/GlobalConfigInfo"
    AlertDefinitionsDetails:
      title: AlertDefinitionsDetails
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        alertSummary:
          $ref: "#/components/schemas/AlertDetailsSummary"
        sendIndividualNotifications:
          type: boolean
          description: true if individual notifications are on for the alert definitions
        processDiscoveredVMs:
          type: boolean
          description: True if individual notifications for each discovered virtual
            machine are enabled for the alert definition
        subscriptionBasedAlert:
          type: boolean
          description: Flag to indicate whether its a subscription based alert.
        associations:
          $ref: "#/components/schemas/AlertDefinitionsAssociations"
        alertTarget:
          $ref: "#/components/schemas/AlertDefinitionsTarget"
        templates:
          $ref: "#/components/schemas/AlertDefinitionsTemplate"
        additionalProperties:
          $ref: "#/components/schemas/AlertAdditionalProperties"
        tokens:
          $ref: "#/components/schemas/TokenRuleGroups"
        customQueryDetails:
          $ref: "#/components/schemas/CustomQueryDetails"
        eventCriteriaDetails:
          $ref: "#/components/schemas/EventCriteriaDetails"
        globalConfigInfo:
          $ref: "#/components/schemas/GlobalConfigInfo"
      example:
        associations:
        - name: name
          flags:
            exclude: true
          id: 4
          type: ALL_SERVERS
          parentEntity3: null
          parentEntity4: null
          parentEntity1:
            name: name
            id: 7
            type: SERVER_ENTITY
          parentEntity2: null
        - name: name
          flags:
            exclude: true
          id: 4
          type: ALL_SERVERS
          parentEntity3: null
          parentEntity4: null
          parentEntity1:
            name: name
            id: 7
            type: SERVER_ENTITY
          parentEntity2: null
        templates:
          console: console
          webhook: webhook
          workflow:
            clientId: 6
            clientName: clientName
            name: name
            id: 1
          workflowInputDetails: workflowInputDetails
          locale:
            name: name
            id: 0
          eventViewer: eventViewer
          email: email
        globalConfigInfo:
          scopeFilterQuery: scopeFilterQuery
          applyOnAllCommCells: true
          commcells:
          - name: name
            guid: guid
            id: 5
          - name: name
            guid: guid
            id: 5
          scope: scope
          isMarkedForDeletion: true
          name: name
          id: id
          status: status
        sendIndividualNotifications: true
        customQueryDetails:
          queryId: 1
          additionalQueryInfo:
            queryParameters:
            - paramName: paramName
              value: value
            - paramName: paramName
              value: value
        subscriptionBasedAlert: true
        alertSummary:
          criteria:
            notificationCriteria:
              delayTime: 3
              value: 9
              persistTime: 2
            name: Backup Job Failed
            id: 1
            paramsList:
            - unit: 5
              type: 5
              value: 2
              paramIndex: 7
            - unit: 5
              type: 5
              value: 2
              paramIndex: 7
          type:
            name: Clients
            id: 6
          category:
            name: Configuration
            id: 0
          criteriaList:
          - null
          - null
        alertTarget:
          recipients:
            cc:
            - null
            - null
            bcc:
            - null
            - null
            webHookId: 1
            to:
            - name: name
              id: 1
              type: USER
            - name: name
              id: 1
              type: USER
          sendAlertTo:
          - LIVEFEEDS
          - LIVEFEEDS
          recipientsOperationType: ADD
        name: name
        tokens:
          ruleGroups:
          - match: null
            rules:
            - ruleSecValue: ruleSecValue
              matchCondition: EQUALS
              dateRange:
                fromDate: fromDate
                toDate: toDate
                timeRange:
                - null
                - null
              tokenName: SUBJECT END
              tokenFormat: NONE
              value: value
              timeRange:
                fromTime: fromTime
                toTime: toTime
            - ruleSecValue: ruleSecValue
              matchCondition: EQUALS
              dateRange:
                fromDate: fromDate
                toDate: toDate
                timeRange:
                - null
                - null
              tokenName: SUBJECT END
              tokenFormat: NONE
              value: value
              timeRange:
                fromTime: fromTime
                toTime: toTime
          - match: null
            rules:
            - ruleSecValue: ruleSecValue
              matchCondition: EQUALS
              dateRange:
                fromDate: fromDate
                toDate: toDate
                timeRange:
                - null
                - null
              tokenName: SUBJECT END
              tokenFormat: NONE
              value: value
              timeRange:
                fromTime: fromTime
                toTime: toTime
            - ruleSecValue: ruleSecValue
              matchCondition: EQUALS
              dateRange:
                fromDate: fromDate
                toDate: toDate
                timeRange:
                - null
                - null
              tokenName: SUBJECT END
              tokenFormat: NONE
              value: value
              timeRange:
                fromTime: fromTime
                toTime: toTime
          match: AND
        id: 0
        processDiscoveredVMs: true
        additionalProperties:
          status: 7
        eventCriteriaDetails:
          criteriaName: criteriaName
          conditions:
          - fromValue: fromValue
            toValue: toValue
            valuesList:
            - 9
            - 9
            name: name
            id: 5
            advancedCriteria:
            - null
            - null
            operation: EQUALS
            value: value
          - fromValue: fromValue
            toValue: toValue
            valuesList:
            - 9
            - 9
            name: name
            id: 5
            advancedCriteria:
            - null
            - null
            operation: EQUALS
            value: value
          opBetweenConditions: 4
    TokenRuleGroupOperation:
      type: string
      format: ""
      enum:
      - AND
      - OR
      - IS_RULE
      - IS_DATE
      - IS_TIME
      - BETWEEN
      - NOT_BETWEEN
    TokenRuleGroups:
      type: object
      properties:
        match:
          $ref: "#/components/schemas/TokenRuleGroupOperation"
        ruleGroups:
          type: array
          description: List of rule groups
          items:
            $ref: "#/components/schemas/TokenRuleGroup"
      example:
        ruleGroups:
        - match: null
          rules:
          - ruleSecValue: ruleSecValue
            matchCondition: EQUALS
            dateRange:
              fromDate: fromDate
              toDate: toDate
              timeRange:
              - null
              - null
            tokenName: SUBJECT END
            tokenFormat: NONE
            value: value
            timeRange:
              fromTime: fromTime
              toTime: toTime
          - ruleSecValue: ruleSecValue
            matchCondition: EQUALS
            dateRange:
              fromDate: fromDate
              toDate: toDate
              timeRange:
              - null
              - null
            tokenName: SUBJECT END
            tokenFormat: NONE
            value: value
            timeRange:
              fromTime: fromTime
              toTime: toTime
        - match: null
          rules:
          - ruleSecValue: ruleSecValue
            matchCondition: EQUALS
            dateRange:
              fromDate: fromDate
              toDate: toDate
              timeRange:
              - null
              - null
            tokenName: SUBJECT END
            tokenFormat: NONE
            value: value
            timeRange:
              fromTime: fromTime
              toTime: toTime
          - ruleSecValue: ruleSecValue
            matchCondition: EQUALS
            dateRange:
              fromDate: fromDate
              toDate: toDate
              timeRange:
              - null
              - null
            tokenName: SUBJECT END
            tokenFormat: NONE
            value: value
            timeRange:
              fromTime: fromTime
              toTime: toTime
        match: AND
    TokenRuleGroup:
      type: object
      properties:
        match:
          $ref: "#/components/schemas/TokenRuleGroupOperation"
        rules:
          type: array
          description: List of rules
          items:
            $ref: "#/components/schemas/TokenRule"
      example:
        match: null
        rules:
        - ruleSecValue: ruleSecValue
          matchCondition: EQUALS
          dateRange:
            fromDate: fromDate
            toDate: toDate
            timeRange:
            - null
            - null
          tokenName: SUBJECT END
          tokenFormat: NONE
          value: value
          timeRange:
            fromTime: fromTime
            toTime: toTime
        - ruleSecValue: ruleSecValue
          matchCondition: EQUALS
          dateRange:
            fromDate: fromDate
            toDate: toDate
            timeRange:
            - null
            - null
          tokenName: SUBJECT END
          tokenFormat: NONE
          value: value
          timeRange:
            fromTime: fromTime
            toTime: toTime
    TokenRule:
      type: object
      properties:
        tokenName:
          type: string
          description: Name of the token.
          enum:
          - SUBJECT END
          - SUBJECT BEGIN
          - COMMCELL NAME
          - ALERT CATEGORY - ALERT TYPE
          - TIME
          - UTC_TIME
          - OWNER NAME
          - OWNER EMAIL
          - ALERT ID
          - ALERT NAME
          - DETECTED CRITERIA
          - STATUS
          - CLIENT LIST
          - ATTACHMENT
          - DESCRIPTION
          - JOB ID
          - START TIME
          - END TIME
          - SCHEDULE TIME
          - FAILURE REASON
          - SP NAME
          - COPY NAME
          - CLIENT NAME
          - AGENT TYPE NAME
          - INSTANCE NAME
          - BACKUPSET NAME
          - SUBCLIENT NAME
          - LEVEL
          - PROTECTED COUNT
          - FAILED COUNT
          - RECOVERED COUNT
          - SKIPPED COUNT
          - PROTECTED OBJECTS
          - FAILED OBJECTS
          - RECOVERED OBJECTS
          - SKIPPED OBJECTS
          - MEDIA LABEL
          - LIBRARY NAME
          - EXPORT LOCATION
          - MEDIA LIST
          - MEDIA LIST
          - MEDIA SUCCEEDED
          - MEDIA FAILED
          - COMMENT
          - COMMENT
          - COMMENT
          - FREE SPACE
          - FREE SPACE
          - FREE SPACE
          - FORCE DECONFIG Y/N
          - MEDIAAGENT NAME
          - SCHEDULE/SCHEDULE POLICY NAME
          - SPAREPOOL/MOUNTPATH NAME
          - MEDIA SPACE LEFT
          - THRESHOLD
          - OTHER LIBRARY
          - DRIVEPOOL NAME
          - DRIVE NAME
          - INITIATER
          - SOURCE LOCATION
          - TRANSIT LOCATION
          - SP LIST
          - DESTINATION LOCATION
          - DISK SPACE LOW Y/N
          - DISK SPACE LOW Y/N
          - DISK SPACE LOW Y/N
          - PROPERTY MODIFIED Y/N
          - MOUNTPATH NAME
          - SUCCESSFUL CLIENT LIST
          - FAILED CLIENT LIST
          - UNKNOWN CLIENT LIST
          - UP-TO-DATE CLIENT LIST
          - ALL CLIENT LIST
          - MEDIA REQUIRE LIST
          - MEDIA LOCATION LIST
          - CONDITION CLEARED Y/N
          - USER NAME
          - AGENT TYPE ID
          - RESOURCE WAIT TIME
          - MESSAGE COUNT
          - MAILBOX NAME
          - ELAPSED TIME
          - CONTENTS
          - CONTENTS DOWNLOADED
          - FILES DOWNLOADED
          - DOWNLOAD SIZE (MB)
          - CLIENT STATUS LIST
          - JOBS RUNNING CLIENT LIST
          - LOW CACHE CLIENT LIST
          - UNREACHABLE CLIENT LIST
          - SERVER RELEASE
          - CLIENT RELEASE LIST
          - DISK SPACE INFO
          - DISK SPACE INFO
          - DISK SPACE INFO
          - LAST ACTIVITY TIME
          - MORE MEDIA Y/N
          - SNAPSHOT VOLUME UNIT
          - WORKFLOW
          - FLR_SRC_PATH
          - FLR_DEST_PATH
          - DEST CLIENT
          - REPSET NAME
          - OPERATION TYPE
          - CS UPGR TIME
          - CS UPGR TIME
          - XFER BYTES
          - XFER SECS
          - XFER GB PER HOUR
          - ERR CODE
          - RECALL REASON
          - RECALL EXPIRE TIME
          - RECALL DESTINATION
          - Report ID
          - Report Hist ID
          - Report URL
          - Report URL
          - CURRENT BACKUP SIZE
          - PREVIOUS BACKUP SIZE
          - PREVIOUS JOBID
          - PERCENTAGE CHANGE
          - PRUNED MEDIA BARCODE LIST
          - PRUNED JOBS COUNT
          - RESTORE USER NAME
          - NUMBER OF ITEMS
          - SIZE
          - FAILED ATTEMPTS COUNT
          - GUI Client Name
          - USER NAME LIST
          - FAILED ATTEMPT TIME LIST
          - STORAGE POLICIES USED
          - SIZE OF DATA TOBE COPIED
          - MEDIA TOBE COPIED COUNT
          - JOBS TOBE COPIED
          - OLDEST JOB ENDDATE
          - COPIED MEDIA LIST
          - COPIED DATA SIZE
          - REPORT NAME
          - AUTOMATED_CONTENT_CLASSIFICATION_POLICY_NAME
          - PHASES_IN_JOB
          - STATUS OF SEARCH PHASE
          - STATUS OF TAGGING PHASE
          - STATUS OF ERM CONNECTOR PHASE
          - STATUS OF RESTORE TO REVIEW SET PHASE
          - STATUS OF LEGAL HOLD BACKUP PHASE
          - STATUS OF LEGAL HOLD RESTORE PHASE
          - SEARCH PHASE SELETED Y/N
          - TAGGING PHASE SELECTED Y/N
          - ERM CONNECTOR PHASE SELECTED Y/N
          - RESTORE TO REVIEW SET PHASE SELECTED Y/N
          - LEGAL HOLD BACKUP PHASE SELECTED Y/N
          - LEGAL HOLD RESTORE PHASE SELECTED Y/N
          - NO. OF ITEMS SELECTED FOR TAGGING
          - NO. OF ITEMS TAGGED SUCCESSFULLY
          - NO. OF ITEMS FAILED TO TAG
          - NO. OF ITEMS SELECTED FOR ERM CONNECTOR
          - NO. OF ITEMS SUCCEEDED IN ERM CONNECTOR PHASE
          - NO. OF ITEMS FAILED IN ERM CONNECTOR PHASE
          - NO. OF ITEMS SELECTED TO RESTORE TO REVIEW SET
          - NO. OF ITEMS SUCCEEDED IN RESTORE TO REVIEW SET PHASE
          - NO. OF ITEMS FAILED IN RESTORE TO REVIEW SET PHASE
          - NO. OF ITEMS SELECTED FOR LEGAL HOLD BACKUP
          - NO. OF ITEMS SUCCEEDED IN LEGAL HOLD BACKUP PHASE
          - NO. OF ITEMS FAILED IN LEGAL HOLD BACKUP PHASE
          - NO. OF ITEMS SELECTED FOR LEGAL HOLD RESTORE
          - NO. OF ITEMS SUCCEEDED IN LEGAL HOLD RESTORE PHASE
          - NO. OF ITEMS FAILED IN LEGAL HOLD RESTORE PHASE
          - NO. OF ITEMS SELECTED TO SEARCH
          - NO. OF ITEMS SEARCHED SUCCESSFULLY
          - NO. OF ITEMS FAILED TO SEARCH
          - Virtual Machine NAME
          - XFER SIZE
          - EXTENDED RET. CANDIDATE Y/N
          - RETAIN UNTIL
          - LICENSE EXPIRED
          - NO. OF DAYS LEFT FOR LICENSE EXPIRY
          - XFER TIME
          - Task ID
          - OBJ STORE CACHE
          - CSV Output File
          - FileList
          - LICENSE PERCENT CONSUMED
          - TIME OF LAST SUCCESSFUL JOB
          - DATE OF LAST SUCCESSFUL JOB
          - NO SUCCESSFUL JOB SINCE
          - TOTAL OBJECTS
          - DDB NAME
          - OFFLINE SINCE
          - FAILED JOB INFO
          - TOTAL JOBS
          - PENDING JOBS COUNT
          - TOP PENDING ERRORS LIST
          - TOP WAITING ERRORS LIST
          - SUCCESSFUL MESSAGE
          - STATUS MESSAGE
          - ERR CODE MESSAGE
          - FAILURE REASON MESSAGE
          - CHECK LOGS MESSAGE
          - MONITORING POLICY NAME
          - MONITORING CRITERIA STRING
          - MATCHED LINE
          - MATCHED LINE
          - MATCHED LINE NUMBER
          - EVENT SEVERITY
          - EVENT DATE
          - EVENT PROGRAM
          - MATCHED LOG FILE
          - LINES ABOVE MATCHED LINE
          - LINES BELOW MATCHED LINE
          - EVENT ID
          - PARTIALLY SUCCESSFUL CLIENT LIST
          - CLIENT GROUP NAME
          - TASK CATEGORY
          - COMPUTER
          - VCENTER
          - ESX
          - DATASTORE
          - VMHOSTNAME
          - IPADDRESS
          - CLONECLIENTNAME
          - CLONEHOSTNAME
          - COPY HOURS
          - NUMBER OF SUBCLIENTS
          - SUBSTORE LOCATION
          - ALERT REASON
          - INDEX 0
          - INDEX 1
          - INDEX 2
          - INDEX 3
          - INDEX 4
          - INDEX 5
          - INDEX 6
          - INDEX 7
          - INDEX 8
          - INDEX 9
          - INDEX 10
          - INDEX 11
          - INDEX 12
          - INDEX 13
          - INDEX 14
          - INDEX 15
          - INDEX 16
          - INDEX 17
          - INDEX 18
          - INDEX 19
          - INDEX 20
          - INDEX 21
          - INDEX 22
          - INDEX 23
          - INDEX 24
          - INDEX 25
          - INDEX 26
          - INDEX 27
          - INDEX 28
          - INDEX 29
          - INDEX 30
          - INDEX 31
          - INDEX 32
          - INDEX 33
          - INDEX 34
          - INDEX 35
          - INDEX 36
          - INDEX 37
          - INDEX 38
          - INDEX 39
          - INDEX 40
          - INDEX 41
          - INDEX 42
          - INDEX 43
          - INDEX 44
          - INDEX 45
          - INDEX 46
          - INDEX 47
          - INDEX 48
          - INDEX 49
          - INDEX 50
          - INDEX 51
          - INDEX 52
          - INDEX 53
          - INDEX 54
          - INDEX 55
          - INDEX 56
          - INDEX 57
          - INDEX 58
          - INDEX 59
          - INDEX 60
          - INDEX 61
          - INDEX 62
          - INDEX 63
          - INDEX 64
          - INDEX 65
          - INDEX 66
          - INDEX 67
          - INDEX 68
          - INDEX 69
          - INDEX 70
          - INDEX 71
          - INDEX 72
          - INDEX 73
          - INDEX 74
          - INDEX 75
          - INDEX 76
          - INDEX 77
          - INDEX 78
          - INDEX 79
          - INDEX 80
          - INDEX 81
          - INDEX 82
          - INDEX 83
          - INDEX 84
          - INDEX 85
          - INDEX 86
          - INDEX 87
          - INDEX 88
          - INDEX 89
          - INDEX 90
          - INDEX 91
          - INDEX 92
          - INDEX 93
          - INDEX 94
          - INDEX 95
          - INDEX 96
          - INDEX 97
          - INDEX 98
          - INDEX 99
          - INDEX 100
          - QUERY NAME
          - SIZE OF DATA TOBE CONTENT INDEXED
          - JOBS TOBE CONTENT INDEXED
          - REPORT DISPLAY NAME
          - REPORT PARAM NAME
          - REPORT NAME
          - REPORT CRITERIA
          - VM FAILURE REASON
          - VM STATUS
          - VIRTUAL MACHINE NAME
          - VIRTUAL MACHINE HOST NAME
          - TABLE DATA
          - INPUT DATA
          - SEARCH QUERY STRING
          - SEARCH CRITERIA
          - SEARCH URL INFO
          - SEARCH CRITERA MATCHED LINES
          - JOB OPERATION
          - PENDING CLIENT LIST
          - WARNING
          - LEGAL HOLD NAME
          - REPORT URL
          - REPORT MANAGE URL
          - ADDITIONAL VM INFO
          - TABLE DATA XML
          - AUDIT INFO
          - TOTAL METRICS RESULT COUNT
          - CLIENT HOST NAME
          - ALARM HEADER
          - JOB DESCRIPTION
          - OBJECT SIZE
          - QUOTA LIMIT
          - SPACE CONSUMED
          - USER ID
          - OPERATION PERFORMED BY USER
          - USER GROUP NAME
          - CLEANUP DATA TEXT
          - CLIENT_OS_NAME
          - CLIENT_OS_PLATFORM
          - CLIENT_OS_SUBTYPE
          - CLIENT_OS_TYPE
          - CLIENT_OS_VERSION
          - OPERATION DATA
          - OFFLINE REASON
          - DESTINATION CLIENT
          - SOURCE CLIENT
          - CLIENT DESCRIPTION
          - DATA WRITTEN
          - PERCENTAGE INCREASE IN OBJECT COUNT
          - PREVIOUS JOB OBJECT COUNT
          - SHARE ENTITY INFO
          - ACTIVITY ID
          - ACTIVITY NAME
          - DIGEST INFO
          - ENTITY GUID
          - IS FILE ACTIVITY
          - FILE NAME
          - OLD FILE NAME
          - OPERATION DATA BODY
          - SHARE NAME
          - SHARE ID
          - MAIL ID
          - SEVERITY
          - SEVERITY INT
          - CLIENT GROUP LIST
          - ORGANIZATION NAME
          - FAILOVER COMMSERVE
          - FAILOVER INITIATED FROM
          - DIRECTORY WITH LOW SPACE
          - THRESHOLD FOR LOW SPACE
          - EXCLUDED FROM SLA
          - FAILED MAILBOXES
          - SKIPPED MAILBOXES
          - SUCCESSFUL MAILBOXES
          - FAILED JOBS THRESHOLD
          - PENDING JOBS THRESHOLD
          - FAILED JOBS COUNT
          - SUBCLIENT DESCRIPTION
          - SUCCEEDED JOBS THRESHOLD
          - SUCCEEDED JOBS COUNT
          - DESCRIPTION HTML
          - TIME EPOCH
          - VERSION GUID
          - CLIENT DISPLAY NAME
          - NEED REBOOT CLIENT LIST
          - ALERT TIME
          - VIRTUAL MACHINE INSTANCE UUID
          - CLIENT VERSION
          - JOB STARTED FROM
          - USER LOGIN NAME
          - TEXT DATA
          - QUERY GENERATED HTML CONTENT
          - FAILED VMS
          - PARTIALSUCCESS VMS
          - FAILOVER GROUP
          - FAILOVER STATUS
          - DATE OF LAST REPLICATION JOB
          - TIME OF LAST REPLICATION JOB
          - REPLICATION GROUP
          - REPLICATION STATUS
          - Synchronization Status
          - EVENT CODE
          - TIME ZONE
          - UTC_TIMESTAMP
          - ALERT LINK
          - CUSTOMER ID
          - VIRTUAL MACHINE CLIENT NAME
          - DOWNLOAD JOB MESSAGE
          - ALERT EVENT ID
          - WORKLOAD
        value:
          type: string
          description: Value to be compared for the token
        ruleSecValue:
          type: string
          description: Secondary value used for BETWEEN and NOT_BETWEEN matchCondition.
        matchCondition:
          $ref: "#/components/schemas/TokenOperationType"
        timeRange:
          $ref: "#/components/schemas/TimeRange"
        dateRange:
          $ref: "#/components/schemas/DateRange"
        tokenFormat:
          $ref: "#/components/schemas/TokenFormat"
      example:
        ruleSecValue: ruleSecValue
        matchCondition: EQUALS
        dateRange:
          fromDate: fromDate
          toDate: toDate
          timeRange:
          - null
          - null
        tokenName: SUBJECT END
        tokenFormat: NONE
        value: value
        timeRange:
          fromTime: fromTime
          toTime: toTime
    TimeRange:
      type: object
      properties:
        fromTime:
          type: string
          description: From time value in unix timestamp format
        toTime:
          type: string
          description: To time value in unix timestamp format
      description: Time range is for time related token rule values to specify from
        and to time in unix timestamp format.
      example:
        fromTime: fromTime
        toTime: toTime
    DateRange:
      type: object
      properties:
        fromDate:
          type: string
          description: From date value in unix timestamp format
        toDate:
          type: string
          description: To date value in unix timestamp format
        timeRange:
          type: array
          description: Time range selection details
          items:
            $ref: "#/components/schemas/TimeRange"
      description: Date range is for date related token rule values to specify from
        and to date in unix date timestamp format..
      example:
        fromDate: fromDate
        toDate: toDate
        timeRange:
        - null
        - null
    TokenOperationType:
      type: string
      format: ""
      enum:
      - EQUALS
      - DOES_NOT_EQUALS
      - CONTAINS
      - DOES_NOT_CONTAINS
      - LESSTHAN
      - LESSTHAN_EQUAL
      - GREATERTHAN
      - GREATERTHAN_EQUAL
      - BETWEEN
      - ANY_IN_SELECTION
      - FROM
      - TILL
      - NOT_BETWEEN
    TokenFormat:
      type: string
      format: ""
      enum:
      - NONE
      - REGULAR_EXPRESSION
      - CASE_SENSITIVE
      - MATCH_WHOLE_WORD
      - INCLUSIVE
    QueryParameter:
      type: object
      properties:
        paramName:
          type: string
          description: Parameter name for the input field present in the SQL query
        value:
          type: string
          description: Value of the query parameter (JSON text in string format)
      example:
        paramName: paramName
        value: value
    QueryAdditionalInfo:
      type: object
      properties:
        queryParameters:
          type: array
          description: List of query parameters
          items:
            $ref: "#/components/schemas/QueryParameter"
      example:
        queryParameters:
        - paramName: paramName
          value: value
        - paramName: paramName
          value: value
    CustomQueryDetails:
      type: object
      properties:
        queryId:
          type: integer
          description: Unique id for the custom alert rule associated with the alert
            definition
          format: int32
        additionalQueryInfo:
          $ref: "#/components/schemas/QueryAdditionalInfo"
      example:
        queryId: 1
        additionalQueryInfo:
          queryParameters:
          - paramName: paramName
            value: value
          - paramName: paramName
            value: value
    ConditionOperationType:
      type: string
      description: Operation type value for the condition column
      format: ""
      enum:
      - EQUALS
      - DOES_NOT_EQUALS
      - CONTAINS
      - DOES_NOT_CONTAINS
      - LESS_THAN
      - LESS_THAN_EQUAL
      - GREATER_THAN
      - GREATER_THAN_EQUAL
      - BETWEEN
      - ANY_IN_SELECTION
    ConditionDetails:
      required:
      - id
      - name
      - operation
      type: object
      properties:
        name:
          type: string
          description: Name of the condition column
        id:
          type: integer
          description: Unique identifier for the condition column
          format: int32
        operation:
          $ref: "#/components/schemas/ConditionOperationType"
        value:
          type: string
          description: Value associated with the column
        fromValue:
          type: string
          description: First value associated with the column when the operation type
            is BETWEEN
        toValue:
          type: string
          description: Second value associated with the column when the operation
            type is BETWEEN
        advancedCriteria:
          type: array
          description: List of advanced criteria options
          items:
            $ref: "#/components/schemas/TokenFormat"
        valuesList:
          type: array
          description: List of the values associated with the column in case of multiple
            values selection
          items:
            type: integer
            format: int32
      example:
        fromValue: fromValue
        toValue: toValue
        valuesList:
        - 9
        - 9
        name: name
        id: 5
        advancedCriteria:
        - null
        - null
        operation: EQUALS
        value: value
    Conditions:
      type: array
      items:
        $ref: "#/components/schemas/ConditionDetails"
      x-schema-name: Conditions
    EventCriteriaDetails:
      required:
      - criteriaName
      type: object
      properties:
        opBetweenConditions:
          type: integer
          description: Integer value for the operation type between conditions
          format: int32
          default: 0
        criteriaName:
          type: string
          description: Alert criteria name
        conditions:
          $ref: "#/components/schemas/Conditions"
      example:
        criteriaName: criteriaName
        conditions:
        - fromValue: fromValue
          toValue: toValue
          valuesList:
          - 9
          - 9
          name: name
          id: 5
          advancedCriteria:
          - null
          - null
          operation: EQUALS
          value: value
        - fromValue: fromValue
          toValue: toValue
          valuesList:
          - 9
          - 9
          name: name
          id: 5
          advancedCriteria:
          - null
          - null
          operation: EQUALS
          value: value
        opBetweenConditions: 4
    AlertAdditionalProperties:
      title: ""
      type: object
      properties:
        status:
          type: integer
          description: Tells status of alert. Can be used to find if alert is enabled
            or not.
          format: int32
      example:
        status: 7
    AlertDetailsSummary:
      title: AlertDetailsSummary
      type: object
      properties:
        type:
          $ref: "#/components/schemas/AlertTypeIdName"
        category:
          $ref: "#/components/schemas/AlertCategoryIdName"
        criteria:
          $ref: "#/components/schemas/AlertCriteriaIdName"
        criteriaList:
          type: array
          description: List of alert criteria
          items:
            $ref: "#/components/schemas/AlertCriteriaIdName"
      example:
        criteria:
          notificationCriteria:
            delayTime: 3
            value: 9
            persistTime: 2
          name: Backup Job Failed
          id: 1
          paramsList:
          - unit: 5
            type: 5
            value: 2
            paramIndex: 7
          - unit: 5
            type: 5
            value: 2
            paramIndex: 7
        type:
          name: Clients
          id: 6
        category:
          name: Configuration
          id: 0
        criteriaList:
        - null
        - null
    AlertAssociationIdNameType:
      title: AlertAssociationIdNameType
      type: object
      properties:
        id:
          type: integer
          description: id of the associated entity
          format: int32
        name:
          type: string
          description: name of the associated entity
        type:
          type: string
          enum:
          - ALL_SERVERS
          - ALL_SERVER_GROUPS_ENTITY
          - SERVER_GROUP_ENTITY
          - SERVER_ENTITY
          - APPTYPE_ENTITY
          - INSTANCE_ENTITY
          - BACKUPSET_ENTITY
          - SUBCLIENT_ENTITY
          - REPLICATION_PAIR_ENTITY
          - BLR_PAIR_ENTITY
          - FS_REPLICATION_PAIR_ENTITY
          - MEDIA_AGENT_ENTITY
          - ALL_MEDIA_AGENTS
          - JOB_ID_ENTITY
        parentEntity1:
          $ref: "#/components/schemas/AlertAssocParentEntity"
        parentEntity2:
          $ref: "#/components/schemas/AlertAssocParentEntity"
        parentEntity3:
          $ref: "#/components/schemas/AlertAssocParentEntity"
        parentEntity4:
          $ref: "#/components/schemas/AlertAssocParentEntity"
        flags:
          $ref: "#/components/schemas/AlertAssociationFlags"
      description: Hierarchy starts at the top at client level(parentEntity1) and
        ends at backupset level(parentEntity4) when defining parents for the associated
        entity. Parent entities must be defined application and lower entities.
      example:
        name: name
        flags:
          exclude: true
        id: 4
        type: ALL_SERVERS
        parentEntity3: null
        parentEntity4: null
        parentEntity1:
          name: name
          id: 7
          type: SERVER_ENTITY
        parentEntity2: null
    AlertAssociationFlags:
      type: object
      properties:
        exclude:
          type: boolean
          description: "If set to true, this entity and its child entities are excluded\
            \ from the associations"
      description: These flags are used to specify the type of association for the
        entities.
      example:
        exclude: true
    AlertAssocParentEntity:
      type: object
      properties:
        id:
          type: integer
          description: id of the associated entity
          format: int32
        name:
          type: string
          description: name of the associated entity
        type:
          type: string
          enum:
          - SERVER_ENTITY
          - BACKUPSET_ENTITY
          - APPTYPE_ENTITY
          - INSTANCE_ENTITY
      description: parentEntity1 can only have type SERVER_ENTITY.parentEntity2 can
        only have type APPTYPE_ENTITY.parentEntity3 can only have type INSTANCE_ENTITY.parentEntity4
        can only have type BACKUPSET_ENTITY.
      example:
        name: name
        id: 7
        type: SERVER_ENTITY
    AlertTypeIdName:
      type: object
      properties:
        id:
          type: integer
          description: id of the alert definition
          format: int32
        name:
          type: string
          description: type of the alert definitions
          enum:
          - Clients
          - Edge drive-Share operations
          - License
          - MediaAgents
          - Users
          - Client Group License Usage Check
          - Data aging is disabled for n days
          - Expiring clones
          - Index Backup Status
          - Index State
          - Notify decommissioned Virtual Machines
          - Auxiliary Copy
          - Data Aging
          - Data Protection
          - Data Recovery
          - DeDup DB Reconstruction
          - Disaster Recovery Backup
          - Device Status
          - Library Management
          - Admin Alert
          - Event Viewer Events
          - Updates Available to Download
          - No DDB Verification Job in last n days
          - HyperScale-HardwareAlerts
          - Replication
      example:
        name: Clients
        id: 6
    AlertCategoryIdName:
      type: object
      properties:
        id:
          type: integer
          description: id of the category of the alert definition
          format: int32
        name:
          type: string
          description: category of the alert definition
          enum:
          - Configuration
          - Custom Rules
          - Job Management
          - Media Management
          - Operation
          - Software Updates
      example:
        name: Configuration
        id: 0
    AlertCriteriaIdName:
      type: object
      properties:
        id:
          type: integer
          description: id of the criteria of detection for the alert definition
          format: int32
        name:
          type: string
          description: criteria of detection for the alert definition
          enum:
          - Backup Job Failed
          - Backup Job Skipped
          - Backup Job Succeeded
          - Increase in Data size by n percent for backup job
          - Backup Job Activity
          - Backup Delayed by n Hrs
          - Backup Job completed with Errors
          - Backup Job Started
          - No Backup for last n Days
          - Restore Job Failed
          - Restore Job Skipped
          - Restore Job Succeeded
          - Restore Job Activity
          - Restore Job Started
          - Restore Job completed with Errors
          - Disk space low on client
          - Failover started
          - Failover activity
          - Failover completed
          - Failover failed
          - Production Commserve is not reachable
          - Production Commserve is not running
          - Passive node is not reachable
          - May miss SLA
          - VM Backup succeeded
          - VM Backup failed
          - VM Backup succeeded with errors
          - Missed SLA
          - Replication Delayed by n Hrs
          - No Replication in last n Days
          - In Sync
          - Sync Pending
          - Sync Paused
          - Sync Failed
          - Failover Failed
          - Failover Complete
          - Failback Failed
          - Undo Failover Failed
          - Event Viewer Events
        paramsList:
          type: array
          nullable: true
          items:
            $ref: "#/components/schemas/AlertDefinitionsCriteriaParams"
        notificationCriteria:
          $ref: "#/components/schemas/NotificationCriteriaOptions"
      example:
        notificationCriteria:
          delayTime: 3
          value: 9
          persistTime: 2
        name: Backup Job Failed
        id: 1
        paramsList:
        - unit: 5
          type: 5
          value: 2
          paramIndex: 7
        - unit: 5
          type: 5
          value: 2
          paramIndex: 7
    AlertDefinitionsEditAlertCriteria:
      title: AlertDefinitionsEditAlertCriteria
      type: object
      properties:
        paramsList:
          type: array
          nullable: true
          items:
            $ref: "#/components/schemas/AlertDefinitionsCriteriaParams"
        notificationCriteria:
          $ref: "#/components/schemas/NotificationCriteriaOptions"
    AlertTargetIdNameType:
      title: AlertTargetIdNameType
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        type:
          type: string
          enum:
          - USER
          - USER_GROUP
          - EMAIL
          - AD_USERGROUP
      example:
        name: name
        id: 1
        type: USER
    AlertDefinitionsTarget:
      title: AlertDefinitionsTarget
      type: object
      properties:
        sendAlertTo:
          type: array
          items:
            type: string
            enum:
            - LIVEFEEDS
            - SNMP
            - WEBHOOK
            - EMAIL
            - APPLOG
            - CONTENT_INDEX
        recipientsOperationType:
          type: string
          description: "Allows adding to, overwriting and deleting existing recipients.\
            \ default is adding to existing recipients"
          enum:
          - ADD
          - DELETE
          - OVERWRITE
        recipients:
          $ref: "#/components/schemas/AlertDefinitionsTargetRecipients"
      description: Please note CONTENT_INDEX will be returned at all times as it is
        enabled at all times.
      example:
        recipients:
          cc:
          - null
          - null
          bcc:
          - null
          - null
          webHookId: 1
          to:
          - name: name
            id: 1
            type: USER
          - name: name
            id: 1
            type: USER
        sendAlertTo:
        - LIVEFEEDS
        - LIVEFEEDS
        recipientsOperationType: ADD
    AlertDefinitionsTargetRecipients:
      title: AlertDefinitionsTargetRecipients
      type: object
      properties:
        to:
          type: array
          items:
            $ref: "#/components/schemas/AlertTargetIdNameType"
        cc:
          type: array
          items:
            $ref: "#/components/schemas/AlertTargetIdNameType"
        bcc:
          type: array
          items:
            $ref: "#/components/schemas/AlertTargetIdNameType"
        webHookId:
          type: integer
          description: "id of the webhook to be associated with the alert definition.\
            \ Only needed incase of webhook notif selected. To get a list of webhooks,\
            \ use api GET Webhook"
          format: int32
      example:
        cc:
        - null
        - null
        bcc:
        - null
        - null
        webHookId: 1
        to:
        - name: name
          id: 1
          type: USER
        - name: name
          id: 1
          type: USER
    WorkflowEntity:
      title: WorkflowEntity
      required:
      - clientId
      - clientName
      - id
      - name
      type: object
      properties:
        id:
          type: integer
          description: id of the workflow which runs when the alert is triggered
          format: int32
        name:
          type: string
          description: name of the workflow which runs when the alert is triggered
        clientId:
          type: integer
          description: id of the client on which the workflow runs (zero value means
            it can run on any workflow engine)
          format: int32
        clientName:
          type: string
          description: name of the client on which the workflow runs (empty value
            means it can run on any workflow engine)
      example:
        clientId: 6
        clientName: clientName
        name: name
        id: 1
    AlertDefinitionsTemplate:
      title: AlertDefinitionsTemplate
      type: object
      properties:
        locale:
          $ref: "#/components/schemas/IdName"
        email:
          type: string
          description: the message template for the email notification. Contains both
            email subject as well as body
        console:
          type: string
          description: the message template for the console notification
        eventViewer:
          type: string
          description: the message template for the event viewer notification
        webhook:
          type: string
          description: the message template for the webhook notification
        workflow:
          $ref: "#/components/schemas/WorkflowEntity"
        workflowInputDetails:
          type: string
          description: the template for the workflow input entries values (empty value
            means the configured workflow does not need any inputs value)
      example:
        console: console
        webhook: webhook
        workflow:
          clientId: 6
          clientName: clientName
          name: name
          id: 1
        workflowInputDetails: workflowInputDetails
        locale:
          name: name
          id: 0
        eventViewer: eventViewer
        email: email
    AlertDefinitionsAssociations:
      title: AlertDefinitionsAssociations
      type: array
      items:
        $ref: "#/components/schemas/AlertAssociationIdNameType"
      x-schema-name: AlertDefinitionsAssociations
    AlertDefinitionsCreateAlertType:
      title: AlertDefinitionsCreateAlertType
      type: object
      properties:
        category:
          type: string
          description: Defines the category of the alert
          enum:
          - DATA_AGING
          - AUX_COPY
          - DATA_PROT
          - DATA_RECOV
          - EXP_RECOV
          - DATA_VERIFI
          - MEDIA_INVENT
          - SCH_EXPORT
          - MEDIA_ERASE
          - CLIENTS
          - AGENTS
          - COMMCELL
          - MEDIA_AGENTS
          - SCHE
          - STOR_POL
          - LIBRARY
          - LIB_MAN
          - VAULT_TRAK
          - FTP_DOWNLOAD
          - CLIENT_DIST
          - DEVICE_STATUS
          - ERASE_DATA
          - APP_EXCHANGE
          - DOWNLOAD_AVAIL
          - APP_FLR
          - UPGR_UPDATES
          - DATA_CLASSIFI
          - FLR_JOB
          - OFFLINE_CONT_INDEX
          - APP_SHAREPOINT
          - SRM_WINFS
          - SRM_ORACLE
          - SRM_SQL
          - SRM_NAS
          - SRM_EXCHANGE
          - SRM_SHARE_POINT
          - SRM_UNIXFS
          - SRM_COST_ANALYSIS
          - SRM_NETWARE
          - SRM_ADVISORY
          - SRM
          - REPORT
          - INFO_MANAGEMENT
          - MEDIA_REFRESHING
          - DEDUPDBSYNC
          - SRM_REPORT
          - LOG_MONITORING
          - EVENT_MONITORING
          - CLIENT_GROUPS
          - LICENSE
          - BACKUP_COPY
          - WORKFLOW
          - LOG_MONITORING_WINDOW_EVENT
          - VIRTUALIZE_ME
          - CUSTOM_QUERY
          - DATA_ANALYTICS
          - UNINSTALL_SOFTWARE
          - UPGRADE_CLIENT
          - INSTALL_SOFTWARE
          - USERS
          - USER_GROUPS
          - EDGE_DRIVE
          - ADMIN_JOB
          - COMMSERV_FAILOVER
          - ADMIN_ALERT
          - REPLICATION_ALERT
        criteria:
          type: string
          description: Defines the criteria of the alert
          enum:
          - SUCCEEDED
          - FAILURE_ATTEMTS
          - FAILED
          - SKIPPED
          - DELAYED
          - MEDIA_REQUIRED
          - INITIATED
          - ROLLED_BACK
          - MEDIA_NEEDS_IMPORT
          - MEDIA_HANDLING_REQUIRED
          - MEDIA_PICKED_UP
          - MEDIA_REACHED_DESTINATION
          - MEDIA_RET_SOURCE
          - JOB_ACTIVITY
          - ASR_BACKUP_OCCURED
          - PROPERTIES_MODIFIED
          - ALERT_MODIFIED
          - DISK_SPACE_LOW
          - FORCED_DECONF
          - LIBRARY_OFFLINE
          - SCHEDULER_CHANGES
          - INSUFF_STORAGE
          - TAPE_HANDLING_ERR
          - TAPE_HANDLING_REQ
          - TAPE_MOUNT_ERR
          - MAINT_REQ
          - MAINT_OCCURED
          - USE_OVERWRITE_MEDIA
          - DRIVE_OFFLINE
          - MEDIAAGENT_OFFLINE
          - MOUNTPATH_OFFLINE
          - NW_FAILURE_ATTEMTS
          - JOURNAL_MAILBOX
          - JR_DISK_SPACE_LOW
          - IC_DISK_SPACE_LOW
          - UPDATE_REQUIRED
          - DOWNLOAD_REQUIRED
          - UPDATES_AVAILABLE
          - RELEASE_UPGRADE_REQUIRED
          - UPDATES_REQUIRED
          - MEDIA_READY_IN_CAP
          - FLR_LOG_FILE_HIGH
          - FLR_FREE_SPACE_LOG_FILE_VOL_LOW
          - FLR_NO_PLAY_ACTIVITY
          - FLR_NO_TRANSFER_ACTIVITY
          - NO_DATA_PROTECTION
          - CLASSIFICATION_FAILED
          - FLR_FAILED_REPLICATION
          - SHAREPOINT_VIRTUAL_SERVERS
          - SHAREPOINT_V3_UPGRADE
          - LIBR_MEDIA_RECALLED
          - BACKUP_SIZE_ANOMALY_INCR
          - BACKUP_SIZE_ANOMALY_DECR
          - JOB_STARTED
          - LOGIN_FAILED
          - AUXCOPY_FALLEN_BEHIND
          - SUCCESS_WITH_ERRORS
          - LICENSE_EXPIRY
          - CCP_MODIFIED
          - LICENSE_CONSUMED
          - LOG_MONITORING
          - EVENT_MONITORING
          - LIBR_NONENCRYPTED_MEDIA_EXPORT
          - CICOPY_FALLEN_BEHIND
          - CLIENT_JOB_NOT_RUN
          - CLIENT_CERTIFICATE_EXPIRY
          - JOB_EXCEEDED_RUNNINGTIME
          - FILES_FAILED_COUNT
          - FILES_FAILED_PERCENT
          - DDB_CORRUPTED
          - SUCCESSIVE_FAILED
          - DDB_DISK_SPACE_LOW
          - JOBS_PENDING_STATE
          - BACKUP_SIZE
          - GENERIC_QUERY
          - JOB_COMMITTED
          - JOB_RESULTS_DISK_SPACE_LOW
          - INDEX_CACHE_DISK_SPACE_LOW
          - GALAXY_DIR_DISK_SPACE_LOW
          - QUOTA_EXCEEDED
          - QUOTA_THREASHOLD
          - QUOTA_VALIDATION_FAILED
          - EDGE_DRIVE_ACTION
          - NT_DDB_OFFLINE
          - NT_OBJECT_COUNT_INCR_PERCENT
          - NT_FAILOVER_STARTED
          - NT_FAILOVER_ACTIVITY
          - NT_FAILOVER_COMPLETE
          - NT_FAILOVER_FAILED
          - NT_FAILOVER_CS_UNREACHABLE
          - NT_FAILOVER_CS_NOT_RUNNING
          - NT_FAILOVER_PASSIVE_NODE_UNREACHABLE
          - NT_ADMIN_ALERT_EVENT_ANOMALOUS
          - NT_ADMIN_ALERT_JOB_RUNTIME_ANOMALOUS
          - NT_ANOMALOUS_PENDING_JOBS
          - NT_ANOMALOUS_FAILED_JOBS
          - NT_ALL_CRITERIA
          - NT_FILE_SYSTEM_QUOTA_EXCEEDED
          - NT_FILE_SYSTEM_QUOTA_THRESHOLD
          - NT_FILE_SYSTEM_QUOTA_VALIDATION_FAILED
          - NT_ADMIN_ALERT_JOB_ACTIVITY_ANOMALOUS
          - NT_ANOMALOUS_SUCCEEDED_JOBS
          - NT_CLIENT_OFFLINE
          - NT_ADMIN_ALERT_DDB_PRUNING_ANOMALOUS
          - NT_ADMIN_ALERT_SMART_STATE_MA
          - NT_JOB_SUCCEEDED_WITH_WARNINGS
          - NT_ADMIN_ALERT_PREDICT_SLA_FALL
          - NT_ADMIN_ALERT_SALESFORCE_OBJECT_BACKUP_ANOMALOUS
          - NT_REPLICATION_JOB_NOT_RUN
          - NT_DELAYED_REPLICATION
          - NT_REPLICATION_STATUS_IN_SYNC
          - NT_REPLICATION_STATUS_SYNC_PENDING
          - NT_REPLICATION_STATUS_SYNC_PAUSED
          - NT_REPLICATION_STATUS_SYNC_FAILED
          - NT_FAILOVER_STATUS_FAILOVER_FAILED
          - NT_FAILOVER_STATUS_FAILOVER_COMPLETE
          - NT_FAILOVER_STATUS_FAILBACK_FAILED
          - NT_FAILOVER_STATUS_REVERT_FAILOVER_FAILED
        paramsList:
          type: array
          items:
            $ref: "#/components/schemas/AlertDefinitionsCriteriaParams"
        notificationCriteria:
          $ref: "#/components/schemas/NotificationCriteriaOptions"
    AlertDefinitionsCriteriaParams:
      title: AlertDefinitionsCriteriaParams
      type: object
      properties:
        unit:
          type: integer
          description: "Unit of the criteria(For eg. :Hrs,min)"
          format: int32
        type:
          type: integer
          description: Input value type (default 0 = no input required)
          format: int32
        value:
          type: integer
          description: "Value of the criteria (deefault 0 : if no value required)"
          format: int32
        paramIndex:
          type: integer
          description: Param order index
          format: int32
      example:
        unit: 5
        type: 5
        value: 2
        paramIndex: 7
    NotificationCriteriaOptions:
      title: NotificationCriteriaOptions
      type: object
      properties:
        value:
          type: integer
          description: "Bit flag indicating notification criteria value. 1 means immediate,\
            \ 2 means repeated and 8 means delayed"
          format: int32
          default: 1
        delayTime:
          type: integer
          description: Delayed time in seconds when the notification criteria value
            contains delayed flag
          format: int32
        persistTime:
          type: integer
          description: Persisting time in seconds when the notification criteria value
            contains repeated flag
          format: int32
      example:
        delayTime: 3
        value: 9
        persistTime: 2
    CommcellInfo:
      title: CommcellInfo
      type: object
      properties:
        name:
          type: string
          description: Name of the commcell the entity belongs to.
      nullable: true
      example:
        name: name
    CommcellNameDisplayNameInfo:
      title: CommcellNameDisplayNameInfo
      type: object
      properties:
        name:
          type: string
          description: Name of the commcell the entity belongs to.
        displayName:
          type: string
          description: Display name of the commcell the entity belongs to.
      nullable: true
      example:
        displayName: displayName
        name: name
    AssignLaptopOwnerMappingReq:
      title: AssignLaptopOwnerMappingReq
      type: object
      properties:
        laptopOwnerMapping:
          type: array
          description: Accepts list of laptop owner mapping ids to be applied
          items:
            type: integer
            format: int32
        applyAll:
          type: boolean
          description: This indicates if applying assign laptop owners to all device
            user mappings within a company
          default: true
      description: Model used for assign laptop owner mapping
    LaptopOwnerInfo:
      title: LaptopOwnerInfo
      required:
      - id
      type: object
      properties:
        id:
          type: integer
          description: Unique Id
          format: int32
        serialNumber:
          type: string
          description: This is the serial number
        laptopName:
          type: string
          description: name of the laptop
        host:
          type: string
          description: host name of the laptop
        ownerEmail:
          type: string
          description: Email address of the owner
        ownerUPN:
          type: string
          description: UPN of the owner
        osType:
          type: string
          description: OS type of the laptop. Can be LINUX or MAC
          enum:
          - MAC
          - WIN
        company:
          $ref: "#/components/schemas/IdName"
        configured:
          type: boolean
          description: This indicates if the laptop has been installed or not
        client:
          $ref: "#/components/schemas/IdName"
      description: Model used for laptop owner mapping
      example:
        configured: true
        ownerUPN: ownerUPN
        serialNumber: serialNumber
        host: host
        osType: MAC
        client: null
        company:
          name: name
          id: 0
        id: 0
        laptopName: laptopName
        ownerEmail: ownerEmail
    LaptopOwnerMapping:
      title: LaptopOwnerMapping
      type: object
      properties:
        laptopOwnerMapping:
          type: array
          items:
            $ref: "#/components/schemas/LaptopOwnerInfo"
        error:
          $ref: "#/components/schemas/GenericResp"
      description: List of laptop owner info
      example:
        laptopOwnerMapping:
        - configured: true
          ownerUPN: ownerUPN
          serialNumber: serialNumber
          host: host
          osType: MAC
          client: null
          company:
            name: name
            id: 0
          id: 0
          laptopName: laptopName
          ownerEmail: ownerEmail
        - configured: true
          ownerUPN: ownerUPN
          serialNumber: serialNumber
          host: host
          osType: MAC
          client: null
          company:
            name: name
            id: 0
          id: 0
          laptopName: laptopName
          ownerEmail: ownerEmail
        error:
          errorMessage: errorMessage
          errorCode: 0
    DeleteLaptopOwnerMapping:
      title: DeleteLaptopOwnerMapping
      required:
      - laptopOwnerMapping
      type: object
      properties:
        laptopOwnerMapping:
          type: array
          description: Accepts list of laptop owner mapping ids to be deleted
          items:
            type: integer
            format: int32
      description: This model accepts the list of laptop owner mapping to be deleted
    CreateLaptopOwnerMapping:
      title: CreateLaptopOwnerMapping
      type: object
      properties:
        laptopOwnerMapping:
          type: array
          items:
            $ref: "#/components/schemas/CreateLaptopOwnerInfo"
      description: "POST request for adding new laptop owner mapping, The mandotary\
        \ fields are combination of multiple properties SerialNumber AND (host OR\
        \ laptopName) AND (ownerEmail OR ownerUPN)"
    HFSShareStatusResp:
      title: HFSShareStatusResp
      type: object
      properties:
        statusMessage:
          type: string
          description: Status message telling information about HFS status
        statusCode:
          type: integer
          format: int32
      description: "Some common status are 0 - All Okay, 2 - HFS File Server is not\
        \ up, 11 - HFS not ready"
      example:
        statusMessage: statusMessage
        statusCode: 0
    CreateLaptopOwnerInfo:
      title: CreateLaptopOwnerInfo
      type: object
      properties:
        serialNumber:
          type: string
          description: Serial number of the laptop
        laptopName:
          type: string
          description: Display name of the laptop
        host:
          type: string
          description: Host name of the laptop
        ownerEmail:
          type: string
          description: Email address of the owner
        ownerUPN:
          type: string
          description: UPN of the owner
        osType:
          type: string
          description: Operating system of the owner
        company:
          $ref: "#/components/schemas/IdName"
      description: This is the data model for creating a laptop owner info
    GroupByAggregationValue:
      title: GroupByAggregationValue
      type: object
      properties:
        funcValue:
          type: string
          description: value returned by aggregation function for global search entities
            for a particular group
        groupByVals:
          type: array
          description: list of groupby attribute's Name and value pair.
          nullable: true
          items:
            $ref: "#/components/schemas/NameValue"
      description: This is the data model for return aggregation result for single
        group
      example:
        groupByVals:
        - name: name
          value: value
        - name: name
          value: value
        funcValue: funcValue
    GetAllApplicableAgentResp:
      title: GetAllApplicableAgentResp
      type: object
      properties:
        agentDetails:
          type: array
          items:
            $ref: "#/components/schemas/AgentDetails"
      description: List of associated agents
      example:
        agentDetails:
        - appTypeId: 0
          appTypeName: appTypeName
        - appTypeId: 0
          appTypeName: appTypeName
    AgentDetails:
      type: object
      properties:
        appTypeId:
          type: integer
          description: Id of the associated agent
          format: int32
        appTypeName:
          type: string
          description: Name of the associated agent
      example:
        appTypeId: 0
        appTypeName: appTypeName
    GlobalEntityAggregationValueResp:
      title: GlobalEntityAggregationValueResp
      type: object
      properties:
        aggregation:
          type: array
          nullable: true
          items:
            $ref: "#/components/schemas/GroupByAggregationValue"
      description: this is the data model for return aggregate API
      example:
        aggregation:
        - groupByVals:
          - name: name
            value: value
          - name: name
            value: value
          funcValue: funcValue
        - groupByVals:
          - name: name
            value: value
          - name: name
            value: value
          funcValue: funcValue
    SolutionFilter:
      title: SolutionFilter
      type: string
      description: This filter can be passed Solutions REST API to fetch applicable
        supported solutions
      enum:
      - ALL
      - PLAN_RULES
      - PLAN_SUPPORTED_SOLUTIONS
      - GCM_PLAN_RULES
      - GCM_PLAN_SUPPORTED_SOLUTIONS
    TagAssociatedEntitiesResponse:
      title: TagAssociatedEntitiesResponse
      type: object
      properties:
        tagSetInfo:
          $ref: "#/components/schemas/IdNameGUID"
        tags:
          type: array
          items:
            $ref: "#/components/schemas/TagAssociationInfo"
      description: Response for returning associated entities for tags of default
        entity tag set.
      example:
        tagSetInfo:
          GUID: GUID
          name: name
          id: 0
        tags:
        - associatedEntities:
          - name: name
            id: 1
            type: type
          - name: name
            id: 1
            type: type
          name: name
          count: 6
          globalConfigInfo:
            scopeFilterQuery: scopeFilterQuery
            applyOnAllCommCells: true
            commcells:
            - name: name
              guid: guid
              id: 5
            - name: name
              guid: guid
              id: 5
            scope: scope
            isMarkedForDeletion: true
            name: name
            id: id
            status: status
          id: 0
        - associatedEntities:
          - name: name
            id: 1
            type: type
          - name: name
            id: 1
            type: type
          name: name
          count: 6
          globalConfigInfo:
            scopeFilterQuery: scopeFilterQuery
            applyOnAllCommCells: true
            commcells:
            - name: name
              guid: guid
              id: 5
            - name: name
              guid: guid
              id: 5
            scope: scope
            isMarkedForDeletion: true
            name: name
            id: id
            status: status
          id: 0
    TagAssociationInfo:
      title: TagAssociationInfo
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        count:
          type: integer
          format: int32
        globalConfigInfo:
          $ref: "#/components/schemas/GlobalConfigInfo"
        associatedEntities:
          type: array
          items:
            $ref: "#/components/schemas/IdNameType"
      description: Information of count and associatedEntities
      example:
        associatedEntities:
        - name: name
          id: 1
          type: type
        - name: name
          id: 1
          type: type
        name: name
        count: 6
        globalConfigInfo:
          scopeFilterQuery: scopeFilterQuery
          applyOnAllCommCells: true
          commcells:
          - name: name
            guid: guid
            id: 5
          - name: name
            guid: guid
            id: 5
          scope: scope
          isMarkedForDeletion: true
          name: name
          id: id
          status: status
        id: 0
    GetLaptopAdminsResp:
      title: GetLaptopAdminsResp
      type: object
      properties:
        error:
          $ref: "#/components/schemas/GenericResp"
        laptopAdmins:
          type: array
          description: List of laptop admins (users or user groups).
          items:
            $ref: "#/components/schemas/IdNameType"
      description: Response of get laptop admins
      example:
        laptopAdmins:
        - name: name
          id: 1
          type: type
        - name: name
          id: 1
          type: type
        error:
          errorMessage: errorMessage
          errorCode: 0
    UpdateLaptopAdminsReq:
      title: UpdateLaptopAdminsReq
      type: object
      properties:
        laptopAdmins:
          type: array
          description: List of laptop admins (users or user groups)
          items:
            $ref: "#/components/schemas/IdNameType"
        operationType:
          $ref: "#/components/schemas/UpdateOperationType"
      description: Request of updating laptop admins
    UpdateLaptopAdminsResp:
      title: UpdateLaptopAdminsResp
      type: object
      properties:
        error:
          $ref: "#/components/schemas/GenericResp"
      example:
        error:
          errorMessage: errorMessage
          errorCode: 0
    UpdateOperationType:
      title: UpdateOperationType
      type: string
      enum:
      - OVERWRITE
      - ADD
      - DELETE
      - CLEAR
    InventoryCreateRequest:
      title: InventoryCreateRequest
      required:
      - indexServer
      - name
      type: object
      properties:
        name:
          type: string
          description: Name of the inventory
        indexServer:
          $ref: "#/components/schemas/IndexServerSummary"
        identityServers:
          type: array
          description: List of AD servers to be analyzed
          items:
            type: string
      description: ""
    FileServerAsset:
      title: FileServerAsset
      required:
      - hostName
      - ipAddress
      - name
      - operatingSystem
      type: object
      properties:
        name:
          type: string
          description: Display name of the file server
        hostName:
          type: string
          description: Fully qualified domain name of the server
          format: hostname
        ipAddress:
          type: string
          description: Ip Address of the server
          format: ipv4
        operatingSystem:
          type: string
          description: Operating system of the server
          enum:
          - Mac and Linux
          - NAS
          - Windows
        countryCode:
          type: string
          description: Country code to which the server belongs
    IdentityServerAsset:
      title: IdentityServerAsset
      required:
      - identityServers
      type: object
      properties:
        identityServers:
          type: array
          description: List of identity server names
          items:
            type: string
        startDataCollection:
          type: boolean
          description: Flag to signify if data collection job needs to be invoked
            after addition of identity server
          default: false
    InventoryAssetCreateRequest:
      title: InventoryAssetCreateRequest
      description: ""
      allOf:
      - $ref: "#/components/schemas/IdentityServerAsset"
      - $ref: "#/components/schemas/FileServerAsset"
      - $ref: "#/components/schemas/ObjectStorageAsset"
      - type: object
        properties:
          assetType:
            $ref: "#/components/schemas/InventoryAssetType"
      x-internal: true
    InventoryDetails:
      title: InventoryDetails
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        displayName:
          type: string
          nullable: true
        indexServer:
          $ref: "#/components/schemas/IndexServerSummary"
        owner:
          type: string
          description: Inventory Owner
        createdOn:
          type: integer
          description: Inventory creation time in unix epoch format
          format: int32
      example:
        owner: owner
        indexServer:
          OS: OS
          displayName: displayName
          cloudId: 6
          name: name
          id: 0
        displayName: displayName
        name: name
        id: 0
        createdOn: 6
    InventoryList:
      title: InventoryList
      type: object
      properties:
        inventories:
          type: array
          description: List of inventories
          items:
            $ref: "#/components/schemas/InventoryDetails"
      example:
        inventories:
        - owner: owner
          indexServer:
            OS: OS
            displayName: displayName
            cloudId: 6
            name: name
            id: 0
          displayName: displayName
          name: name
          id: 0
          createdOn: 6
        - owner: owner
          indexServer:
            OS: OS
            displayName: displayName
            cloudId: 6
            name: name
            id: 0
          displayName: displayName
          name: name
          id: 0
          createdOn: 6
    RPStoreListEntity:
      title: RPStoreListEntity
      type: object
      properties:
        library:
          $ref: "#/components/schemas/IdName"
        status:
          type: string
          description: Status of recovery point store library.
          example: READY
          enum:
          - READY
          - OFFLINE
          - DECONFIGURED
        model:
          type: string
          description: Model of recovery point store library.
          example: DISK
          enum:
          - DISK
          - CLOUD
      description: Recovery point store entity detail on the listing page.
      example:
        library:
          name: name
          id: 0
        model: DISK
        status: READY
    RPStoreListResponse:
      title: RPStoreListResponse
      type: object
      properties:
        stores:
          type: array
          items:
            $ref: "#/components/schemas/RPStoreListEntity"
      description: List of recovery point stores.
      example:
        stores:
        - library:
            name: name
            id: 0
          model: DISK
          status: READY
        - library:
            name: name
            id: 0
          model: DISK
          status: READY
    InventoryAssetType:
      title: InventoryAssetType
      type: string
      enum:
      - NONE
      - IDENTITY_SERVER
      - FILE_SERVER
      - OBJECT_STORAGE
    InventoryAssetSummary:
      title: InventoryAssetSummary
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        type:
          $ref: "#/components/schemas/InventoryAssetType"
        status:
          $ref: "#/components/schemas/DcubeJobState"
        lastCollectionTime:
          type: integer
          format: int32
        createdAt:
          type: integer
          format: int32
      example:
        createdAt: 6
        name: name
        lastCollectionTime: 0
        id: id
        type: NONE
        status: IDLE
    InventoryAssetList:
      title: InventoryAssetList
      type: object
      properties:
        assets:
          type: array
          items:
            $ref: "#/components/schemas/InventoryAssetSummary"
      example:
        assets:
        - createdAt: 6
          name: name
          lastCollectionTime: 0
          id: id
          type: NONE
          status: IDLE
        - createdAt: 6
          name: name
          lastCollectionTime: 0
          id: id
          type: NONE
          status: IDLE
    InventoryAssetDetails:
      allOf:
      - $ref: "#/components/schemas/InventoryAssetSummary"
      - type: object
        properties:
          properties:
            type: array
            items:
              $ref: "#/components/schemas/NameValue"
    DcubeJobState:
      title: DcubeJobState
      type: string
      enum:
      - IDLE
      - STARTING
      - RUNNING
      - FINISHING
      - FINISHED
      - STOPPING
      - STOPPED
      - ABORTING
      - ABORTED
      - EXCEPTION
      - UNKNOWN
      - SYNCING
      - PENDING
      - COMPLETED_WITH_ERRORS
    ArrayUserPassword:
      title: ArrayUserPassword
      required:
      - userName
      type: object
      properties:
        userName:
          type: string
          description: Username to access the array
        password:
          type: string
          description: Base 64 encoded Password to access the array
      description: Template for options provided to user
      example:
        password: password
        userName: userName
    EditArrayInfo:
      title: EditArrayInfo
      type: object
      properties:
        controlHost:
          type: string
          description: Host name of the array
        credential:
          $ref: "#/components/schemas/ArrayUserPassword"
        savedCredential:
          $ref: "#/components/schemas/IdName"
        description:
          type: string
          description: Description about the Array
        region:
          $ref: "#/components/schemas/IdName"
        flags:
          type: integer
          description: Flags to be set for array
          format: int32
      description: Template for the editable generic information of an array. Region
        depicts the workload region which is only applicable to NetApp arrays as of
        now.
    ArrayAccessNodes:
      title: ArrayAccessNodes
      type: object
      properties:
        id:
          type: integer
          description: Id of the MediaAgent
          format: int32
        name:
          type: string
          description: Name of the MediaAgent
        displayName:
          type: string
          description: The display name of the corresponding Media Agent
        pruning:
          type: boolean
          description: Enable/Disable pruning of snapshots on the selected Media Agent
      description: Template for MAs that can access Arrays
      example:
        pruning: true
        displayName: displayName
        name: name
        id: 5
    ArrayLabel:
      title: ArrayLabel
      type: object
      properties:
        name:
          type: string
          description: Label for array name
        controlHost:
          type: string
          description: Label for array control host
        userName:
          type: string
          description: Label for array username
        password:
          type: string
          description: Label for array password
      description: Labels for array entities to be displayed on the CC page
      example:
        password: password
        name: name
        controlHost: controlHost
        userName: userName
    VendorDetails:
      title: VendorDetails
      required:
      - name
      - snapVendor
      type: object
      properties:
        snapVendor:
          type: string
        name:
          type: string
          description: Name of the array
        controlHost:
          type: string
          description: Host Name of the array
        description:
          type: string
          description: Description of the array
        credential:
          $ref: "#/components/schemas/ArrayUserPassword"
        savedCredential:
          $ref: "#/components/schemas/IdName"
      description: Details of the vendor being selected
    ArrayConfigsGet:
      title: ArrayConfigsGet
      type: object
      properties:
        masterConfigId:
          type: integer
          description: "This is the masterConfigId, which is available for each vendors\
            \ configs"
          format: int32
        name:
          type: string
          description: This is the name of the config which is displayed on the Command
            Center Console
        type:
          type: integer
          description: "Type of the config value. type can accept 7 values [1,2,8,10,12,13,14],\
            \ 1: boolean, 2: integer, 8: text, 10: array[string] are common configs,\
            \ the rest three are special keys, 12 is for password type key for NetApp\
            \ E-Series and HPE Nimble, 13 is Private Key for GCP, 14 is a config to\
            \ select type of Disk for GCP"
          format: int32
          enum:
          - 1
          - 2
          - 8
          - 10
          - 12
          - 13
          - 14
        value:
          type: string
          description: Values to be set for all types except 10 and 14
        values:
          type: array
          description: "Values to be set for type 10 and 14. Incase of HPE 3PAR StoreServ,\
            \ name field will have the remote snap MA Id."
          items:
            $ref: "#/components/schemas/IdName"
        flags:
          type: integer
          description: Flag regarding placement of config in the CC page
          format: int32
        description:
          type: string
          description: Description about the config that tells the user what it is
            for and the range of values it accepts
        isEnabled:
          type: boolean
          description: Whether the config is enabled or not
        checkRange:
          type: boolean
          description: Whether to check if the value is in range or not of accepted
            values
        minValue:
          type: integer
          description: This is the lower limit value to which the config can be set
            for numeric types
          format: int64
        maxValue:
          type: integer
          description: This is the higher limit value to which the config can be set
            for numeric types
          format: int64
      description: Array config template for getArrayDetails
      example:
        minValue: 9
        masterConfigId: 5
        maxValue: 3
        values:
        - null
        - null
        isEnabled: true
        name: name
        flags: 7
        description: description
        type: 2
        value: value
        checkRange: true
    ArrayConfigsBasic:
      title: ArrayConfigsBasic
      required:
      - masterConfigId
      - name
      - type
      type: object
      properties:
        masterConfigId:
          type: integer
          description: "This is the masterConfigId, which is available for each vendor's\
            \ configs"
          format: int32
        name:
          type: string
          description: This is the name of the config which is displayed on the Command
            Center Console
        type:
          type: integer
          description: "Type of the config value. type can accept 7 values [1,2,8,10,12,13,14],\
            \ 1: boolean, 2: integer, 8: text, 10: array[string] are common configs,\
            \ the rest three are special keys, 12 is for password type key for NetApp\
            \ E-Series and HPE Nimble, 13 is Private Key for GCP, 14 is a config to\
            \ select type of Disk for GCP"
          format: int32
          enum:
          - 1
          - 2
          - 8
          - 10
          - 12
          - 13
          - 14
        value:
          type: string
          description: Takes a single value for all types except 10 and for type 14
            it holds the id of the selected value from values
        values:
          type: array
          description: "Values to be entered. for type 10 and 14. For HPE 3PAR StoreServ,\
            \ pass MA Id in name field to configure that MA as remote snap MA."
          items:
            $ref: "#/components/schemas/IdName"
      description: Generic template for arrayConfigs
    ArrayConfigsEdit:
      title: ArrayConfigsEdit
      required:
      - flags
      - isUpdated
      - masterConfigId
      - name
      - type
      type: object
      properties:
        masterConfigId:
          type: integer
          description: "This is the masterConfigId, which is available for each vendor's\
            \ configs"
          format: int32
        name:
          type: string
          description: This is the name of the config which is displayed on the Command
            Center Console
        type:
          type: integer
          description: "Type of the config value. type can accept 7 values [1,2,8,10,12,13,14],\
            \ 1: boolean, 2: integer, 8: text, 10: array[string] are common configs,\
            \ the rest three are special keys, 12 is for password type key for NetApp\
            \ E-Series and HPE Nimble, 13 is Private Key for GCP, 14 is a hidden config\
            \ to select type of Disk for GCP"
          format: int32
          enum:
          - 1
          - 2
          - 8
          - 10
          - 12
          - 13
          - 14
        value:
          type: string
          description: Takes a single value for all types and for type 14 it holds
            the id of the selected value from values
        values:
          type: array
          description: "For type 10 and 14, it can take one or more value of idname\
            \ type where id by default is 0 for 10. For HPE 3PAR StoreServ, pass MA\
            \ Id in name field to configure that MA as remote snap MA."
          items:
            $ref: "#/components/schemas/IdName"
        flags:
          type: integer
          description: Flag regarding placement of config in the CC page
          format: int32
        isUpdated:
          type: boolean
          description: Whether the config is updated/edited or not
      description: Array config template for editArrayDetails
    ArrayGenDetails:
      title: ArrayGenDetails
      type: object
      properties:
        snapVendor:
          $ref: "#/components/schemas/IdName"
        array:
          $ref: "#/components/schemas/IdName"
        controlHost:
          type: string
          description: Control Host name of the array
        credential:
          $ref: "#/components/schemas/ArrayUserPassword"
        savedCredential:
          $ref: "#/components/schemas/IdName"
        region:
          $ref: "#/components/schemas/IdName"
        flags:
          type: integer
          description: "0: default 1: Only selected arrays 2: Disable automatic cleanup\
            \ 4: System created arrays 8: Auto created arrays 16: User created arrays"
          format: int32
          default: 0
          enum:
          - 0
          - 1
          - 2
          - 4
          - 8
          - 16
        enableNetAppCloudAccount:
          type: boolean
          description: Set as true for NetApp cloud target arrays
        arrayType:
          type: integer
          description: "Used to differentiate between Primary, Secondary, and OCUM\
            \ type of NetApp Array"
          format: int32
        cloudVendorId:
          type: integer
          description: Id for cloud vendors associated to arrays
          format: int32
        uniqueIdentifier:
          type: string
          description: Unique identifier pertaining to each array
        description:
          type: string
          description: User provided description of the array
        company:
          $ref: "#/components/schemas/IdName"
      description: Generic Details of the Engine Array. Region depicts the workload
        region which is only applicable to NetApp arrays as of now.
      example:
        arrayType: 6
        snapVendor:
          name: name
          id: 0
        flags: 0
        description: description
        cloudVendorId: 1
        credential:
          password: password
          userName: userName
        array: null
        controlHost: controlHost
        company: null
        region: null
        savedCredential: null
        enableNetAppCloudAccount: true
        uniqueIdentifier: uniqueIdentifier
    ListSnapshots:
      title: ListSnapshots
      type: object
      properties:
        smVolumeId:
          type: integer
          description: The Volume Id of the snapshots
          format: int32
        arrayName:
          type: string
          description: Name of the array
        arrayId:
          type: integer
          description: Id of the array
          format: int32
        sourceClientId:
          type: integer
          description: Id of the Source Client
          format: int32
        sourceClientName:
          type: string
          description: Source client for the engine
        sourcePath:
          type: string
          description: Source path of the engine where disk is stored
        mountHostId:
          type: integer
          description: Id of the MA where the mount is hosted
          format: int32
        mountHostName:
          type: string
          description: Host on which the snapshot is mounted on
        mountPath:
          type: string
          description: Path to the mounted snapshot
        appTypeId:
          type: integer
          description: Id of the application type engine used
          format: int32
        appTypeName:
          type: string
          description: Name of the application type which the Engine used
          example: Windows File System
        masterJobId:
          type: integer
          description: Job Id of the master job
          format: int32
        jobId:
          type: integer
          format: int32
        creationTime:
          type: integer
          description: Time of Creation
          format: int32
        mountStatusId:
          type: integer
          description: Id for the mount status
          format: int32
        mountStatusName:
          type: string
          description: Whether the snapshot was taken sucessfully or not
        mountStatusUpdateTime:
          type: integer
          description: Last Status Update
          format: int32
        snapshotType:
          type: integer
          description: The type of the snapshot
          format: int32
        capabilities:
          type: integer
          description: The capability flags set for the snapshot
          format: int32
      description: Response for Listing Snapshots
      example:
        mountPath: mountPath
        sourceClientName: sourceClientName
        capabilities: 7
        creationTime: 9
        snapshotType: 4
        smVolumeId: 0
        appTypeName: Windows File System
        masterJobId: 2
        arrayName: arrayName
        mountStatusUpdateTime: 2
        arrayId: 6
        mountStatusName: mountStatusName
        jobId: 7
        appTypeId: 5
        mountHostName: mountHostName
        mountStatusId: 3
        sourceClientId: 1
        sourcePath: sourcePath
        mountHostId: 5
    CreateArray:
      title: CreateArray
      type: object
      properties:
        general:
          $ref: "#/components/schemas/VendorDetails"
        accessNodes:
          type: array
          description: MAs that can access the array
          items:
            $ref: "#/components/schemas/ArrayAccessNodes"
        snapConfigurations:
          type: array
          description: Configurations related to a snap engine
          items:
            $ref: "#/components/schemas/ArrayConfigsBasic"
      description: Request body for creating Array
    VendorCapabilities:
      title: VendorCapabilities
      type: object
      properties:
        enableUserName:
          type: boolean
          description: Set to true if username is enabled for the vendor
        enableArrayDeviceGroup:
          type: boolean
          description: Set to true if the array belongs to a device group
        enableHostDeviceGroup:
          type: boolean
          description: Set to true if the host belongs to a device group
        enableArrayType:
          type: boolean
          description: Set to true if array type is enabled for the NetApp and AWS
            to establish subtypes of vendors
        enablePassword:
          type: boolean
          description: Set to true if password is enabled for the vendor
        enableControlHost:
          type: boolean
          description: Set to true if control host is enabled for the vendor
        enableArrayNameChange:
          type: boolean
          description: Set to true if name of the array can be changed
        enableNetAppCloudAccount:
          type: boolean
          description: Set to true if NetApp Cloud Account is enabled for the vendor
      example:
        enableHostDeviceGroup: true
        enableControlHost: true
        enableUserName: true
        enableArrayDeviceGroup: true
        enablePassword: true
        enableArrayNameChange: true
        enableArrayType: true
        enableNetAppCloudAccount: true
    ISServerGroup:
      title: ISServerGroup
      type: object
      properties:
        id:
          type: integer
          description: Id of server group
          format: int32
        name:
          type: string
          description: Name of server group
        mediaAgentCount:
          type: integer
          description: Count of servers where MediaAgent package is installed
          format: int32
      example:
        mediaAgentCount: 4
        name: name
        id: 2
    ArrayDetails:
      title: ArrayDetails
      type: object
      properties:
        labels:
          $ref: "#/components/schemas/ArrayLabel"
        general:
          $ref: "#/components/schemas/ArrayGenDetails"
        security:
          $ref: "#/components/schemas/SecurityAssoc"
        accessNodes:
          type: array
          items:
            $ref: "#/components/schemas/ArrayAccessNodes"
        availableAccessNodes:
          type: array
          items:
            $ref: "#/components/schemas/IdNameDisplayName"
        snapConfigurations:
          type: array
          items:
            $ref: "#/components/schemas/ArrayConfigsGet"
        capabilities:
          $ref: "#/components/schemas/VendorCapabilities"
        serverGroups:
          type: array
          items:
            $ref: "#/components/schemas/ISServerGroup"
      description: Details of Engine Array
      example:
        serverGroups:
        - mediaAgentCount: 4
          name: name
          id: 2
        - mediaAgentCount: 4
          name: name
          id: 2
        general:
          arrayType: 6
          snapVendor:
            name: name
            id: 0
          flags: 0
          description: description
          cloudVendorId: 1
          credential:
            password: password
            userName: userName
          array: null
          controlHost: controlHost
          company: null
          region: null
          savedCredential: null
          enableNetAppCloudAccount: true
          uniqueIdentifier: uniqueIdentifier
        security:
          role: null
          isCreatorAssociation: true
          externalUserGroup:
            providerId: 5
            name: name
            id: 1
            providerName: providerName
          permissionList:
          - permissionId: 5
            exclude: true
            type: ALL_CATEGORIES
            categoryName: categoryName
            categoryId: 2
            permissionName: permissionName
          - permissionId: 5
            exclude: true
            type: ALL_CATEGORIES
            categoryName: categoryName
            categoryId: 2
            permissionName: permissionName
          user: null
          userGroup: null
        capabilities:
          enableHostDeviceGroup: true
          enableControlHost: true
          enableUserName: true
          enableArrayDeviceGroup: true
          enablePassword: true
          enableArrayNameChange: true
          enableArrayType: true
          enableNetAppCloudAccount: true
        accessNodes:
        - pruning: true
          displayName: displayName
          name: name
          id: 5
        - pruning: true
          displayName: displayName
          name: name
          id: 5
        availableAccessNodes:
        - displayName: displayName
          name: name
          id: 2
        - displayName: displayName
          name: name
          id: 2
        snapConfigurations:
        - minValue: 9
          masterConfigId: 5
          maxValue: 3
          values:
          - null
          - null
          isEnabled: true
          name: name
          flags: 7
          description: description
          type: 2
          value: value
          checkRange: true
        - minValue: 9
          masterConfigId: 5
          maxValue: 3
          values:
          - null
          - null
          isEnabled: true
          name: name
          flags: 7
          description: description
          type: 2
          value: value
          checkRange: true
        labels:
          password: password
          name: name
          controlHost: controlHost
          userName: userName
    EditArray:
      title: EditArray
      type: object
      properties:
        general:
          $ref: "#/components/schemas/EditArrayInfo"
        accessNodes:
          type: array
          items:
            $ref: "#/components/schemas/ArrayAccessNodes"
        snapConfigurations:
          type: array
          description: Configurations related to a snap engine
          items:
            $ref: "#/components/schemas/ArrayConfigsEdit"
        security:
          $ref: "#/components/schemas/UpdateSecurityAssoc"
      description: Request to pass for Edit Array
    ArrayLevel:
      title: ArrayLevel
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        userName:
          type: string
          description: User name for array
        vendor:
          type: string
          description: Vendor Name
        flags:
          type: integer
          description: "0: default 1: Only selected arrays 2: Disable automatic cleanup\
            \ 4: System created arrays 8: Auto created arrays 16: User created arrays"
          format: int32
          default: 0
          enum:
          - 0
          - 1
          - 2
          - 4
          - 8
          - 16
        description:
          type: string
          description: description about the Storage Array
        controlHost:
          type: string
          description: Control host of the storage array
        assocFlag:
          type: boolean
          description: Flag to check if the array is associated to the given client
            or subclient
        VSVendor:
          $ref: "#/components/schemas/VSVendor"
        company:
          $ref: "#/components/schemas/IdName"
      description: Array detail template
      example:
        assocFlag: true
        vendor: vendor
        name: name
        flags: 6
        controlHost: controlHost
        VSVendor: NONE
        description: description
        company:
          name: name
          id: 0
        id: 0
        userName: userName
    GetArraysResp:
      title: GetArraysResp
      type: object
      properties:
        arrays:
          type: array
          description: List of arrays
          items:
            $ref: "#/components/schemas/ArrayLevel"
      description: Get list of all arrays
      example:
        arrays:
        - assocFlag: true
          vendor: vendor
          name: name
          flags: 6
          controlHost: controlHost
          VSVendor: NONE
          description: description
          company:
            name: name
            id: 0
          id: 0
          userName: userName
        - assocFlag: true
          vendor: vendor
          name: name
          flags: 6
          controlHost: controlHost
          VSVendor: NONE
          description: description
          company:
            name: name
            id: 0
          id: 0
          userName: userName
    VendorResp:
      title: VendorResp
      type: object
      properties:
        snapVendor:
          $ref: "#/components/schemas/IdName"
        capabilities:
          $ref: "#/components/schemas/VendorCapabilities"
        cloudVendorId:
          type: integer
          format: int32
        label:
          $ref: "#/components/schemas/ArrayLabel"
      example:
        capabilities:
          enableHostDeviceGroup: true
          enableControlHost: true
          enableUserName: true
          enableArrayDeviceGroup: true
          enablePassword: true
          enableArrayNameChange: true
          enableArrayType: true
          enableNetAppCloudAccount: true
        snapVendor:
          name: name
          id: 0
        label:
          password: password
          name: name
          controlHost: controlHost
          userName: userName
        cloudVendorId: 0
    SnapVendors:
      title: SnapVendors
      type: object
      properties:
        snapVendors:
          type: array
          description: List of all snap vendors
          items:
            $ref: "#/components/schemas/VendorResp"
      description: Get list of all snap vendors
      example:
        snapVendors:
        - capabilities:
            enableHostDeviceGroup: true
            enableControlHost: true
            enableUserName: true
            enableArrayDeviceGroup: true
            enablePassword: true
            enableArrayNameChange: true
            enableArrayType: true
            enableNetAppCloudAccount: true
          snapVendor:
            name: name
            id: 0
          label:
            password: password
            name: name
            controlHost: controlHost
            userName: userName
          cloudVendorId: 0
        - capabilities:
            enableHostDeviceGroup: true
            enableControlHost: true
            enableUserName: true
            enableArrayDeviceGroup: true
            enablePassword: true
            enableArrayNameChange: true
            enableArrayType: true
            enableNetAppCloudAccount: true
          snapVendor:
            name: name
            id: 0
          label:
            password: password
            name: name
            controlHost: controlHost
            userName: userName
          cloudVendorId: 0
    GetSnapConfig:
      title: GetSnapConfig
      type: object
      properties:
        vendor:
          type: string
          description: vendor Name
        configList:
          type: array
          description: snap configs of snap vendor with default values
          items:
            $ref: "#/components/schemas/ArrayConfigsGet"
      description: Get snap configs for vendors
      example:
        vendor: vendor
        configList:
        - minValue: 9
          masterConfigId: 5
          maxValue: 3
          values:
          - null
          - null
          isEnabled: true
          name: name
          flags: 7
          description: description
          type: 2
          value: value
          checkRange: true
        - minValue: 9
          masterConfigId: 5
          maxValue: 3
          values:
          - null
          - null
          isEnabled: true
          name: name
          flags: 7
          description: description
          type: 2
          value: value
          checkRange: true
    SoftwareCacheDetail:
      title: SoftwareCacheDetail
      type: object
      properties:
        cache:
          $ref: "#/components/schemas/IdName"
        cacheDirectory:
          type: string
          description: The software cache directory path where the media will be located
        enabled:
          type: boolean
          description: Whether the software cache is enabled or not
        configurable:
          type: boolean
          description: Whether the software cache is configurable
        status:
          $ref: "#/components/schemas/SyncStatusTypes"
        associations:
          type: array
          description: List of servers and server groups.
          items:
            $ref: "#/components/schemas/ServerOrServerGroupAssociation"
        cacheContents:
          type: array
          description: List of cache content details of software cache.
          items:
            $ref: "#/components/schemas/SoftwareCacheContent"
      description: Details of software cache server.
      example:
        associations:
        - name: name
          id: 0
          type: SERVER
        - name: name
          id: 0
          type: SERVER
        cache:
          name: name
          id: 0
        cacheContents:
        - additionalUpdates: additionalUpdates
          packagesInCache: packagesInCache
          osName: osName
          version: version
        - additionalUpdates: additionalUpdates
          packagesInCache: packagesInCache
          osName: osName
          version: version
        cacheDirectory: cacheDirectory
        enabled: true
        configurable: true
        status: OUT_OF_SYNC
    SoftwareCacheContent:
      title: SoftwareCacheContent
      type: object
      properties:
        osName:
          type: string
          description: OS Name of the media available in software cache
        version:
          type: string
          description: Version of the media available in software cache
        additionalUpdates:
          type: string
          description: List of additional updates available in software cache
        packagesInCache:
          type: string
          description: List of packages available in the software cache
      description: Software cache content details.
      example:
        additionalUpdates: additionalUpdates
        packagesInCache: packagesInCache
        osName: osName
        version: version
    SoftwareCacheDetailListResp:
      type: object
      properties:
        softwareCacheDetailList:
          type: array
          items:
            $ref: "#/components/schemas/SoftwareCacheDetail"
      example:
        softwareCacheDetailList:
        - associations:
          - name: name
            id: 0
            type: SERVER
          - name: name
            id: 0
            type: SERVER
          cache:
            name: name
            id: 0
          cacheContents:
          - additionalUpdates: additionalUpdates
            packagesInCache: packagesInCache
            osName: osName
            version: version
          - additionalUpdates: additionalUpdates
            packagesInCache: packagesInCache
            osName: osName
            version: version
          cacheDirectory: cacheDirectory
          enabled: true
          configurable: true
          status: OUT_OF_SYNC
        - associations:
          - name: name
            id: 0
            type: SERVER
          - name: name
            id: 0
            type: SERVER
          cache:
            name: name
            id: 0
          cacheContents:
          - additionalUpdates: additionalUpdates
            packagesInCache: packagesInCache
            osName: osName
            version: version
          - additionalUpdates: additionalUpdates
            packagesInCache: packagesInCache
            osName: osName
            version: version
          cacheDirectory: cacheDirectory
          enabled: true
          configurable: true
          status: OUT_OF_SYNC
    ModifySoftwareCacheAssociations:
      allOf:
      - $ref: "#/components/schemas/ServerOrServerGroupAssociation"
      - required:
        - opType
        type: object
        properties:
          opType:
            $ref: "#/components/schemas/BasicListOpType"
    ServerOrServerGroupAssociation:
      title: ServerOrServerGroupAssociation
      type: object
      properties:
        id:
          type: integer
          description: Id of server or server group
          format: int32
        name:
          type: string
          description: Name of server or server group
        type:
          $ref: "#/components/schemas/ServerOrServerGroupTypes"
      example:
        name: name
        id: 0
        type: SERVER
    ServerOrServerGroupTypes:
      title: ServerOrServerGroupTypes
      type: string
      enum:
      - SERVER
      - SERVER_GROUP
    SyncStatusTypes:
      title: SyncStatusTypes
      type: string
      enum:
      - OUT_OF_SYNC
      - IN_SYNC
    ModifySoftwareCacheDetails:
      title: ModifySoftwareCacheDetails
      type: object
      properties:
        cacheDirectory:
          type: string
          description: The software cache directory path where the media will be located
        enabled:
          type: boolean
          description: Whether the software cache is enabled or not
        associations:
          type: array
          items:
            $ref: "#/components/schemas/ModifySoftwareCacheAssociations"
      description: "Request to update software cache properties like associations,\
        \ cache directory or enabled for a specific server."
    JobDetailForStorage:
      title: JobDetailForStorage
      type: object
      properties:
        jobId:
          type: integer
          description: The system-generated Id assigned to the job
          format: int32
        status:
          type: string
          description: The status of the job
        server:
          $ref: "#/components/schemas/IdName"
        agentType:
          $ref: "#/components/schemas/IdName"
        subClient:
          $ref: "#/components/schemas/IdName"
        jobType:
          type: string
          description: Backup level of the Job
        startTime:
          type: integer
          description: The date and time the job started
          format: int64
        sizeOfApplication:
          type: integer
          description: The amount of application data that was protected during the
            job
          format: int64
        retainUntil:
          type: integer
          description: The date and time until job should be retained
          format: int64
        instance:
          $ref: "#/components/schemas/IdName"
        backupSet:
          $ref: "#/components/schemas/IdName"
        region:
          $ref: "#/components/schemas/IdName"
        retentionReason:
          type: string
          description: Reason for retaining the job
        username:
          type: string
          description: User who initiated the job
        description:
          type: string
          description: Job description
        savingPercentage:
          type: number
          description: "The percentage of space saved due to deduplication and compression,\
            \ if employed"
          format: float
        dataWritten:
          type: integer
          description: Size of the data stored on the media.
          format: int64
        avgThroughput:
          type: number
          description: Average throughput of the job
          format: float
        endTime:
          type: integer
          description: The date and time the job ended
          format: int64
        duration:
          type: integer
          description: The time duration for which the job ran
          format: int64
        dataVerificationStatus:
          type: integer
          description: "Specify if Job data is verified by periodic DV jobs. Possible\
            \ values [0 = unchecked, 1 = expired, 2 = do not check, 3 = to be checked,\
            \ 4 = partial checked, 5 = successful, 6 = failed]"
          format: int32
        hardwareEncrypted:
          type: boolean
          description: Set to true if Job is hardware encrypted
        lastVerifiedOn:
          type: string
          description: Last DataVerification time
        copiedTime:
          type: integer
          description: Auxcopied time
          format: int64
        encrypted:
          type: boolean
          description: Set to true if Job is encrypted
        parentJobId:
          type: integer
          description: Parent JobId in a linked job
          format: int64
        retainedBy:
          type: integer
          description: Reason for retention
          format: int32
        deduplicated:
          type: boolean
          description: Set to true if Job is deduplicated.
        requiredByJobs:
          type: string
          description: Comma separated list of linked Jobs
        strRetainedBy:
          type: string
          description: String defining reason for retention
          enum:
          - No Data Available
          - User
          - Extended Retention
          - Basic Retention
        strDataVerificationStatus:
          type: string
          description: "Specify if Job data is verified by periodic DV jobs. Possible\
            \ values [unchecked, expired, do not check, to be checked, partial checked,\
            \ successful, failed]"
          enum:
          - Not Picked
          - Expired
          - Picked
          - Partial
          - Successful
          - Failed
          - Invalid data received.
        isAged:
          type: boolean
          description: Set to true if Job is marked as aged.
        statusId:
          type: integer
          description: The status id of the job
          format: int32
        jobAttributesEx:
          type: integer
          description: The jobAttributesEx field is an internal attribute used to
            construct Admin Console URLs. It contains additional attributes and information
            specific to each job.
          format: int64
        isSoftAged:
          type: boolean
          description: Indicates if job is soft aged or not.
        retentionCode:
          type: string
          description: Indicates the retained reason string.
        estMediaSize:
          type: integer
          description: The estimated space occupied by the backed up data on the media.
          format: int64
        snapCatalogStatus:
          type: string
          description: The status for snap catalog jobs.
          enum:
          - Not Applicable
          - Partial
          - Picked
          - Success
          - Not picked
      description: Details of a Job on storage.
      example:
        sizeOfApplication: 1
        server:
          name: name
          id: 0
        retentionReason: retentionReason
        agentType: null
        instance: null
        backupSet: null
        description: description
        strRetainedBy: No Data Available
        snapCatalogStatus: Not Applicable
        dataWritten: 2
        duration: 3
        avgThroughput: 7.0614014
        dataVerificationStatus: 2
        startTime: 6
        isSoftAged: true
        jobType: jobType
        strDataVerificationStatus: Not Picked
        requiredByJobs: requiredByJobs
        jobAttributesEx: 1
        subClient: null
        retentionCode: retentionCode
        savingPercentage: 5.637377
        isAged: true
        jobId: 0
        deduplicated: true
        retainUntil: 5
        encrypted: true
        statusId: 1
        hardwareEncrypted: true
        copiedTime: 4
        parentJobId: 7
        lastVerifiedOn: lastVerifiedOn
        retainedBy: 1
        endTime: 9
        region: null
        status: status
        username: username
        estMediaSize: 6
    CompareXMLReq:
      title: CompareXmlRequestObjects
      type: object
      properties:
        OldXML:
          type: string
          description: first xml object in string format
        NewXML:
          type: string
          description: second xml object in string format
      description: This is the data model to compare two objects
    CompareXMLResp:
      title: CompareXmlResponse
      type: object
      properties:
        result:
          type: string
          description: difference details in json format
      description: This is the result of two objects comparision
      example:
        result: result
    GetJobsOnStorageResp:
      title: GetJobsOnStorageResp
      type: object
      properties:
        jobs:
          type: array
          items:
            $ref: "#/components/schemas/JobDetailForStorage"
      description: Job List for storage entity.
      example:
        jobs:
        - sizeOfApplication: 1
          server:
            name: name
            id: 0
          retentionReason: retentionReason
          agentType: null
          instance: null
          backupSet: null
          description: description
          strRetainedBy: No Data Available
          snapCatalogStatus: Not Applicable
          dataWritten: 2
          duration: 3
          avgThroughput: 7.0614014
          dataVerificationStatus: 2
          startTime: 6
          isSoftAged: true
          jobType: jobType
          strDataVerificationStatus: Not Picked
          requiredByJobs: requiredByJobs
          jobAttributesEx: 1
          subClient: null
          retentionCode: retentionCode
          savingPercentage: 5.637377
          isAged: true
          jobId: 0
          deduplicated: true
          retainUntil: 5
          encrypted: true
          statusId: 1
          hardwareEncrypted: true
          copiedTime: 4
          parentJobId: 7
          lastVerifiedOn: lastVerifiedOn
          retainedBy: 1
          endTime: 9
          region: null
          status: status
          username: username
          estMediaSize: 6
        - sizeOfApplication: 1
          server:
            name: name
            id: 0
          retentionReason: retentionReason
          agentType: null
          instance: null
          backupSet: null
          description: description
          strRetainedBy: No Data Available
          snapCatalogStatus: Not Applicable
          dataWritten: 2
          duration: 3
          avgThroughput: 7.0614014
          dataVerificationStatus: 2
          startTime: 6
          isSoftAged: true
          jobType: jobType
          strDataVerificationStatus: Not Picked
          requiredByJobs: requiredByJobs
          jobAttributesEx: 1
          subClient: null
          retentionCode: retentionCode
          savingPercentage: 5.637377
          isAged: true
          jobId: 0
          deduplicated: true
          retainUntil: 5
          encrypted: true
          statusId: 1
          hardwareEncrypted: true
          copiedTime: 4
          parentJobId: 7
          lastVerifiedOn: lastVerifiedOn
          retainedBy: 1
          endTime: 9
          region: null
          status: status
          username: username
          estMediaSize: 6
    ClientListForStorageResp:
      title: ClientListForStorageResp
      type: object
      properties:
        clients:
          type: array
          description: List of Client Id and Name.
          items:
            $ref: "#/components/schemas/IdName"
      description: Client List for storage entity.
      example:
        clients:
        - name: name
          id: 0
        - name: name
          id: 0
    SnapReconResp:
      title: SnapReconResp
      type: object
      properties:
        jobId:
          type: integer
          description: Resulting job Id
          format: int32
        errorCode:
          type: integer
          description: error code
          format: int32
        errorMessage:
          type: string
          description: error message
          nullable: true
      description: Snap reconcile operation response
      example:
        jobId: 0
        errorMessage: errorMessage
        errorCode: 6
    DatasourceJobSummary:
      title: DatasourceJobSummary
      type: object
      properties:
        startTime:
          minimum: 0
          type: integer
          format: int32
        endTime:
          minimum: 0
          type: integer
          format: int32
        status:
          $ref: "#/components/schemas/DcubeJobState"
        totalCount:
          minimum: 0
          type: integer
          format: int64
        numAdded:
          minimum: 0
          type: integer
          format: int64
        numFailed:
          minimum: 0
          type: integer
          format: int64
      example:
        numFailed: 0
        numAdded: 0
        startTime: 0
        endTime: 0
        totalCount: 0
        status: IDLE
    DatasourceJobHistory:
      title: DatasourceJobHistory
      type: object
      properties:
        jobs:
          type: array
          items:
            $ref: "#/components/schemas/DatasourceJobSummary"
      example:
        jobs:
        - numFailed: 0
          numAdded: 0
          startTime: 0
          endTime: 0
          totalCount: 0
          status: IDLE
        - numFailed: 0
          numAdded: 0
          startTime: 0
          endTime: 0
          totalCount: 0
          status: IDLE
    DestinationMount:
      title: DestinationMount
      type: object
      properties:
        id:
          type: integer
          description: Id of the MA where the Snap is mounted
          format: int32
        path:
          type: string
          description: Path where the snap is mounted
      description: Model for destination clients id and path during Snap operations
    VolumeSnap:
      title: VolumeSnap
      type: object
      properties:
        smVolumeId:
          type: integer
          description: smVolumeId of the snaps you want to mount/unmount/delete
          format: int32
        flags:
          type: integer
          description: Volume flags to be set for snap Operations.
          format: int32
          default: 0
      description: An object containing smVolumeId of Snaps and the flags set
    MountReq:
      title: MountReq
      type: object
      properties:
        destinationClient:
          $ref: "#/components/schemas/DestinationMount"
        protectSnap:
          type: integer
          description: Enable or disable VSS protection on Snaps while mounting
          format: int32
          enum:
          - 0
          - 1
        volumes:
          type: array
          description: Volumes of the snap you want to mount
          items:
            $ref: "#/components/schemas/VolumeSnap"
        scsiServer:
          $ref: "#/components/schemas/IdName"
        appId:
          type: array
          nullable: true
          items:
            $ref: "#/components/schemas/VSAApplicationDetails"
        userName:
          type: string
          nullable: true
        server:
          type: array
          nullable: true
          items:
            $ref: "#/components/schemas/VSAServerDetails"
      description: Request template for Mounting Snapshots. scsiServer refers to the
        iSCSI server which the user can choose while mounting.
    UnmountSnapReq:
      title: UnmountSnapReq
      type: object
      properties:
        volumes:
          type: array
          description: Volumes of the snap you want to unmount
          items:
            $ref: "#/components/schemas/VolumeSnap"
      description: Request template for unmount request of snapshots
    DeleteSnapReq:
      title: DeleteSnapReq
      type: object
      properties:
        volumes:
          type: array
          description: Volumes of the snaps you want to delete
          items:
            $ref: "#/components/schemas/VolumeSnap"
      description: Request template of delete snapshots
    ContinuousPairFailoverRequest:
      title: ContinuousPairFailoverRequest
      required:
      - failoverType
      - recoverFrom
      type: object
      properties:
        failoverType:
          type: string
          description: Type of failover to be performed
          enum:
          - TEST_FAILOVER
          - CLONE_DR_VM
          - PLANNED_FAILOVER
          - UNPLANNED_FAILOVER
        recoverFrom:
          type: string
          description: Recovery point type
          enum:
          - OLDEST_POINT
          - LATEST_RECOVERY
          - GRAPH_SELECTION
          - RECOVERY_POINT
        recoveryPointTime:
          type: string
          description: Applicable if recoverFrom is GRAPH_SELECTION or RECOVERY_POINT.
            Format- MM/DD/YYY HH:MM:SS AM/PM
        hostname:
          type: string
          description: Override boot options - Destination host name
        vmNetworkName:
          type: string
          description: Override boot options - Destination network
        failoverVmName:
          type: string
          description: New Failover VM Name - Applicable only for Test Failover and
            Clone DR VM
        vmExpirationTime:
          type: integer
          description: Expiration time in seconds for new test failover VM - Applicable
            only for Test Failover
          format: int64
      description: The payload of the replication monitor continuous pair failover
        request
    ContinuousPairFailoverResponse:
      title: ContinuousPairFailoverResponse
      type: object
      properties:
        jobId:
          $ref: "#/components/schemas/JobId"
      description: The response of the continuous replication pair failover request
      x-examples:
        example-1:
          jobId: 12345
    PeriodicMonitorDeleteRequest:
      title: PeriodicMonitorDeleteRequest
      required:
      - pairIds
      type: object
      properties:
        pairIds:
          minItems: 1
          uniqueItems: true
          type: array
          description: The id's of the pair that have to be deleted.
          format: int32
          items:
            minimum: 1
            type: integer
            format: int32
        deleteDRVMs:
          type: boolean
          description: Provide this option to delete the DR VM's too.
          default: false
      description: The payload of the periodic monitor delete operation
      x-examples:
        Delete2Pairs:
          pairIds:
          - 1
          - 2
          deleteDRVMs: false
    PeriodicMonitorDeleteResponse:
      title: PeriodicMonitorDeleteResponse
      type: object
      properties:
        jobId:
          type: integer
          description: The job id of the delete pair request
          format: int32
      description: The response of the delete periodic replication pair request
      x-examples:
        example-1:
          jobId: 12345
    SnapRevertReq:
      title: SnapRevertReq
      type: object
      properties:
        volumes:
          type: array
          items:
            $ref: "#/components/schemas/VolumeSnap"
      description: Request template for revert snapshots
    RestrictConsoleTypes:
      type: object
      properties:
        consoleType:
          type: array
          items:
            $ref: "#/components/schemas/ConsoleTypes"
    ConsoleTypes:
      title: ConsoleTypes
      type: string
      enum:
      - COMMANDCENTER
      - WEBCONSOLE
      - COMMCELLCONSOLE
      - API
      - MOBILE
    RestrictedConsoleTypes:
      title: RestrictedConsoleTypes
      type: object
      properties:
        consoleType:
          type: string
          description: This is console type
          enum:
          - COMMANDCENTER
          - WEBCONSOLE
          - COMMCELLCONSOLE
          - API
          - MOBILE
        parent:
          $ref: "#/components/schemas/IdNameType"
      description: "This property is listing restricted consoles. If the restricted\
        \ console is inherited from parent, parent name and id will be listed along\
        \ with restricted console."
      example:
        parent:
          name: name
          id: 1
          type: type
        consoleType: COMMANDCENTER
    CRDCloudAccount:
      title: CRDCloudAccount
      type: object
      properties:
        client:
          $ref: "#/components/schemas/IdName"
        subscriptionId:
          type: string
          description: Subscription Id of the cloud account
      description: Cloud account eligible for Cloud Resource Discovery
      example:
        client:
          name: name
          id: 0
        subscriptionId: subscriptionId
    GetCRDCloudAccountsResponse:
      title: GetCRDCloudAccountsResponse
      type: object
      properties:
        cloudAccounts:
          type: array
          description: Array of cloud accounts eligible for Cloud Resource Discovery
          items:
            $ref: "#/components/schemas/CRDCloudAccount"
        error:
          $ref: "#/components/schemas/GenericResp"
      description: Contains the list of cloud accounts eligible for Cloud Resource
        Discovery
      example:
        cloudAccounts:
        - client:
            name: name
            id: 0
          subscriptionId: subscriptionId
        - client:
            name: name
            id: 0
          subscriptionId: subscriptionId
        error:
          errorMessage: errorMessage
          errorCode: 0
    TagValueResponse:
      title: TagValueResponse
      type: object
      properties:
        tagId:
          type: integer
          format: int32
        tagValues:
          type: array
          description: Array of tag values
          items:
            $ref: "#/components/schemas/IdName"
        globalConfigInfo:
          $ref: "#/components/schemas/GlobalConfigInfo"
      description: Returns list of tag values associated to tag names
      example:
        tagId: 0
        globalConfigInfo:
          scopeFilterQuery: scopeFilterQuery
          applyOnAllCommCells: true
          commcells:
          - name: name
            guid: guid
            id: 5
          - name: name
            guid: guid
            id: 5
          scope: scope
          isMarkedForDeletion: true
          name: name
          id: id
          status: status
        tagValues:
        - name: name
          id: 0
        - name: name
          id: 0
    UpdateTagValueRequest:
      title: UpdateTagValueRequest
      type: object
      properties:
        oldValue:
          type: string
        newValue:
          type: string
      description: Request body to update tag values
    SnapConfigsOverride:
      title: SnapConfigsOverride
      type: object
      properties:
        masterConfigId:
          type: integer
          description: "This is the masterConfigId, which is available for each vendors\
            \ configs"
          format: int32
        id:
          type: integer
          description: This is the id of the config which is required during config
            override
          format: int32
        name:
          type: string
          description: This is the name of the config which is displayed on the Command
            Center Console
        type:
          type: integer
          description: "Type of the config value. type can accept 7 values [1,2,8,10,12,13,14],\
            \ 1: boolean, 2: integer, 8: text, 10: array[string] are common configs,\
            \ the rest three are special keys, 12 is for password type key for NetApp\
            \ E-Series and HPE Nimble, 13 is Private Key for GCP, 14 is a hidden config\
            \ to select type of Disk for GCP"
          format: int32
          enum:
          - 1
          - 2
          - 8
          - 10
          - 12
          - 13
          - 14
        value:
          type: string
          description: Value of the config
        values:
          type: array
          description: "Holds a single value for types except 10, for 10 it holds\
            \ one or more values. Incase of HPE 3PAR StoreServ, name field will have\
            \ the remote snap MA Id."
          items:
            $ref: "#/components/schemas/IdName"
        flags:
          type: integer
          description: Flag regarding placement of config in the CC page
          format: int32
        description:
          type: string
          description: Description about the config that tells the user what it is
            for and the range of values it accepts
        isEnabled:
          type: boolean
          description: Whether the config is enabled or not
        isOverridden:
          type: boolean
          description: Whether the config is Overridden or not
        checkRange:
          type: boolean
          description: Whether to check if the value is in range or not of accepted
            values
        minValue:
          type: integer
          description: This is the lower limit value to which the config can be set
            for numeric types
          format: int64
        maxValue:
          type: integer
          description: This is the higher limit value to which the config can be set
            for numeric types
          format: int64
      description: Array config template for getting options of Snap Configs on different
        levels
      example:
        masterConfigId: 5
        maxValue: 2
        values:
        - name: name
          id: 0
        - name: name
          id: 0
        flags: 9
        description: description
        type: 7
        checkRange: true
        minValue: 3
        isOverridden: true
        isEnabled: true
        name: name
        id: 2
        value: value
    SnapConfigOverrideResp:
      title: SnapConfigOverrideResp
      type: object
      properties:
        assocType:
          type: integer
          description: "Association type, at subclient level it is 9, at client level\
            \ it is 8, at copy level it is 6 and by default at array level it is 3"
          format: int64
        clientId:
          type: integer
          description: Client Id
          format: int64
        subclientId:
          type: integer
          description: Subclient id
          format: int64
        copyId:
          type: integer
          description: snap copy id
          format: int64
        snapConfigurations:
          type: array
          description: Snap Config options that can be overridden
          items:
            $ref: "#/components/schemas/SnapConfigsOverride"
      description: Response template for Snap Config
      example:
        copyId: 5
        subclientId: 1
        clientId: 6
        assocType: 0
        snapConfigurations:
        - masterConfigId: 5
          maxValue: 2
          values:
          - name: name
            id: 0
          - name: name
            id: 0
          flags: 9
          description: description
          type: 7
          checkRange: true
          minValue: 3
          isOverridden: true
          isEnabled: true
          name: name
          id: 2
          value: value
        - masterConfigId: 5
          maxValue: 2
          values:
          - name: name
            id: 0
          - name: name
            id: 0
          flags: 9
          description: description
          type: 7
          checkRange: true
          minValue: 3
          isOverridden: true
          isEnabled: true
          name: name
          id: 2
          value: value
    IntelliSnapClientsList:
      title: IntelliSnapClientsList
      type: object
      properties:
        snapClients:
          type: array
          items:
            $ref: "#/components/schemas/IntelliSnapClients"
      description: Response template to get IntelliSnap enabled Clients
      example:
        snapClients:
        - enableIntelliSnap: true
          client:
            name: name
            id: 0
        - enableIntelliSnap: true
          client:
            name: name
            id: 0
    IntelliSnapClients:
      title: IntelliSnapClients
      type: object
      properties:
        enableIntelliSnap:
          type: boolean
          description: Whether IntelliSnap is enabled or not for the client
          default: true
        client:
          $ref: "#/components/schemas/IdName"
      description: Response template to get IntelliSnap enabled Clients
      example:
        enableIntelliSnap: true
        client:
          name: name
          id: 0
    IntelliSnapSubclients:
      title: IntelliSnapSubclients
      type: object
      properties:
        enableIntelliSnap:
          type: boolean
          description: Whether IntelliSnap is enabled or not
          default: true
        client:
          $ref: "#/components/schemas/IdName"
        backupset:
          $ref: "#/components/schemas/IdName"
        subclient:
          $ref: "#/components/schemas/IdName"
      description: Response Template to get IntelliSnap enabled Subclients
      example:
        subclient: null
        enableIntelliSnap: true
        client:
          name: name
          id: 0
        backupset: null
    ArchFileType:
      title: ArchFileType
      type: string
      description: Job Archive File type
      enum:
      - DATA
      - INDEX
      - ARCHIVE_FILE
      - LOG
      - JOB_METADATA
      - NA
    MountPathJobInfo:
      title: MountPathJobInfo
      type: object
      properties:
        jobId:
          type: integer
          description: The system-generated ID assigned to the job.
          format: int64
        jobStatus:
          $ref: "#/components/schemas/JobStatus"
        clientName:
          type: string
          description: The name of the client associated with the job.
        appName:
          type: string
          description: The name of application
        instanceName:
          type: string
          description: The name of the instance associated with the job.
        backupSetName:
          type: string
          description: The name of the backup set associated with the job.
        subclientName:
          type: string
          description: The name of the subclient associated with the job.
        backupLevel:
          type: string
          description: The level of the backup job
        cyclesNSeq:
          type: string
          description: Cycles and Sequences
        archFileType:
          $ref: "#/components/schemas/ArchFileType"
        dataStatus:
          type: string
          description: Status of the data of job
        backupTime:
          type: integer
          description: The time when backup is done
          format: int64
        retainTill:
          type: integer
          description: Retention DateTime for job
          format: int64
        mediaSideName:
          type: string
          description: Media Side Name
        archFileName:
          type: string
          description: Archive File Name
        storagePolicyNCopy:
          type: string
          description: Storage Policy and Copy Name
        dataWritten:
          type: integer
          description: Amount of data written on mountpath during job
          format: int64
        sizeOfBackup:
          type: integer
          description: The amount of application data that was protected during the
            job
          format: int64
        sizeOfApplication:
          type: integer
          description: The amount of application data that was protected during the
            job.
          format: int64
        isAged:
          type: boolean
          description: Indicates if job is aged or not.
        isValidData:
          type: boolean
          description: Indicates if job has valid Data
      description: Mountpath job information
      example:
        sizeOfApplication: 3
        retainTill: 2
        jobStatus: NEVER_BACKED_UP
        sizeOfBackup: 9
        clientName: clientName
        instanceName: instanceName
        appName: appName
        archFileName: archFileName
        backupSetName: backupSetName
        backupLevel: backupLevel
        dataStatus: dataStatus
        mediaSideName: mediaSideName
        dataWritten: 7
        isAged: true
        jobId: 5
        archFileType: DATA
        storagePolicyNCopy: storagePolicyNCopy
        isValidData: true
        cyclesNSeq: cyclesNSeq
        backupTime: 5
        subclientName: subclientName
    GetMountPathContentResp:
      title: GetMountPathContentResp
      type: object
      properties:
        mountpathName:
          type: string
          description: Name of mountpath
        totalSizeOnMedia:
          type: integer
          description: "Total size of the data stored on the mountpath. This is the\
            \ size of the data after deduplication and compression, if employed. This\
            \ amount also includes metadata information, so in some cases, it could\
            \ be larger than the actual size of the backed up data."
          format: int64
        totalDataWritten:
          type: integer
          description: Total amount of data written on mountpath
          format: int64
        isRequiredByAuxiliaryCopy:
          type: boolean
          description: This indicates if any of the jobs on this mountpath is required
            for auxiliary copy.
        retainDataUntil:
          type: integer
          description: Maximum DateTime upto which the jobs on this mountpath is retained
          format: int64
        isSingleInstanced:
          type: boolean
          description: Indicates if mountpath has any DDB references
        hasSubclientLogCacheDump:
          type: boolean
          description: Indicates if mountpath has any subclient lLog cache dump
        jobInfoList:
          type: array
          description: Jobs on mountpath
          items:
            $ref: "#/components/schemas/MountPathJobInfo"
      example:
        retainDataUntil: 1
        totalDataWritten: 6
        jobInfoList:
        - sizeOfApplication: 3
          retainTill: 2
          jobStatus: NEVER_BACKED_UP
          sizeOfBackup: 9
          clientName: clientName
          instanceName: instanceName
          appName: appName
          archFileName: archFileName
          backupSetName: backupSetName
          backupLevel: backupLevel
          dataStatus: dataStatus
          mediaSideName: mediaSideName
          dataWritten: 7
          isAged: true
          jobId: 5
          archFileType: DATA
          storagePolicyNCopy: storagePolicyNCopy
          isValidData: true
          cyclesNSeq: cyclesNSeq
          backupTime: 5
          subclientName: subclientName
        - sizeOfApplication: 3
          retainTill: 2
          jobStatus: NEVER_BACKED_UP
          sizeOfBackup: 9
          clientName: clientName
          instanceName: instanceName
          appName: appName
          archFileName: archFileName
          backupSetName: backupSetName
          backupLevel: backupLevel
          dataStatus: dataStatus
          mediaSideName: mediaSideName
          dataWritten: 7
          isAged: true
          jobId: 5
          archFileType: DATA
          storagePolicyNCopy: storagePolicyNCopy
          isValidData: true
          cyclesNSeq: cyclesNSeq
          backupTime: 5
          subclientName: subclientName
        hasSubclientLogCacheDump: true
        totalSizeOnMedia: 0
        isRequiredByAuxiliaryCopy: true
        isSingleInstanced: true
        mountpathName: mountpathName
    SnapConfigsOverrideEdit:
      title: SnapConfigsOverrideEdit
      required:
      - flags
      - isOverridden
      - masterConfigId
      - name
      - type
      type: object
      properties:
        masterConfigId:
          type: integer
          description: "This is the masterConfigId, which is available for each vendors\
            \ configs"
          format: int32
        id:
          type: integer
          description: This is the id of the config which is required during config
            override
          format: int32
        name:
          type: string
          description: This is the name of the config which is displayed on the Command
            Center Console
        type:
          type: integer
          description: "Type of the config value. type can accept 7 values [1,2,8,10,12,13,14],\
            \ 1: boolean, 2: integer, 8: text, 10: array[string] are common configs,\
            \ the rest three are special keys, 12 is for password type key for NetApp\
            \ E-Series and HPE Nimble, 13 is Private Key for GCP, 14 is a hidden config\
            \ to select type of Disk for GCP"
          format: int32
          enum:
          - 1
          - 2
          - 8
          - 10
          - 12
          - 13
          - 14
        value:
          type: string
          description: Value of the config
        values:
          type: array
          description: "Holds a single value for types except 10, for 10 it holds\
            \ one or more values. For HPE 3PAR StoreServ, pass MA Id in name field\
            \ to configure that MA as remote snap MA."
          items:
            $ref: "#/components/schemas/IdName"
        flags:
          type: integer
          description: Flag regarding placement of config in the CC page
          format: int32
        isUpdated:
          type: boolean
          description: Whether the config is updated or not
        isOverridden:
          type: boolean
          description: whether the config is overridden or not
      description: Array config template for editing overridden Snap Configs
    SnapConfigOverrideEditReq:
      title: SnapConfigOverrideEditReq
      type: object
      properties:
        snapConfigurations:
          type: array
          items:
            $ref: "#/components/schemas/SnapConfigsOverrideEdit"
      description: Request Template to edit Snap Config
    SnapVolumes:
      title: SnapVolumes
      required:
      - smVolumeId
      type: object
      properties:
        smVolumeId:
          type: integer
          description: smVolumeId of the snap
          format: int32
        commCellId:
          type: integer
          description: Commcell Id of the setup
          format: int32
          default: 2
      description: An object containing smVolumeId of snaps and commcell id of the
        setup
    SnapNodeReq:
      title: SnapNodeReq
      type: object
      properties:
        volume:
          type: array
          description: Array of volumes to include for the operation
          items:
            $ref: "#/components/schemas/SnapVolumes"
        mountVolumeIds:
          type: array
          description: Volume Ids of the Snaps to include for multi node unmount or
            instant clone delete
          items:
            type: integer
            format: int32
      description: Request template for multi node unmount and instant clone delete
    VMGuestCredentials:
      title: VMGuestCredentials
      type: object
      properties:
        userName:
          type: string
        password:
          type: string
      example:
        password: password
        userName: userName
    GetSetWindowsMSSQLPatchingMsg:
      title: GetSetWindowsMSSQLPatchingMsg
      type: object
      properties:
        option:
          type: integer
          format: int32
        clientId:
          type: integer
          format: int32
        MSSQLPatching:
          type: integer
          format: int32
        WindowsPatching:
          type: integer
          format: int32
        UnixOSPatching:
          type: integer
          format: int32
        HyperScaleOSPatching:
          type: integer
          format: int32
        HSXStorageUpdatesPatching:
          type: integer
          format: int32
        DiagsInCSCache:
          type: integer
          format: int32
        EligibleForMSSQLPatching:
          type: integer
          format: int32
        EligibleForWindowsOSPatching:
          type: integer
          format: int32
      description: Response message for install job options
      example:
        HyperScaleOSPatching: 2
        clientId: 6
        EligibleForWindowsOSPatching: 2
        EligibleForMSSQLPatching: 3
        MSSQLPatching: 1
        WindowsPatching: 5
        HSXStorageUpdatesPatching: 7
        DiagsInCSCache: 9
        UnixOSPatching: 5
        option: 0
    VMExistingCredential:
      title: VMExistingCredential
      type: object
      properties:
        credentialId:
          type: integer
          format: int32
        credentialName:
          type: string
      example:
        credentialId: 1
        credentialName: credentialName
    SnapForceReq:
      title: snapForceReq
      type: object
      properties:
        volumes:
          type: array
          items:
            $ref: "#/components/schemas/SnapVolumes"
    ObjectStorageAsset:
      title: ObjectStorageAsset
      required:
      - accessNode
      - credentials
      - hostURL
      - storageName
      - storageType
      type: object
      properties:
        storageName:
          type: string
          description: Name of the object storage
        hostURL:
          type: string
          description: Service account URL
        credentials:
          $ref: "#/components/schemas/IdName"
        accessNode:
          $ref: "#/components/schemas/IdName"
        storageType:
          $ref: "#/components/schemas/ObjectStorageAssetType"
    ObjectStorageAssetType:
      title: ObjectStorageAssetType
      type: string
      enum:
      - AMAZON_S3
      - AZURE_BLOB
      - GOOGLE_CLOUD
    CreateExchangeClient:
      title: CreateExchangeClient
      required:
      - azureApp
      - name
      - serverPlan
      type: object
      properties:
        name:
          type: string
          description: Unique Exchange app name
        serverPlan:
          $ref: "#/components/schemas/IdName"
        azureApp:
          $ref: "#/components/schemas/Office365ConnectionsSettings"
      description: Request Message for exchange app creation
    CreateOnedriveClient:
      title: CreateOnedriveClient
      required:
      - azureApp
      - name
      - serverPlan
      type: object
      properties:
        name:
          type: string
          description: Unique Onedrive app name
        serverPlan:
          $ref: "#/components/schemas/IdName"
        azureApp:
          $ref: "#/components/schemas/Office365ConnectionsSettings"
      description: Request Message for onedrive app creation
    CreateTeamsClient:
      title: CreateTeamsClient
      required:
      - azureApp
      - name
      - serverPlan
      type: object
      properties:
        name:
          type: string
          description: Unique Teams app name
        serverPlan:
          $ref: "#/components/schemas/IdName"
        azureApp:
          $ref: "#/components/schemas/TeamsConnectionsSettings"
      description: Request Message for teams app creation
    CreateDynamics365Client:
      title: CreateDynamics365Client
      required:
      - azureApp
      - name
      - serverPlan
      type: object
      properties:
        name:
          type: string
          description: Unique Dynamics365 app name
        serverPlan:
          $ref: "#/components/schemas/IdName"
        azureApp:
          $ref: "#/components/schemas/Dynamics365ConnectionsSettings"
      description: Request Message for Dynamics365 app creation
    CreateAzureADClient:
      title: CreateAzureADClient
      required:
      - azureApp
      - name
      - serverPlan
      type: object
      properties:
        name:
          type: string
          description: Unique Azure AD app name
        serverPlan:
          $ref: "#/components/schemas/IdName"
        azureApp:
          $ref: "#/components/schemas/Office365ConnectionsSettings"
      description: Request Message for Azure active directory app creation
    CreateSharepointClient:
      title: CreateSharepointClient
      required:
      - azureApp
      - name
      - serverPlan
      - tenantAdminSiteURL
      type: object
      properties:
        name:
          type: string
          description: Unique Sharepoint app name
        serverPlan:
          $ref: "#/components/schemas/IdName"
        tenantAdminSiteURL:
          type: string
          description: SharePoint Online tenant admin site URL
        azureApp:
          $ref: "#/components/schemas/Office365ConnectionsSettings"
      description: Request Message for sharepoint app creation
    AzureAdApp:
      required:
      - applicationId
      - applicationSecret
      type: object
      properties:
        applicationId:
          type: string
          description: Azure Application ID
        applicationSecret:
          type: string
          description: "Azure app secret key, needs to be base64 encoded"
        certificatePassword:
          type: string
          description: Password of the azure application certificate and must be in
            base64 encoded format. Only applicable for SharePoint Online
        certificate:
          type: string
          description: "Content of the azure application certificate file and must\
            \ be in base64 encoded format. Accepted fileTypes are pfx, p12. Only applicable\
            \ for SharePoint Online"
        certificateThumbprint:
          type: string
          description: Thumbprint of the azure application certificate file. Only
            applicable for SharePoint Online
      description: ""
    AzureAdAppToken:
      title: AzureAdAppToken
      type: object
      allOf:
      - $ref: "#/components/schemas/AzureAdApp"
      - type: object
        properties:
          refreshToken:
            type: string
            description: User based refresh token generated with corresponding app
              credentials. Can be left blank if the azure app is protected API approved.
    Office365ConnectionsSettings:
      title: Office365ConnectionsSettings
      type: object
      allOf:
      - $ref: "#/components/schemas/AzureAdApp"
      - required:
        - azureDirectoryId
        type: object
        properties:
          azureDirectoryId:
            type: string
            description: Azure directory (tenant) ID
    TeamsConnectionsSettings:
      title: TeamsConnectionsSettings
      type: object
      allOf:
      - $ref: "#/components/schemas/AzureAdAppToken"
      - required:
        - azureDirectoryId
        type: object
        properties:
          azureDirectoryId:
            type: string
            description: Azure directory (tenant) ID
    Dynamics365ConnectionsSettings:
      title: Dynamics365ConnectionsSettings
      type: object
      allOf:
      - $ref: "#/components/schemas/AzureAdAppToken"
      - required:
        - azureDirectoryId
        type: object
        properties:
          azureDirectoryId:
            type: string
            description: Azure directory (tenant) ID
    ExchangeContentReq:
      title: ExchangeContentReq
      required:
      - office365plan
      - type
      type: object
      properties:
        type:
          type: string
          default: ALL_MAILBOXES
          enum:
          - ALL_MAILBOXES
          - ALL_PUBLIC_FOLDERS
          - ALL_GROUP_MAILBOXES
          - AD_GROUP
        group:
          $ref: "#/components/schemas/NameGUID"
        office365plan:
          $ref: "#/components/schemas/IdName"
      description: Request Message to add content to exchange app
    OnedriveContentReq:
      title: OnedriveContentReq
      required:
      - office365plan
      - type
      type: object
      properties:
        type:
          type: string
          default: ALL_USERS
          enum:
          - ALL_USERS
          - GROUP
        group:
          $ref: "#/components/schemas/NameGUID"
        office365plan:
          $ref: "#/components/schemas/IdName"
      description: Request Message to add content to onedrive app
    SharepointContentReq:
      title: SharepointContentReq
      required:
      - office365plan
      - type
      type: object
      properties:
        type:
          type: string
          default: ALL_WEB_SITES
          enum:
          - ALL_WEB_SITES
          - ALL_TEAMS_SITES
          - ALL_PROJECT_ONLINE_SITES
        office365plan:
          $ref: "#/components/schemas/IdName"
      description: Request Message to add content to sharepoint app
    TeamsContentReq:
      title: TeamsContentReq
      required:
      - office365plan
      - type
      type: object
      properties:
        type:
          type: string
          default: ALL_TEAMS
          enum:
          - ALL_TEAMS
          - ALL_USERS
          - GROUP
        group:
          $ref: "#/components/schemas/NameGUID"
        office365plan:
          $ref: "#/components/schemas/IdName"
      description: Request Message to add content to teams app
    Dynamics365ContentReq:
      title: Dynamics365ContentReq
      required:
      - dynamics365plan
      - type
      type: object
      properties:
        type:
          type: string
          default: ALL_ENVIRONMENTS
          enum:
          - ALL_ENVIRONMENTS
        dynamics365plan:
          $ref: "#/components/schemas/IdName"
      description: Request Message to add content to dynamics 365 app
    Office365SLASummary:
      title: Office365SLASummary
      type: object
      properties:
        totalEntities:
          type: integer
          format: int64
        slaNotMetEntities:
          type: integer
          format: int64
        neverBackedupEntities:
          type: integer
          format: int64
        recentlyAddedEntities:
          type: integer
          format: int64
        recentlyAddedSLANotMetEntities:
          type: integer
          format: int64
        slaMetPercentage:
          type: float
        slaNotMetProcessedAtleastOncePercentage:
          type: float
        neverBackedupPercentage:
          type: float
      example:
        slaNotMetEntities: 5
        neverBackedupPercentage: ""
        neverBackedupEntities: 2
        slaNotMetProcessedAtleastOncePercentage: ""
        totalEntities: 5
        recentlyAddedSLANotMetEntities: 9
        slaMetPercentage: ""
        recentlyAddedEntities: 7
    ActiveDirectoryClient:
      title: ActiveDirectoryClient
      type: object
      properties:
        appTypeId:
          type: integer
          description: "Azure Active Directory (139), Granular Active Directory (41)\
            \ or File Server (33)"
          format: int32
        subclient:
          $ref: "#/components/schemas/IdName"
        backupset:
          $ref: "#/components/schemas/IdName"
        client:
          $ref: "#/components/schemas/IdNameDisplayName"
        plan:
          $ref: "#/components/schemas/IdName"
        company:
          $ref: "#/components/schemas/IdNameFullName"
        slaStatus:
          $ref: "#/components/schemas/SLAStatus"
        domainURL:
          type: string
        applicationSize:
          type: integer
          format: int64
        numberOfItems:
          type: integer
          format: int32
        isConfigured:
          type: boolean
        isDisabledClient:
          type: boolean
        userAccount:
          $ref: "#/components/schemas/IdName"
        lastBackup:
          $ref: "#/components/schemas/LastBackupJobInfoWithLastSuccessfulBackup"
        slaSummary:
          $ref: "#/components/schemas/Office365SLASummary"
      example:
        isConfigured: true
        backupset: null
        isDisabledClient: true
        domainURL: domainURL
        slaStatus: MET_SLA
        lastBackup:
          jobId: 1
          failureReason: failureReason
          time: 5
          lastSuccessfulBackup: 5
          status: NEVER_BACKED_UP
        slaSummary:
          slaNotMetEntities: 5
          neverBackedupPercentage: ""
          neverBackedupEntities: 2
          slaNotMetProcessedAtleastOncePercentage: ""
          totalEntities: 5
          recentlyAddedSLANotMetEntities: 9
          slaMetPercentage: ""
          recentlyAddedEntities: 7
        appTypeId: 0
        subclient:
          name: name
          id: 0
        numberOfItems: 1
        userAccount: null
        client:
          displayName: displayName
          name: name
          id: 2
        applicationSize: 6
        company:
          name: name
          fullName: fullName
          id: 0
        plan: null
    ActiveDirectoryClientsV2Resp:
      title: ActiveDirectoryClientsV2Resp
      type: object
      properties:
        error:
          $ref: "#/components/schemas/GenericResp"
        adClients:
          type: array
          nullable: true
          items:
            $ref: "#/components/schemas/ActiveDirectoryClient"
        totalADClients:
          type: integer
          format: int32
      example:
        adClients:
        - isConfigured: true
          backupset: null
          isDisabledClient: true
          domainURL: domainURL
          slaStatus: MET_SLA
          lastBackup:
            jobId: 1
            failureReason: failureReason
            time: 5
            lastSuccessfulBackup: 5
            status: NEVER_BACKED_UP
          slaSummary:
            slaNotMetEntities: 5
            neverBackedupPercentage: ""
            neverBackedupEntities: 2
            slaNotMetProcessedAtleastOncePercentage: ""
            totalEntities: 5
            recentlyAddedSLANotMetEntities: 9
            slaMetPercentage: ""
            recentlyAddedEntities: 7
          appTypeId: 0
          subclient:
            name: name
            id: 0
          numberOfItems: 1
          userAccount: null
          client:
            displayName: displayName
            name: name
            id: 2
          applicationSize: 6
          company:
            name: name
            fullName: fullName
            id: 0
          plan: null
        - isConfigured: true
          backupset: null
          isDisabledClient: true
          domainURL: domainURL
          slaStatus: MET_SLA
          lastBackup:
            jobId: 1
            failureReason: failureReason
            time: 5
            lastSuccessfulBackup: 5
            status: NEVER_BACKED_UP
          slaSummary:
            slaNotMetEntities: 5
            neverBackedupPercentage: ""
            neverBackedupEntities: 2
            slaNotMetProcessedAtleastOncePercentage: ""
            totalEntities: 5
            recentlyAddedSLANotMetEntities: 9
            slaMetPercentage: ""
            recentlyAddedEntities: 7
          appTypeId: 0
          subclient:
            name: name
            id: 0
          numberOfItems: 1
          userAccount: null
          client:
            displayName: displayName
            name: name
            id: 2
          applicationSize: 6
          company:
            name: name
            fullName: fullName
            id: 0
          plan: null
        totalADClients: 3
        error:
          errorMessage: errorMessage
          errorCode: 0
    RetireClientRequest:
      title: RetireClientRequest
      type: object
      properties:
        retireClient:
          type: boolean
        packages:
          type: array
          items:
            $ref: "#/components/schemas/IdName"
    RetireClientResponse:
      title: RetireClientResponse
      type: object
      properties:
        jobId:
          type: integer
          format: int32
        error:
          $ref: "#/components/schemas/GenericResp"
      example:
        jobId: 0
        error:
          errorMessage: errorMessage
          errorCode: 0
    AccessNodeDeployment:
      title: AccessNodeDeployment
      required:
      - network
      - userCredentials
      - vCenter
      - vmLocation
      - vmName
      type: object
      properties:
        name:
          type: string
          description: "Client name for vm, if not provided it will be same as vmName"
        hostName:
          type: string
          description: "Host name for vm, if not provided it will be same as vmName"
        os:
          type: string
          enum:
          - Windows
          - Linux
        deploymentType:
          type: integer
          description: "0: Access node deployment, 1: File recovery enabler for linux\
            \ deployment"
          format: int32
          default: 0
          enum:
          - 0
          - 1
        commCell:
          $ref: "#/components/schemas/CommCellNameHostName"
        vmName:
          type: string
        userCredentials:
          $ref: "#/components/schemas/userCredentials"
        vCenter:
          type: string
          description: vCenter server instance
        vmLocation:
          $ref: "#/components/schemas/vmLocation"
        hardDiskType:
          type: integer
          description: "1: Thin Provision, 2: Thick provision lazy zeroed, 3: Thick\
            \ provision eager zeroed"
          format: int32
          default: 2
          enum:
          - 1
          - 2
          - 3
        network:
          $ref: "#/components/schemas/NetworkDetails"
        clientGroup:
          type: string
        notifyUserOnJobCompletion:
          type: boolean
          default: false
        automaticOSUpdates:
          type: boolean
          default: false
        timezone:
          type: string
          description: Linux OS qualified timezones
          default: America/New_York
    CommCellNameHostName:
      title: CommCellNameHostName
      type: object
      properties:
        name:
          type: string
          description: CommServer name
        hostName:
          type: string
          description: CommServer host name
    userCredentials:
      title: UserCredentials
      required:
      - password
      - userName
      type: object
      properties:
        userName:
          type: string
        password:
          type: string
    vmLocation:
      title: VMLocation
      required:
      - dataCenterName
      - datastore
      - host
      type: object
      properties:
        inventoryPath:
          type: string
          description: "Folder path where you can locate vm, empty if Datacenter is\
            \ selected for location. Default is set to Datacenter"
        dataCenterName:
          type: string
        host:
          type: string
          description: If ESX-Host for resource the host moref or If ESX-Cluster then
            cluster moref and if resource pool is used for resource then first go
            for host moref then cluster moref
        resourcePool:
          type: string
          description: Resource Pool moref if resource pool is selected for resource
        cluster:
          type: string
          description: ESX-Cluster moref if cluster is selected for resource
        datastore:
          type: string
          description: If cluster is selected for storage then moref of datastore
            cluster else dataStoreName
    NetworkDetails:
      title: NetworkDetails
      required:
      - name
      type: object
      properties:
        name:
          type: string
          description: Destination network name
        useDHCP:
          type: string
          description: "If useDHCP is False then make sure to provide staticIP, netmask,\
            \ gateway"
          default: "True"
          enum:
          - "True"
          - "False"
        staticIP:
          type: string
        netmask:
          type: string
        gateway:
          type: string
        dnsSearch:
          type: string
        nameservers:
          maxItems: 2
          minItems: 2
          type: array
          items:
            type: string
    ReplicationGroupAdvancedOptions:
      type: object
      properties:
        delayBetweenPriorityMachines:
          minimum: 0
          type: integer
          description: The delay between machines in different priorities. Mention
            in minutes
          format: int32
          default: 2
        continueOnFailure:
          type: boolean
          description: Set to true to continue to the next priority machines on failure.
          default: false
        script:
          $ref: "#/components/schemas/ReplicationGroupScript"
      description: The advanced option for replication group
    ReplicationGroupScript:
      type: object
      properties:
        preFailover:
          $ref: "#/components/schemas/DROperationScript"
        postFailover:
          $ref: "#/components/schemas/DROperationScript"
        preFailback:
          $ref: "#/components/schemas/DROperationScript"
        postFailback:
          $ref: "#/components/schemas/DROperationScript"
      description: Pre/post failover and failback scripts at group level
      example:
        preFailover: null
        postFailover: null
        preFailback: null
        postFailback: null
    JobOperationOnCopyResp:
      title: JobOperationOnCopyResp
      type: object
      properties:
        dependentJobsExist:
          type: boolean
          description: Whether dependent jobs were found
        archiverJobsExist:
          type: boolean
          description: Whether archiver jobs were found
        jobInfo:
          type: array
          description: List of jobs being run due to specified job operation
          items:
            $ref: "#/components/schemas/JobDetailForStorage"
        error:
          $ref: "#/components/schemas/GenericResp"
      example:
        archiverJobsExist: true
        error:
          errorMessage: errorMessage
          errorCode: 0
        dependentJobsExist: true
        jobInfo:
        - sizeOfApplication: 1
          server:
            name: name
            id: 0
          retentionReason: retentionReason
          agentType: null
          instance: null
          backupSet: null
          description: description
          strRetainedBy: No Data Available
          snapCatalogStatus: Not Applicable
          dataWritten: 2
          duration: 3
          avgThroughput: 7.0614014
          dataVerificationStatus: 2
          startTime: 6
          isSoftAged: true
          jobType: jobType
          strDataVerificationStatus: Not Picked
          requiredByJobs: requiredByJobs
          jobAttributesEx: 1
          subClient: null
          retentionCode: retentionCode
          savingPercentage: 5.637377
          isAged: true
          jobId: 0
          deduplicated: true
          retainUntil: 5
          encrypted: true
          statusId: 1
          hardwareEncrypted: true
          copiedTime: 4
          parentJobId: 7
          lastVerifiedOn: lastVerifiedOn
          retainedBy: 1
          endTime: 9
          region: null
          status: status
          username: username
          estMediaSize: 6
        - sizeOfApplication: 1
          server:
            name: name
            id: 0
          retentionReason: retentionReason
          agentType: null
          instance: null
          backupSet: null
          description: description
          strRetainedBy: No Data Available
          snapCatalogStatus: Not Applicable
          dataWritten: 2
          duration: 3
          avgThroughput: 7.0614014
          dataVerificationStatus: 2
          startTime: 6
          isSoftAged: true
          jobType: jobType
          strDataVerificationStatus: Not Picked
          requiredByJobs: requiredByJobs
          jobAttributesEx: 1
          subClient: null
          retentionCode: retentionCode
          savingPercentage: 5.637377
          isAged: true
          jobId: 0
          deduplicated: true
          retainUntil: 5
          encrypted: true
          statusId: 1
          hardwareEncrypted: true
          copiedTime: 4
          parentJobId: 7
          lastVerifiedOn: lastVerifiedOn
          retainedBy: 1
          endTime: 9
          region: null
          status: status
          username: username
          estMediaSize: 6
    JobOperationType:
      type: string
      enum:
      - DELETE
      - RETAIN
      - DO_NOT_RETAIN
      - DISALLOW_COPY
      - DISALLOW_COPY_ALL
      - ALLOW_COPY
      - RECOPY
    JobOperationOnCopyReq:
      title: JobOperationOnCopyReq
      required:
      - commcellId
      - copyId
      - jobIds
      - opType
      - storagePolicyId
      type: object
      properties:
        storagePolicyId:
          type: integer
          description: ID for chosen storage policy
          format: int32
        copyId:
          type: integer
          description: ID for chosen copy
          format: int32
        opType:
          $ref: "#/components/schemas/JobOperationType"
        jobIds:
          type: array
          description: Comma separated Job IDs to run job operation on
          format: int32
          items:
            type: integer
            format: int32
        commcellId:
          type: integer
          description: ID for chosen commcell
          format: int32
        retainUntilTime:
          type: integer
          description: Job will be retained till specified time. The time is provided
            in unix time format.
          format: int64
        loadDependentJobs:
          type: boolean
          description: Defines whether dependent jobs need to be computed.
          default: false
        loadArchiverJobs:
          type: boolean
          description: Defines whether archiver jobs need to be computed.
          default: false
    DataSourceType:
      title: DataSourceType
      type: string
      enum:
      - NONE
      - JDBC
      - WEB
      - EXE
      - CSV
      - FILE
      - NAS
      - ELOQUA
      - SALESFORCE
      - LDAP
      - FEDERATED
      - BLANK
      - HTTP
      - CAMEL
      - FACEBOOK
      - FLA
      - EDGE
      - EXCHANGE
      - REVIEWSET
      - TWITTER
      - COMPLIANCEAUDIT
      - FSINDEX
      - NFS
      - CLOUDORACLE
      - SYSTEMDEFAULT
      - DOWNLOADCENTERAUDIT
      - VM
      - ONEDRIVE
      - SHAREPOINT
      - EMAIL
      - DBANALYSIS
      - CLOUDPAAS
      - GOOGLEDRIVE
      - GMAIL
      - ACTIVEDIRECTORY
      - ONEDRIVEINDEX
      - MULTINODEFEDERATED
      - DYNAMIC365
      - IDXLOGS
      - TEAMS
      - CLOUDSTORAGE
      x-stoplight:
        id: 5rxx51vvj3h2q
    InventoryAssociatedDatasource:
      title: InventoryAssociatedDatasource
      type: object
      properties:
        id:
          minimum: 0
          type: integer
          format: int32
        name:
          type: string
        type:
          $ref: "#/components/schemas/DataSourceType"
        plan:
          $ref: "#/components/schemas/IdName"
        application:
          $ref: "#/components/schemas/ActivateApplication"
      example:
        application: NONE
        name: name
        id: 0
        type: NONE
        plan:
          name: name
          id: 0
      x-stoplight:
        id: ij6y2evo02j07
    InventoryAssociatedDatasourceList:
      title: InventoryAssociatedDatasourceList
      type: object
      properties:
        dataSources:
          type: array
          items:
            $ref: "#/components/schemas/InventoryAssociatedDatasource"
      description: List of data sources associated to the inventory
      example:
        dataSources:
        - application: NONE
          name: name
          id: 0
          type: NONE
          plan:
            name: name
            id: 0
        - application: NONE
          name: name
          id: 0
          type: NONE
          plan:
            name: name
            id: 0
      x-stoplight:
        id: vwkeeh852x1ws
    PlanSubType:
      type: string
      format: ""
      enum:
      - ExchangeUser
      - Office365
    Office365PlanTier:
      type: string
      format: ""
      enum:
      - STANDARD
      - ENTERPRISE
      - SYNTEX
    Office365PlanSummary:
      type: object
      properties:
        plan:
          $ref: "#/components/schemas/IdName"
        planTier:
          $ref: "#/components/schemas/Office365PlanTier"
        planSubType:
          $ref: "#/components/schemas/PlanSubType"
        contentIndexingEnabled:
          type: boolean
          description: Tells if Content Indexing is enabled on this plan
        mailboxes:
          type: integer
          description: Number of mailboxes assocaited with this plan
          format: int32
        users:
          type: integer
          description: Number of users assocaited with this plan
          format: int32
        sites:
          type: integer
          description: Number of sites assocaited with this plan
          format: int32
        teams:
          type: integer
          description: Number of teams assocaited with this plan
          format: int32
        totalEntities:
          type: integer
          description: Count of total associated entities for the Office 365 plan
          format: int32
        company:
          $ref: "#/components/schemas/CompanySummary"
      example:
        contentIndexingEnabled: true
        planSubType: ExchangeUser
        teams: 5
        mailboxes: 0
        sites: 1
        company:
          associatedEntitiesCount: 6
          operators:
          - role: null
            fullName: fullName
            userGroup: null
            user: null
          - role: null
            fullName: fullName
            userGroup: null
            user: null
          name: name
          GUID: GUID
          commcell:
            displayName: displayName
            name: name
          alias: alias
          primaryContacts:
          - name: name
            id: 0
          - name: name
            id: 0
          id: 0
          isReseller: true
          status: UNKNOWN
        planTier: STANDARD
        plan:
          name: name
          id: 0
        totalEntities: 5
        users: 6
    Office365PlanSummaryListResp:
      type: object
      properties:
        error:
          $ref: "#/components/schemas/GenericResp"
        o365Plans:
          type: array
          nullable: true
          items:
            $ref: "#/components/schemas/Office365PlanSummary"
        totalO365Plans:
          type: integer
          description: Total number of Office365 plans returned
          format: int32
      example:
        o365Plans:
        - contentIndexingEnabled: true
          planSubType: ExchangeUser
          teams: 5
          mailboxes: 0
          sites: 1
          company:
            associatedEntitiesCount: 6
            operators:
            - role: null
              fullName: fullName
              userGroup: null
              user: null
            - role: null
              fullName: fullName
              userGroup: null
              user: null
            name: name
            GUID: GUID
            commcell:
              displayName: displayName
              name: name
            alias: alias
            primaryContacts:
            - name: name
              id: 0
            - name: name
              id: 0
            id: 0
            isReseller: true
            status: UNKNOWN
          planTier: STANDARD
          plan:
            name: name
            id: 0
          totalEntities: 5
          users: 6
        - contentIndexingEnabled: true
          planSubType: ExchangeUser
          teams: 5
          mailboxes: 0
          sites: 1
          company:
            associatedEntitiesCount: 6
            operators:
            - role: null
              fullName: fullName
              userGroup: null
              user: null
            - role: null
              fullName: fullName
              userGroup: null
              user: null
            name: name
            GUID: GUID
            commcell:
              displayName: displayName
              name: name
            alias: alias
            primaryContacts:
            - name: name
              id: 0
            - name: name
              id: 0
            id: 0
            isReseller: true
            status: UNKNOWN
          planTier: STANDARD
          plan:
            name: name
            id: 0
          totalEntities: 5
          users: 6
        totalO365Plans: 2
        error:
          errorMessage: errorMessage
          errorCode: 0
    RetireServerGroupResp:
      title: RetireServerGroupResp
      type: object
      properties:
        jobId:
          type: integer
          format: int64
        error:
          $ref: "#/components/schemas/GenericRespWithWarning"
      example:
        jobId: 0
        error:
          warningCode: 6
          errorMessage: errorMessage
          errorCode: 0
          warningMessage: warningMessage
    RetireServersRequest:
      title: RetireServersRequest
      type: object
      properties:
        servers:
          type: array
          items:
            $ref: "#/components/schemas/IdName"
    RetireServersResponse:
      title: RetireServersResponse
      type: object
      properties:
        jobId:
          type: integer
          format: int64
        error:
          $ref: "#/components/schemas/GenericRespWithWarning"
      description: Retire servers response
      example:
        jobId: 0
        error:
          warningCode: 6
          errorMessage: errorMessage
          errorCode: 0
          warningMessage: warningMessage
    DDBDiskInfo:
      title: DDBDiskInfo
      type: object
      properties:
        diskId:
          type: integer
          description: Id of the DDB disk
          format: int32
        diskPath:
          type: string
          description: File path of the DDB disk
        clientInfo:
          $ref: "#/components/schemas/IdName"
        partitionList:
          type: array
          description: List of DDB partitions hosted on this disk
          items:
            $ref: "#/components/schemas/DDBSubStoreInfo"
        numOfPartitions:
          type: integer
          description: Number of DDB partitions hosted on this disk
          format: int32
        status:
          type: string
          description: Satus of the disk
          enum:
          - OFFLINE
          - ONLINE
        consumedSpaceMB:
          type: integer
          description: Amount of space consumed by the DDB partitions hosted on this
            disk
          format: int64
        freeSpaceMB:
          type: integer
          description: Available usable free space on the disk path
          format: int64
        totalSpaceMB:
          type: integer
          description: Total space capacity of the disk path
          format: int64
      description: DDB disk information of a MediaAgent
      example:
        totalSpaceMB: 1
        diskPath: diskPath
        clientInfo:
          name: name
          id: 0
        diskId: 5
        consumedSpaceMB: 4
        numOfPartitions: 2
        freeSpaceMB: 7
        partitionList:
        - isSealed: true
          storeName: storeName
          subStoreId: 5
          storeId: 2
          moveStatusCode: 9
          lastFailedMoveJobId: 3
          estimatedSubstoreSizeInMB: 7
          moveStatusMsg: moveStatusMsg
        - isSealed: true
          storeName: storeName
          subStoreId: 5
          storeId: 2
          moveStatusCode: 9
          lastFailedMoveJobId: 3
          estimatedSubstoreSizeInMB: 7
          moveStatusMsg: moveStatusMsg
        status: OFFLINE
    DDBSubStoreInfo:
      title: DDBSubStoreInfo
      type: object
      properties:
        subStoreId:
          type: integer
          description: Id of the DDB substore
          format: int32
        storeId:
          type: integer
          description: Id of the DDB store
          format: int32
        storeName:
          type: string
          description: Name of the DDB store
        estimatedSubstoreSizeInMB:
          type: integer
          description: Estimated size in MBs occupied by the substore
          format: int64
        moveStatusCode:
          type: integer
          description: Status code for the move partition attempt on this substore
          format: int64
        moveStatusMsg:
          type: string
          description: Status message for the move partition attempt on this substore
        isSealed:
          type: boolean
          description: Specify whether the substore is sealed or not
        lastFailedMoveJobId:
          type: integer
          description: JobId of the last failed move job for this substore
          format: int64
      example:
        isSealed: true
        storeName: storeName
        subStoreId: 5
        storeId: 2
        moveStatusCode: 9
        lastFailedMoveJobId: 3
        estimatedSubstoreSizeInMB: 7
        moveStatusMsg: moveStatusMsg
    MADDBDiskMgmtResp:
      title: MADDBDiskMgmtResp
      type: object
      properties:
        mediaAgentInfo:
          $ref: "#/components/schemas/MediaAgentForDDBSummary"
        disks:
          type: array
          items:
            $ref: "#/components/schemas/DDBDiskInfo"
        error:
          $ref: "#/components/schemas/GenericResp"
      description: Response for DDB disk management operation request on MediaAgent
      example:
        mediaAgentInfo:
          isConfigured: true
          DDBDisks:
          - totalSpaceMB: 1
            diskPath: diskPath
            clientInfo:
              name: name
              id: 0
            diskId: 5
            consumedSpaceMB: 4
            numOfPartitions: 2
            freeSpaceMB: 7
            partitionList:
            - isSealed: true
              storeName: storeName
              subStoreId: 5
              storeId: 2
              moveStatusCode: 9
              lastFailedMoveJobId: 3
              estimatedSubstoreSizeInMB: 7
              moveStatusMsg: moveStatusMsg
            - isSealed: true
              storeName: storeName
              subStoreId: 5
              storeId: 2
              moveStatusCode: 9
              lastFailedMoveJobId: 3
              estimatedSubstoreSizeInMB: 7
              moveStatusMsg: moveStatusMsg
            status: OFFLINE
          - totalSpaceMB: 1
            diskPath: diskPath
            clientInfo:
              name: name
              id: 0
            diskId: 5
            consumedSpaceMB: 4
            numOfPartitions: 2
            freeSpaceMB: 7
            partitionList:
            - isSealed: true
              storeName: storeName
              subStoreId: 5
              storeId: 2
              moveStatusCode: 9
              lastFailedMoveJobId: 3
              estimatedSubstoreSizeInMB: 7
              moveStatusMsg: moveStatusMsg
            - isSealed: true
              storeName: storeName
              subStoreId: 5
              storeId: 2
              moveStatusCode: 9
              lastFailedMoveJobId: 3
              estimatedSubstoreSizeInMB: 7
              moveStatusMsg: moveStatusMsg
            status: OFFLINE
          releaseId: 6
          displayName: displayName
          OSType: OSType
          isDDBSubclientConfigured: true
          name: name
          id: 0
          SIMOSId: 1
        disks:
        - totalSpaceMB: 1
          diskPath: diskPath
          clientInfo:
            name: name
            id: 0
          diskId: 5
          consumedSpaceMB: 4
          numOfPartitions: 2
          freeSpaceMB: 7
          partitionList:
          - isSealed: true
            storeName: storeName
            subStoreId: 5
            storeId: 2
            moveStatusCode: 9
            lastFailedMoveJobId: 3
            estimatedSubstoreSizeInMB: 7
            moveStatusMsg: moveStatusMsg
          - isSealed: true
            storeName: storeName
            subStoreId: 5
            storeId: 2
            moveStatusCode: 9
            lastFailedMoveJobId: 3
            estimatedSubstoreSizeInMB: 7
            moveStatusMsg: moveStatusMsg
          status: OFFLINE
        - totalSpaceMB: 1
          diskPath: diskPath
          clientInfo:
            name: name
            id: 0
          diskId: 5
          consumedSpaceMB: 4
          numOfPartitions: 2
          freeSpaceMB: 7
          partitionList:
          - isSealed: true
            storeName: storeName
            subStoreId: 5
            storeId: 2
            moveStatusCode: 9
            lastFailedMoveJobId: 3
            estimatedSubstoreSizeInMB: 7
            moveStatusMsg: moveStatusMsg
          - isSealed: true
            storeName: storeName
            subStoreId: 5
            storeId: 2
            moveStatusCode: 9
            lastFailedMoveJobId: 3
            estimatedSubstoreSizeInMB: 7
            moveStatusMsg: moveStatusMsg
          status: OFFLINE
        error:
          errorMessage: errorMessage
          errorCode: 0
    MADDBDiskMgmtReq:
      title: MADDBDiskMgmtReq
      required:
      - opType
      type: object
      properties:
        disks:
          type: array
          items:
            $ref: "#/components/schemas/DDBDiskInfo"
        opType:
          type: string
          description: Type of operation to be performed on the input disks
          enum:
          - ADD
          - DELETE
          - MOVE
          - MOVE_CONFIG_ONLY
        targetMAId:
          type: integer
          description: Id of the target MediaAgent for Move DDB disk operation
          format: int32
        targetPath:
          type: string
          description: Target path for Move DDB disk operation
        targetDiskId:
          type: integer
          description: Id of the target DDB disk for Move DDB disk operation
          format: int32
      description: Request to perform DDB disk management operations on MediaAgent
    VSAApplicationDetails:
      title: VSAApplicationDetails
      type: object
      properties:
        subclientId:
          type: integer
          description: subclient id associated to snapshot
          format: int32
        clientId:
          type: integer
          description: hypervisor Id of hypervisor where user is mounting snapshot
          format: int32
        instanceId:
          type: integer
          description: instance id of the instance to which subclient is associated
          format: int32
        apptypeId:
          type: integer
          description: apptype id or agent type
          format: int32
      description: Application details for mount request.
    VSAServerDetails:
      title: VSAServerDetails
      type: object
      properties:
        serverType:
          type: integer
          description: type of server
          format: int32
        serverName:
          type: string
          description: server name
      description: server details for mount request
    ClientInfoForRetire:
      title: ClientInfoForRetire
      type: object
      properties:
        client:
          $ref: "#/components/schemas/IdName"
        associatedPseudoClientNames:
          type: string
        isMediaAgentInUse:
          type: boolean
        error:
          $ref: "#/components/schemas/GenericRespWithWarning"
      description: Client information for retire
      example:
        isMediaAgentInUse: true
        client:
          name: name
          id: 0
        error:
          warningCode: 6
          errorMessage: errorMessage
          errorCode: 0
          warningMessage: warningMessage
        associatedPseudoClientNames: associatedPseudoClientNames
    CreateDCPlan:
      title: CreateDCPlan
      type: object
      properties:
        name:
          type: string
          description: Name of Data Classification Plan
        threatAnalysis:
          type: boolean
          description: Enables\Disables Threat Analysis support for DC Plan
          format: int32
        application:
          $ref: "#/components/schemas/PlanTargetApp"
        indexServer:
          $ref: "#/components/schemas/IdName"
        contentAnalyzer:
          type: array
          description: Content Analyzer Id`s for Entity Detection
          items:
            $ref: "#/components/schemas/IdName"
        contentIndexing:
          $ref: "#/components/schemas/DCPlanCIpolicy"
        entityDetection:
          $ref: "#/components/schemas/DCPlanEEPolicy"
        schedule:
          $ref: "#/components/schemas/DCPlanJobSchedule"
      description: Create Data Classification Plan Request Model
    DCPlanCIpolicy:
      title: DCPlanCIPolicy
      type: object
      properties:
        extractTextFromImage:
          type: boolean
          description: Enable OCR in Data Classification Plan
        exactSearch:
          type: boolean
          description: Enable Exact Seach in Data Classification Plan
        copyPrecedence:
          type: integer
          description: Set Content Indexing Copy Precedence
          format: int32
        searchType:
          $ref: "#/components/schemas/ContentIndexingOperationType"
        contentLanguage:
          $ref: "#/components/schemas/DCPlanOCRLanguage"
        fileFilters:
          $ref: "#/components/schemas/DCPlanCIFileFilters"
        backupCopy:
          type: array
          items:
            $ref: "#/components/schemas/DCBackupCopy"
      description: Create Content Indexing Policy Model for DC Plan
    DCPlanCIFileFilters:
      title: DCPlanCIFileFilters
      type: object
      properties:
        includeDocTypes:
          type: string
        excludePaths:
          type: array
          items:
            type: string
        minDocSize:
          type: integer
          format: int32
        maxDocSize:
          maximum: 500
          type: integer
          format: int32
    DCPlanEEPolicy:
      title: DCPlanEEPolicy
      type: object
      properties:
        entities:
          type: array
          description: Entity TagId for Extraction
          items:
            $ref: "#/components/schemas/IdName"
        classifiers:
          type: array
          description: Classifier TagId For Extraction
          items:
            $ref: "#/components/schemas/IdName"
        copyPrecendence:
          type: integer
          format: int32
      description: Entity Extraction Model for Data Classification Plan
      example:
        entities:
        - null
        - null
        classifiers:
        - null
        - null
        copyPrecendence: 6
    DCPlanJobSchedule:
      title: DCPlanJobSchedule
      type: object
      properties:
        name:
          type: string
        pattern:
          $ref: "#/components/schemas/ContentIndexingFrequencyPattern"
      description: Describes the Schedule object for Data Classification Plan
      example:
        name: name
        pattern: ""
    DCPlanOCRLanguage:
      title: DCPlanOCRLanguage
      type: string
      description: OCR Languages Supported By DC Plan
      enum:
      - NONE
      - ENGLISH
      - HEBREW
      - SPANISH
      - FRENCH
      - ITALIAN
      - DANISH
    DCBackupCopy:
      title: DCBackupCopy
      type: object
      properties:
        copyId:
          type: integer
          format: int32
        storagePoolId:
          type: integer
          format: int32
      description: Backup Copy Info For Content Indexing
    DCPlanDetails:
      title: DCPlanDetails
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        threatAnalysis:
          type: boolean
          description: Whether Threat Analysis is enabled for plan
        targetApplication:
          $ref: "#/components/schemas/PlanTargetApp"
        contentAnalyzer:
          type: array
          description: Content Analyzer details for Data Classification plan
          items:
            $ref: "#/components/schemas/IdName"
        indexServer:
          $ref: "#/components/schemas/IdName"
        entityDetection:
          $ref: "#/components/schemas/DCPlanEEPolicy"
        contentIndexing:
          $ref: "#/components/schemas/GetDCPlanCIPolicy"
        permissions:
          type: array
          items:
            $ref: "#/components/schemas/IdName"
        associatedEntities:
          type: array
          items:
            $ref: "#/components/schemas/IdNameCount"
        schedule:
          $ref: "#/components/schemas/DCPlanJobSchedule"
      description: 'Describes the Data Classification Plan response object '
      example:
        associatedEntities:
        - name: name
          count: 4
          id: 1
        - name: name
          count: 4
          id: 1
        schedule:
          name: name
          pattern: ""
        targetApplication: NOT_AVAILABLE
        contentIndexing: ""
        indexServer: null
        threatAnalysis: true
        permissions:
        - null
        - null
        name: name
        entityDetection:
          entities:
          - null
          - null
          classifiers:
          - null
          - null
          copyPrecendence: 6
        contentAnalyzer:
        - name: name
          id: 0
        - name: name
          id: 0
        id: 0
    DCPlanContentIndexingDetails:
      title: DCPlanContentIndexingDetails
      type: object
      properties:
        exactSearch:
          type: boolean
          description: Whether Exact Search is enabled or disabled
        extractTextFromImage:
          type: boolean
          description: Whether Image Extraction is Enabled
        contentLanguage:
          $ref: "#/components/schemas/DCPlanOCRLanguage"
        searchType:
          $ref: "#/components/schemas/ContentIndexingOperationType"
        previewPath:
          type: string
          description: Describes the Preview path for Content Indexed Data when search
            type is METADATA_CONTENT_PREVIEW
        domainName:
          type: string
          description: Associated Domain of user having access to preview path
        userName:
          type: string
          description: Associated user name of user having access to preview path
      description: Describes the Content Indexing attributes related to a Data Classification
        Plan
    ContentIndexingOperationType:
      title: ContentIndexingOperationType
      type: string
      description: Describes the Content Indexing Operation Type for Data Classification
        Plan
      enum:
      - METADATA
      - METADATA_CONTENT
      - METADATA_CONTENT_PREVIEW
    UpdateDCPlan:
      title: UpdateDCPlan
      type: object
      properties:
        name:
          type: string
          description: Name of the Data Classification plan
        contentAnalyzer:
          type: array
          items:
            $ref: "#/components/schemas/IdName"
        threatAnalysis:
          type: boolean
          description: Enables\Disables Threat Analysis support for DC Plan
          format: int32
        entityDetection:
          $ref: "#/components/schemas/DCPlanEEPolicy"
        contentIndexing:
          $ref: "#/components/schemas/UpdateDCPlanCI"
        schedule:
          $ref: "#/components/schemas/DCPlanJobSchedule"
      description: Describes Input to Update Data Classification Plan
    UpdateDCPlanCI:
      description: Update Content Indexing Policy Model for DC Plan
      allOf:
      - type: object
        properties:
          fileFilters:
            $ref: "#/components/schemas/DCPlanCIFileFilters"
          backupCopy:
            type: array
            items:
              $ref: "#/components/schemas/DCBackupCopy"
      - $ref: "#/components/schemas/DCPlanContentIndexingDetails"
    GetDCPlanCIPolicy:
      description: Fetch Content Indexing Policy Model for DC Plan
      allOf:
      - type: object
        properties:
          fileFilters:
            $ref: "#/components/schemas/DCPlanCIFileFilters"
          backupCopy:
            type: array
            items:
              $ref: "#/components/schemas/DCBackupCopyDetail"
      - $ref: "#/components/schemas/DCPlanContentIndexingDetails"
    DCBackupCopyDetail:
      title: DCBackupCopyDetail
      type: object
      properties:
        copyId:
          type: integer
          description: Copy Id of Copy used for Content Indexing Job
          format: int32
          default: 0
        copyName:
          type: string
          description: Copy Name of Copy used for Content Indexing
        storagePoolId:
          type: integer
          description: Storage Pool Id of Storage Pool Used for Content Indexing
          format: int32
          default: 0
        storagePoolName:
          type: string
          description: Storage Pool Name of Storage Pool Used for Content Indexing
        copyRetentionPeriod:
          type: integer
          description: Rentention Period of Copy
          format: int32
          default: 0
        storagePoolType:
          $ref: "#/components/schemas/StoragePoolType"
        planId:
          type: integer
          format: int32
          default: 0
        planType:
          $ref: "#/components/schemas/PlanType"
        storageType:
          $ref: "#/components/schemas/StorageType"
        storageSubType:
          $ref: "#/components/schemas/StorageSubType"
      description: Backup Copy Details For Content Indexing
    KubernetesServiceTypes:
      title: KubernetesServiceTypes
      type: string
      description: The Service Type of the Kubernetes cluster
      default: ONPREM
      enum:
      - ONPREM
      - AKS
    KubernetesSLADetails:
      title: Kubernetes SLA Details
      type: object
      properties:
        status:
          $ref: "#/components/schemas/SLAStatus"
        reason:
          type: string
      description: SLA Details for a Kubernetes entity
    KubernetesClusterItem:
      type: object
      properties:
        id:
          type: integer
          description: ID of the Kubernetes cluster
          format: int32
        name:
          type: string
          description: Name of the Kubernetes cluster
          format: ""
        displayName:
          type: string
          description: Display name of the Kubernetes cluster
          format: ""
        configured:
          type: boolean
          description: Denotes if the cluster is configured for backups or retired
        version:
          type: string
          description: Kubernetes cluster version
          format: ""
        instance:
          $ref: "#/components/schemas/IdName"
        tags:
          type: array
          items:
            $ref: "#/components/schemas/IdNameValue"
        company:
          $ref: "#/components/schemas/companyInfo"
        commcell:
          $ref: "#/components/schemas/CommcellInfo"
      example:
        configured: true
        instance:
          name: name
          id: 0
        displayName: displayName
        name: name
        commcell:
          name: name
        company:
          name: name
          multiCommcellId: 5
          id: 1
        id: 6
        version: version
        tags:
        - name: name
          id: 5
          value: value
        - name: name
          id: 5
          value: value
    KubernetesApplicationGroupItem:
      type: object
      properties:
        id:
          type: integer
          description: ID of the Kubernetes Application group
          format: int32
        name:
          type: string
          description: Name of the Kubernetes Application Group
          format: ""
        isDefaultApplicationGroup:
          type: boolean
          description: Specifies whether the Application Group is a default Application
            Group
        snapBackupEnabled:
          type: boolean
          description: Specifies if snap backup is enabled
        cluster:
          $ref: "#/components/schemas/IdNameDisplayName"
        plan:
          $ref: "#/components/schemas/IdName"
        company:
          $ref: "#/components/schemas/companyInfo"
        tags:
          type: array
          description: List of Tags associated to the Kubernetes Application Group
          items:
            $ref: "#/components/schemas/IdNameValue"
        instance:
          $ref: "#/components/schemas/IdName"
        lastBackup:
          $ref: "#/components/schemas/lastBackup"
      description: Details of a Kubernetes Application Group
      example:
        snapBackupEnabled: true
        cluster:
          displayName: displayName
          name: name
          id: 2
        lastBackup:
          jobId: 1
          lastSuccessfulBackupTime: 5
          failureReason: failureReason
          time: 6
          status: NEVER_BACKED_UP
        isDefaultApplicationGroup: true
        instance: null
        name: name
        company:
          name: name
          multiCommcellId: 5
          id: 1
        id: 6
        plan:
          name: name
          id: 0
        tags:
        - name: name
          id: 5
          value: value
        - name: name
          id: 5
          value: value
    KubernetesApplicationItem:
      description: Details of a Kubernetes Applications
      allOf:
      - $ref: "#/components/schemas/NameGUID"
      - properties:
          nameSpace:
            type: string
            description: Specifies the Namespace of the Application
            format: ""
          kind:
            type: string
            description: Specifies the resource Kind of the Application
            format: ""
          applicationGroup:
            $ref: "#/components/schemas/IdName"
          backupset:
            $ref: "#/components/schemas/IdName"
          commcell:
            $ref: "#/components/schemas/IdName"
          cluster:
            $ref: "#/components/schemas/IdName"
          plan:
            $ref: "#/components/schemas/IdName"
          instance:
            $ref: "#/components/schemas/IdName"
          usedSize:
            type: integer
            description: Describes the Total used space of all volumes of the Application
            format: int32
          provisionedSize:
            type: integer
            description: Describes the Total provisioned size of the volumes of the
              Application
            format: int32
          applicationSize:
            type: integer
            description: Describes the application size of the Application
            format: int32
          lastBackup:
            $ref: "#/components/schemas/lastBackup"
          company:
            $ref: "#/components/schemas/IdName"
          tags:
            type: array
            description: List of Tags associated to the Kubernetes Application
            items:
              $ref: "#/components/schemas/IdNameValue"
          SLA:
            $ref: "#/components/schemas/KubernetesSLADetails"
    KubernetesContentApplications:
      title: Kubernetes Application Content
      required:
      - GUID
      - type
      type: object
      properties:
        GUID:
          type: string
          description: GUID value of the Kubernetes Application to be associated as
            content
          format: ""
        type:
          type: string
          description: Type of the Kubernetes application
          format: ""
          enum:
          - NAMESPACE
          - APPLICATION
          - PVC
          - LABELS
        name:
          type: string
          description: Name of the application
          format: ""
      description: Describes the application content for Application Group
    KubernetesContentSelectors:
      title: Kubernetes Selector Content
      required:
      - selectorLevel
      - selectorValue
      type: object
      properties:
        selectorValue:
          type: string
          description: Value of the label selector in key=value format
          format: ""
        selectorLevel:
          type: string
          description: Selector level of the label selector
          format: ""
          enum:
          - Application
          - Volumes
          - Namespace
      description: Describes the label selector content for the Application Group
    KubernetesApplicationGroupContentItem:
      title: Kubernetes Application Group Content Item
      type: object
      properties:
        applications:
          type: array
          description: List of applications to be added as content
          items:
            $ref: "#/components/schemas/KubernetesContentApplications"
          x-terraform-computed: false
        labelSelectors:
          type: array
          description: List of label selectors to be added as content
          items:
            $ref: "#/components/schemas/KubernetesContentSelectors"
          x-terraform-computed: false
      description: Item to describe the applications and label selectors
    KubernetesApplicationGroupFilterItem:
      title: Kubernetes Application Group Filter Item
      type: object
      description: Item to describe the applications and label selectors for filters
      allOf:
      - properties:
          skipStatelessApps:
            type: boolean
            description: Specify whether to skip backup of stateless applications
            default: false
      - $ref: "#/components/schemas/KubernetesApplicationGroupContentItem"
    KubernetesApplicationGroupContent:
      title: Kubernetes Application Group Content
      type: object
      description: Item describing the content for Application Group
      allOf:
      - properties:
          overwrite:
            type: boolean
            description: Specifies whether content has to be overwritten or appended
            default: false
            x-terraform-constant: true
      - $ref: "#/components/schemas/KubernetesApplicationGroupContentItem"
    KubernetesApplicationGroupFilters:
      title: Kubernetes Application Group Filter
      allOf:
      - properties:
          overwrite:
            type: boolean
            description: Specifies whether content has to be overwritten or appended
            default: false
            x-terraform-constant: true
      - $ref: "#/components/schemas/KubernetesApplicationGroupFilterItem"
    KubernetesClusterCredentials:
      title: Kubernetes Cluster Credentials
      type: object
      properties:
        apiServer:
          type: string
          description: API Server Endpoint of the cluster
          format: ""
        serviceAccount:
          type: string
          description: Name of the Service Account to authenticate with the cluster
          format: ""
        serviceToken:
          type: string
          description: Secret token to authenticate with the cluster
          format: ""
      description: Credentials of a Kubernetes cluster
    KubernetesAccessNodes:
      title: Kubernetes Access Nodes
      type: object
      properties:
        accessNodes:
          type: array
          items:
            $ref: "#/components/schemas/IdNameType"
      description: List of Access Nodes
    KubernetesClusterBrowseItem:
      title: Kubernetes Cluster Browse Item
      description: Object to describe the browse item of a Kubernetes cluster
      allOf:
      - $ref: "#/components/schemas/NameGUID"
      - properties:
          kind:
            type: string
            description: Kind value of the discovered item
            format: ""
    ClusterDetailsCommonClientSecurity:
      title: Cluster Client Security Details
      type: object
      properties:
        owners:
          type: array
          description: List of owners associated to the cluster
          items:
            type: string
            format: ""
      description: Describe the client security details of a Kubernetes cluster
    ClusterDetailsCommonProps:
      title: Cluster Client Common Properties
      type: object
      properties:
        security:
          $ref: "#/components/schemas/ClusterDetailsCommonClientSecurity"
        associatedUserGroups:
          type: array
          items:
            $ref: "#/components/schemas/IdName"
      description: Describe the common properties of a Kubernetes cluster
    KubernetesAssociatedApplicationGroup:
      title: Associated Application Group
      type: object
      properties:
        instance:
          $ref: "#/components/schemas/IdName"
        backupset:
          $ref: "#/components/schemas/IdName"
        applicationGroup:
          $ref: "#/components/schemas/IdName"
      description: Associated Application Group of the Application
    KubernetesNextAssociatedApplicationGroup:
      title: Next Associated Application Group
      type: object
      properties:
        backupset:
          $ref: "#/components/schemas/IdName"
        applicationGroup:
          $ref: "#/components/schemas/IdName"
      description: Next associated Application Group of the Application
    KubernetesApplicationCountInfo:
      title: Application Backup Info
      type: object
      properties:
        pendingCount:
          type: integer
          description: Count of Applications Pending backup
          format: int32
        protectedCount:
          type: integer
          description: Count of Applications Protected
          format: int32
        notProtectedCount:
          type: integer
          description: Count of Applications Not Protected
          format: int32
        neverBackedUpCount:
          type: integer
          description: Count of Applications Never Backed up
          format: int32
        backupUpWithErrorCount:
          type: integer
          description: Count of Applications Backed up with errors
          format: int32
        totalCount:
          type: integer
          description: Count of total number of Applications
          format: int32
      description: Describe the Backup info for a Kubernetes Application
    KubernetesApplicationGroupCommonProps:
      title: Application Group Common Properties
      type: object
      properties:
        cluster:
          $ref: "#/components/schemas/IdNameDisplayName"
        instance:
          $ref: "#/components/schemas/IdName"
        backupset:
          $ref: "#/components/schemas/IdName"
      description: Common properties of a Kubernetes Application Group
    KubernetesApplicationGroupSummaryInfo:
      title: Application Group Summary Info
      type: object
      description: Summary of a Kubernetes Application
      allOf:
      - properties:
          nextBackupTime:
            type: integer
            format: int32
          isETCDApplicationGroup:
            type: boolean
            description: Describes if the Application Group is an ETCD Application
              Group
          isDefaultApplicationGroup:
            type: boolean
            description: Describes if the Application Group is a default Application
              Group
          plan:
            $ref: "#/components/schemas/IdName"
          timezone:
            $ref: "#/components/schemas/IdName"
          tags:
            type: array
            items:
              $ref: "#/components/schemas/IdNameValue"
          content:
            $ref: "#/components/schemas/KubernetesApplicationGroupContentItem"
          filters:
            $ref: "#/components/schemas/KubernetesApplicationGroupFilterItem"
          lastBackup:
            $ref: "#/components/schemas/LastBackupJobInfo"
          activityControl:
            $ref: "#/components/schemas/ApplicationGroupActivityControl"
          accessNodes:
            type: array
            items:
              $ref: "#/components/schemas/IdName"
          options:
            $ref: "#/components/schemas/ApplicationGroupGetOptions"
      - $ref: "#/components/schemas/KubernetesApplicationGroupCommonProps"
    CreateKubernetesClusterRequest:
      title: Create Kubernetes Cluster Request
      required:
      - accessNodes
      - apiServer
      - name
      - serviceAccount
      - serviceToken
      type: object
      description: Request definition for creating Kubernetes cluster
      allOf:
      - $ref: "#/components/schemas/KubernetesClusterCredentials"
      - $ref: "#/components/schemas/KubernetesAccessNodes"
      - properties:
          name:
            type: string
            description: Name of the Kubernetes Cluster
            format: ""
            x-terraform-setter: DisplayName
          serviceType:
            $ref: "#/components/schemas/KubernetesServiceTypes"
          etcdProtection:
            $ref: "#/components/schemas/EtcdProtectionItem"
    EditClusterActivityControlOptions:
      title: Kubernetes Cluster activity control options
      type: object
      properties:
        enableBackup:
          type: boolean
          description: Enable or disable backup for cluster
        enableRestore:
          type: boolean
          description: Enable or disable restore for cluster
        enableBackupAfterADelay:
          type: integer
          description: Enabling backup after a delay. Provide UTC Time in Unix format
          format: int32
        enableRestoreAfterADelay:
          type: integer
          description: Enabling restore after a delay. Provide UTC Time in Unix format
          format: int32
      description: Request definition changing activity control options for cluster
    EditClusterAdvancedOptionsInfo:
      title: Kubernetes Cluster Advanced Options
      type: object
      properties:
        imageRegistry:
          $ref: "#/components/schemas/ClusterImageRegistryOptions"
        configNamespace:
          type: string
          description: Specify the name of the Namespace where Commvault resources
            will be deployed
          format: ""
        jobStepWaitTime:
          $ref: "#/components/schemas/JobStepWaitTimeOptions"
      description: Request definition for cluster advanced options
    ClusterImageRegistryOptions:
      title: Kubernetes Cluster image registry options
      type: object
      properties:
        url:
          type: string
          description: Specify image registry URL for internal image repository
          format: ""
        pullSecret:
          type: string
          description: Specify image pull secret to authenticate with the image repository
          format: ""
      description: Request definition changing image registry options for cluster
    JobStepWaitTimeOptions:
      title: Kubernetes Cluster job step wait time options
      type: object
      properties:
        workerPodStartup:
          type: integer
          description: Specify wait time (in minutes) for Worker Pod to start
          format: int32
        resourceCleanup:
          type: integer
          description: Specify wait time (in minutes) for resources to be deleted
          format: int32
        snapshotReady:
          type: integer
          description: Specify wait time (in minutes) for snapshot to be Ready
          format: int32
        snapshotCleanup:
          type: integer
          description: Specify wait time (in minutes) for snapshot to be deleted
          format: int32
      description: Request definition changing job step wait time options for cluster
    UpdateKubernetesClusterRequest:
      title: Create Kubernetes Cluster Request
      type: object
      description: Request definition for creating Kubernetes cluster
      allOf:
      - $ref: "#/components/schemas/KubernetesClusterCredentials"
      - $ref: "#/components/schemas/KubernetesAccessNodes"
      - properties:
          name:
            type: string
            description: Name of the Kubernetes Cluster
            format: ""
          serviceType:
            $ref: "#/components/schemas/KubernetesServiceTypes"
          etcdProtection:
            $ref: "#/components/schemas/GetEtcdProtectionItem"
          tags:
            type: array
            description: Modify or add tags on the cluster
            items:
              $ref: "#/components/schemas/NameValue"
          region:
            $ref: "#/components/schemas/IdName"
          activityControl:
            $ref: "#/components/schemas/EditClusterActivityControlOptions"
          options:
            $ref: "#/components/schemas/EditClusterAdvancedOptionsInfo"
    CreateKubernetesClusterResponse:
      title: Create Kubernetes Cluster Response
      type: object
      properties:
        id:
          type: integer
          description: ID of the Kubernetes Cluster created
          format: int32
          x-terraform-id: true
        name:
          type: string
          description: Name of the Kubernetes Cluster
          format: ""
        etcd:
          $ref: "#/components/schemas/IdName"
      example:
        name: name
        id: 0
        etcd:
          name: name
          id: 0
    GetClusterResp:
      title: Get Kubernetes clusters
      type: object
      properties:
        clusterCount:
          type: integer
          description: Total number of clusters
          format: int32
        clusters:
          type: array
          items:
            $ref: "#/components/schemas/KubernetesClusterItem"
      description: List of all Kubernetes Clusters
      example:
        clusterCount: 0
        clusters:
        - configured: true
          instance:
            name: name
            id: 0
          displayName: displayName
          name: name
          commcell:
            name: name
          company:
            name: name
            multiCommcellId: 5
            id: 1
          id: 6
          version: version
          tags:
          - name: name
            id: 5
            value: value
          - name: name
            id: 5
            value: value
        - configured: true
          instance:
            name: name
            id: 0
          displayName: displayName
          name: name
          commcell:
            name: name
          company:
            name: name
            multiCommcellId: 5
            id: 1
          id: 6
          version: version
          tags:
          - name: name
            id: 5
            value: value
          - name: name
            id: 5
            value: value
    ClusterActivityControlOptions:
      title: Cluster Activity Control Options
      type: object
      properties:
        enableBackup:
          type: boolean
        enableRestore:
          type: boolean
      description: Activity Control Options for Kubernetes Cluster
    EtcdProtectionItem:
      title: Etcd Protection Options
      type: object
      properties:
        enabled:
          type: boolean
          description: Denote if etcd protection is enabled
        plan:
          $ref: "#/components/schemas/IdName"
      description: ETCD Protection options for a cluster
    GetEtcdProtectionItem:
      title: ETCD Protection options
      allOf:
      - $ref: "#/components/schemas/IdName"
      - $ref: "#/components/schemas/EtcdProtectionItem"
    GetClusterDetailsResp:
      title: Get Cluster Details
      description: Details of a Kubernetes Cluster
      allOf:
      - $ref: "#/components/schemas/IdNameDisplayName"
      - type: object
        properties:
          apiServer:
            type: string
            description: API Server Endpoint of the cluster
            format: ""
          version:
            type: string
            description: Kubernetes client version
            format: ""
          accessNode:
            type: array
            items:
              $ref: "#/components/schemas/IdName"
          tags:
            type: array
            items:
              $ref: "#/components/schemas/IdNameValue"
          etcdProtection:
            $ref: "#/components/schemas/GetEtcdProtectionItem"
          applicationCount:
            $ref: "#/components/schemas/KubernetesApplicationCountInfo"
          instance:
            $ref: "#/components/schemas/IdName"
          clientGroups:
            type: array
            items:
              $ref: "#/components/schemas/IdName"
          region:
            $ref: "#/components/schemas/IdName"
          commonProperties:
            $ref: "#/components/schemas/ClusterDetailsCommonProps"
          activityControl:
            $ref: "#/components/schemas/ClusterActivityControlOptions"
          options:
            $ref: "#/components/schemas/EditClusterAdvancedOptionsInfo"
          cloudStorage:
            $ref: "#/components/schemas/KubernetesCloudStorage"
    KubernetesBrowseClusterResp:
      type: object
      properties:
        items:
          type: array
          description: List of items discovered form a Kubernetes cluster browse
          items:
            $ref: "#/components/schemas/KubernetesClusterBrowseItem"
      example:
        items:
        - ""
        - ""
    GetApplicationGroupsList:
      title: Get Application Group List
      type: object
      properties:
        applicationGroupCount:
          type: integer
          format: int32
        applicationGroups:
          type: array
          items:
            $ref: "#/components/schemas/KubernetesApplicationGroupItem"
      description: List of Application Groups
      example:
        applicationGroupCount: 0
        applicationGroups:
        - snapBackupEnabled: true
          cluster:
            displayName: displayName
            name: name
            id: 2
          lastBackup:
            jobId: 1
            lastSuccessfulBackupTime: 5
            failureReason: failureReason
            time: 6
            status: NEVER_BACKED_UP
          isDefaultApplicationGroup: true
          instance: null
          name: name
          company:
            name: name
            multiCommcellId: 5
            id: 1
          id: 6
          plan:
            name: name
            id: 0
          tags:
          - name: name
            id: 5
            value: value
          - name: name
            id: 5
            value: value
        - snapBackupEnabled: true
          cluster:
            displayName: displayName
            name: name
            id: 2
          lastBackup:
            jobId: 1
            lastSuccessfulBackupTime: 5
            failureReason: failureReason
            time: 6
            status: NEVER_BACKED_UP
          isDefaultApplicationGroup: true
          instance: null
          name: name
          company:
            name: name
            multiCommcellId: 5
            id: 1
          id: 6
          plan:
            name: name
            id: 0
          tags:
          - name: name
            id: 5
            value: value
          - name: name
            id: 5
            value: value
    ApplicationGroupActivityControl:
      title: Application Group Activity Control Options
      type: object
      properties:
        enableBackup:
          type: boolean
          default: true
    ApplicationGroupWorkerResourcesOptions:
      title: Application Group Worker Pod Resources Options
      type: object
      properties:
        cpuLimits:
          type: string
          description: Define limits.cpu to set on the worker Pod
        cpuRequests:
          type: string
          description: Define requests.cpu to set on the worker Pod
        memoryLimits:
          type: string
          description: Define limits.memory to set on the worker Pod
        memoryRequests:
          type: string
          description: Define requests.memory to set on the worker Pod
    ApplicationGroupGetOptions:
      title: Application Group Backup Options
      type: object
      properties:
        backupStreams:
          type: integer
          description: Define number of parallel data readers
          format: int32
          default: 5
        jobStartTime:
          type: integer
          description: Define the backup job start time in epochs
          format: int32
        onSnapFailureFallbackToLiveVolume:
          type: boolean
          description: Define setting to enable fallback to live volume backup in
            case of snap failure
          default: false
        scheduleWorkerToConfigNamespace:
          type: boolean
          description: Define setting to enable scheduling worker Pods to CV Namespace
            for CSI-Snapshot enabled backups
          default: false
        workerResources:
          $ref: "#/components/schemas/ApplicationGroupWorkerResourcesOptions"
    ApplicationGroupRequestInputs:
      title: Application Group Request Inputs
      properties:
        name:
          type: string
          description: Specify new name to rename an Application Group
        plan:
          $ref: "#/components/schemas/IdName"
        content:
          $ref: "#/components/schemas/KubernetesApplicationGroupContent"
        filters:
          $ref: "#/components/schemas/KubernetesApplicationGroupFilters"
    UpdateApplicationGroupRequest:
      title: Update Application Group Request
      type: object
      allOf:
      - $ref: "#/components/schemas/ApplicationGroupRequestInputs"
      - properties:
          options:
            $ref: "#/components/schemas/ApplicationGroupGetOptions"
          timezone:
            $ref: "#/components/schemas/IdName"
          activityControl:
            $ref: "#/components/schemas/ApplicationGroupActivityControl"
          tags:
            type: array
            items:
              $ref: "#/components/schemas/NameValue"
    CreateApplicationGroupRequest:
      title: Create Application Group Request
      required:
      - cluster
      - content
      - name
      allOf:
      - $ref: "#/components/schemas/ApplicationGroupRequestInputs"
      - properties:
          cluster:
            $ref: "#/components/schemas/IdName"
    GetApplicationGroupDetails:
      title: Get Application Group Details
      allOf:
      - $ref: "#/components/schemas/IdName"
      - properties:
          applicationCount:
            $ref: "#/components/schemas/KubernetesApplicationCountInfo"
      - $ref: "#/components/schemas/KubernetesApplicationGroupSummaryInfo"
    KubernetesApplicationGroupPreviewReq:
      title: Application Group Preview Request
      required:
      - content
      type: object
      properties:
        content:
          $ref: "#/components/schemas/KubernetesApplicationGroupContentItem"
        filters:
          $ref: "#/components/schemas/KubernetesApplicationGroupFilterItem"
    KubernetesPreviewItem:
      title: Kubernetes Application Group Preview Item
      allOf:
      - $ref: "#/components/schemas/NameGUID"
      - properties:
          nameSpace:
            type: string
            format: ""
          type:
            type: string
            description: Application type of the content
            format: ""
    KubernetesApplicationGroupPreviewResp:
      title: Kubernetes Application Group Preview Response
      properties:
        protectedApplicationCount:
          type: integer
          format: int32
        applicationGroup:
          $ref: "#/components/schemas/IdName"
        applicationList:
          type: array
          items:
            $ref: "#/components/schemas/KubernetesPreviewItem"
      example:
        protectedApplicationCount: 0
        applicationGroup:
          name: name
          id: 0
        applicationList:
        - ""
        - ""
    GetApplicationsList:
      title: Get Applications List
      properties:
        applicationCount:
          type: integer
          format: int32
        applications:
          type: array
          items:
            $ref: "#/components/schemas/KubernetesApplicationItem"
      example:
        applicationCount: 0
        applications:
        - ""
        - ""
    ApplicationActivityControl:
      title: Kubernetes Application Activity Control Options
      properties:
        enableBackup:
          type: boolean
        enableRestore:
          type: boolean
    ApplicationSummaryInfo:
      title: Application Summary Info
      properties:
        SLA:
          $ref: "#/components/schemas/KubernetesSLADetails"
        applicationSize:
          type: integer
          description: Size of the application
          format: int32
        company:
          $ref: "#/components/schemas/IdName"
        cluster:
          $ref: "#/components/schemas/IdName"
        plan:
          $ref: "#/components/schemas/IdName"
        status:
          type: string
          description: "The status of the backup for the VM, instance, or  container."
          enum:
          - PROTECTED
          - NOT_PROTECTED
          - PENDING
          - BACKED_UP_WITH_ERROR
          - DISCOVERED
        applicationGroup:
          $ref: "#/components/schemas/IdName"
        provisionedSize:
          type: integer
          description: Provisioned size of the volumes
          format: int32
    JobIdTime:
      title: Job ID and Time
      properties:
        jobId:
          type: integer
          description: Job ID of the backup job
          format: int32
        time:
          type: integer
          description: Backup job time (in epochs)
          format: int32
      description: Job ID and Time
      example:
        jobId: 1
        time: 5
    KubernetesApplicationDetails:
      title: Kubernetes Application Details
      description: Details for a Kubernetes Application
      allOf:
      - properties:
          name:
            type: string
            description: Name of the Application
            format: ""
          GUID:
            type: string
            description: GUID of the Application
            format: ""
          activityControl:
            $ref: "#/components/schemas/ApplicationActivityControl"
      - $ref: "#/components/schemas/ApplicationSummaryInfo"
    KubernetesAppGroupBrowseNamespaceItem:
      title: Kubernetes Application Group Browse Namespace Item
      properties:
        name:
          type: string
          description: Name of the Application
          format: ""
        GUID:
          type: string
          description: GUID of the Application
          format: ""
        kind:
          type: string
          description: Kubernetes resource Kind of the Application
          format: ""
        applicationSize:
          type: integer
          description: Backup size of the Application
          format: int32
        modificationTime:
          type: integer
          description: Modification time of the Application in epochs
          format: int32
        path:
          type: string
          description: Browse path of the Application
          format: ""
        backupJob:
          $ref: "#/components/schemas/JobIdTime"
      description: Details for individual namespace item of for Kubernetes Application
        Group
      example:
        path: path
        backupJob:
          jobId: 1
          time: 5
        kind: kind
        modificationTime: 6
        name: name
        GUID: GUID
        applicationSize: 0
    KubernetesAppGroupBrowseApplicationItem:
      title: Kubernetes Application Group Browse Item
      description: Details for individual item of browse response for Kubernetes Application
        Group
      allOf:
      - $ref: "#/components/schemas/KubernetesAppGroupBrowseNamespaceItem"
      - properties:
          nameSpace:
            type: string
            description: Namespace name of the Application
            format: ""
    KubernetesAppGroupNamespaceBrowseResp:
      title: Kubernetes Application Group Namespace Browse Response
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/KubernetesAppGroupBrowseNamespaceItem"
      description: Details for Namespace browse response for Kubernetes Application
        Group
      example:
        items:
        - path: path
          backupJob:
            jobId: 1
            time: 5
          kind: kind
          modificationTime: 6
          name: name
          GUID: GUID
          applicationSize: 0
        - path: path
          backupJob:
            jobId: 1
            time: 5
          kind: kind
          modificationTime: 6
          name: name
          GUID: GUID
          applicationSize: 0
    KubernetesAppGroupApplicationBrowseResp:
      title: Kubernetes Application Group Application Browse Response
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/KubernetesAppGroupBrowseApplicationItem"
      description: Details for Application browse response for Kubernetes Application
        Group
      example:
        items:
        - ""
        - ""
    KubernetesNamespaceRestoreItem:
      title: Kubernetes Namespace Restore Item
      required:
      - GUID
      description: Structure describing each namespace item for restore
      allOf:
      - $ref: "#/components/schemas/NameGUID"
    KubernetesApplicationRestoreItem:
      title: Kubernetes Namespace Restore Item
      required:
      - GUID
      description: Structure describing each namespace item for restore
      allOf:
      - $ref: "#/components/schemas/NameGUID"
      - properties:
          nameSpace:
            type: string
            description: Specify destination namespace of the Application (Picks the
              source namespace if not specified)
            format: ""
            example: simple-depl-rst
          storageClass:
            type: string
            description: Specify destination storage class to use for restoring PVC
              (Picks the source storage class if not specified)
            format: ""
            example: azure-csi-disk
    KubernetesAppGroupAppAndNamespaceItem:
      title: Kubernetes Application Group Namespace and App Item
      properties:
        inPlace:
          type: boolean
          description: Run In-Place restore job
        destinationCluster:
          $ref: "#/components/schemas/IdName"
        accessNode:
          $ref: "#/components/schemas/IdName"
        overwrite:
          type: boolean
          description: Overwrite if already present
          default: false
        timeRange:
          $ref: "#/components/schemas/TimeRange"
        modifier:
          type: string
          description: Specify list of resource modifier YAML as a string
          format: ""
          example: "apiVersion: v1\\r\\nkind: List\\r\\nitems:\\r\\n  - apiVersion:\
            \ k8s.cv.io\\/v1\\r\\n    kind: RestoreModifier\\r\\n    metadata:\\r\\\
            n      name: test-mod\\r\\n      namespace: cv-config\\r\\n    spec:\\\
            r\\n      modifiers:\\r\\n        - action: Add\\r\\n          parameters:\
            \ Exact\\r\\n          path: \\/new\\r\\n          selectorId: 9fb3a4a2-0f03-4dc0-93d4-4eabffe31b35\\\
            r\\n          value: value\\r\\n      selectors:\\r\\n        - id: 9fb3a4a2-0f03-4dc0-93d4-4eabffe31b35\\\
            r\\n          name: Pod\\r\\n\\r\\n"
      description: Kubernetes Application Group Namespace and App Item
    KubernetesAppGroupNamespaceRestore:
      title: Kubernetes Application Group Namespace-Level Restore Request
      description: Request body for Namespace-Level Restore of Application Group
      allOf:
      - properties:
          restoreApplications:
            type: boolean
            description: Restore Applications of the Namespace
            default: true
          namespaces:
            type: array
            items:
              $ref: "#/components/schemas/KubernetesNamespaceRestoreItem"
      - $ref: "#/components/schemas/KubernetesAppGroupAppAndNamespaceItem"
      x-examples:
        CrossClusterOverwrite:
          inPlace: false
          destinationCluster:
            id: 5
            name: restore-cluster
          accessNode:
            id: 2
            name: bastion01
          restoreApplications: true
          namespaces:
          - name: simple-depl-rst
            GUID: simple-depl`Namespace`simple-depl`85f12c05-ecfb-4045-9bf5-7a70816d3e3d
          overwrite: true
          modifier: "apiVersion: v1\\r\\nkind: List\\r\\nitems:\\r\\n  - apiVersion:\
            \ k8s.cv.io\\/v1\\r\\n    kind: RestoreModifier\\r\\n    metadata:\\r\\\
            n      name: test-mod\\r\\n      namespace: cv-config\\r\\n    spec:\\\
            r\\n      modifiers:\\r\\n        - action: Add\\r\\n          parameters:\
            \ Exact\\r\\n          path: \\/new\\r\\n          selectorId: 9fb3a4a2-0f03-4dc0-93d4-4eabffe31b35\\\
            r\\n          value: value\\r\\n      selectors:\\r\\n        - id: 9fb3a4a2-0f03-4dc0-93d4-4eabffe31b35\\\
            r\\n          name: Pod\\r\\n\\r\\n"
    KubernetesAppGroupApplicationRestore:
      title: Kubernetes Application Group Full Application Restore Request
      description: Request body for Full Application Restore of Application Group
      allOf:
      - properties:
          applications:
            type: array
            items:
              $ref: "#/components/schemas/KubernetesApplicationRestoreItem"
      - $ref: "#/components/schemas/KubernetesAppGroupAppAndNamespaceItem"
      x-examples:
        CrossClusterOverwrite:
          inPlace: false
          destinationCluster:
            id: 5
            name: restore-cluster
          accessNode:
            id: 2
            name: bastion01
          applications:
          - name: my-deployment-renamed
            GUID: simple-depl`Deployment`my-deployment-same-app`26aeacdb-96f3-4e93-9118-07c1345ea133
            storageClass: rook-cephfs
            nameSpace: simple-depl-rst
          overwrite: true
          modifier: "apiVersion: v1\\r\\nkind: List\\r\\nitems:\\r\\n  - apiVersion:\
            \ k8s.cv.io\\/v1\\r\\n    kind: RestoreModifier\\r\\n    metadata:\\r\\\
            n      name: test-mod\\r\\n      namespace: cv-config\\r\\n    spec:\\\
            r\\n      modifiers:\\r\\n        - action: Add\\r\\n          parameters:\
            \ Exact\\r\\n          path: \\/new\\r\\n          selectorId: 9fb3a4a2-0f03-4dc0-93d4-4eabffe31b35\\\
            r\\n          value: value\\r\\n      selectors:\\r\\n        - id: 9fb3a4a2-0f03-4dc0-93d4-4eabffe31b35\\\
            r\\n          name: Pod\\r\\n\\r\\n"
    VirtualLabIPSettings:
      title: VirtualLabIPSettings
      type: object
      properties:
        networkName:
          type: string
        ipAddressRange:
          type: string
        subnetMask:
          type: string
        defaultGatewayIP:
          type: string
      description: IP settings containing mappings of IP address range to the destination
        network
      example:
        ipAddressRange: ipAddressRange
        networkName: networkName
        subnetMask: subnetMask
        defaultGatewayIP: defaultGatewayIP
    StorageSubType:
      title: StorageSubType
      type: string
      enum:
      - ALL
      - IBMi_VTL
      - ALL_EXCEPT_IBMi_VTL
      - METALLIC
      - METALLIC_CLOUD_STORAGE
      - ALL_INCLUDING_METALLIC_CLOUD_STORAGE
      - ALL_EXCEPT_METALLIC_CLOUD_STORAGE
    ServiceMeshClientProperties:
      title: ServiceMeshClientProperties
      type: object
      properties:
        kubeAPIURL:
          type: string
          description: Kubernetes API server URL
        serviceDomainName:
          type: string
          description: Domain of services deployed in the kubernetes cluster.
        adminPortalURL:
          type: string
          description: Admin Portal URL to access the service mesh configuration details.
        ingressBaseURL:
          type: string
          description: Ingress Base URL to access or send requests to services deployed
            in the Service mesh
        vaultBaseURL:
          type: string
          description: Vault Base URL to access Hashicorp Vault UI
        serviceMeshVendor:
          type: integer
          description: Service mesh vendor type
          format: int32
    CreateServiceMeshReq:
      title: CreateServiceMeshReq
      description: Create Service mesh client request with properties payload
      allOf:
      - $ref: "#/components/schemas/ServiceMeshClientProperties"
      - properties:
          name:
            type: string
            description: Service mesh Client name
    UpdateServiceMeshReq:
      title: UpdateServiceMeshReq
      description: Update Service mesh request with properties payload
      allOf:
      - $ref: "#/components/schemas/ServiceMeshClientProperties"
      - properties:
          name:
            type: string
            description: Service Mesh Client name
    AlertRuleQueryCreator:
      type: object
      properties:
        userName:
          type: string
          description: name of the query creator
        userId:
          type: integer
          description: unique id of the user
          format: int32
      description: details of the query creator
      example:
        userName: userName
        userId: 5
    ScriptDescriptionDetails:
      type: object
      properties:
        reportName:
          type: string
          description: name of the report
        description:
          type: string
        guid:
          type: string
          description: unique identifier for the script
      description: contains script details
      example:
        reportName: reportName
        description: description
        guid: guid
    AlertRuleAdditionalQueryDetails:
      type: object
      properties:
        querySeverity:
          type: string
          description: query severity level value
          format: ""
          default: NONE
          enum:
          - NONE
          - CRITICAL
          - WARNING
          - INFORMATION
        scriptDescription:
          $ref: "#/components/schemas/ScriptDescriptionDetails"
      description: contains additional query details
      example:
        querySeverity: NONE
        scriptDescription:
          reportName: reportName
          description: description
          guid: guid
    AlertRuleQueryEntity:
      type: object
      properties:
        queryId:
          type: integer
          description: unique id of the query
          format: int32
        queryName:
          type: string
          description: name of the query
      description: contains query details
      example:
        queryName: queryName
        queryId: 5
    AlertRuleQueryOutputColumnObject:
      type: object
      properties:
        isColumnFilterable:
          type: boolean
        lmDataType:
          type: integer
          format: int32
        isPrimaryKey:
          type: boolean
        columnFriendlyName:
          type: string
        columnName:
          type: string
      description: contains output column details
      example:
        isColumnFilterable: true
        lmDataType: 2
        isPrimaryKey: true
        columnFriendlyName: columnFriendlyName
        columnName: columnName
    AlertRuleQueryOutputColumns:
      type: array
      description: list of the output columns associated with the alert rule
      items:
        $ref: "#/components/schemas/AlertRuleQueryOutputColumnObject"
      x-schema-name: AlertRuleQueryOutputColumns
    AlertRuleAssociationsUserorGroup:
      type: object
      properties:
        userId:
          type: integer
          format: int32
        providerId:
          type: integer
          format: int32
        userName:
          type: string
        __type__:
          type: integer
          format: int32
        providerDomainName:
          type: string
    AlertRuleAssociationsObject:
      type: object
      properties: {}
      example: {}
    AlertRuleSecurityAssociations:
      title: ""
      type: object
      properties:
        associations:
          type: array
          description: contains list of security associations
          items:
            $ref: "#/components/schemas/AlertRuleAssociationsObject"
      description: contains associations
      example:
        associations:
        - {}
        - {}
    AlertRuleQueryEntityDetails:
      type: object
      properties:
        isQueryModifyEnabled:
          type: boolean
        visibility:
          type: integer
          description: whether its private or public
          format: int32
        sqlQuery:
          type: string
        doesQuerySupportOutputFilter:
          type: boolean
        frequency:
          type: integer
          format: int32
        isOverwriteAssociationAtAlertAllowed:
          type: boolean
        isSystemCreated:
          type: boolean
          description: whether its system created or not
        isPrimaryKeyPresent:
          type: boolean
          description: whether primary key is present or not
        isDisabled:
          type: boolean
          description: whether its disabled or not
        queryDescription:
          type: string
          description: brief description of the query
        queryCriteriaName:
          type: string
          description: criteria name of the query
        customAlertType:
          type: integer
          description: alert type enum value
          format: int32
        creator:
          $ref: "#/components/schemas/AlertRuleQueryCreator"
        additionalQueryDetails:
          $ref: "#/components/schemas/AlertRuleAdditionalQueryDetails"
        queryEntity:
          $ref: "#/components/schemas/AlertRuleQueryEntity"
        queryOutputColumns:
          $ref: "#/components/schemas/AlertRuleQueryOutputColumns"
        securityAssociations:
          $ref: "#/components/schemas/AlertRuleSecurityAssociations"
      description: query entity object
      example:
        isQueryModifyEnabled: true
        creator:
          userName: userName
          userId: 5
        visibility: 0
        sqlQuery: sqlQuery
        securityAssociations:
          associations:
          - {}
          - {}
        doesQuerySupportOutputFilter: true
        customAlertType: 1
        queryDescription: queryDescription
        frequency: 6
        isOverwriteAssociationAtAlertAllowed: true
        additionalQueryDetails:
          querySeverity: NONE
          scriptDescription:
            reportName: reportName
            description: description
            guid: guid
        isSystemCreated: true
        queryEntity:
          queryName: queryName
          queryId: 5
        queryOutputColumns:
        - isColumnFilterable: true
          lmDataType: 2
          isPrimaryKey: true
          columnFriendlyName: columnFriendlyName
          columnName: columnName
        - isColumnFilterable: true
          lmDataType: 2
          isPrimaryKey: true
          columnFriendlyName: columnFriendlyName
          columnName: columnName
        queryCriteriaName: queryCriteriaName
        isPrimaryKeyPresent: true
        isDisabled: true
    AlertRulesDetailsList:
      title: Alert rules list
      type: object
      properties:
        queryEntities:
          type: array
          description: list of query entities
          items:
            $ref: "#/components/schemas/AlertRuleQueryEntityDetails"
      description: list of the alert rules
      example:
        queryEntities:
        - isQueryModifyEnabled: true
          creator:
            userName: userName
            userId: 5
          visibility: 0
          sqlQuery: sqlQuery
          securityAssociations:
            associations:
            - {}
            - {}
          doesQuerySupportOutputFilter: true
          customAlertType: 1
          queryDescription: queryDescription
          frequency: 6
          isOverwriteAssociationAtAlertAllowed: true
          additionalQueryDetails:
            querySeverity: NONE
            scriptDescription:
              reportName: reportName
              description: description
              guid: guid
          isSystemCreated: true
          queryEntity:
            queryName: queryName
            queryId: 5
          queryOutputColumns:
          - isColumnFilterable: true
            lmDataType: 2
            isPrimaryKey: true
            columnFriendlyName: columnFriendlyName
            columnName: columnName
          - isColumnFilterable: true
            lmDataType: 2
            isPrimaryKey: true
            columnFriendlyName: columnFriendlyName
            columnName: columnName
          queryCriteriaName: queryCriteriaName
          isPrimaryKeyPresent: true
          isDisabled: true
        - isQueryModifyEnabled: true
          creator:
            userName: userName
            userId: 5
          visibility: 0
          sqlQuery: sqlQuery
          securityAssociations:
            associations:
            - {}
            - {}
          doesQuerySupportOutputFilter: true
          customAlertType: 1
          queryDescription: queryDescription
          frequency: 6
          isOverwriteAssociationAtAlertAllowed: true
          additionalQueryDetails:
            querySeverity: NONE
            scriptDescription:
              reportName: reportName
              description: description
              guid: guid
          isSystemCreated: true
          queryEntity:
            queryName: queryName
            queryId: 5
          queryOutputColumns:
          - isColumnFilterable: true
            lmDataType: 2
            isPrimaryKey: true
            columnFriendlyName: columnFriendlyName
            columnName: columnName
          - isColumnFilterable: true
            lmDataType: 2
            isPrimaryKey: true
            columnFriendlyName: columnFriendlyName
            columnName: columnName
          queryCriteriaName: queryCriteriaName
          isPrimaryKeyPresent: true
          isDisabled: true
    AlertRuleGenericResp:
      type: object
      properties:
        errorCode:
          type: integer
          description: error code value
          format: int32
        attributes:
          type: array
          description: list of attributes
          items:
            $ref: "#/components/schemas/NameValue"
      description: contains processing instruction information
      example:
        errorCode: 0
        attributes:
        - name: name
          value: value
        - name: name
          value: value
    AlertCategoryIdNameValue:
      allOf:
      - $ref: "#/components/schemas/AlertTypeIdName"
      - type: object
        properties:
          value:
            type: string
            enum:
            - DATA_AGING
            - AUX_COPY
            - DATA_PROT
            - DATA_RECOV
            - DATA_VERIFI
            - CLIENTS
            - MEDIA_AGENTS
            - LIB_MAN
            - DEVICE_STATUS
            - DATA_CLASSIFI
            - DEDUPDBSYNC
            - EVENT_MONITORING
            - LICENSE
            - CUSTOM_QUERY
            - USERS
            - EDGE_DRIVE
            - COMMSERV_FAILOVER
            - ADMIN_ALERT
            - REPLICATION_ALERT
        description: category utilized in alert definition creation
    AlertCriteriaIdNameValue:
      allOf:
      - $ref: "#/components/schemas/AlertCriteriaIdName"
      - type: object
        properties:
          value:
            type: string
            enum:
            - SUCCEEDED
            - FAILURE_ATTEMTS
            - FAILED
            - SKIPPED
            - DELAYED
            - MEDIA_REQUIRED
            - INITIATED
            - ROLLED_BACK
            - MEDIA_NEEDS_IMPORT
            - MEDIA_HANDLING_REQUIRED
            - MEDIA_PICKED_UP
            - MEDIA_REACHED_DESTINATION
            - MEDIA_RET_SOURCE
            - JOB_ACTIVITY
            - ASR_BACKUP_OCCURED
            - PROPERTIES_MODIFIED
            - ALERT_MODIFIED
            - DISK_SPACE_LOW
            - FORCED_DECONF
            - LIBRARY_OFFLINE
            - SCHEDULER_CHANGES
            - INSUFF_STORAGE
            - TAPE_HANDLING_ERR
            - TAPE_HANDLING_REQ
            - TAPE_MOUNT_ERR
            - MAINT_REQ
            - MAINT_OCCURED
            - USE_OVERWRITE_MEDIA
            - DRIVE_OFFLINE
            - MEDIAAGENT_OFFLINE
            - MOUNTPATH_OFFLINE
            - NW_FAILURE_ATTEMTS
            - JOURNAL_MAILBOX
            - JR_DISK_SPACE_LOW
            - IC_DISK_SPACE_LOW
            - UPDATE_REQUIRED
            - DOWNLOAD_REQUIRED
            - UPDATES_AVAILABLE
            - RELEASE_UPGRADE_REQUIRED
            - UPDATES_REQUIRED
            - MEDIA_READY_IN_CAP
            - FLR_LOG_FILE_HIGH
            - FLR_FREE_SPACE_LOG_FILE_VOL_LOW
            - FLR_NO_PLAY_ACTIVITY
            - FLR_NO_TRANSFER_ACTIVITY
            - NO_DATA_PROTECTION
            - CLASSIFICATION_FAILED
            - FLR_FAILED_REPLICATION
            - SHAREPOINT_VIRTUAL_SERVERS
            - SHAREPOINT_V3_UPGRADE
            - LIBR_MEDIA_RECALLED
            - BACKUP_SIZE_ANOMALY_INCR
            - BACKUP_SIZE_ANOMALY_DECR
            - JOB_STARTED
            - LOGIN_FAILED
            - AUXCOPY_FALLEN_BEHIND
            - SUCCESS_WITH_ERRORS
            - LICENSE_EXPIRY
            - CCP_MODIFIED
            - LICENSE_CONSUMED
            - LOG_MONITORING
            - EVENT_MONITORING
            - LIBR_NONENCRYPTED_MEDIA_EXPORT
            - CICOPY_FALLEN_BEHIND
            - CLIENT_JOB_NOT_RUN
            - CLIENT_CERTIFICATE_EXPIRY
            - JOB_EXCEEDED_RUNNINGTIME
            - FILES_FAILED_COUNT
            - FILES_FAILED_PERCENT
            - DDB_CORRUPTED
            - SUCCESSIVE_FAILED
            - DDB_DISK_SPACE_LOW
            - JOBS_PENDING_STATE
            - BACKUP_SIZE
            - GENERIC_QUERY
            - JOB_COMMITTED
            - JOB_RESULTS_DISK_SPACE_LOW
            - INDEX_CACHE_DISK_SPACE_LOW
            - GALAXY_DIR_DISK_SPACE_LOW
            - QUOTA_EXCEEDED
            - QUOTA_THREASHOLD
            - QUOTA_VALIDATION_FAILED
            - EDGE_DRIVE_ACTION
            - NT_DDB_OFFLINE
            - NT_OBJECT_COUNT_INCR_PERCENT
            - NT_FAILOVER_STARTED
            - NT_FAILOVER_ACTIVITY
            - NT_FAILOVER_COMPLETE
            - NT_FAILOVER_FAILED
            - NT_FAILOVER_CS_UNREACHABLE
            - NT_FAILOVER_CS_NOT_RUNNING
            - NT_FAILOVER_PASSIVE_NODE_UNREACHABLE
            - NT_ADMIN_ALERT_EVENT_ANOMALOUS
            - NT_ADMIN_ALERT_JOB_RUNTIME_ANOMALOUS
            - NT_ANOMALOUS_PENDING_JOBS
            - NT_ANOMALOUS_FAILED_JOBS
            - NT_ALL_CRITERIA
            - NT_FILE_SYSTEM_QUOTA_EXCEEDED
            - NT_FILE_SYSTEM_QUOTA_THRESHOLD
            - NT_FILE_SYSTEM_QUOTA_VALIDATION_FAILED
            - NT_ADMIN_ALERT_JOB_ACTIVITY_ANOMALOUS
            - NT_ANOMALOUS_SUCCEEDED_JOBS
            - NT_CLIENT_OFFLINE
            - NT_ADMIN_ALERT_DDB_PRUNING_ANOMALOUS
            - NT_ADMIN_ALERT_SMART_STATE_MA
            - NT_JOB_SUCCEEDED_WITH_WARNINGS
            - NT_ADMIN_ALERT_PREDICT_SLA_FALL
            - NT_ADMIN_ALERT_SALESFORCE_OBJECT_BACKUP_ANOMALOUS
            - NT_REPLICATION_JOB_NOT_RUN
            - NT_DELAYED_REPLICATION
            - NT_REPLICATION_STATUS_IN_SYNC
            - NT_REPLICATION_STATUS_SYNC_PENDING
            - NT_REPLICATION_STATUS_SYNC_PAUSED
            - NT_REPLICATION_STATUS_SYNC_FAILED
            - NT_FAILOVER_STATUS_FAILOVER_FAILED
            - NT_FAILOVER_STATUS_FAILOVER_COMPLETE
            - NT_FAILOVER_STATUS_FAILBACK_FAILED
            - NT_FAILOVER_STATUS_REVERT_FAILOVER_FAILED
        description: criteria utilized in alert definition creation
    AlertTypeItem:
      type: object
      properties:
        category:
          $ref: "#/components/schemas/AlertCategoryIdNameValue"
        categoryType:
          $ref: "#/components/schemas/AlertCategoryIdName"
        criteria:
          $ref: "#/components/schemas/AlertCriteriaIdNameValue"
        queryDetail:
          $ref: "#/components/schemas/IdName"
        actionsAllowed:
          type: integer
          description: bit flag indicating actions allowed on this alert type. 128
            means subscription support is present.
          format: int32
        processDiscoveredVMs:
          type: boolean
          description: whether process discovered virtual machines enabled or not
          default: false
        notificationOptionsAllowed:
          type: integer
          description: "Bit flag indicating notification criteria value. 1 means immediate,\
            \ 2 means repeated and 8 means delayed"
          format: int32
      example:
        categoryType:
          name: Configuration
          id: 0
        notificationOptionsAllowed: 1
        queryDetail:
          name: name
          id: 0
        actionsAllowed: 6
        criteria: ""
        processDiscoveredVMs: false
        category: ""
    AlertTypeResp:
      title: Alert Types List
      type: object
      properties:
        alertTypes:
          type: array
          items:
            $ref: "#/components/schemas/AlertTypeItem"
      description: list of alert types and alert custom rules
      example:
        alertTypes:
        - categoryType:
            name: Configuration
            id: 0
          notificationOptionsAllowed: 1
          queryDetail:
            name: name
            id: 0
          actionsAllowed: 6
          criteria: ""
          processDiscoveredVMs: false
          category: ""
        - categoryType:
            name: Configuration
            id: 0
          notificationOptionsAllowed: 1
          queryDetail:
            name: name
            id: 0
          actionsAllowed: 6
          criteria: ""
          processDiscoveredVMs: false
          category: ""
    GetServiceMeshDetailsResp:
      title: GetServiceMeshDetailsResp
      description: Service mesh client details properties
      allOf:
      - $ref: "#/components/schemas/IdNameDisplayName"
      - $ref: "#/components/schemas/ServiceMeshClientProperties"
    GetRunningJobsIdList:
      type: object
      properties:
        jobIds:
          type: array
          items:
            type: integer
            format: int64
      description: List of running jobs
      example:
        jobIds:
        - 0
        - 0
    ErrorCode:
      title: ErrorCode
      type: string
      description: Error code value
      enum:
      - NO_ERROR
      - INVALID_INPUT
      - VALUE_NOT_FOUND
      - UNKNOWN_EXCEPTION
      - CONNECTION_PROBLEM
      - UNKNOWN_SQL_ERROR
      - INVALID_USER
      - INVALID_OPERATION_TYPE
      - INTERNAL_SERVER_PROBLEM
      - INSUFFICIENT_USER_PERMISSION_ON_ENTITY
      - INVALID_ENTITY_ID
    GenericResponse:
      title: GenericResponse
      type: object
      properties:
        errorMessage:
          type: string
          description: Tells about the error occured
          nullable: true
        errorCode:
          $ref: "#/components/schemas/ErrorCode"
      example:
        errorMessage: errorMessage
        errorCode: NO_ERROR
    GCPReplicationGroup:
      title: GCPReplicationGroup
      description: Replication group details pertaining to GCP
      allOf:
      - $ref: "#/components/schemas/ReplicationGroup"
      - required:
        - vendor
        type: object
        properties:
          advancedOption:
            $ref: "#/components/schemas/ReplicationGroupAdvOptionsGCP"
          replicationConfiguration:
            type: array
            items:
              $ref: "#/components/schemas/ReplicationConfigurationGCP"
          vendor:
            type: string
            description: Vendor type of this replication group. Values in enum are
              case sensitive
            enum:
            - Google
    ReplicationGroupAdvOptionsGCP:
      allOf:
      - $ref: "#/components/schemas/ReplicationGroupAdvancedOptions"
      - type: object
        properties:
          unconditionalOverwrite:
            type: boolean
            description: This will replace the instance at the destination if the
              instance with the same name already exists.
    ReplicationConfigurationGCP:
      title: ReplicationConfigurationGCP
      type: object
      properties:
        sourceVM:
          type: string
          description: Source VM instance name
        sourceVMGuid:
          type: string
          description: Source VM instance guid
        destinationVM:
          type: string
          description: Destination VM instance name
        primaryZone:
          type: string
          description: Primary zone of the destination VM instance
        datacenter:
          type: string
          description: Datacenter of the destination VM instance
        projectId:
          type: string
          description: Gcp project id
        createPublicIP:
          type: boolean
          description: Public/External IP of the destination VM instance
        machineType:
          type: string
          description: Destination VM instance machine type
        secondaryZone:
          type: string
          description: Secondary zone of the destination VM instance
        overrideReplicationOptions:
          $ref: "#/components/schemas/OverrideReplicationOptionsGCP"
      description: Model to store configuration per VM
    OverrideReplicationOptionsGCP:
      title: OverrideReplicationOptionsGCP
      type: object
      properties:
        tags:
          $ref: "#/components/schemas/NameValue"
        vmNodeAffinity:
          $ref: "#/components/schemas/NameValue"
        network:
          $ref: "#/components/schemas/Network"
      description: Extended instance configuration options
      x-examples:
        Example 1:
          network:
            networkDisplayName: vsa-vpc-jas-useast1
            networkName: https://www.googleapis.com/compute/v1/projects/vsa-dev-298916/global/networks/vsa-vpc-jas-useast1
            subnetId: https://www.googleapis.com/compute/v1/projects/vsa-dev-298916/regions/us-east1/subnetworks/vsa-vpc-subnet-jas-useast1
          tags:
          - name: name
            value: TestVM
          vmNodeAffinity:
          - name: compute.googleapis.com/node-group-name
            value: node-group-1
          - name: compute.googleapis.com/node-name
            value: node-group-1-szb3
    AnomalousAudit:
      title: AnomalousAudit
      type: object
      properties:
        operation:
          type: string
          description: Audit operation
        user:
          $ref: "#/components/schemas/IdName"
        fromTime:
          type: integer
          description: time from when the audit operation was anomalous
          format: int32
        toTime:
          type: integer
          description: time till which the audit operaion was anomalous
          format: int32
        count:
          type: integer
          description: number of audit operations in the given time
          format: int32
        messageId:
          type: integer
          description: messageid of the audit operation
          format: int32
      description: structure to hold audit details
      example:
        fromTime: 0
        count: 1
        messageId: 5
        operation: operation
        user:
          name: name
          id: 0
        toTime: 6
    AnomalousAuditsResp:
      title: AnomalousAuditsResp
      type: object
      properties:
        audits:
          type: array
          description: list of audit objects
          items:
            $ref: "#/components/schemas/AnomalousAudit"
      description: structure to hold anomalous audits
      example:
        audits:
        - fromTime: 0
          count: 1
          messageId: 5
          operation: operation
          user:
            name: name
            id: 0
          toTime: 6
        - fromTime: 0
          count: 1
          messageId: 5
          operation: operation
          user:
            name: name
            id: 0
          toTime: 6
    CreateRecoveryGroupResp:
      title: CreateRecoveryGroupResp
      type: object
      properties:
        recoveryGroup:
          $ref: "#/components/schemas/IdName"
        error:
          $ref: "#/components/schemas/GenericResp"
      description: Model for update create recovery group
      example:
        recoveryGroup:
          name: name
          id: 0
        error:
          errorMessage: errorMessage
          errorCode: 0
    DeleteRecoveryEntityReq:
      title: DeleteRecoveryEntityReq
      type: object
      properties:
        recoveryGroup:
          $ref: "#/components/schemas/IdName"
        recoveryEntities:
          type: array
          items:
            type: integer
            format: int32
    RecoveryStatus:
      type: string
      description: Status of recovery entity
      enum:
      - NO_STATUS
      - NOT_READY
      - READY
      - RECOVERED
      - FAILED
      - RECOVERED_WITH_ERRORS
      - IN_PROGRESS
      - CLEANED_UP
      - MARK_AS_FAILED
      - CLEANUP_FAILED
    RecoveryStatusNotReadyCategory:
      type: string
      description: Recovery status not ready category
      enum:
      - NONE = 0
      - INVALID_VM_NAME = 1
      - INVALID_COPY = 2
      - MARK_AS_FAILED = 4
      - INVALID_SMART_FOLDER = 8
      - MANAGED_IDENTITY_ENABLED = 16
    ValidationStatus:
      type: string
      description: Validation status of recovery entity
      enum:
      - NO_STATUS
      - IN_PROGRESS
      - SUCCESS
      - FAILED
    DeleteOffice365AzureAppEntity:
      required:
      - applicationId
      type: object
      properties:
        applicationId:
          type: string
          description: Azure application id
        credentialId:
          type: integer
          description: Credential manager id of the azure application. Only deletes
            association to the client.
          format: int64
    DeleteOffice365AzureAppReq:
      type: object
      properties:
        apps:
          type: array
          items:
            $ref: "#/components/schemas/DeleteOffice365AzureAppEntity"
    UpdateOffice365AzureAppResp:
      allOf:
      - $ref: "#/components/schemas/GenericResp"
    UpdateOffice365AzureAppEntity:
      allOf:
      - $ref: "#/components/schemas/AzureAdApp"
      - type: object
        properties:
          applicationName:
            type: string
            description: Azure application display name.
    UpdateOffice365AzureAppReq:
      type: object
      properties:
        apps:
          type: array
          items:
            $ref: "#/components/schemas/UpdateOffice365AzureAppEntity"
    GetOffice365AzureAppFlags:
      type: string
      description: Additional flags of the azure application.
      enum:
      - CREDENTIAL_APP
      - MULTI_TENANT_APP
      - TEAMS_CHANNEL_CHAT_FREE_PROTECTED_API
      - TEAMS_CHANNEL_CHAT_PAID_EXPORT_API
      - TEAMS_CHANNEL_CHAT_SERVICE_ACCOUNT_BASED
      - TEAMS_PERSONAL_CHAT_FREE_CHAT_API
      - TEAMS_PERSONAL_CHAT_PAID_EXPORT_API
    GetOffice365AzureAppEntity:
      allOf:
      - $ref: "#/components/schemas/AzureAdApp"
      - type: object
        properties:
          applicationName:
            type: string
            description: Azure application display name.
          applicationStatus:
            type: string
            description: Azure application connection status.
            enum:
            - AUTHORIZED
            - NOT_AUTHORIZED
            - NOT_SYNCED
            - THROTTLED
            - INCOMPLETE_PERMISSIONS
            - NOT_AVAILABLE
            - PROTECTED_APIS_INACCESSIBLE
            - INVALID_REPLY_URL
            - INVALID_TOKEN
            - INCORRECT_CREDENTIALS
            - SHAREPOINT_APP_PRINCIPAL_MISSING
            - INCORRECT_CERTIFICATE_CREDENTIALS
            - INCORRECT_SECRET_AND_CERTIFICATE_CREDENTIALS
          credentialId:
            type: integer
            description: Credential manager id of the azure application.
            format: int64
          flags:
            type: array
            items:
              $ref: "#/components/schemas/GetOffice365AzureAppFlags"
    GetOffice365AzureAppResp:
      type: object
      properties:
        count:
          type: integer
          format: int32
        azureDirectoryId:
          type: string
          description: Azure application directory id.
        apps:
          type: array
          items:
            $ref: "#/components/schemas/GetOffice365AzureAppEntity"
      example:
        azureDirectoryId: azureDirectoryId
        count: 0
        apps:
        - ""
        - ""
    Office365ClientData:
      allOf:
      - $ref: "#/components/schemas/IdName"
      - type: object
        properties:
          itemsBackedUp:
            type: integer
            description: Number of items backed up for this client.
            format: int64
          associatedEntities:
            type: integer
            description: Number of entities associated for this client.
            format: int64
          backupSize:
            type: integer
            description: Backup size in bytes for this client.
            format: int64
          backupHealthPercentage:
            type: number
            description: Value of backup health percentage for this client
            format: float
          serverPlan:
            $ref: "#/components/schemas/IdName"
          company:
            $ref: "#/components/schemas/IdName"
    Office365ClientsResp:
      type: object
      properties:
        totalRecords:
          type: integer
          format: int64
        clients:
          type: array
          items:
            $ref: "#/components/schemas/Office365ClientData"
      example:
        totalRecords: 0
        clients:
        - ""
        - ""
    Office365AllClientData:
      allOf:
      - $ref: "#/components/schemas/Office365ClientData"
      - type: object
        properties:
          type:
            type: string
            description: Agent type of this client
            enum:
            - EXCHANGE
            - ONEDRIVE
            - SHAREPOINT
            - TEAMS
    Office365AllClientsResp:
      type: object
      properties:
        totalRecords:
          type: integer
          format: int64
        clients:
          type: array
          items:
            $ref: "#/components/schemas/Office365AllClientData"
      example:
        totalRecords: 0
        clients:
        - ""
        - ""
    Office365CommonInfo:
      type: object
      properties:
        office365Plan:
          $ref: "#/components/schemas/IdName"
        status:
          type: string
          enum:
          - INCLUDED_IN_BACKUP
          - DELETED_FROM_CONTENT
          - EXCLUDED_FROM_BACKUP
    Office365ExchangeContentData:
      allOf:
      - $ref: "#/components/schemas/NameGUID"
      - $ref: "#/components/schemas/Office365CommonInfo"
      - type: object
        properties:
          emailAddress:
            type: string
            description: Email Address for the content association
          type:
            type: string
            description: Type of the entity.
            enum:
            - ALL_MAILBOXES
            - ALL_PUBLIC_FOLDERS
            - ALL_OFFICE365_GROUP_MAILBOXES
            - AD_GROUP
            - CUSTOM_CATEGORY
    Office365OnedriveContentData:
      allOf:
      - $ref: "#/components/schemas/NameGUID"
      - $ref: "#/components/schemas/Office365CommonInfo"
      - type: object
        properties:
          emailAddress:
            type: string
            description: Email Address for the content association
          type:
            type: string
            description: Type of the entity.
            enum:
            - ALL_USERS
            - GROUP
            - CUSTOM_CATEGORY
    Office365SharepointContentData:
      allOf:
      - $ref: "#/components/schemas/NameGUID"
      - $ref: "#/components/schemas/Office365CommonInfo"
      - type: object
        properties:
          emailAddress:
            type: string
            description: Email Address for the content association
          type:
            type: string
            description: Type of the entity.
            enum:
            - ALL_SITES
            - ALL_PROJECT_ONLINE_SITES
            - ALL_TEAMS_SITES
            - CUSTOM_CATEGORY
    Office365TeamsContentData:
      allOf:
      - $ref: "#/components/schemas/NameGUID"
      - $ref: "#/components/schemas/Office365CommonInfo"
      - type: object
        properties:
          emailAddress:
            type: string
            description: Email Address for the content association
          type:
            type: string
            description: Type of the entity.
            enum:
            - ALL_TEAMS
            - ALL_USERS
            - GROUP
            - CUSTOM_CATEGORY
    Office365ExchangeContentResp:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: "#/components/schemas/Office365ExchangeContentData"
      example:
        content:
        - ""
        - ""
    Office365OnedriveContentResp:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: "#/components/schemas/Office365OnedriveContentData"
      example:
        content:
        - ""
        - ""
    Office365SharepointContentResp:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: "#/components/schemas/Office365SharepointContentData"
      example:
        content:
        - ""
        - ""
    Office365TeamsContentResp:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: "#/components/schemas/Office365TeamsContentData"
      example:
        content:
        - ""
        - ""
    Office365ContentIndividualBackupStats:
      type: object
      properties:
        lastBackup:
          type: integer
          description: Time of last backup in UNIX time.
          format: int64
        activeBackupSize:
          type: integer
          description: Size of active backups in bytes.
          format: int64
        inactiveBackupSize:
          type: integer
          description: Size of inactive backups in bytes.
          format: int64
        totalBackupSize:
          type: integer
          description: Total size of all backups in bytes.
          format: int64
        activeItemsBackedUp:
          type: integer
          description: Active backup items count.
          format: int64
        InactiveItemsBackedUp:
          type: integer
          description: Inactive backup items count.
          format: int64
        TotalItemsBackedUp:
          type: integer
          description: Total backup items count.
          format: int64
        lastBackupStatus:
          type: string
          description: status of last backup for this entity
          enum:
          - NONE
          - FAILED
          - SKIPPED
          - SUCCESSFUL
          - CWE
        lastBackupAttempt:
          type: integer
          description: Time of last backup attempt in UNIX time.
          format: int64
        lastAttemptJobId:
          type: integer
          description: Job Id of the last backup job.
          format: int32
        failedItemsCount:
          type: integer
          description: Count of the failed items in the backup.
          format: int64
    Office365MailboxData:
      allOf:
      - $ref: "#/components/schemas/Office365ContentIndividualBackupStats"
      - $ref: "#/components/schemas/NameGUID"
      - $ref: "#/components/schemas/Office365CommonInfo"
      - type: object
        properties:
          emailAddress:
            type: string
            description: Email Address of the mailbox
          type:
            type: string
            description: Exchange Entity type.
            enum:
            - USER_MAILBOX
            - GROUP_MAILBOX
            - SHARED_MAILBOX
    Office365MailboxesResp:
      type: object
      properties:
        totalRecords:
          type: integer
          format: int64
        mailboxes:
          type: array
          items:
            $ref: "#/components/schemas/Office365MailboxData"
      example:
        totalRecords: 0
        mailboxes:
        - ""
        - ""
    Office365SiteData:
      allOf:
      - $ref: "#/components/schemas/Office365ContentIndividualBackupStats"
      - $ref: "#/components/schemas/NameGUID"
      - $ref: "#/components/schemas/Office365CommonInfo"
      - type: object
        properties:
          cvSharepointGUID:
            type: string
            description: Commvault Sharepoint GUID
          url:
            type: string
            description: Url of the site
          ItemType:
            type: string
            description: Type of the sharepoint item
            enum:
            - SUBSITE
            - SITE
          type:
            type: string
            description: Sharepoint Entity type.
            enum:
            - REGULAR_SITE
            - TEAM_SITE
            - ONLINE_SITE
    Office365SitesResp:
      type: object
      properties:
        totalRecords:
          type: integer
          format: int64
        sites:
          type: array
          items:
            $ref: "#/components/schemas/Office365SiteData"
      example:
        totalRecords: 0
        sites:
        - ""
        - ""
    Office365TeamsData:
      allOf:
      - $ref: "#/components/schemas/Office365ContentIndividualBackupStats"
      - $ref: "#/components/schemas/NameGUID"
      - $ref: "#/components/schemas/Office365CommonInfo"
      - type: object
        properties:
          emailAddress:
            type: string
            description: Email Address of the Team
          teamType:
            type: string
            description: Type of the team
            enum:
            - PRIVATE
            - PUBLIC
          type:
            type: string
            description: Teams Entity type.
            enum:
            - TEAM
            - USER
    Office365TeamsResp:
      type: object
      properties:
        totalRecords:
          type: integer
          format: int64
        teams:
          type: array
          items:
            $ref: "#/components/schemas/Office365TeamsData"
      example:
        totalRecords: 0
        teams:
        - ""
        - ""
    Office365TeamsUsersData:
      allOf:
      - $ref: "#/components/schemas/Office365ContentIndividualBackupStats"
      - $ref: "#/components/schemas/NameGUID"
      - $ref: "#/components/schemas/Office365CommonInfo"
      - type: object
        properties:
          emailAddress:
            type: string
            description: Email Address of the Teams user
          type:
            type: string
            description: Teams Entity type.
            enum:
            - TEAM
            - USER
    Office365TeamsUsersResp:
      type: object
      properties:
        totalRecords:
          type: integer
          format: int64
        teams:
          type: array
          items:
            $ref: "#/components/schemas/Office365TeamsUsersData"
      example:
        totalRecords: 0
        teams:
        - ""
        - ""
    Office365OnedriveUserData:
      allOf:
      - $ref: "#/components/schemas/Office365ContentIndividualBackupStats"
      - $ref: "#/components/schemas/NameGUID"
      - $ref: "#/components/schemas/Office365CommonInfo"
      - type: object
        properties:
          emailAddress:
            type: string
            description: Email Address of the user
          adGroup:
            type: array
            items:
              $ref: "#/components/schemas/NameGUID"
    Office365OnedriveUsersResp:
      type: object
      properties:
        totalRecords:
          type: integer
          format: int64
        users:
          type: array
          items:
            $ref: "#/components/schemas/Office365OnedriveUserData"
      example:
        totalRecords: 0
        users:
        - ""
        - ""
    Office365MailboxesReqEntity:
      required:
      - GUID
      - emailAddress
      - name
      allOf:
      - $ref: "#/components/schemas/NameGUID"
      - type: object
        properties:
          emailAddress:
            type: string
            description: Email Address of the Mailbox
    Office365MailboxesReq:
      required:
      - mailboxes
      - office365Plan
      type: object
      properties:
        office365Plan:
          $ref: "#/components/schemas/IdName"
        mailboxes:
          type: array
          items:
            $ref: "#/components/schemas/Office365MailboxesReqEntity"
    Office365SitesReqEntity:
      required:
      - GUID
      - name
      - url
      allOf:
      - $ref: "#/components/schemas/NameGUID"
      - type: object
        properties:
          url:
            type: string
            description: Url of the site
          type:
            type: string
            description: Sharepoint Entity type.
            default: REGULAR_SITE
            enum:
            - REGULAR_SITE
            - TEAM_SITE
            - ONLINE_SITE
    Office365SitesReq:
      required:
      - office365Plan
      - sites
      type: object
      properties:
        office365Plan:
          $ref: "#/components/schemas/IdName"
        sites:
          type: array
          items:
            $ref: "#/components/schemas/Office365SitesReqEntity"
    Office365OnedriveUsersReqEntity:
      required:
      - GUID
      - emailAddress
      - name
      allOf:
      - $ref: "#/components/schemas/NameGUID"
      - type: object
        properties:
          emailAddress:
            type: string
            description: Email Address of the user
    Office365OnedriveUsersReq:
      required:
      - office365Plan
      - users
      type: object
      properties:
        office365Plan:
          $ref: "#/components/schemas/IdName"
        users:
          type: array
          items:
            $ref: "#/components/schemas/Office365OnedriveUsersReqEntity"
    Office365TeamsReqEntity:
      required:
      - GUID
      - name
      allOf:
      - $ref: "#/components/schemas/NameGUID"
      - type: object
        properties:
          emailAddress:
            type: string
            description: Email Address of the Team
          teamType:
            type: string
            description: Type of the team
            default: PUBLIC
            enum:
            - PRIVATE
            - PUBLIC
    Office365TeamsReq:
      required:
      - office365Plan
      - teams
      type: object
      properties:
        office365Plan:
          $ref: "#/components/schemas/IdName"
        teams:
          type: array
          items:
            $ref: "#/components/schemas/Office365TeamsReqEntity"
    Office365TeamsUsersReqEntity:
      required:
      - GUID
      - emailAddress
      - name
      allOf:
      - $ref: "#/components/schemas/NameGUID"
      - type: object
        properties:
          emailAddress:
            type: string
            description: Email Address of the Teams user
    Office365TeamsUsersReq:
      required:
      - office365Plan
      - users
      type: object
      properties:
        office365Plan:
          $ref: "#/components/schemas/IdName"
        users:
          type: array
          items:
            $ref: "#/components/schemas/Office365TeamsUsersReqEntity"
    Office365CustomCategoryCommonInfo:
      required:
      - ruleOperator
      - ruleValue
      type: object
      properties:
        ruleOperator:
          type: string
          description: Operator of the custom category condition.
          enum:
          - CONTAINS
          - REGEX
          - STARTS_WITH
          - ENDS_WITH
          - BEFORE
          - AFTER
          - ON_OR_BEFORE
          - ON_OR_AFTER
          - LESS
          - GREATER
          - LESS_THAN_OR_EQUAL_TO
          - GREATER_THAN_OR_EQUAL_TO
          - EQUALS
          - NOT_EQUAL
        ruleValue:
          type: string
          description: Value of the custom category condition rule.
    Office365SharepointCustomCategoryCondition:
      allOf:
      - $ref: "#/components/schemas/Office365CustomCategoryCommonInfo"
      - required:
        - ruleName
        type: object
        properties:
          ruleName:
            type: string
            description: Sharepoint custom category rule name.
            enum:
            - GEO_LOCATION
            - LOCALE
            - SITE_COLLECTION_CLASSIFICATION
            - SITE_COLLECTION_URL
            - SITE_DESCRIPTION
            - SITE_URL
            - TIME_ZONE
            - SP_PROPERTY_BAG
          propertyBagName:
            type: string
            description: Sharepoint property bag name.
          propertyBagType:
            type: string
            description: Type of the sharepoint property bag value.
            enum:
            - DATE
            - DATETIME
            - NUMBER
            - STRING
            - TIME
    Office365SharepointCustomCategoryReq:
      required:
      - conditions
      - name
      - office365Plan
      type: object
      properties:
        name:
          type: string
          description: Name of the custom category.
        office365Plan:
          $ref: "#/components/schemas/IdName"
        conditions:
          type: array
          items:
            $ref: "#/components/schemas/Office365SharepointCustomCategoryCondition"
    Office365OnedriveCustomCategoryCondition:
      allOf:
      - $ref: "#/components/schemas/Office365CustomCategoryCommonInfo"
      - required:
        - ruleName
        type: object
        properties:
          ruleName:
            type: string
            description: Onedrive custom category rule name.
            enum:
            - LICENSE
            - USER_DISPLAY_NAME
            - USER_GEO_LOCATION
            - USER_SMTP_ADDRESS
    Office365OnedriveCustomCategoryReq:
      required:
      - conditions
      - name
      - office365Plan
      type: object
      properties:
        name:
          type: string
          description: Name of the custom category.
        office365Plan:
          $ref: "#/components/schemas/IdName"
        conditions:
          type: array
          items:
            $ref: "#/components/schemas/Office365OnedriveCustomCategoryCondition"
    Office365ExchangeCustomCategoryCondition:
      allOf:
      - $ref: "#/components/schemas/Office365CustomCategoryCommonInfo"
      - required:
        - ruleName
        type: object
        properties:
          ruleName:
            type: string
            description: Exchange custom category rule name.
            enum:
            - LICENSE
            - USER_DISPLAY_NAME
            - USER_GEO_LOCATION
            - USER_SMTP_ADDRESS
    Office365ExchangeCustomCategoryReq:
      required:
      - conditions
      - name
      - office365Plan
      type: object
      properties:
        name:
          type: string
          description: Name of the custom category.
        office365Plan:
          $ref: "#/components/schemas/IdName"
        conditions:
          type: array
          items:
            $ref: "#/components/schemas/Office365ExchangeCustomCategoryCondition"
    Office365TeamsCustomCategoryCondition:
      allOf:
      - $ref: "#/components/schemas/Office365CustomCategoryCommonInfo"
      - required:
        - ruleName
        type: object
        properties:
          ruleName:
            type: string
            description: Teams custom category rule name.
            enum:
            - TEAM_CREATED_TIME
            - TEAM_DISPLAY_NAME
            - TEAM_SMTP_ADDRESS
            - GROUP_OPEN_EXTENSION
          openExtensionName:
            type: string
            description: Name value of open extension if rule name is GROUP_OPEN_EXTENSION
    Office365TeamsCustomCategoryReq:
      required:
      - conditions
      - name
      - office365Plan
      type: object
      properties:
        name:
          type: string
          description: Name of the custom category.
        office365Plan:
          $ref: "#/components/schemas/IdName"
        conditions:
          type: array
          items:
            $ref: "#/components/schemas/Office365TeamsCustomCategoryCondition"
    Office365ExchangeBkpContentEntity:
      required:
      - name
      - type
      type: object
      properties:
        type:
          type: string
          enum:
          - ALL_MAILBOXES
          - ALL_PUBLIC_FOLDERS
          - ALL_OFFICE365_GROUP_MAILBOXES
          - AD_GROUP
          - CUSTOM_CATEGORY
        name:
          type: string
          description: Name of the Exchange Content. Custom Category name if type
            is CUSTOM_CATEGORY. AD Group Name if type is AD_GROUP
    Office365ExchangeBackupReq:
      type: object
      properties:
        totalRunningTime:
          type: integer
          description: Total running time of the backup in minutes
          format: int32
        mailboxes:
          type: array
          items:
            $ref: "#/components/schemas/NameGUID"
        content:
          type: array
          items:
            $ref: "#/components/schemas/Office365ExchangeBkpContentEntity"
        type:
          type: string
          enum:
          - ALL_MAILBOXES
          - MAILBOXES_ARCHIVED_RECENTLY
          - MAILBOXES_NEVER_ARCHIVED
          - MAILBOXES_NOT_ARCHIVED_RECENTLY
    Office365OnedriveBkpContentEntity:
      required:
      - name
      - type
      type: object
      properties:
        type:
          type: string
          enum:
          - ALL_USERS
          - GROUP
          - CUSTOM_CATEGORY
        name:
          type: string
          description: Name of the Onedrive Content.
        GUID:
          type: string
          description: GUID is required if type is CUSTOM_CATEGORY or GROUP
    Office365OnedriveBackupReq:
      type: object
      properties:
        totalRunningTime:
          type: integer
          description: Total running time of the backup in minutes
          format: int32
        users:
          type: array
          items:
            $ref: "#/components/schemas/NameGUID"
        content:
          type: array
          items:
            $ref: "#/components/schemas/Office365OnedriveBkpContentEntity"
        type:
          type: string
          enum:
          - ALL_USERS
          - USERS_BACKED_UP_RECENTLY
          - USERS_NEVER_BACKED_UP
          - USERS_NOT_BACKED_UP_RECENTLY
    Office365SiteBkpRestoreEntity:
      required:
      - GUID
      - name
      allOf:
      - $ref: "#/components/schemas/NameGUID"
      - type: object
        properties:
          type:
            type: string
            description: Type of the sharepoint item
            enum:
            - SUBSITE
            - SITE
    Office365SharepointBackupReq:
      type: object
      properties:
        totalRunningTime:
          type: integer
          description: Total running time of the backup in minutes
          format: int32
        sites:
          type: array
          items:
            $ref: "#/components/schemas/Office365SiteBkpRestoreEntity"
        type:
          type: string
          enum:
          - ALL_SITES
          - SITES_BACKED_UP_RECENTLY
          - SITES_NEVER_BACKED_UP
          - SITES_NOT_BACKED_UP_RECENTLY
    Office365TeamsBkpContentEntity:
      required:
      - GUID
      - name
      - type
      type: object
      properties:
        type:
          type: string
          enum:
          - GROUP
          - CUSTOM_CATEGORY
          - ALL_TEAMS
          - ALL_USERS
        name:
          type: string
          description: Name of the Teams Content.
        GUID:
          type: string
          description: GUID is required if type is CUSTOM_CATEGORY or GROUP
    Office365TeamsBackupReq:
      type: object
      properties:
        totalRunningTime:
          type: integer
          description: Total running time of the backup in minutes
          format: int32
        teams:
          type: array
          items:
            $ref: "#/components/schemas/NameGUID"
        users:
          type: array
          items:
            $ref: "#/components/schemas/NameGUID"
        content:
          type: array
          items:
            $ref: "#/components/schemas/Office365TeamsBkpContentEntity"
        type:
          type: string
          enum:
          - ALL_TEAMS
          - TEAMS_BACKED_UP_RECENTLY
          - TEAMS_NEVER_BACKED_UP
          - TEAMS_NOT_BACKED_UP_RECENTLY
    Office365ExchRestoreCommonOptions:
      type: object
      properties:
        ifMessageExists:
          type: string
          default: SKIP
          enum:
          - SKIP
          - UNCONDITIONALLY_OVERWRITE
        deletedItems:
          type: boolean
          description: Include deleted items on Restore
        matchEmailAddress:
          type: boolean
          description: Match destination user based on the email address
    Office365ExchMailboxRestoreEntity:
      required:
      - GUID
      - name
      allOf:
      - $ref: "#/components/schemas/NameGUID"
      - type: object
        properties:
          emailAddress:
            type: string
            description: Email Address is needed if matchEmailAddress is set to true.
    Office365ExchangeRestoreReq:
      allOf:
      - $ref: "#/components/schemas/Office365ExchRestoreCommonOptions"
      - type: object
        properties:
          mailboxes:
            type: array
            items:
              $ref: "#/components/schemas/Office365ExchMailboxRestoreEntity"
          groups:
            type: array
            items:
              $ref: "#/components/schemas/NameGUID"
    Office365OnedriveRestoreCommonOptions:
      type: object
      properties:
        ifFileExists:
          type: string
          default: SKIP
          enum:
          - SKIP
          - UNCONDITIONALLY_OVERWRITE
          - RESTORE_AS_COPY
        deletedItems:
          type: boolean
          description: Include deleted items on Restore
        matchEmailAddress:
          type: boolean
          description: Match destination user based on the email address
        skipFilePermissions:
          type: boolean
          description: Skip Onedrive file permissions during restore
          default: true
    Office365OnedriveRestoreReq:
      allOf:
      - $ref: "#/components/schemas/Office365OnedriveRestoreCommonOptions"
      - type: object
        properties:
          users:
            type: array
            items:
              $ref: "#/components/schemas/NameGUID"
          groups:
            type: array
            items:
              $ref: "#/components/schemas/NameGUID"
    Office365SharepointRestoreCommonOptions:
      type: object
      properties:
        ifDocumentExists:
          type: string
          default: SKIP
          enum:
          - SKIP
          - UNCONDITIONALLY_OVERWRITE
        deletedItems:
          type: boolean
          description: Include deleted items on Restore
        additionalRestoreOption:
          type: string
          enum:
          - RESTORE_ACLS_ONLY
          - RESTORE_WORKFLOW_DEFINITION_AND_ALERTS_ONLY
        latestVersion:
          type: boolean
          description: Restore latest version only
          default: true
        skipLookupMetadata:
          type: boolean
          description: Skip lookup metadata on sharepoint restore
    Office365SharepointCategoryRestoreEntity:
      type: object
      properties:
        GUID:
          type: string
          description: Custom category GUID(Optional)
        conditions:
          type: array
          description: Conditions for custom category.
          items:
            $ref: "#/components/schemas/Office365SharepointCustomCategoryCondition"
    Office365SharepointRestoreReq:
      allOf:
      - $ref: "#/components/schemas/Office365SharepointRestoreCommonOptions"
      - type: object
        properties:
          sites:
            type: array
            items:
              $ref: "#/components/schemas/Office365SiteBkpRestoreEntity"
          category:
            $ref: "#/components/schemas/Office365SharepointCategoryRestoreEntity"
    Office365TeamsRestoreCommonOptions:
      type: object
      properties:
        ifFileExists:
          type: string
          default: SKIP
          enum:
          - SKIP
          - UNCONDITIONALLY_OVERWRITE
        deletedItems:
          type: boolean
          description: Include deleted items on Restore
    Office365TeamsCategoryRestoreEntity:
      type: object
      properties:
        GUID:
          type: string
          description: Custom category GUID(Optional)
        conditions:
          type: array
          description: Conditions for custom category.
          items:
            $ref: "#/components/schemas/Office365TeamsCustomCategoryCondition"
    Office365TeamsRestoreReq:
      allOf:
      - $ref: "#/components/schemas/Office365TeamsRestoreCommonOptions"
      - type: object
        properties:
          users:
            type: array
            description: List of Teams Users for Restore
            items:
              $ref: "#/components/schemas/NameGUID"
          destinationUserInfo:
            $ref: "#/components/schemas/Office365TeamsDestinationUserEntity"
          teams:
            type: array
            description: List of Teams for Restore
            items:
              $ref: "#/components/schemas/NameGUID"
          category:
            $ref: "#/components/schemas/Office365TeamsCategoryRestoreEntity"
    Office365TeamsDestinationUserEntity:
      required:
      - GUID
      - emailAddress
      type: object
      properties:
        emailAddress:
          type: string
          description: Destination Onedrive user email address
        GUID:
          type: string
          description: Destination Onedrive user GUID
    RecoveryGroup:
      title: RecoveryGroup
      type: object
      properties:
        id:
          type: integer
          description: Id of the recovery group
          format: int32
        name:
          type: string
          description: Name of the recovery group
        target:
          $ref: "#/components/schemas/IdName"
        postRecoveryActions:
          type: array
          items:
            $ref: "#/components/schemas/DROperationScript"
        delayBetweenPriorityMachines:
          type: integer
          description: The delay between machines in different priorities in minutes
          format: int32
        continueOnFailure:
          type: boolean
          description: Set to true to continue to the next priority machines on failure
          default: false
        action:
          $ref: "#/components/schemas/RecoveryAction"
        recoveryPointDetails:
          $ref: "#/components/schemas/RecoveryGroupRPDetails"
        recoveryPoint:
          type: integer
          description: Timestamp for group restore in case of disaster
          format: int32
          default: 0
        recoveryExpirationOptions:
          $ref: "#/components/schemas/RecoveryExpirationOptions"
      description: Model to provide basic detail of recovery group
      example:
        delayBetweenPriorityMachines: 6
        recoveryExpirationOptions:
          enableExpirationOption: true
          daysToExpire: 5
          expirationTime: 2
          isRescuedCommServe: true
        name: name
        continueOnFailure: false
        action: ""
        postRecoveryActions:
        - scriptContent: scriptContent
          path: path
          guestCredentials: null
          scriptCredentials: null
          osType: WINDOWS
          guid: guid
          scriptName: scriptName
          reset: true
          type: UNC
        - scriptContent: scriptContent
          path: path
          guestCredentials: null
          scriptCredentials: null
          osType: WINDOWS
          guid: guid
          scriptName: scriptName
          reset: true
          type: UNC
        id: 0
        recoveryPoint: 5
        target:
          name: name
          id: 0
        recoveryPointDetails:
          recoveryPointCategory: LATEST
          recoveryPoint: 1
    ValidationResult:
      title: ValidationResult
      type: object
      properties:
        output:
          type: string
          description: Output of the script executed
        name:
          type: string
          description: Name of the script executed
        validationStatus:
          $ref: "#/components/schemas/ValidationStatus"
        failureReason:
          type: string
          description: Script validation failure reason
      description: Result from the script execution ran on entity during recovery
      example:
        output: output
        failureReason: failureReason
        name: name
        validationStatus: null
    RecoveryEntity:
      title: RecoveryEntity
      type: object
      properties:
        id:
          type: integer
          description: Id of the recovery entity
          format: int32
        name:
          type: string
          description: Name of the recovery entity
        entity:
          $ref: "#/components/schemas/IdName"
        recoveryGroup:
          $ref: "#/components/schemas/IdName"
        workload:
          $ref: "#/components/schemas/SolutionTypes"
        client:
          $ref: "#/components/schemas/IdName"
        backupSet:
          $ref: "#/components/schemas/IdName"
        vmGroup:
          $ref: "#/components/schemas/IdName"
        virtualMachine:
          $ref: "#/components/schemas/NameGUID"
        recoveryConfiguration:
          $ref: "#/components/schemas/RecoveryConfiguration"
        instance:
          $ref: "#/components/schemas/IdName"
        preRecoveryActions:
          type: array
          items:
            $ref: "#/components/schemas/DROperationScript"
        postRecoveryActions:
          type: array
          items:
            $ref: "#/components/schemas/DROperationScript"
        target:
          $ref: "#/components/schemas/IdName"
        recoveryPointDetails:
          $ref: "#/components/schemas/RecoveryEntityRPDetails"
        recoveryPoint:
          type: integer
          description: "Timestamp for entity restore in case of disaster, default\
            \ value is 0 as latest recovery point"
          format: int32
          default: 0
        executionOrder:
          $ref: "#/components/schemas/RecoveryEntityExecutionInfo"
        connectionDetails:
          $ref: "#/components/schemas/VMConnectionDetails"
        blockSysrepForRecovery:
          type: boolean
        recoveryStatus:
          $ref: "#/components/schemas/RecoveryStatus"
        validationStatus:
          $ref: "#/components/schemas/ValidationStatus"
        validationResults:
          type: array
          items:
            $ref: "#/components/schemas/ValidationResult"
        recoveryFailureReason:
          type: string
          description: Reason for last recovery job failure
        validationFailureReason:
          type: string
          description: Reason for last validation failure
        recoveryStatusNotReadyReason:
          type: string
          description: Recovery status not ready reason
        recoveryStatusNotReadyCategory:
          $ref: "#/components/schemas/RecoveryStatusNotReadyCategory"
        lastRecoveryJobId:
          type: integer
          description: Last recovery job Id of the entity
          format: int32
        osType:
          $ref: "#/components/schemas/OSType"
        copyAvailableTime:
          type: integer
          description: Timestamp of the latest backup job start time present in the
            copy that would be used for recovery. Value would be -1 if no valid copy
            is present for recovery.
          format: int32
        installedWorkloads:
          type: array
          items:
            $ref: "#/components/schemas/SolutionTypes"
        sourceVendor:
          $ref: "#/components/schemas/VSVendor"
      description: The payload for the creation of recovery entity
      example:
        instance: null
        preRecoveryActions:
        - scriptContent: scriptContent
          path: path
          guestCredentials: null
          scriptCredentials: null
          osType: WINDOWS
          guid: guid
          scriptName: scriptName
          reset: true
          type: UNC
        - scriptContent: scriptContent
          path: path
          guestCredentials: null
          scriptCredentials: null
          osType: WINDOWS
          guid: guid
          scriptName: scriptName
          reset: true
          type: UNC
        copyAvailableTime: 1
        backupSet: null
        recoveryPoint: 9
        validationFailureReason: validationFailureReason
        recoveryStatus: NO_STATUS
        recoveryGroup: null
        lastRecoveryJobId: 1
        validationResults:
        - output: output
          failureReason: failureReason
          name: name
          validationStatus: null
        - output: output
          failureReason: failureReason
          name: name
          validationStatus: null
        osType: null
        client: null
        postRecoveryActions:
        - null
        - null
        id: 0
        installedWorkloads:
        - null
        - null
        validationStatus: NO_STATUS
        virtualMachine:
          GUID: GUID
          name: name
        workload: GENERIC
        recoveryStatusNotReadyCategory: NONE = 0
        connectionDetails:
          vmHostName: vmHostName
          guestCreds: null
          topologyDetails:
            serverGroups:
            - null
            - null
            networkGateway:
            - hostname: hostname
              port: 48406
            - hostname: hostname
              port: 48406
          vmClientName: vmClientName
          domainCreds: null
          csCreds: null
        sourceVendor: NONE
        executionOrder:
          priority: 3
          order: 2
          group: 4
        recoveryFailureReason: recoveryFailureReason
        target: null
        recoveryPointDetails:
          entityRecoveryPointCategory: LATEST
          entityRecoveryPoint: 2
          timeZoneId: 7
          inheritedFrom: RECOVERY_GROUP
        recoveryStatusNotReadyReason: recoveryStatusNotReadyReason
        recoveryConfiguration:
          mediaAgent: null
          copyPrecedence: 1
          configuration:
            azure:
              destinationVM: destinationVM
              resourceGroup: resourceGroup
              sourceVMGuid: sourceVMGuid
              testFailoverVmSize: testFailoverVmSize
              overrideReplicationOptions:
                testFailoverVirtualNetwork:
                  subnetId: subnetId
                  networkName: networkName
                  networkAddressDetails:
                    subnetId: subnetId
                    publicIpAddress: publicIpAddress
                    publicIpAddressId: publicIpAddressId
                    networkId: networkId
                    privateIpAddress: privateIpAddress
                  publicIPaddressID: publicIPaddressID
                  networkId: networkId
                  networkDisplayName: networkDisplayName
                  privateIPaddress: privateIPaddress
                  publicIPAddress: publicIPAddress
                securityGroup:
                  name: name
                  id: id
                availabilityZone: availabilityZone
                virtualNetwork: null
              sourceVM: sourceVM
              createPublicIP: true
              restoreAsManagedVm: true
              vmSize: vmSize
              diskType: diskType
              storageAccount: storageAccount
              region: region
          credentials: null
          advancedOptions:
            azure:
              deployVmOnlyDuringfailover: true
              unconditionalOverwrite: false
          imageDetails:
            vmTemplate: null
            vmCreds:
              credentials:
                password: password
                name: name
              savedCredentials: null
            skipOSDisk: false
          hardwareConfiguration:
            volumeConfiguration:
            - totalSize: 5
              disks:
              - null
              - null
              name: name
              enabled: true
            - totalSize: 5
              disks:
              - null
              - null
              name: name
              enabled: true
            dataDiskConfiguration:
            - diskSize: 5
              provisioningType: THIN
              name: name
              diskType: ISCSI
            - diskSize: 5
              provisioningType: THIN
              name: name
              diskType: ISCSI
            systemDiskConfiguration: null
          dbConfig:
            server: null
            databases:
            - fileMappings:
              - destination: null
                source:
                  logicalName: logicalName
                  physicalPath: physicalPath
              - destination: null
                source:
                  logicalName: logicalName
                  physicalPath: physicalPath
              destinationName: destinationName
              id: 6
              sourceName: sourceName
            - fileMappings:
              - destination: null
                source:
                  logicalName: logicalName
                  physicalPath: physicalPath
              - destination: null
                source:
                  logicalName: logicalName
                  physicalPath: physicalPath
              destinationName: destinationName
              id: 6
              sourceName: sourceName
            instance: null
        vmGroup: null
        name: name
        blockSysrepForRecovery: true
        entity:
          name: name
          id: 0
    RecoveryConfiguration:
      title: RecoveryConfiguration
      type: object
      properties:
        advancedOptions:
          $ref: "#/components/schemas/AdvancedRecoveryConfiguration"
        configuration:
          $ref: "#/components/schemas/VMRecoveryConfiguration"
        dbConfig:
          $ref: "#/components/schemas/DBRecoveryConfiguration"
        imageDetails:
          $ref: "#/components/schemas/VMImageDetails"
        mediaAgent:
          $ref: "#/components/schemas/IdName"
        copyPrecedence:
          type: integer
          description: Copy precedence for the copy used for the restore
          format: int32
        hardwareConfiguration:
          $ref: "#/components/schemas/HardwareConfiguration"
        credentials:
          $ref: "#/components/schemas/guestCredentialInfo"
      example:
        mediaAgent: null
        copyPrecedence: 1
        configuration:
          azure:
            destinationVM: destinationVM
            resourceGroup: resourceGroup
            sourceVMGuid: sourceVMGuid
            testFailoverVmSize: testFailoverVmSize
            overrideReplicationOptions:
              testFailoverVirtualNetwork:
                subnetId: subnetId
                networkName: networkName
                networkAddressDetails:
                  subnetId: subnetId
                  publicIpAddress: publicIpAddress
                  publicIpAddressId: publicIpAddressId
                  networkId: networkId
                  privateIpAddress: privateIpAddress
                publicIPaddressID: publicIPaddressID
                networkId: networkId
                networkDisplayName: networkDisplayName
                privateIPaddress: privateIPaddress
                publicIPAddress: publicIPAddress
              securityGroup:
                name: name
                id: id
              availabilityZone: availabilityZone
              virtualNetwork: null
            sourceVM: sourceVM
            createPublicIP: true
            restoreAsManagedVm: true
            vmSize: vmSize
            diskType: diskType
            storageAccount: storageAccount
            region: region
        credentials: null
        advancedOptions:
          azure:
            deployVmOnlyDuringfailover: true
            unconditionalOverwrite: false
        imageDetails:
          vmTemplate: null
          vmCreds:
            credentials:
              password: password
              name: name
            savedCredentials: null
          skipOSDisk: false
        hardwareConfiguration:
          volumeConfiguration:
          - totalSize: 5
            disks:
            - null
            - null
            name: name
            enabled: true
          - totalSize: 5
            disks:
            - null
            - null
            name: name
            enabled: true
          dataDiskConfiguration:
          - diskSize: 5
            provisioningType: THIN
            name: name
            diskType: ISCSI
          - diskSize: 5
            provisioningType: THIN
            name: name
            diskType: ISCSI
          systemDiskConfiguration: null
        dbConfig:
          server: null
          databases:
          - fileMappings:
            - destination: null
              source:
                logicalName: logicalName
                physicalPath: physicalPath
            - destination: null
              source:
                logicalName: logicalName
                physicalPath: physicalPath
            destinationName: destinationName
            id: 6
            sourceName: sourceName
          - fileMappings:
            - destination: null
              source:
                logicalName: logicalName
                physicalPath: physicalPath
            - destination: null
              source:
                logicalName: logicalName
                physicalPath: physicalPath
            destinationName: destinationName
            id: 6
            sourceName: sourceName
          instance: null
    RecoveryExpirationOptions:
      title: RecoveryExpirationOptions
      type: object
      properties:
        enableExpirationOption:
          type: boolean
          description: "If true, cleans up recovered VMs after the set daysToExpire\
            \ value"
          default: true
        daysToExpire:
          type: integer
          description: Number of days after which recovered VMs are automatically
            cleaned up
          format: int32
          default: 7
        isRescuedCommServe:
          type: boolean
          description: Whether the CommServe is rescued or not
        expirationTime:
          type: integer
          description: Timestamp when the clean up of all recovered VMs happens on
            the rescued CommServe. It happens 4 hours before the CommServe expiration
            time
          format: int32
      example:
        enableExpirationOption: true
        daysToExpire: 5
        expirationTime: 2
        isRescuedCommServe: true
    AdvancedRecoveryConfiguration:
      title: AdvancedRecoveryConfiguration
      type: object
      properties:
        azure:
          $ref: "#/components/schemas/ReplicationGroupAdvOptionsAzure"
      example:
        azure:
          deployVmOnlyDuringfailover: true
          unconditionalOverwrite: false
    VMImageDetails:
      title: VMImageDetails
      type: object
      properties:
        vmCreds:
          $ref: "#/components/schemas/guestCredentialInfo"
        vmTemplate:
          $ref: "#/components/schemas/NameGUID"
        skipOSDisk:
          type: boolean
          description: Determine if OS disk should be attached to new VM during the
            disk attach restore
          default: false
      example:
        vmTemplate: null
        vmCreds:
          credentials:
            password: password
            name: name
          savedCredentials: null
        skipOSDisk: false
    VMRecoveryConfiguration:
      title: VMRecoveryConfiguration
      type: object
      properties:
        azure:
          $ref: "#/components/schemas/ReplicationConfigurationAzure"
      example:
        azure:
          destinationVM: destinationVM
          resourceGroup: resourceGroup
          sourceVMGuid: sourceVMGuid
          testFailoverVmSize: testFailoverVmSize
          overrideReplicationOptions:
            testFailoverVirtualNetwork:
              subnetId: subnetId
              networkName: networkName
              networkAddressDetails:
                subnetId: subnetId
                publicIpAddress: publicIpAddress
                publicIpAddressId: publicIpAddressId
                networkId: networkId
                privateIpAddress: privateIpAddress
              publicIPaddressID: publicIPaddressID
              networkId: networkId
              networkDisplayName: networkDisplayName
              privateIPaddress: privateIPaddress
              publicIPAddress: publicIPAddress
            securityGroup:
              name: name
              id: id
            availabilityZone: availabilityZone
            virtualNetwork: null
          sourceVM: sourceVM
          createPublicIP: true
          restoreAsManagedVm: true
          vmSize: vmSize
          diskType: diskType
          storageAccount: storageAccount
          region: region
    DBRecoveryConfigurationDatabaseFile:
      title: DBRecoveryConfigurationDatabaseFile
      type: object
      properties:
        logicalName:
          type: string
          description: Logical name of the file
        physicalPath:
          type: string
          description: Physical path of the file
      example:
        logicalName: logicalName
        physicalPath: physicalPath
    DBRecoveryConfigurationDatabaseFileMapping:
      title: DBRecoveryConfigurationDatabaseFile
      type: object
      properties:
        source:
          $ref: "#/components/schemas/DBRecoveryConfigurationDatabaseFile"
        destination:
          $ref: "#/components/schemas/DBRecoveryConfigurationDatabaseFile"
      example:
        destination: null
        source:
          logicalName: logicalName
          physicalPath: physicalPath
    DBRecoveryConfigurationDatabase:
      title: DBRecoveryConfigurationDatabase
      type: object
      properties:
        id:
          type: integer
          description: ID of the source database
          format: int64
        sourceName:
          type: string
          description: Name of the source database
        destinationName:
          type: string
          description: Name of the destination database
        fileMappings:
          type: array
          items:
            $ref: "#/components/schemas/DBRecoveryConfigurationDatabaseFileMapping"
      example:
        fileMappings:
        - destination: null
          source:
            logicalName: logicalName
            physicalPath: physicalPath
        - destination: null
          source:
            logicalName: logicalName
            physicalPath: physicalPath
        destinationName: destinationName
        id: 6
        sourceName: sourceName
    DBRecoveryConfiguration:
      title: DBRecoveryConfiguration
      type: object
      properties:
        server:
          $ref: "#/components/schemas/IdName"
        instance:
          $ref: "#/components/schemas/IdName"
        databases:
          type: array
          items:
            $ref: "#/components/schemas/DBRecoveryConfigurationDatabase"
      example:
        server: null
        databases:
        - fileMappings:
          - destination: null
            source:
              logicalName: logicalName
              physicalPath: physicalPath
          - destination: null
            source:
              logicalName: logicalName
              physicalPath: physicalPath
          destinationName: destinationName
          id: 6
          sourceName: sourceName
        - fileMappings:
          - destination: null
            source:
              logicalName: logicalName
              physicalPath: physicalPath
          - destination: null
            source:
              logicalName: logicalName
              physicalPath: physicalPath
          destinationName: destinationName
          id: 6
          sourceName: sourceName
        instance: null
    RecoveryActivityType:
      title: RecoveryActivityType
      type: string
      description: Type of recovery activity
      enum:
      - WORKFLOW
    RecoveryActivity:
      title: RecoveryActivity
      type: object
      properties:
        id:
          type: integer
          description: Id of the recovery activity
          format: int32
        name:
          type: string
          description: Name of the recovery activity
        executionOrder:
          $ref: "#/components/schemas/RecoveryEntityExecutionInfo"
        workflow:
          $ref: "#/components/schemas/IdName"
        activityType:
          $ref: "#/components/schemas/RecoveryActivityType"
    RecoveryEntityExecutionInfo:
      title: RecoveryEntityExecutionInfo
      type: object
      properties:
        priority:
          type: integer
          description: Decides the priority of group execution
          format: int32
        order:
          type: integer
          description: Decides the priority of entites within a group
          format: int32
        group:
          type: integer
          description: Group ID to group similar entities together
          format: int32
      example:
        priority: 3
        order: 2
        group: 4
    RecoveryAction:
      title: RecoveryAction
      type: string
      description: Recovery Action
      enum:
      - CREATE
      - UPDATE
      - DELETE
    RecoveryGroupRPDetails:
      title: RecoveryGroupRPDetails
      type: object
      properties:
        recoveryPoint:
          type: integer
          description: Timestamp for group restore in case of disaster
          format: int32
          default: 0
        recoveryPointCategory:
          type: string
          description: Type of recovery point category
          default: LATEST
          enum:
          - LATEST
          - POINT_IN_TIME
          - AUTOMATIC
      description: Contains the information regarding the recovery group level recoveryPoint
        selection
      example:
        recoveryPointCategory: LATEST
        recoveryPoint: 1
    RecoveryEntityRPDetails:
      title: RecoveryEntityRPDetails
      type: object
      properties:
        entityRecoveryPoint:
          type: integer
          description: "Timestamp for entity restore in case of disaster, default\
            \ value is 0 as latest recovery point"
          format: int32
          default: 0
        entityRecoveryPointCategory:
          type: string
          description: Type of recovery point category
          default: LATEST
          enum:
          - LATEST
          - POINT_IN_TIME
          - AUTOMATIC
        inheritedFrom:
          type: string
          description: "Describes from where the recovery point is inherited from.\
            \ If not provided, recovery point will be used as if it is set at recovery\
            \ group level"
          default: RECOVERY_GROUP
          enum:
          - RECOVERY_GROUP
          - RECOVERY_ENTITY
        timeZoneId:
          type: integer
          description: TimeZone Id of the CS
          format: int32
          default: 0
      description: Contains the information regarding the recovery entity level recoveryPoint
        selection
      example:
        entityRecoveryPointCategory: LATEST
        entityRecoveryPoint: 2
        timeZoneId: 7
        inheritedFrom: RECOVERY_GROUP
    RecoveryGroupListResp:
      title: RecoveryGroupListResp
      type: object
      properties:
        recoveryGroups:
          type: array
          items:
            $ref: "#/components/schemas/RecoveryGroup"
      example:
        recoveryGroups:
        - delayBetweenPriorityMachines: 6
          recoveryExpirationOptions:
            enableExpirationOption: true
            daysToExpire: 5
            expirationTime: 2
            isRescuedCommServe: true
          name: name
          continueOnFailure: false
          action: ""
          postRecoveryActions:
          - scriptContent: scriptContent
            path: path
            guestCredentials: null
            scriptCredentials: null
            osType: WINDOWS
            guid: guid
            scriptName: scriptName
            reset: true
            type: UNC
          - scriptContent: scriptContent
            path: path
            guestCredentials: null
            scriptCredentials: null
            osType: WINDOWS
            guid: guid
            scriptName: scriptName
            reset: true
            type: UNC
          id: 0
          recoveryPoint: 5
          target:
            name: name
            id: 0
          recoveryPointDetails:
            recoveryPointCategory: LATEST
            recoveryPoint: 1
        - delayBetweenPriorityMachines: 6
          recoveryExpirationOptions:
            enableExpirationOption: true
            daysToExpire: 5
            expirationTime: 2
            isRescuedCommServe: true
          name: name
          continueOnFailure: false
          action: ""
          postRecoveryActions:
          - scriptContent: scriptContent
            path: path
            guestCredentials: null
            scriptCredentials: null
            osType: WINDOWS
            guid: guid
            scriptName: scriptName
            reset: true
            type: UNC
          - scriptContent: scriptContent
            path: path
            guestCredentials: null
            scriptCredentials: null
            osType: WINDOWS
            guid: guid
            scriptName: scriptName
            reset: true
            type: UNC
          id: 0
          recoveryPoint: 5
          target:
            name: name
            id: 0
          recoveryPointDetails:
            recoveryPointCategory: LATEST
            recoveryPoint: 1
    GetRecoveryGroupDetailsResp:
      title: GetRecoveryGroupDetailsResp
      type: object
      properties:
        recoveryGroup:
          $ref: "#/components/schemas/RecoveryGroup"
        entities:
          type: array
          items:
            $ref: "#/components/schemas/RecoveryEntity"
      example:
        recoveryGroup:
          delayBetweenPriorityMachines: 6
          recoveryExpirationOptions:
            enableExpirationOption: true
            daysToExpire: 5
            expirationTime: 2
            isRescuedCommServe: true
          name: name
          continueOnFailure: false
          action: ""
          postRecoveryActions:
          - scriptContent: scriptContent
            path: path
            guestCredentials: null
            scriptCredentials: null
            osType: WINDOWS
            guid: guid
            scriptName: scriptName
            reset: true
            type: UNC
          - scriptContent: scriptContent
            path: path
            guestCredentials: null
            scriptCredentials: null
            osType: WINDOWS
            guid: guid
            scriptName: scriptName
            reset: true
            type: UNC
          id: 0
          recoveryPoint: 5
          target:
            name: name
            id: 0
          recoveryPointDetails:
            recoveryPointCategory: LATEST
            recoveryPoint: 1
        entities:
        - instance: null
          preRecoveryActions:
          - scriptContent: scriptContent
            path: path
            guestCredentials: null
            scriptCredentials: null
            osType: WINDOWS
            guid: guid
            scriptName: scriptName
            reset: true
            type: UNC
          - scriptContent: scriptContent
            path: path
            guestCredentials: null
            scriptCredentials: null
            osType: WINDOWS
            guid: guid
            scriptName: scriptName
            reset: true
            type: UNC
          copyAvailableTime: 1
          backupSet: null
          recoveryPoint: 9
          validationFailureReason: validationFailureReason
          recoveryStatus: NO_STATUS
          recoveryGroup: null
          lastRecoveryJobId: 1
          validationResults:
          - output: output
            failureReason: failureReason
            name: name
            validationStatus: null
          - output: output
            failureReason: failureReason
            name: name
            validationStatus: null
          osType: null
          client: null
          postRecoveryActions:
          - null
          - null
          id: 0
          installedWorkloads:
          - null
          - null
          validationStatus: NO_STATUS
          virtualMachine:
            GUID: GUID
            name: name
          workload: GENERIC
          recoveryStatusNotReadyCategory: NONE = 0
          connectionDetails:
            vmHostName: vmHostName
            guestCreds: null
            topologyDetails:
              serverGroups:
              - null
              - null
              networkGateway:
              - hostname: hostname
                port: 48406
              - hostname: hostname
                port: 48406
            vmClientName: vmClientName
            domainCreds: null
            csCreds: null
          sourceVendor: NONE
          executionOrder:
            priority: 3
            order: 2
            group: 4
          recoveryFailureReason: recoveryFailureReason
          target: null
          recoveryPointDetails:
            entityRecoveryPointCategory: LATEST
            entityRecoveryPoint: 2
            timeZoneId: 7
            inheritedFrom: RECOVERY_GROUP
          recoveryStatusNotReadyReason: recoveryStatusNotReadyReason
          recoveryConfiguration:
            mediaAgent: null
            copyPrecedence: 1
            configuration:
              azure:
                destinationVM: destinationVM
                resourceGroup: resourceGroup
                sourceVMGuid: sourceVMGuid
                testFailoverVmSize: testFailoverVmSize
                overrideReplicationOptions:
                  testFailoverVirtualNetwork:
                    subnetId: subnetId
                    networkName: networkName
                    networkAddressDetails:
                      subnetId: subnetId
                      publicIpAddress: publicIpAddress
                      publicIpAddressId: publicIpAddressId
                      networkId: networkId
                      privateIpAddress: privateIpAddress
                    publicIPaddressID: publicIPaddressID
                    networkId: networkId
                    networkDisplayName: networkDisplayName
                    privateIPaddress: privateIPaddress
                    publicIPAddress: publicIPAddress
                  securityGroup:
                    name: name
                    id: id
                  availabilityZone: availabilityZone
                  virtualNetwork: null
                sourceVM: sourceVM
                createPublicIP: true
                restoreAsManagedVm: true
                vmSize: vmSize
                diskType: diskType
                storageAccount: storageAccount
                region: region
            credentials: null
            advancedOptions:
              azure:
                deployVmOnlyDuringfailover: true
                unconditionalOverwrite: false
            imageDetails:
              vmTemplate: null
              vmCreds:
                credentials:
                  password: password
                  name: name
                savedCredentials: null
              skipOSDisk: false
            hardwareConfiguration:
              volumeConfiguration:
              - totalSize: 5
                disks:
                - null
                - null
                name: name
                enabled: true
              - totalSize: 5
                disks:
                - null
                - null
                name: name
                enabled: true
              dataDiskConfiguration:
              - diskSize: 5
                provisioningType: THIN
                name: name
                diskType: ISCSI
              - diskSize: 5
                provisioningType: THIN
                name: name
                diskType: ISCSI
              systemDiskConfiguration: null
            dbConfig:
              server: null
              databases:
              - fileMappings:
                - destination: null
                  source:
                    logicalName: logicalName
                    physicalPath: physicalPath
                - destination: null
                  source:
                    logicalName: logicalName
                    physicalPath: physicalPath
                destinationName: destinationName
                id: 6
                sourceName: sourceName
              - fileMappings:
                - destination: null
                  source:
                    logicalName: logicalName
                    physicalPath: physicalPath
                - destination: null
                  source:
                    logicalName: logicalName
                    physicalPath: physicalPath
                destinationName: destinationName
                id: 6
                sourceName: sourceName
              instance: null
          vmGroup: null
          name: name
          blockSysrepForRecovery: true
          entity:
            name: name
            id: 0
        - instance: null
          preRecoveryActions:
          - scriptContent: scriptContent
            path: path
            guestCredentials: null
            scriptCredentials: null
            osType: WINDOWS
            guid: guid
            scriptName: scriptName
            reset: true
            type: UNC
          - scriptContent: scriptContent
            path: path
            guestCredentials: null
            scriptCredentials: null
            osType: WINDOWS
            guid: guid
            scriptName: scriptName
            reset: true
            type: UNC
          copyAvailableTime: 1
          backupSet: null
          recoveryPoint: 9
          validationFailureReason: validationFailureReason
          recoveryStatus: NO_STATUS
          recoveryGroup: null
          lastRecoveryJobId: 1
          validationResults:
          - output: output
            failureReason: failureReason
            name: name
            validationStatus: null
          - output: output
            failureReason: failureReason
            name: name
            validationStatus: null
          osType: null
          client: null
          postRecoveryActions:
          - null
          - null
          id: 0
          installedWorkloads:
          - null
          - null
          validationStatus: NO_STATUS
          virtualMachine:
            GUID: GUID
            name: name
          workload: GENERIC
          recoveryStatusNotReadyCategory: NONE = 0
          connectionDetails:
            vmHostName: vmHostName
            guestCreds: null
            topologyDetails:
              serverGroups:
              - null
              - null
              networkGateway:
              - hostname: hostname
                port: 48406
              - hostname: hostname
                port: 48406
            vmClientName: vmClientName
            domainCreds: null
            csCreds: null
          sourceVendor: NONE
          executionOrder:
            priority: 3
            order: 2
            group: 4
          recoveryFailureReason: recoveryFailureReason
          target: null
          recoveryPointDetails:
            entityRecoveryPointCategory: LATEST
            entityRecoveryPoint: 2
            timeZoneId: 7
            inheritedFrom: RECOVERY_GROUP
          recoveryStatusNotReadyReason: recoveryStatusNotReadyReason
          recoveryConfiguration:
            mediaAgent: null
            copyPrecedence: 1
            configuration:
              azure:
                destinationVM: destinationVM
                resourceGroup: resourceGroup
                sourceVMGuid: sourceVMGuid
                testFailoverVmSize: testFailoverVmSize
                overrideReplicationOptions:
                  testFailoverVirtualNetwork:
                    subnetId: subnetId
                    networkName: networkName
                    networkAddressDetails:
                      subnetId: subnetId
                      publicIpAddress: publicIpAddress
                      publicIpAddressId: publicIpAddressId
                      networkId: networkId
                      privateIpAddress: privateIpAddress
                    publicIPaddressID: publicIPaddressID
                    networkId: networkId
                    networkDisplayName: networkDisplayName
                    privateIPaddress: privateIPaddress
                    publicIPAddress: publicIPAddress
                  securityGroup:
                    name: name
                    id: id
                  availabilityZone: availabilityZone
                  virtualNetwork: null
                sourceVM: sourceVM
                createPublicIP: true
                restoreAsManagedVm: true
                vmSize: vmSize
                diskType: diskType
                storageAccount: storageAccount
                region: region
            credentials: null
            advancedOptions:
              azure:
                deployVmOnlyDuringfailover: true
                unconditionalOverwrite: false
            imageDetails:
              vmTemplate: null
              vmCreds:
                credentials:
                  password: password
                  name: name
                savedCredentials: null
              skipOSDisk: false
            hardwareConfiguration:
              volumeConfiguration:
              - totalSize: 5
                disks:
                - null
                - null
                name: name
                enabled: true
              - totalSize: 5
                disks:
                - null
                - null
                name: name
                enabled: true
              dataDiskConfiguration:
              - diskSize: 5
                provisioningType: THIN
                name: name
                diskType: ISCSI
              - diskSize: 5
                provisioningType: THIN
                name: name
                diskType: ISCSI
              systemDiskConfiguration: null
            dbConfig:
              server: null
              databases:
              - fileMappings:
                - destination: null
                  source:
                    logicalName: logicalName
                    physicalPath: physicalPath
                - destination: null
                  source:
                    logicalName: logicalName
                    physicalPath: physicalPath
                destinationName: destinationName
                id: 6
                sourceName: sourceName
              - fileMappings:
                - destination: null
                  source:
                    logicalName: logicalName
                    physicalPath: physicalPath
                - destination: null
                  source:
                    logicalName: logicalName
                    physicalPath: physicalPath
                destinationName: destinationName
                id: 6
                sourceName: sourceName
              instance: null
          vmGroup: null
          name: name
          blockSysrepForRecovery: true
          entity:
            name: name
            id: 0
    GetRecoveryGroupDetailsReq:
      title: GetRecoveryGroupDetailsReq
      type: object
      properties:
        recoveryGroupIds:
          type: array
          items:
            type: integer
            format: int32
    AzureNetwork:
      title: AzureNetwork
      type: object
      properties:
        networkId:
          type: string
          description: Network unique identifier
        networkDisplayName:
          type: string
          description: Display Name of network
        subnetId:
          type: string
          description: subnet id of network
        networkName:
          type: string
          description: Name of the network
        networkAddressDetails:
          $ref: "#/components/schemas/AzureDestinationInfoNic"
        privateIPaddress:
          type: string
          description: Private IP address of the network
        publicIPAddress:
          type: string
          description: Public IP address of the network
        publicIPaddressID:
          type: string
          description: "Azure public IP address ID. Format: /subscriptions/{Subscription\
            \ ID}/resourceGroups/{Resource Group Name}/providers/Microsoft.Network/publicIPAddresses/{Public\
            \ IP Address Name}."
      description: Network interface for the destination instances
      example:
        subnetId: subnetId
        networkName: networkName
        networkAddressDetails:
          subnetId: subnetId
          publicIpAddress: publicIpAddress
          publicIpAddressId: publicIpAddressId
          networkId: networkId
          privateIpAddress: privateIpAddress
        publicIPaddressID: publicIPaddressID
        networkId: networkId
        networkDisplayName: networkDisplayName
        privateIPaddress: privateIPaddress
        publicIPAddress: publicIPAddress
    GatewayConnectionInfo:
      title: GatewayConnectionInfo
      type: object
      properties:
        hostname:
          type: string
          description: Gateway machine hostname
        port:
          maximum: 65535
          minimum: 1
          type: integer
          format: int32
      description: Gateway information for network topology
      example:
        hostname: hostname
        port: 48406
    AddUpdateRecoveryEntityRequest:
      title: AddUpdateRecoveryEntityRequest
      type: object
      properties:
        entities:
          type: array
          items:
            $ref: "#/components/schemas/RecoveryEntity"
    RecoveryActionRequest:
      title: RecoveryActionRequest
      type: object
      properties:
        recoveryGroup:
          $ref: "#/components/schemas/IdName"
        entities:
          type: array
          items:
            $ref: "#/components/schemas/IdName"
    VMConnectionDetails:
      title: VMConnectionDetails
      type: object
      properties:
        guestCreds:
          $ref: "#/components/schemas/guestCredentialInfo"
        csCreds:
          $ref: "#/components/schemas/guestCredentialInfo"
        topologyDetails:
          $ref: "#/components/schemas/VMTopologyDetails"
        vmHostName:
          type: string
          description: VM host name
        vmClientName:
          type: string
          description: VM client name
        domainCreds:
          $ref: "#/components/schemas/guestCredentialInfo"
      example:
        vmHostName: vmHostName
        guestCreds: null
        topologyDetails:
          serverGroups:
          - null
          - null
          networkGateway:
          - hostname: hostname
            port: 48406
          - hostname: hostname
            port: 48406
        vmClientName: vmClientName
        domainCreds: null
        csCreds: null
    VMTopologyDetails:
      title: VMTopologyDetails
      type: object
      properties:
        serverGroups:
          type: array
          items:
            $ref: "#/components/schemas/IdName"
        networkGateway:
          type: array
          items:
            $ref: "#/components/schemas/GatewayConnectionInfo"
      example:
        serverGroups:
        - null
        - null
        networkGateway:
        - hostname: hostname
          port: 48406
        - hostname: hostname
          port: 48406
    HardwareConfiguration:
      title: HardwareConfiguration
      type: object
      properties:
        dataDiskConfiguration:
          type: array
          items:
            $ref: "#/components/schemas/DiskConfiguration"
        volumeConfiguration:
          type: array
          items:
            $ref: "#/components/schemas/VolumeConfiguration"
        systemDiskConfiguration:
          $ref: "#/components/schemas/DiskConfiguration"
      example:
        volumeConfiguration:
        - totalSize: 5
          disks:
          - null
          - null
          name: name
          enabled: true
        - totalSize: 5
          disks:
          - null
          - null
          name: name
          enabled: true
        dataDiskConfiguration:
        - diskSize: 5
          provisioningType: THIN
          name: name
          diskType: ISCSI
        - diskSize: 5
          provisioningType: THIN
          name: name
          diskType: ISCSI
        systemDiskConfiguration: null
    DiskConfiguration:
      title: DiskConfiguration
      type: object
      properties:
        name:
          type: string
          description: Name of the disk
        provisioningType:
          type: string
          description: Disk provisioning type
          enum:
          - THIN
          - THICK
        diskSize:
          type: integer
          description: Disk size in bytes
          format: int64
        diskType:
          type: string
          description: Type of disk controller
          enum:
          - ISCSI
          - IDE
      example:
        diskSize: 5
        provisioningType: THIN
        name: name
        diskType: ISCSI
    VolumeConfiguration:
      title: VolumeConfiguration
      type: object
      properties:
        name:
          type: string
          description: Name of the volume
        totalSize:
          type: integer
          description: Size for volume in bytes
          format: int64
        enabled:
          type: boolean
          description: Determine if volume is enabled or not
        disks:
          type: array
          items:
            $ref: "#/components/schemas/DiskConfiguration"
      example:
        totalSize: 5
        disks:
        - null
        - null
        name: name
        enabled: true
    LicenseType:
      title: LicenseType
      type: string
      description: The type of licenses supported for LicenseUsage API
      default: CLEANROOM
      enum:
      - CLEANROOM
      - AUTORECOVERY
    LicenseUsageType:
      title: LicenseUsageType
      type: string
      description: The state of a license supported for LicenseUsage API
      enum:
      - PURCHASED
      - LIMITREACHED
      - EXPIRED_OR_NOTPURCHASED
      - NOTAVAILABLE
    LicenseUsageDetails:
      type: object
      properties:
        licenseUsageType:
          $ref: "#/components/schemas/LicenseUsageType"
        licenseType:
          $ref: "#/components/schemas/LicenseType"
        licenseName:
          type: string
          description: The name of the license
        issuedQuantity:
          type: integer
          description: The quantity issued in the license
          format: int32
        usedQuantity:
          type: integer
          description: The quantity used in the license
          format: int32
        error:
          $ref: "#/components/schemas/GenericResp"
      description: License usage information for a given license type
      example:
        licenseType: CLEANROOM
        issuedQuantity: 0
        licenseUsageType: PURCHASED
        licenseName: licenseName
        usedQuantity: 6
        error:
          errorMessage: errorMessage
          errorCode: 0
    RepairSoftware:
      title: RepairSoftware
      required:
      - entities
      - invokedFrom
      type: object
      properties:
        rebootIfRequired:
          type: boolean
          description: Boolean which determines whether to reboot if required.
          default: false
        notifyWhenJobCompletes:
          type: boolean
          description: Boolean which determines whether to notify when software is
            repaired.
          default: false
        username:
          type: string
          description: "If using system credentials, provide the user name"
        password:
          type: string
          description: Corresponding password of the user
        entities:
          type: array
          description: List of all the client and client groups on which repair software
            should be run
          nullable: true
          items:
            $ref: "#/components/schemas/IdNameGUIDType"
        invokedFrom:
          title: invokedFrom
          type: string
          enum:
          - NONE
          - COMMCELL
          - LIBRARY
          - MEDIA
          - DRIVE
          - CLIENT
          - MEDIAAGENT
          - CLIENTGROUP
          - PSEUDOCLIENT
      description: Request body for server and server group repair software
    GetSubclientForSnapEngine:
      title: GetSubclientForSnapEngine
      type: object
      properties:
        subclientDetails:
          type: array
          items:
            $ref: "#/components/schemas/subclientDetails"
      description: 'Response body for getting subclients using particular snapEngine '
      example:
        subclientDetails:
        - snapEngine: null
          subclient:
            name: name
            id: 0
          client: null
        - snapEngine: null
          subclient:
            name: name
            id: 0
          client: null
    subclientDetails:
      title: subclientDetails
      type: object
      properties:
        subclient:
          $ref: "#/components/schemas/IdName"
        client:
          $ref: "#/components/schemas/IdName"
        snapEngine:
          $ref: "#/components/schemas/IdName"
      description: subclient details associated to snap engine
      example:
        snapEngine: null
        subclient:
          name: name
          id: 0
        client: null
    TestCloudConnectionReq:
      title: TestCloudConnectionReq
      required:
      - backupGatewayIds
      - hostname
      - port
      type: object
      properties:
        hostname:
          type: string
          description: Hostname / IP address of cloud resource
        port:
          minimum: 0
          type: integer
          description: Connection port
          format: int32
        backupGatewayIds:
          type: array
          description: Backup gateways list for connectivity verification
          items:
            type: integer
            format: int32
          default: []
      description: Request body for checking cloud resource connectivity
      x-stoplight:
        id: kixzv0sfzv7p1
    CyberResilienceConfigureRequest:
      title: CyberResilienceConfigureRequest
      type: object
      properties:
        indexServer:
          type: integer
          description: Pseudo client id of the Index Server
          format: int32
        credentials:
          type: array
          description: List of Credential ids to be analysed
          items:
            type: integer
            format: int32
      description: ""
      x-stoplight:
        id: cclunsysn7zaq
    CyberResilienceCredentialOperation:
      title: CyberResilienceCredentialOperation
      required:
      - id
      - operation
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: Credential ID
          format: int32
        operation:
          $ref: "#/components/schemas/BasicListOpType"
      description: ""
      x-stoplight:
        id: o9ses0hxdd2q9
    CyberResilienceManageCredentials:
      title: CyberResilienceManageCredentials
      required:
      - credentials
      type: object
      properties:
        credentials:
          type: array
          items:
            $ref: "#/components/schemas/CyberResilienceCredentialOperation"
      x-stoplight:
        id: ffb6d075f4739
    CVFSVersioning:
      type: string
      description: To enable/suspend the versioning on the CVFS S3 bucket
      enum:
      - UNVERSIONED
      - ENABLED
      - SUSPENDED
    CVFSUserOps:
      type: string
      description: Add or remove user's read-write/read-only permission to access
        the bucket
      enum:
      - ADD_READ_WRITE_PERMISSION
      - REMOVE_READ_WRITE_PERMISSION
      - ADD_READ_ONLY_PERMISSION
      - REMOVE_READ_ONLY_PERMISSION
    S3BucketProperties:
      title: S3BucketProperties
      type: object
      properties:
        versioning:
          $ref: "#/components/schemas/CVFSVersioning"
        bucketSize:
          pattern: ^\d+\s(GB)$
          type: string
          description: The size of the bucket in GB
    CreateCVFSS3Bucket:
      title: CreateCVFSS3Bucket
      required:
      - name
      - planName
      - versioning
      allOf:
      - type: object
        properties:
          name:
            type: string
            description: The name of the CVFS S3 bucket to be created
          planName:
            type: string
            description: Plan name to be used to fetch the CVFS S3 cluster
      - $ref: "#/components/schemas/S3BucketProperties"
    UpdateCVFSS3Bucket:
      title: UpdateCVFSS3Bucket
      allOf:
      - type: object
        properties:
          user:
            $ref: "#/components/schemas/IdName"
          userOperation:
            $ref: "#/components/schemas/CVFSUserOps"
      - $ref: "#/components/schemas/S3BucketProperties"
    CreateCVFSS3BucketResp:
      title: CreateCVFSS3BucketResp
      type: object
      properties:
        id:
          type: integer
          description: The ID of the created bucket
          format: int32
        endPointURL:
          type: string
          description: The URL of bucket
      example:
        id: 0
        endPointURL: endPointURL
    GetCVFSS3BucketResp:
      title: GetCVFSS3BucketResp
      type: object
      properties:
        id:
          type: integer
          description: The ID of the bucket
          format: int32
        name:
          type: string
          description: The name of bucket
        endPointURL:
          type: string
          description: The URL of bucket
        spaceUsage:
          type: string
          description: amount of space used in GB
        objectCount:
          type: integer
          description: the count of the number of objects in the bucket
          format: int32
        compressionRatio:
          type: number
          description: the present compression ratio of the bucket
          format: float
        versioning:
          $ref: "#/components/schemas/CVFSVersioning"
        bucketSize:
          pattern: ^\d+\s(GB)$
          type: string
          description: The size of the bucket in GB
      example:
        compressionRatio: 1.4658129
        objectCount: 6
        versioning: UNVERSIONED
        name: name
        id: 0
        endPointURL: endPointURL
        spaceUsage: spaceUsage
        bucketSize: bucketSize
    CreateCVFSS3BucketClone:
      title: CreateCVFSS3BucketClone
      required:
      - copyPrecedence
      - reservationTime
      - toTime
      properties:
        fromTime:
          type: integer
          description: Clone objects in the bucket created on or after the specified
            time in unix format.
          format: int32
        toTime:
          type: integer
          description: Clone objects in the bucket created on or before the specified
            time in unix format.
          format: int32
        copyPrecedence:
          type: integer
          description: The copy precedence to use for the clone operation
          format: int32
        reservationTime:
          type: integer
          description: Clone reservation time in seconds. The clone will be automatically
            deleted after the specified duration.
          format: int32
    CreateCVFSS3BucketCloneResponse:
      title: CreateCVFSS3BucketCloneResponse
      properties:
        cloneId:
          type: integer
          description: cloneId (equivalent to the clone job Id).
          format: int32
        endPointURL:
          type: string
          description: The S3 URL of bucket
      example:
        cloneId: 0
        endPointURL: endPointURL
    GetCVFSS3BucketCloneDetailsResp:
      title: GetCVFSS3BucketCloneDetails
      properties:
        cloneId:
          type: integer
          description: ID of the cloned bucket
          format: int32
        creationTime:
          type: integer
          description: Bucket clone creation time in UNIX format
          format: int32
        expiryTime:
          type: integer
          description: Bucket clone expiry time in UNIX fomat
          format: int32
        copyPrecedenece:
          type: integer
          description: Copy Precedence of the cloned bucket
          format: int32
        endPointURL:
          type: string
          description: The S3 URL of bucket
      example:
        copyPrecedenece: 5
        creationTime: 6
        expiryTime: 1
        cloneId: 0
        endPointURL: endPointURL
    VaultTrackerOperationType:
      type: string
      description: Supported operations for VaultTracker Action
      enum:
      - REACHED_DESTINATION
      - PICKED_UP
      - RETURN_TO_SOURCE
      - ABORT
      - SET_CONTAINER
      - ROLL_BACK
      - DELETE
      - SUSPEND
      - RESUME
      - RECALL_DONE
    SpareGroupTypes:
      type: string
      description: Spare group type of a group from which media belongs
      enum:
      - REGULAR_SPARE_GROUP
      - DEFAULT_SPARE_GROUP
      - UNIDENTIFIED_GROUP
      - DEPRECATED_GROUP
      - FOREIGN_GROUP
      - CLEANING_GROUP
      - OVERWRITE_PROTECT_GROUP
      - CATALOG_GROUP
      - REGULAR_AND_DEFAULT_SPARE_GROUP
    FilterMediaType:
      type: string
      description: Enum to filter the media list based on given type
      enum:
      - ALL
      - SPARE
      - CLEANING
      - RETIRED
      - OVERWRITE_PROTECT
      - AGED
      - FOREIGN
      - CATALOG
      - ASSIGNED
      - ERASABLE
    SlotTypes:
      type: string
      description: Enum to filter the slot list based on given type
      enum:
      - INVALID_SLOT
      - REGULAR_SLOT
      - MAIL_SLOT
      - CAP_SLOT
    ActionType:
      type: string
      description: Enum for Action Type
      enum:
      - NONE
      - REGULAR
      - RECALL
    VaultTrackerOperationInfo:
      title: VaultTrackerOperationInfo
      type: object
      properties:
        actionId:
          type: integer
          description: Id of action
          format: int32
        historyId:
          type: integer
          description: Id of history
          format: int32
        container:
          $ref: "#/components/schemas/IdName"
        mediaList:
          type: array
          description: List of mediaIds
          items:
            type: integer
            format: int32
      description: VaultTrackerAction information to perform operation
    VaultTrackerOperationReq:
      title: VaultTrackerOperationReq
      type: object
      properties:
        vtActionList:
          type: array
          items:
            $ref: "#/components/schemas/VaultTrackerOperationInfo"
        opType:
          $ref: "#/components/schemas/VaultTrackerOperationType"
      description: Payload for VaultTracker Operation
    MediaDetails:
      title: MediaDetails
      type: object
      properties:
        mediaId:
          type: integer
          description: Id of Media
          format: int32
        isExported:
          type: boolean
          description: Indicates whether media is exported or in library
        libraryId:
          type: integer
          description: Id of Library
          format: int32
        libraryName:
          type: string
          description: Name of Library
        status:
          type: string
          description: Status of media
        barcode:
          type: string
          description: Barcode label on media
        storagePolicy:
          $ref: "#/components/schemas/IdName"
        storagePolicyCopy:
          $ref: "#/components/schemas/IdName"
        slot:
          $ref: "#/components/schemas/IdName"
        container:
          $ref: "#/components/schemas/IdName"
        storedDataBytes:
          type: integer
          description: The amount of stored data in media
          format: int64
        lastWriteTime:
          type: integer
          description: The date and time when the last write occurred on media
          format: int64
        retainDataUntil:
          type: integer
          description: The date and time until the data should be retained
          format: int64
        spareGroup:
          $ref: "#/components/schemas/IdName"
        spareGroupType:
          $ref: "#/components/schemas/SpareGroupTypes"
        mediaType:
          $ref: "#/components/schemas/IdName"
        drive:
          $ref: "#/components/schemas/IdName"
        isInMediaGroup:
          type: boolean
          description: Indicates whether media is assigned or not.
        guiMediaAttribute:
          type: integer
          description: Attributes of Media
          format: int64
      description: Details of Media
      example:
        libraryName: libraryName
        container: null
        spareGroupType: ""
        libraryId: 6
        storedDataBytes: 1
        storagePolicy:
          name: name
          id: 0
        mediaType: null
        slot: null
        mediaId: 0
        storagePolicyCopy: null
        lastWriteTime: 5
        retainDataUntil: 5
        isInMediaGroup: true
        spareGroup: null
        isExported: true
        guiMediaAttribute: 2
        drive: null
        barcode: barcode
        status: status
    SlotInfo:
      title: SlotInfo
      type: object
      properties:
        slot:
          $ref: "#/components/schemas/IdName"
        slotType:
          $ref: "#/components/schemas/SlotTypes"
        libraryId:
          type: integer
          description: Id of Library
          format: int32
        mediaId:
          type: integer
          description: Id of Media
          format: int32
        mediaDetails:
          $ref: "#/components/schemas/MediaDetails"
      description: Details of Slot
      example:
        slotType: ""
        libraryId: 0
        slot:
          name: name
          id: 0
        mediaId: 6
        mediaDetails:
          libraryName: libraryName
          container: null
          spareGroupType: ""
          libraryId: 6
          storedDataBytes: 1
          storagePolicy:
            name: name
            id: 0
          mediaType: null
          slot: null
          mediaId: 0
          storagePolicyCopy: null
          lastWriteTime: 5
          retainDataUntil: 5
          isInMediaGroup: true
          spareGroup: null
          isExported: true
          guiMediaAttribute: 2
          drive: null
          barcode: barcode
          status: status
    VaultTrackerAction:
      title: VaultTrackerAction
      type: object
      properties:
        actionId:
          type: integer
          description: Id of Action
          format: int32
        actionType:
          $ref: "#/components/schemas/ActionType"
        actionTypeStr:
          type: string
          description: Action Type
        libraryId:
          type: integer
          description: Id of Library
          format: int32
        userId:
          type: integer
          description: Id of User
          format: int32
        policyId:
          type: integer
          description: Id of Policy
          format: int32
        jobId:
          type: integer
          description: Id of job
          format: int32
        initiator:
          type: string
          description: Initiator of action
        sourceLocation:
          $ref: "#/components/schemas/IdName"
        destinationLocation:
          $ref: "#/components/schemas/IdName"
        transitLocation:
          $ref: "#/components/schemas/IdName"
        actionStatus:
          type: string
          description: Status of action
        startTime:
          type: integer
          description: Start time of action
          format: int64
        completionTime:
          type: integer
          description: End time of action
          format: int64
        recallExpirationTime:
          type: integer
          description: RecallExpirationTime time of action
          format: int64
      description: Info of Vault Tracker Action
      example:
        actionTypeStr: actionTypeStr
        libraryId: 6
        initiator: initiator
        destinationLocation: null
        userId: 1
        actionType: ""
        jobId: 5
        completionTime: 7
        recallExpirationTime: 9
        policyId: 5
        actionStatus: actionStatus
        actionId: 0
        sourceLocation:
          name: name
          id: 0
        transitLocation: null
        startTime: 2
    VaultTrackerMediaDetails:
      title: VaultTrackerMedia
      type: object
      properties:
        actionId:
          type: integer
          description: Id of Action
          format: int32
        mediaId:
          type: integer
          description: Id of media
          format: int32
        historyId:
          type: integer
          description: Id of history
          format: int32
        policyId:
          type: integer
          description: Id of policy
          format: int32
        barcode:
          type: string
          description: Barcode label of media
        state:
          type: string
          description: state of media
        library:
          $ref: "#/components/schemas/IdName"
        sourceLocation:
          $ref: "#/components/schemas/IdName"
        currentLocation:
          $ref: "#/components/schemas/IdName"
        destLocation:
          $ref: "#/components/schemas/IdName"
        container:
          $ref: "#/components/schemas/IdName"
        dueBackForReuseOn:
          type: string
          description: Due back for reuse 'Now' or 'Never'
        exportError:
          type: string
          description: Export error message
        storagePolicy:
          $ref: "#/components/schemas/IdName"
        storagePolicyCopy:
          $ref: "#/components/schemas/IdName"
        isInLibrary:
          type: boolean
          description: Media is in library or not
      description: Info of Vault Tracker Media
      example:
        container: null
        exportError: exportError
        storagePolicy: null
        mediaId: 6
        currentLocation: null
        storagePolicyCopy: null
        library:
          name: name
          id: 0
        policyId: 5
        historyId: 1
        actionId: 0
        sourceLocation: null
        state: state
        dueBackForReuseOn: dueBackForReuseOn
        isInLibrary: true
        barcode: barcode
        destLocation: null
    GetMediaListResp:
      title: GetMediaListResp
      type: object
      properties:
        mediaDetailsList:
          type: array
          items:
            $ref: "#/components/schemas/MediaDetails"
      description: Media List for Library
      example:
        mediaDetailsList:
        - libraryName: libraryName
          container: null
          spareGroupType: ""
          libraryId: 6
          storedDataBytes: 1
          storagePolicy:
            name: name
            id: 0
          mediaType: null
          slot: null
          mediaId: 0
          storagePolicyCopy: null
          lastWriteTime: 5
          retainDataUntil: 5
          isInMediaGroup: true
          spareGroup: null
          isExported: true
          guiMediaAttribute: 2
          drive: null
          barcode: barcode
          status: status
        - libraryName: libraryName
          container: null
          spareGroupType: ""
          libraryId: 6
          storedDataBytes: 1
          storagePolicy:
            name: name
            id: 0
          mediaType: null
          slot: null
          mediaId: 0
          storagePolicyCopy: null
          lastWriteTime: 5
          retainDataUntil: 5
          isInMediaGroup: true
          spareGroup: null
          isExported: true
          guiMediaAttribute: 2
          drive: null
          barcode: barcode
          status: status
    GetSlotListResp:
      title: GetSlotListResp
      type: object
      properties:
        slotList:
          type: array
          items:
            $ref: "#/components/schemas/SlotInfo"
      description: Slot List for Library
      example:
        slotList:
        - slotType: ""
          libraryId: 0
          slot:
            name: name
            id: 0
          mediaId: 6
          mediaDetails:
            libraryName: libraryName
            container: null
            spareGroupType: ""
            libraryId: 6
            storedDataBytes: 1
            storagePolicy:
              name: name
              id: 0
            mediaType: null
            slot: null
            mediaId: 0
            storagePolicyCopy: null
            lastWriteTime: 5
            retainDataUntil: 5
            isInMediaGroup: true
            spareGroup: null
            isExported: true
            guiMediaAttribute: 2
            drive: null
            barcode: barcode
            status: status
        - slotType: ""
          libraryId: 0
          slot:
            name: name
            id: 0
          mediaId: 6
          mediaDetails:
            libraryName: libraryName
            container: null
            spareGroupType: ""
            libraryId: 6
            storedDataBytes: 1
            storagePolicy:
              name: name
              id: 0
            mediaType: null
            slot: null
            mediaId: 0
            storagePolicyCopy: null
            lastWriteTime: 5
            retainDataUntil: 5
            isInMediaGroup: true
            spareGroup: null
            isExported: true
            guiMediaAttribute: 2
            drive: null
            barcode: barcode
            status: status
    GetVaultTrackerActionListResp:
      title: GetVaultTrackerActionListResp
      type: object
      properties:
        vaultTrackerActionList:
          type: array
          items:
            $ref: "#/components/schemas/VaultTrackerAction"
      description: Vault Tracker Action List
      example:
        vaultTrackerActionList:
        - actionTypeStr: actionTypeStr
          libraryId: 6
          initiator: initiator
          destinationLocation: null
          userId: 1
          actionType: ""
          jobId: 5
          completionTime: 7
          recallExpirationTime: 9
          policyId: 5
          actionStatus: actionStatus
          actionId: 0
          sourceLocation:
            name: name
            id: 0
          transitLocation: null
          startTime: 2
        - actionTypeStr: actionTypeStr
          libraryId: 6
          initiator: initiator
          destinationLocation: null
          userId: 1
          actionType: ""
          jobId: 5
          completionTime: 7
          recallExpirationTime: 9
          policyId: 5
          actionStatus: actionStatus
          actionId: 0
          sourceLocation:
            name: name
            id: 0
          transitLocation: null
          startTime: 2
    GetVaultTrackerMediaDetailsResp:
      title: GetVaultTrackerMediaDetailsResp
      type: object
      properties:
        vaultTrackerMediaDetailsList:
          type: array
          items:
            $ref: "#/components/schemas/VaultTrackerMediaDetails"
      description: List of media tracked by vault tacker
      example:
        vaultTrackerMediaDetailsList:
        - container: null
          exportError: exportError
          storagePolicy: null
          mediaId: 6
          currentLocation: null
          storagePolicyCopy: null
          library:
            name: name
            id: 0
          policyId: 5
          historyId: 1
          actionId: 0
          sourceLocation: null
          state: state
          dueBackForReuseOn: dueBackForReuseOn
          isInLibrary: true
          barcode: barcode
          destLocation: null
        - container: null
          exportError: exportError
          storagePolicy: null
          mediaId: 6
          currentLocation: null
          storagePolicyCopy: null
          library:
            name: name
            id: 0
          policyId: 5
          historyId: 1
          actionId: 0
          sourceLocation: null
          state: state
          dueBackForReuseOn: dueBackForReuseOn
          isInLibrary: true
          barcode: barcode
          destLocation: null
    ListCVFSS3BucketCloneResp:
      title: ListCVFSS3BucketCloneResp
      properties:
        clones:
          type: array
          items:
            $ref: "#/components/schemas/GetCVFSS3BucketCloneDetailsResp"
      example:
        clones:
        - copyPrecedenece: 5
          creationTime: 6
          expiryTime: 1
          cloneId: 0
          endPointURL: endPointURL
        - copyPrecedenece: 5
          creationTime: 6
          expiryTime: 1
          cloneId: 0
          endPointURL: endPointURL
    UpdateCVFSS3CloneReq:
      title: UpdateCVFSS3CloneExpiryTime
      properties:
        expiryTime:
          type: integer
          description: Bucket clone expiry time in UNIX format
          format: int32
    ObjectStorePlanBackupDestination:
      required:
      - backupDestinationName
      - retentionPeriodDays
      - storageType
      type: object
      properties:
        backupDestinationName:
          type: string
          description: Backup destination name
          nullable: true
        storagePool:
          $ref: "#/components/schemas/IdName"
        storageType:
          $ref: "#/components/schemas/StorageType"
        retentionPeriodDays:
          maximum: 9999
          minimum: 1
          type: integer
          description: Retention period in days. -1 can be specified for infinite
            retention.
          format: int32
        useExtendedRetentionRules:
          type: boolean
          description: Use extended retention rules
        extendedRetentionRules:
          $ref: "#/components/schemas/ExtendedRetentionRules"
      oneOf:
      - required:
        - storagePool
      - required:
        - storageTemplateTags
    ObjectStoreBackupPlanRPO:
      type: object
      properties:
        backupFrequency:
          $ref: "#/components/schemas/ObjectStorePlanSchedules"
        fullBackupWindow:
          type: array
          description: Backup window for full backup
          nullable: true
          items:
            $ref: "#/components/schemas/DayAndTime"
      description: Recovery Point Objective (RPO) is the maximum amount of time that
        data can be lost during a service disruption. Your RPO determines the frequency
        of your backup jobs.
    ObjectStorePlanSchedule:
      title: PlanSchedule
      required:
      - backupType
      - schedulePattern
      type: object
      properties:
        scheduleId:
          type: integer
          description: "Id of the schedule if available, required for modifying, deleting\
            \ schedule"
          format: int32
        scheduleName:
          type: string
          description: "Name of the schedule, for modify"
        policyId:
          type: integer
          description: Schedule policy Id to which the schedule belongs
          format: int32
        scheduleOperation:
          type: string
          description: Operation being performed on schedule
          default: MODIFY
          enum:
          - ADD
          - DELETE
          - MODIFY
        schedulePattern:
          $ref: "#/components/schemas/SchedulePattern"
      description: Used to describe single plan schedule information
    ObjectStorePlanSchedules:
      title: PlanSchedules
      type: object
      properties:
        schedules:
          type: array
          nullable: true
          items:
            $ref: "#/components/schemas/ObjectStorePlanSchedule"
        operationType:
          $ref: "#/components/schemas/ListOpType"
    ObjectStorePlanUpdateRPO:
      type: object
      properties:
        backupFrequency:
          $ref: "#/components/schemas/ObjectStorePlanSchedules"
        fullBackupWindow:
          type: array
          description: Backup window for full backup
          nullable: true
          items:
            $ref: "#/components/schemas/DayAndTime"
        SLA:
          $ref: "#/components/schemas/SLAUpdateOptions"
      description: Recovery Point Objective (RPO) is the maximum amount of time that
        data can be lost during a service disruption. Your RPO determines the frequency
        of your backup jobs.
    BkpDestOperation:
      type: string
      description: Operation type for backup destination
      enum:
      - ADD
      - MODIFY
      - OVERWRITE
      - DELETE
    ObjectStorePlanUpdateBkpDest:
      type: object
      properties:
        planBackupDestinationId:
          type: integer
          description: Id of the backup destination to modify/delete
          format: int32
        planBackupDestinationName:
          type: string
          description: Backup Destination Name for add/modify operation
        storagePool:
          $ref: "#/components/schemas/IdName"
        storageType:
          $ref: "#/components/schemas/StorageType"
        retentionPeriodDays:
          maximum: 9999
          minimum: 1
          type: integer
          description: Retention period in days. -1 can be specified for infinite
            retention.
          format: int32
        useExtendedRetentionRules:
          type: boolean
          description: Use extended retention rules(not applicable to the Primary(Snap)
            copy)
        extendedRetentionRules:
          $ref: "#/components/schemas/ExtendedRetentionRules"
        enableDataAging:
          type: boolean
          description: enable or disable Datat aging on the backup destiantion
        sourceCopy:
          $ref: "#/components/schemas/IdName"
      description: Add/Modify backup destinations for ObjectStore Plan
    GetObjectStorePlanBackupDestination:
      type: object
      properties:
        planBackupDestination:
          $ref: "#/components/schemas/IdName"
        backupDestinationName:
          type: string
          description: Backup destination name
          nullable: true
        storagePool:
          $ref: "#/components/schemas/StoragePool"
        storageType:
          $ref: "#/components/schemas/StorageType"
        retentionPeriodDays:
          maximum: 9999
          minimum: 1
          type: integer
          description: Retention period in days. -1 can be specified for infinite
            retention.
          format: int32
        enableDataAging:
          type: boolean
          description: Tells if this copy has data aging enabled
        copyPrecedence:
          type: integer
          description: Order of backup destination copy created in storage policy
          format: int32
        backupsToCopy:
          $ref: "#/components/schemas/PlanFullBackupType"
        isDefault:
          type: boolean
          description: Is this a default backup destination?
        isSnapCopy:
          type: boolean
          description: Is this a snap copy?
        useExtendedRetentionRules:
          type: boolean
          description: Use extended retention rules
        extendedRetentionRules:
          $ref: "#/components/schemas/ExtendedRetentionRules"
      example:
        isDefault: true
        retentionPeriodDays: 7060
        copyPrecedence: 9
        planBackupDestination: null
        backupsToCopy: All_JOBS
        backupDestinationName: backupDestinationName
        isSnapCopy: true
        extendedRetentionRules:
          thirdExtendedRetentionRule: null
          firstExtendedRetentionRule:
            isInfiniteRetention: true
            retentionPeriodDays: 3
            type: null
          secondExtendedRetentionRule: null
        storageType: ALL
        enableDataAging: true
        storagePool:
          deviceType:
            name: DEFAULT
            id: 5
          isArchiveStorage: true
          storageClass: DEFAULT
          retentionPeriodDays: 1
          wormStoragePoolFlag: 5
          name: name
          id: 6
          type: DEDUPLICATION
          region:
            displayName: displayName
            name: name
            id: 2
        useExtendedRetentionRules: true
    ObjectStorePlanRPO:
      type: object
      properties:
        backupFrequency:
          $ref: "#/components/schemas/PlanSchedules"
        fullBackupWindow:
          type: array
          description: Backup window for full backup
          nullable: true
          items:
            $ref: "#/components/schemas/DayAndTime"
        SLA:
          $ref: "#/components/schemas/SLAOptions"
      description: Recovery Point Objective (RPO) is the maximum amount of time that
        data can be lost during a service disruption. Your RPO determines the frequency
        of your backup jobs.
      example:
        fullBackupWindow:
        - dayOfWeek:
          - null
          - null
          startTime: 1
          endTime: 2
        - dayOfWeek:
          - null
          - null
          startTime: 1
          endTime: 2
        SLA:
          exclusionReason: exclusionReason
          inheritedSLAPeriod: 6
          useSystemDefaultSLA: true
          enableAfterDelay: 5
          logSLAMinutes: 6
          inheritedFrom: COMMCELL
          excludeFromSLA: true
          SLAPeriod: 6
        backupFrequency:
          schedules:
          - scheduleName: scheduleName
            scheduleOption:
              daysBetweenAutoConvert: 8
              logsDiskUtilizationPercent: 6
              minBackupIntervalInMins: 6
              logFilesThreshold: 3
              commitFrequencyInHours: 6
              jobRunningTimeInMins: 9
              o365ItemSelectionOption: SELECT_ALL
              useDiskCacheForLogBackups: true
            policyId: 4
            isRetentionBasedSyntheticFull: false
            isAuxCopySchedule: false
            vmOperationType: PLANNED_FAILOVER
            forDatabasesOnly: false
            additionalInfo: additionalInfo
            scheduleOperation: MODIFY
            schedulePattern:
              endDate: 1
              maxBackupIntervalInMins: 9
              timezone: null
              weekOfMonth: FIRST
              daysBetweenSyntheticFulls: 6
              exceptions:
              - onWeekOfTheMonth:
                - null
                - null
                onDates:
                - 16
                - 16
                onDayOfTheWeek:
                - null
                - null
              - onWeekOfTheMonth:
                - null
                - null
                onDates:
                - 16
                - 16
                onDayOfTheWeek:
                - null
                - null
              frequency: 1
              weeklyDays:
              - SUNDAY
              - SUNDAY
              repeatUntilTime: 0
              monthOfYear: JANUARY
              dayOfWeek: SUNDAY
              dayOfMonth: 4
              scheduleFrequencyType: MINUTES
              startTime: 6
              noOfTimes: 4
              repeatIntervalInMinutes: 1
              startDate: 7
            scheduleId: 2
            backupType: FULL
          - scheduleName: scheduleName
            scheduleOption:
              daysBetweenAutoConvert: 8
              logsDiskUtilizationPercent: 6
              minBackupIntervalInMins: 6
              logFilesThreshold: 3
              commitFrequencyInHours: 6
              jobRunningTimeInMins: 9
              o365ItemSelectionOption: SELECT_ALL
              useDiskCacheForLogBackups: true
            policyId: 4
            isRetentionBasedSyntheticFull: false
            isAuxCopySchedule: false
            vmOperationType: PLANNED_FAILOVER
            forDatabasesOnly: false
            additionalInfo: additionalInfo
            scheduleOperation: MODIFY
            schedulePattern:
              endDate: 1
              maxBackupIntervalInMins: 9
              timezone: null
              weekOfMonth: FIRST
              daysBetweenSyntheticFulls: 6
              exceptions:
              - onWeekOfTheMonth:
                - null
                - null
                onDates:
                - 16
                - 16
                onDayOfTheWeek:
                - null
                - null
              - onWeekOfTheMonth:
                - null
                - null
                onDates:
                - 16
                - 16
                onDayOfTheWeek:
                - null
                - null
              frequency: 1
              weeklyDays:
              - SUNDAY
              - SUNDAY
              repeatUntilTime: 0
              monthOfYear: JANUARY
              dayOfWeek: SUNDAY
              dayOfMonth: 4
              scheduleFrequencyType: MINUTES
              startTime: 6
              noOfTimes: 4
              repeatIntervalInMinutes: 1
              startDate: 7
            scheduleId: 2
            backupType: FULL
          operationType: ADD
    CyberResilienceCredentials:
      title: CyberResilienceCredentials
      type: object
      properties:
        credentials:
          type: array
          items:
            $ref: "#/components/schemas/CyberResilienceCredentialDetails"
      example:
        credentials:
        - ""
        - ""
      x-stoplight:
        id: 6rqglvcbqfqto
    CyberResilienceCredentialDetails:
      allOf:
      - $ref: "#/components/schemas/IdName"
      - type: object
        properties:
          vendorType:
            $ref: "#/components/schemas/CloudVendorType"
          configured:
            type: boolean
            description: To signify if the credential is already configured
          lastSyncedAt:
            minimum: 0
            type: integer
            description: Signifies epoch time of last successful sync
            format: int64
    CyberResilienceErrorCode:
      title: CyberResilienceErrorCode
      type: string
      enum:
      - NO_ERROR
      - INVALID_INPUT
      - INDEX_SERVER_NOT_EXIST
      - INDEX_SERVER_INACCESSIBLE
      - INDEX_SERVER_DATA_ANALYTICS_ROLE_MISSING
      - CREDENTIAL_UNSUPPORTED
      - CREDENTIAL_INACCESSIBLE
      - CYBER_RESILIENCE_ALREADY_CONFIGURED
      - CYBER_RESILIENCE_NOT_CONFIGURED
      - DELETING_UNCONFIGURED_CREDENTIAL
      - ADDING_CONFIGURED_CREDENTIAL
      - UNKNOWN_ERROR
      - INTERNAL_SERVER_ERROR
      x-stoplight:
        id: ufdxece4dki0q
    CyberResilienceGenericResponse:
      title: CyberResilienceGenericResponse
      type: object
      properties:
        errorCode:
          $ref: "#/components/schemas/CyberResilienceErrorCode"
        errorMessage:
          type: string
          nullable: true
      example:
        errorMessage: errorMessage
        errorCode: NO_ERROR
      x-stoplight:
        id: fek7tbx17vdeh
    UpdateHypervisorFilterReq:
      title: UpdateHypervisorFilterReq
      type: object
      properties:
        backupsetId:
          type: integer
          description: if not specified the default backupset is modified
          format: int32
        filters:
          $ref: "#/components/schemas/vmContent"
        diskFilters:
          $ref: "#/components/schemas/vmDiskFilterProp"
    GetHypervisorFilterResp:
      title: GetHypervisorFilterResp
      type: object
      properties:
        filters:
          type: array
          items:
            $ref: "#/components/schemas/vmContent"
        diskFilters:
          type: array
          items:
            $ref: "#/components/schemas/vmDiskFilterProp"
      example:
        diskFilters:
        - rules:
          - condition: null
            vmName: vmName
            name: name
            filterType: NONE
            overwrite: false
            value: value
            vmGuid: vmGuid
          - condition: null
            vmName: vmName
            name: name
            filterType: NONE
            overwrite: false
            value: value
            vmGuid: vmGuid
          overwrite: false
        - rules:
          - condition: null
            vmName: vmName
            name: name
            filterType: NONE
            overwrite: false
            value: value
            vmGuid: vmGuid
          - condition: null
            vmName: vmName
            name: name
            filterType: NONE
            overwrite: false
            value: value
            vmGuid: vmGuid
          overwrite: false
        filters:
        - ruleGroups:
          - matchRule: ALL
            rules:
            - condition: CONTAINS
              displayName: displayName
              name: name
              GUID: GUID
              type: null
              value: value
            - condition: CONTAINS
              displayName: displayName
              name: name
              GUID: GUID
              type: null
              value: value
          - matchRule: ALL
            rules:
            - condition: CONTAINS
              displayName: displayName
              name: name
              GUID: GUID
              type: null
              value: value
            - condition: CONTAINS
              displayName: displayName
              name: name
              GUID: GUID
              type: null
              value: value
          virtualMachines:
          - guestCredentialAssocId: 1
            guestCredentials:
              password: password
              userName: userName
            name: name
            GUID: GUID
            type: NONE
            existingCredential:
              credentialId: 1
              credentialName: credentialName
          - guestCredentialAssocId: 1
            guestCredentials:
              password: password
              userName: userName
            name: name
            GUID: GUID
            type: NONE
            existingCredential:
              credentialId: 1
              credentialName: credentialName
          overwrite: false
        - ruleGroups:
          - matchRule: ALL
            rules:
            - condition: CONTAINS
              displayName: displayName
              name: name
              GUID: GUID
              type: null
              value: value
            - condition: CONTAINS
              displayName: displayName
              name: name
              GUID: GUID
              type: null
              value: value
          - matchRule: ALL
            rules:
            - condition: CONTAINS
              displayName: displayName
              name: name
              GUID: GUID
              type: null
              value: value
            - condition: CONTAINS
              displayName: displayName
              name: name
              GUID: GUID
              type: null
              value: value
          virtualMachines:
          - guestCredentialAssocId: 1
            guestCredentials:
              password: password
              userName: userName
            name: name
            GUID: GUID
            type: NONE
            existingCredential:
              credentialId: 1
              credentialName: credentialName
          - guestCredentialAssocId: 1
            guestCredentials:
              password: password
              userName: userName
            name: name
            GUID: GUID
            type: NONE
            existingCredential:
              credentialId: 1
              credentialName: credentialName
          overwrite: false
    ArchiveCheckOperationResp:
      title: ArchiveCheckOperationResp
      type: object
      properties:
        jobInfoList:
          type: array
          items:
            $ref: "#/components/schemas/DDBStoreJobInfo"
        error:
          $ref: "#/components/schemas/GenericResp"
      description: Response for Archive check operation request on storage pool
      example:
        jobInfoList:
        - jobIds:
          - 0
          - 0
          storeName: storeName
          storeId: 6
          error:
            errorMessage: errorMessage
            errorCode: 0
        - jobIds:
          - 0
          - 0
          storeName: storeName
          storeId: 6
          error:
            errorMessage: errorMessage
            errorCode: 0
        error: null
    DDBStoreJobInfo:
      title: DDBStoreJobInfo
      type: object
      properties:
        jobIds:
          type: array
          description: List of JobIds
          items:
            type: integer
            format: int64
        storeId:
          type: integer
          description: Id of the DDB store
          format: int32
        storeName:
          type: string
          description: Name of the DDB store
        error:
          $ref: "#/components/schemas/GenericResp"
      description: DDB Store Jobs Information of a storage pool
      example:
        jobIds:
        - 0
        - 0
        storeName: storeName
        storeId: 6
        error:
          errorMessage: errorMessage
          errorCode: 0
    TestFailoverMonitorMachines:
      title: TestFailoverMonitorMachines
      type: object
      properties:
        operatingSystem:
          minLength: 1
          type: string
          description: OS of the test failover VM
        userCapabilities:
          type: integer
          format: int32
        numberOfDisks:
          type: integer
          description: Number of disk in test failover VM
          format: int32
        memory:
          type: integer
          description: Memory of failover VM
          format: int32
        flags:
          type: integer
          format: int32
        isVirtualLabGateway:
          type: boolean
          description: Vlab configured for test failover operation
        vmAllocPolicyId:
          type: integer
          description: 'recovery target id '
          format: int32
        numberOfCPUs:
          type: integer
          description: number of CPU of test failoverVM
          format: int32
        vmState:
          type: integer
          description: VM state
          format: int32
        modifiedTime:
          type: integer
          description: clone VM modified time in Unix timestamp format
          format: int32
        proxyClient:
          $ref: "#/components/schemas/IdName"
        ipAddress:
          $ref: "#/components/schemas/TestFailoverIPAddress"
        vmLocation:
          $ref: "#/components/schemas/TestFailoverVMLocation"
        expirationTime:
          type: integer
          description: clone VM expiration time in Unix timestamp format
          format: int32
        vm:
          $ref: "#/components/schemas/TestFailoverVMInfo"
        creationTime:
          type: integer
          description: clone VM creation time in Unix timestamp format
          format: int32
        lastPowerOnTime:
          type: integer
          description: Clone VM last power-on time in Unix timestamp format
          format: int32
        creator:
          $ref: "#/components/schemas/IdNameGUID"
        instanceTypeEntity:
          type: string
          description: 'Instance Type Name '
        advancedProperties:
          $ref: "#/components/schemas/TestFailoverAdvancedProp"
        entity:
          $ref: "#/components/schemas/IdName"
      description: Test failover Machine details from Replication monitor
      example:
        modifiedTime: 9
        creator:
          GUID: GUID
          name: name
          id: 0
        memory: 1
        creationTime: 1
        instanceTypeEntity: instanceTypeEntity
        flags: 5
        ipAddress:
          subnet: 3
          address: address
          family: 2
        isVirtualLabGateway: true
        vmLocation:
          hostName: hostName
          dataCenterName: dataCenterName
          vCenter: vCenter
        operatingSystem: operatingSystem
        vmAllocPolicyId: 5
        lastPowerOnTime: 1
        numberOfCPUs: 2
        advancedProperties:
          connectionString: connectionString
          additionalFlags: 1
        userCapabilities: 0
        expirationTime: 4
        vm:
          hostName: hostName
          vmName: vmName
          clientId: 7
          clientName: clientName
          vmGUID: vmGUID
        numberOfDisks: 6
        proxyClient:
          name: name
          id: 0
        vmState: 7
        entity: null
    TestFailoverVMLocation:
      title: TestFailoverVMLocation
      type: object
      properties:
        hostName:
          type: string
          description: host name of the test failover VM
        dataCenterName:
          type: string
          description: datacentername of the test failover VM
        vCenter:
          type: string
          description: vCenter in which test failover VM exists
      description: Test failover VM location information
      example:
        hostName: hostName
        dataCenterName: dataCenterName
        vCenter: vCenter
    TestFailoverVMInfo:
      title: TestFailoverVMInfo
      type: object
      properties:
        hostName:
          minLength: 1
          type: string
          description: hostname of clone VM
        clientName:
          minLength: 1
          type: string
          description: clientname of clone VM
        vmName:
          minLength: 1
          type: string
          description: display name of clone VM
        clientId:
          type: integer
          description: VM client
          format: int32
        vmGUID:
          minLength: 1
          type: string
          description: Clone VM guid
      description: Test failover virtual machine information
      example:
        hostName: hostName
        vmName: vmName
        clientId: 7
        clientName: clientName
        vmGUID: vmGUID
    TestFailoverIPAddress:
      title: TestFailoverIPAddress
      type: object
      properties:
        subnet:
          type: integer
          format: int32
        address:
          type: string
          description: Test failover VM IP address
        family:
          type: integer
          format: int32
      description: 'Test faiover VM IP address '
      example:
        subnet: 3
        address: address
        family: 2
    TestFailoverAdvancedProp:
      title: TestFailoverAdvancedProp
      type: object
      properties:
        connectionString:
          type: string
        additionalFlags:
          type: integer
          format: int32
      description: Test failover advanced properties
      example:
        connectionString: connectionString
        additionalFlags: 1
    CyberResilienceSyncStatus:
      title: CyberResilienceSyncStatus
      type: object
      properties:
        status:
          $ref: "#/components/schemas/DcubeJobState"
        lastSyncedAt:
          type: integer
          format: int64
      example:
        lastSyncedAt: 0
        status: IDLE
      x-stoplight:
        id: 317wpth8v2ox0
    TCOCloudProvider:
      title: TCOCloudProvider
      type: string
      default: AWS
      enum:
      - AWS
      - AZURE
      x-stoplight:
        id: 4on9rq79a687y
    TCOCalculateRequest:
      title: TCOCalculateRequest
      required:
      - cloudProvider
      - dailyRateOfChange
      - numberOfVirtualMachines
      - replicatedSnapsPercentage
      - totalInstantRestoreSnapshot
      - totalRecoveryPoints
      - totalVirtualMachineSize
      type: object
      properties:
        cloudProvider:
          $ref: "#/components/schemas/TCOCloudProvider"
        numberOfVirtualMachines:
          minimum: 0
          type: integer
          description: Total number of Virtual Machines that are included for TCO
            assessment
          format: int32
        totalVirtualMachineSize:
          minimum: 0
          type: integer
          description: Total size of Virtual Machines in GB that are included for
            TCO assessment
          format: int64
        totalRecoveryPoints:
          minimum: 0
          type: integer
          description: Total number of Recovery Points that are included for TCO assessment
          format: int32
        totalInstantRestoreSnapshot:
          minimum: 0
          type: integer
          description: Total number of Instant Restore Snapshots that are included
            for TCO assessment
          format: int32
        dailyRateOfChange:
          minimum: 0
          type: integer
          description: This is the predicted rate of change that impacts the snapshot
            size and backup size
          format: int32
        replicatedSnapsPercentage:
          minimum: 0
          type: integer
          description: This is the total percentage of snapshots replicated that is
            included for TCO assessment
          format: int32
        nativeDiscountPercentage:
          minimum: 0
          type: integer
          description: This is the percentage of the discount that the customer gets
            with the cloud vendor
          format: int32
        commvaultDiscountPercentage:
          minimum: 0
          type: integer
          description: This is the percentage of the discount that the customer gets
            with Commvault
          format: int32
      x-stoplight:
        id: yqfk2xgvvr479
    TCOCostParameters:
      title: TCOCostParameters
      type: object
      properties:
        primarySnapshotStorageCost:
          minimum: 0
          type: integer
          format: int64
        secondarySnapshotStorageCost:
          minimum: 0
          type: integer
          format: int64
        asrTotalVMEnvironment:
          minimum: 0
          type: integer
          format: int64
        primaryCloudStorageUsedCost:
          minimum: 0
          type: integer
          format: int64
        secondaryCloudStorageUsedCost:
          minimum: 0
          type: integer
          format: int64
        protectionCost:
          minimum: 0
          type: integer
          format: int64
        primaryInfraCost:
          minimum: 0
          type: integer
          format: int64
        secondaryInfraCost:
          minimum: 0
          type: integer
          format: int64
        dataTranmissionCost:
          minimum: 0
          type: integer
          format: int64
      example:
        primarySnapshotStorageCost: 0
        secondarySnapshotStorageCost: 0
        primaryCloudStorageUsedCost: 0
        secondaryInfraCost: 0
        secondaryCloudStorageUsedCost: 0
        protectionCost: 0
        primaryInfraCost: 0
        dataTranmissionCost: 0
        asrTotalVMEnvironment: 0
      x-stoplight:
        id: nb1d7fvir5l8p
    TCOCalculateResponse:
      title: TCOCalculateResponse
      type: object
      properties:
        commvault:
          $ref: "#/components/schemas/TCOCostParameters"
        native:
          $ref: "#/components/schemas/TCOCostParameters"
      example:
        native: null
        commvault:
          primarySnapshotStorageCost: 0
          secondarySnapshotStorageCost: 0
          primaryCloudStorageUsedCost: 0
          secondaryInfraCost: 0
          secondaryCloudStorageUsedCost: 0
          protectionCost: 0
          primaryInfraCost: 0
          dataTranmissionCost: 0
          asrTotalVMEnvironment: 0
      x-stoplight:
        id: bobq1018b3ijz
    ValidateVMRestoreReq:
      title: ValidateVMRestoreReq
      type: object
      properties:
        fromTime:
          type: string
          description: "Restore window UTC from time. Valid Formats: yyyy-MM-ddTHH:mm:ss\
            \ or yyyy-MM-ddTHH:mm:sszzz or yyyy-MM-dd"
          example: 2024-04-10T14:00:00
        toTime:
          type: string
          description: "Restore window UTC to time. Valid Formats: yyyy-MM-ddTHH:mm:ss\
            \ or yyyy-MM-ddTHH:mm:sszzz or yyyy-MM-dd"
          example: 2024-04-11T14:00:00
        backupSource:
          type: integer
          description: "Backup source information from where you want to restore.\
            \ 0 (Automatic), 1 (Snap Copy), 2 (Primary), 3 to N (Aux Copy)"
          format: int32
          example: 2
          default: 0
        accessNode:
          $ref: "#/components/schemas/IdName"
        accessNodeGroup:
          $ref: "#/components/schemas/IdName"
        notifyOnJobCompletion:
          type: boolean
          description: Enable email notificaiton for job status. Defaults to false
          default: false
      description: VM restore validate request body
    VMLabList:
      title: VMLabList
      type: object
      properties:
        labs:
          type: array
          items:
            $ref: "#/components/schemas/VMLabSummary"
      description: List of virtual labs
      example:
        labs:
        - expirationTime: 1
          name: name
          id: 0
          state: STOPPED = 0
          vmCount: 6
          target:
            name: name
            id: 0
        - expirationTime: 1
          name: name
          id: 0
          state: STOPPED = 0
          vmCount: 6
          target:
            name: name
            id: 0
    VMLabSummary:
      title: VMLabSummary
      type: object
      properties:
        name:
          type: string
          description: Name of virtual lab
        id:
          type: integer
          description: lab id
          format: int32
        state:
          $ref: "#/components/schemas/VMState"
        vmCount:
          type: integer
          description: Number of virtual machines present in virtual lab
          format: int32
        target:
          $ref: "#/components/schemas/IdName"
        expirationTime:
          type: integer
          description: Expiration time of virtual lab
          format: int32
      description: Summary of virtual labs
      example:
        expirationTime: 1
        name: name
        id: 0
        state: STOPPED = 0
        vmCount: 6
        target:
          name: name
          id: 0
    VMList:
      title: VMList
      type: object
      properties:
        virtualMachines:
          type: array
          items:
            $ref: "#/components/schemas/VMSummary"
      description: List of virtual machines
      example:
        virtualMachines:
        - creator: creator
          expirationTime: 0
          name: name
          ipAddress: ipAddress
          state: STOPPED = 0
          lab:
            name: name
            id: 0
          operatingSystem: operatingSystem
          vmGUID: vmGUID
        - creator: creator
          expirationTime: 0
          name: name
          ipAddress: ipAddress
          state: STOPPED = 0
          lab:
            name: name
            id: 0
          operatingSystem: operatingSystem
          vmGUID: vmGUID
    VMSummary:
      title: VMSummary
      type: object
      properties:
        name:
          type: string
          description: Name of virtual machine
        state:
          $ref: "#/components/schemas/VMState"
        ipAddress:
          type: string
          description: IP address of virtual machine
        operatingSystem:
          type: string
          description: Operating system of virtual machine
        creator:
          type: string
          description: Creator of virtual machine
        expirationTime:
          type: integer
          description: Expiration time of virtual machine
          format: int32
        vmGUID:
          type: string
          description: GUID of virtual machine
        lab:
          $ref: "#/components/schemas/IdName"
      description: Summary of the VMs listed in virtual lab
      example:
        creator: creator
        expirationTime: 0
        name: name
        ipAddress: ipAddress
        state: STOPPED = 0
        lab:
          name: name
          id: 0
        operatingSystem: operatingSystem
        vmGUID: vmGUID
    VMState:
      title: VMState
      type: string
      description: State of VirtualMachine
      enum:
      - STOPPED = 0
      - RUNNING = 1
      - SUSPENDED = 2
      - UNKNOWN = 3
      - ARCHIVED = 4
      - EXPIRED = 5
      - UNAVAILABLE = 6
      - CREATING = 101
      - CLONING = 102
      - CREATING_SNAPSHOT = 103
      - REVERTING_SNAPSHOT = 104
      - DELETING_SNAPSHOT = 105
      - STARTING = 106
      - STOPPING = 107
      - SUSPENDING = 108
      - RESTARTING = 109
      - DELETING = 110
      - RECOVERING = 111
      - RETRIEVING = 112
    VMDetails:
      title: VMDetails
      type: object
      properties:
        name:
          type: string
          description: Name of virtual machine
        state:
          $ref: "#/components/schemas/VMState"
        ipAddress:
          type: string
          description: IP address of virtual machine
        operatingSystem:
          type: string
          description: Operating system of virtual machine
        vendor:
          $ref: "#/components/schemas/VSVendor"
        expirationTime:
          type: integer
          description: Expiration time of virtual machine
          format: int32
        creator:
          type: string
          description: Creator of virtual machine
        description:
          type: string
          description: Description of virtual machine
        owners:
          type: array
          description: List of owners for virtual machine
          items:
            type: string
        numberOfCPUs:
          type: integer
          description: Number of CPUs in virtual machine
          format: int32
        memory:
          type: integer
          description: Memory size of virtual machine
          format: int64
        numberOfNICs:
          type: integer
          description: Number of network interface cards
          format: int32
        networks:
          type: array
          description: List of networks associated with virtual machine
          items:
            type: string
        disks:
          type: array
          description: List of the disks associated with virtual machine
          items:
            $ref: "#/components/schemas/VMDisk"
        isSnapshotSupported:
          type: boolean
          description: Whether the live mount is enabled or disabled
        lab:
          $ref: "#/components/schemas/IdName"
        vmGUID:
          type: string
          description: GUID of virtual machine
      example:
        creator: creator
        memory: 1
        disks:
        - diskSize: 5
          isSystemDisk: true
          label: label
        - diskSize: 5
          isSystemDisk: true
          label: label
        ipAddress: ipAddress
        description: description
        owners:
        - owners
        - owners
        numberOfNICs: 5
        networks:
        - networks
        - networks
        lab:
          name: name
          id: 0
        operatingSystem: operatingSystem
        numberOfCPUs: 6
        isSnapshotSupported: true
        vendor: NONE
        expirationTime: 0
        name: name
        state: STOPPED = 0
        vmGUID: vmGUID
    VMDisk:
      title: VirtualMachineDisk
      type: object
      properties:
        label:
          type: string
          description: Label of disk
        diskSize:
          type: integer
          description: Size of disk associated with virtual machine
          format: int64
        isSystemDisk:
          type: boolean
          description: Whether the disk is system disk or not
      example:
        diskSize: 5
        isSystemDisk: true
        label: label
    VMActionReq:
      title: VMActionReq
      type: object
      properties:
        operation:
          $ref: "#/components/schemas/VMOperationEnum"
        virtualMachines:
          type: array
          items:
            $ref: "#/components/schemas/VMOperationObject"
      description: VMOperation request body
    VMOperationObject:
      title: VMOperationObject
      type: object
      properties:
        GUID:
          type: string
          description: GUID of virtual machine
        owners:
          type: array
          description: list of owners for the virtual machine
          items:
            type: string
        creator:
          type: string
          description: creator of virtual machine
        snapOption:
          type: array
          items:
            $ref: "#/components/schemas/SnapshotOption"
    VMOperationEnum:
      title: VMOperationEnum
      type: string
      enum:
      - CREATE = 0
      - RESTART = 1
      - SHUTDOWN = 2
      - SNAPSHOT = 3
      - RESTORE_SNAP = 4
      - DELETE = 5
      - CLONE = 6
      - PAUSE = 7
      - POWERON = 10
      - EDIT = 11
      - VIEW_SNAPSHOTS = 12
      - DELETE_SNAP_VM = 15
      - RENEW_VM = 17
      - REFRESH_VM = 20
      - EDIT_OWNERS = 21
      - POWER_OFF = 29
      - EDIT_CREATOR = 30
      - REFRESH = 31
      - LIST_OWNERS = 32
      - CREATE_LAB = 34
    MultiCommCell:
      title: MultiCommCell
      type: object
      properties:
        id:
          type: integer
          format: int32
          x-terraform-set-key: true
        name:
          type: string
        aliasName:
          type: string
        GUID:
          type: string
      example:
        aliasName: aliasName
        name: name
        GUID: GUID
        id: 0
    MultiCommCellInfoResp:
      type: object
      properties:
        commcells:
          type: array
          nullable: true
          items:
            $ref: "#/components/schemas/MultiCommCell"
      example:
        commcells:
        - aliasName: aliasName
          name: name
          GUID: GUID
          id: 0
        - aliasName: aliasName
          name: name
          GUID: GUID
          id: 0
    TaskListRequest:
      title: TaskListRequest
      type: object
      properties:
        filter:
          $ref: "#/components/schemas/TaskFilter"
        entity:
          $ref: "#/components/schemas/TaskEntity"
      description: Request body for fetching schedules or policies
    TaskFilter:
      type: object
      properties:
        schedules:
          type: boolean
          description: Set this to true for only schedules
        policy:
          type: boolean
          description: Set this to true for all schedule policies
        operationTypes:
          type: array
          description: List of operation filters
          items:
            type: string
            default: NONE
            enum:
            - NONE
            - BACKUP
            - RESTORE
            - DRBACKUP
            - AUX_COPY
            - REPORT
            - DATA_AGING
            - DOWNLOAD_UPDATES
            - INSTALL_UPDATES
            - SNAP_TO_TAPE
    TaskEntity:
      type: object
      properties:
        subclientId:
          minimum: 0
          type: integer
          format: int32
          default: 0
        storagePolicyId:
          minimum: 0
          type: integer
          format: int32
          default: 0
        copyId:
          minimum: 0
          type: integer
          format: int32
          default: 0
        clientId:
          minimum: 0
          type: integer
          format: int32
          default: 0
        clientGroupId:
          minimum: 0
          type: integer
          format: int32
          default: 0
        applicationId:
          minimum: 0
          type: integer
          format: int32
          default: 0
        libraryId:
          type: integer
          format: int32
          default: 0
        backupsetId:
          type: integer
          format: int32
          default: 0
        instanceId:
          type: integer
          format: int32
          default: 0
        workflowId:
          type: integer
          format: int32
          default: 0
        trackingPolicyId:
          type: integer
          format: int32
          default: 0
      description: select one of below option for filtering
      example:
        copyId: 0
        subclientId: 0
        clientId: 0
        instanceId: 3
        clientGroupId: 0
        libraryId: 7
        backupsetId: 9
        storagePolicyId: 0
        applicationId: 0
        workflowId: 2
        trackingPolicyId: 4
    TaskListResponse:
      type: object
      properties:
        taskDetail:
          type: array
          items:
            $ref: "#/components/schemas/TaskDetail"
      description: List of schedules
      example:
        taskDetail:
        - associations:
          - copyId: 0
            subclientId: 0
            clientId: 0
            instanceId: 3
            clientGroupId: 0
            libraryId: 7
            backupsetId: 9
            storagePolicyId: 0
            applicationId: 0
            workflowId: 2
            trackingPolicyId: 4
          - copyId: 0
            subclientId: 0
            clientId: 0
            instanceId: 3
            clientGroupId: 0
            libraryId: 7
            backupsetId: 9
            storagePolicyId: 0
            applicationId: 0
            workflowId: 2
            trackingPolicyId: 4
          task:
            taskType: 7
            policyType: 1
            taskName: taskName
            taskId: 1
          subTasks:
          - subTask:
              subTaskName: subTaskName
              subTaskType: 1
              options:
                backupOpts:
                  backupLevel: 7
              operationType: 6
            taskOptions: null
          - subTask:
              subTaskName: subTaskName
              subTaskType: 1
              options:
                backupOpts:
                  backupLevel: 7
              operationType: 6
            taskOptions: null
        - associations:
          - copyId: 0
            subclientId: 0
            clientId: 0
            instanceId: 3
            clientGroupId: 0
            libraryId: 7
            backupsetId: 9
            storagePolicyId: 0
            applicationId: 0
            workflowId: 2
            trackingPolicyId: 4
          - copyId: 0
            subclientId: 0
            clientId: 0
            instanceId: 3
            clientGroupId: 0
            libraryId: 7
            backupsetId: 9
            storagePolicyId: 0
            applicationId: 0
            workflowId: 2
            trackingPolicyId: 4
          task:
            taskType: 7
            policyType: 1
            taskName: taskName
            taskId: 1
          subTasks:
          - subTask:
              subTaskName: subTaskName
              subTaskType: 1
              options:
                backupOpts:
                  backupLevel: 7
              operationType: 6
            taskOptions: null
          - subTask:
              subTaskName: subTaskName
              subTaskType: 1
              options:
                backupOpts:
                  backupLevel: 7
              operationType: 6
            taskOptions: null
    TaskDetail:
      type: object
      properties:
        associations:
          type: array
          items:
            $ref: "#/components/schemas/TaskEntity"
        task:
          $ref: "#/components/schemas/TaskObject"
        subTasks:
          type: array
          items:
            $ref: "#/components/schemas/SubTaskDetail"
      description: Details of a task
      example:
        associations:
        - copyId: 0
          subclientId: 0
          clientId: 0
          instanceId: 3
          clientGroupId: 0
          libraryId: 7
          backupsetId: 9
          storagePolicyId: 0
          applicationId: 0
          workflowId: 2
          trackingPolicyId: 4
        - copyId: 0
          subclientId: 0
          clientId: 0
          instanceId: 3
          clientGroupId: 0
          libraryId: 7
          backupsetId: 9
          storagePolicyId: 0
          applicationId: 0
          workflowId: 2
          trackingPolicyId: 4
        task:
          taskType: 7
          policyType: 1
          taskName: taskName
          taskId: 1
        subTasks:
        - subTask:
            subTaskName: subTaskName
            subTaskType: 1
            options:
              backupOpts:
                backupLevel: 7
            operationType: 6
          taskOptions: null
        - subTask:
            subTaskName: subTaskName
            subTaskType: 1
            options:
              backupOpts:
                backupLevel: 7
            operationType: 6
          taskOptions: null
    TaskObject:
      type: object
      properties:
        taskType:
          type: integer
          format: int32
        policyType:
          type: integer
          format: int32
        taskName:
          type: string
        taskId:
          type: integer
          format: int32
      example:
        taskType: 7
        policyType: 1
        taskName: taskName
        taskId: 1
    SubTaskDetail:
      type: object
      properties:
        subTask:
          $ref: "#/components/schemas/subTaskObject"
        taskOptions:
          $ref: "#/components/schemas/TaskOptions"
      example:
        subTask:
          subTaskName: subTaskName
          subTaskType: 1
          options:
            backupOpts:
              backupLevel: 7
          operationType: 6
        taskOptions: null
    subTaskObject:
      type: object
      properties:
        subTaskName:
          type: string
        subTaskType:
          type: integer
          format: int32
        operationType:
          type: integer
          format: int32
        options:
          $ref: "#/components/schemas/TaskOptions"
      example:
        subTaskName: subTaskName
        subTaskType: 1
        options:
          backupOpts:
            backupLevel: 7
        operationType: 6
    TaskOptions:
      type: object
      properties:
        backupOpts:
          $ref: "#/components/schemas/BackupOptions"
      example:
        backupOpts:
          backupLevel: 7
    BackupOptions:
      type: object
      properties:
        backupLevel:
          type: integer
          format: int32
      example:
        backupLevel: 7
    SnapshotOption:
      title: SnapshotOption
      type: object
      properties:
        name:
          type: string
          description: Name of snapshot
        desc:
          type: string
          description: Description of snapshot
        id:
          type: string
          description: ID of snapshot
    VMSnapshotResp:
      title: VMSnapshotResp
      type: object
      properties:
        snapshots:
          type: array
          description: list of snapshots
          items:
            $ref: "#/components/schemas/VMSnapshot"
      example:
        snapshots:
        - creationTime: 0
          name: name
          id: id
          parentId: parentId
          desc: desc
        - creationTime: 0
          name: name
          id: id
          parentId: parentId
          desc: desc
    VMSnapshot:
      title: VMSnapshot
      type: object
      properties:
        name:
          type: string
          description: name of snapshot
        desc:
          type: string
          description: snapshot description
        id:
          type: string
          description: snapshot ID
        creationTime:
          type: integer
          description: creation time of snapshot
          format: int32
        parentId:
          type: string
          description: parent ID of snapshot
      example:
        creationTime: 0
        name: name
        id: id
        parentId: parentId
        desc: desc
    PSAType:
      title: PSAType
      type: string
      enum:
      - CONNECTWISE
      - AUTOTASK
    PSAReq:
      title: PSAReq
      required:
      - companyName
      - credential
      - type
      - url
      type: object
      properties:
        type:
          $ref: "#/components/schemas/PSAType"
        url:
          type: string
          description: PSA url
        companyName:
          type: string
          description: PSA company Name
        credential:
          $ref: "#/components/schemas/IdName"
      description: Request body for creating or updating PSA Entity
    AlertTypeOptions:
      title: AlertTypeOptions
      type: object
      properties:
        alertTypeId:
          type: integer
          description: Alert type Id
          format: int64
        alertTypeName:
          type: string
          description: Alert type Name
        alertCriteriaId:
          type: integer
          description: Alert criteria Id
          format: int64
        alertCriteriaName:
          type: string
          description: Alert criteria Name
      description: Request body for enabling ticketing for given alert type options
    PSATicketingReq:
      title: PSATicketingReq
      required:
      - enable
      - type
      type: object
      properties:
        type:
          $ref: "#/components/schemas/PSAType"
        enable:
          type: boolean
          description: Ticketing status for current PSA
        alerttypeOptions:
          type: array
          description: alert type list
          items:
            $ref: "#/components/schemas/AlertTypeOptions"
      description: Request body for enabling ticketing for given alert type options
    PSADetails:
      title: PSADetails
      type: object
      properties:
        type:
          $ref: "#/components/schemas/PSAType"
        url:
          type: string
          description: PSA url
        companyName:
          type: string
          description: PSA company Name
        credential:
          $ref: "#/components/schemas/IdName"
      description: PSA Entity for Get Requests
    PSACompanyStatusEnum:
      title: PSACompanyStatusEnum
      type: string
      enum:
      - IMPORTING
      - IMPORTED
      - DISCOVERED
      - FAILED
    PSADiscoverStatus:
      title: PSADiscoverStatus
      type: object
      properties:
        status:
          $ref: "#/components/schemas/PSACompanyStatusEnum"
        reason:
          type: string
          description: Reason for failure
          nullable: true
    PSADiscoveredCompany:
      title: DiscoveredCompanies
      type: object
      properties:
        externalCompanyName:
          type: string
          description: PSA Company Name
        externalCompanyId:
          type: string
          description: PSA Company Id
        internalCompanyName:
          type: string
          description: Commvault Company Name
        internalCompanyId:
          type: string
          description: Commvault Company Id
        statusInfo:
          $ref: "#/components/schemas/PSADiscoverStatus"
        commcell:
          $ref: "#/components/schemas/IdName"
      description: Discovered Company for the PSA
    PSAImportCompany:
      title: ImportCompany
      required:
      - externalCompanyId
      - externalCompanyName
      type: object
      properties:
        externalCompanyName:
          type: string
          description: PSA Company Name
        externalCompanyId:
          type: string
          description: PSA Company Id
      description: Company to Import from the PSA
    PSADiscoverCompanyReq:
      title: PSADiscoverCompany
      required:
      - type
      type: object
      properties:
        type:
          $ref: "#/components/schemas/PSAType"
      description: DiscoverCompanies for the PSA
    PSADiscoveredCompanies:
      title: PSADiscoveredCompanies
      type: object
      properties:
        type:
          $ref: "#/components/schemas/PSAType"
        companies:
          type: array
          description: company list
          items:
            $ref: "#/components/schemas/PSADiscoveredCompany"
      description: Discovered Companies for the PSA
    PSAImportCompaniesReq:
      title: PSAImportCompanies
      required:
      - companies
      type: object
      properties:
        type:
          $ref: "#/components/schemas/PSAType"
        companies:
          type: array
          description: company list
          items:
            $ref: "#/components/schemas/PSAImportCompany"
      description: Discovered Companies for the PSA
    ChangeCommServHostNameReq:
      title: ChangeCommServHostNameReq
      type: object
      properties:
        hostName:
          type: string
          description: New hostname for CommServ
    GetServerDomainResp:
      title: GetServerDomainResp
      type: object
      properties:
        servers:
          type: array
          description: List of servers and respective domains
          items:
            $ref: "#/components/schemas/ServerDomainDetails"
      description: List of servers and respective domains
      example:
        servers:
        - domain: domain
          name: name
          id: 0
        - domain: domain
          name: name
          id: 0
    ServerDomainDetails:
      title: ServerDomainDetails
      type: object
      properties:
        id:
          type: integer
          description: Id of the server
          format: int32
        name:
          type: string
          description: Name of the server
        domain:
          type: string
          description: Domain of the server
      example:
        domain: domain
        name: name
        id: 0
    ChangeServerDomainReq:
      title: ChangeServerDomainReq
      type: object
      properties:
        oldDomainName:
          type: string
          description: Current domain name of the servers that needs to be changed
        newDomainName:
          type: string
          description: New domain name for the servers
        servers:
          type: array
          description: List of servers that need domain name change
          items:
            $ref: "#/components/schemas/IdName"
        forceUpdateDatabase:
          type: boolean
          description: Update database even if servers are unreachable
    V4_LaptopPlan_body:
      oneOf:
      - $ref: "#/components/schemas/LaptopPlanSaaS"
      - $ref: "#/components/schemas/LaptopPlan"
    inline_response_200:
      oneOf:
      - $ref: "#/components/schemas/LaptopPlanRespSaaS"
      - $ref: "#/components/schemas/LaptopPlanResp"
    inline_response_200_1:
      type: object
      properties:
        cloudStorage:
          type: array
          items:
            $ref: "#/components/schemas/StorageListSummary"
      example:
        cloudStorage:
        - freeSpace: 1
          sizeOnDisk: 5
          capacity: 6
          libraryVendorType: 5
          storagePoolType: DEDUPLICATION
          cloudStorageClass: null
          name: name
          commcell: null
          storageType: ALL
          company:
            name: name
            id: 0
          id: 0
          region:
            displayName: displayName
            name: name
            id: 2
          status: status
        - freeSpace: 1
          sizeOnDisk: 5
          capacity: 6
          libraryVendorType: 5
          storagePoolType: DEDUPLICATION
          cloudStorageClass: null
          name: name
          commcell: null
          storageType: ALL
          company:
            name: name
            id: 0
          id: 0
          region:
            displayName: displayName
            name: name
            id: 2
          status: status
    Storage_Cloud_body:
      discriminator:
        propertyName: cloudType
      oneOf:
      - $ref: "#/components/schemas/Alibaba"
      - $ref: "#/components/schemas/AmazonS3"
      - $ref: "#/components/schemas/Ceph"
      - $ref: "#/components/schemas/ChinaMobileOnest"
      - $ref: "#/components/schemas/CloudianHyperStore"
      - $ref: "#/components/schemas/DellEMC"
      - $ref: "#/components/schemas/EMCAtmos"
      - $ref: "#/components/schemas/Fujitsu"
      - $ref: "#/components/schemas/GoogleCloud"
      - $ref: "#/components/schemas/HDSContent"
      - $ref: "#/components/schemas/HitachiContentCloud"
      - $ref: "#/components/schemas/HPECatalyst"
      - $ref: "#/components/schemas/Huawei"
      - $ref: "#/components/schemas/IBM"
      - $ref: "#/components/schemas/MicrosoftAzure"
      - $ref: "#/components/schemas/NetApp"
      - $ref: "#/components/schemas/Nutanix"
      - $ref: "#/components/schemas/OpenStack"
      - $ref: "#/components/schemas/OracleArchive"
      - $ref: "#/components/schemas/OracleObject"
      - $ref: "#/components/schemas/Rackspace"
      - $ref: "#/components/schemas/CCLVaultV2"
      - $ref: "#/components/schemas/S3Compatible"
      - $ref: "#/components/schemas/ScalityRing"
      - $ref: "#/components/schemas/WasabiHot"
    inline_response_200_2:
      allOf:
      - $ref: "#/components/schemas/CloudStorageDetails"
    cloudStorageId_Bucket_body:
      discriminator:
        propertyName: cloudType
      oneOf:
      - $ref: "#/components/schemas/AlibabaBucket"
      - $ref: "#/components/schemas/AmazonS3Bucket"
      - $ref: "#/components/schemas/CephBucket"
      - $ref: "#/components/schemas/ChinaMobileOnestBucket"
      - $ref: "#/components/schemas/CloudianHyperStoreBucket"
      - $ref: "#/components/schemas/DellEMCBucket"
      - $ref: "#/components/schemas/EMCAtmosBucket"
      - $ref: "#/components/schemas/FujitsuBucket"
      - $ref: "#/components/schemas/GoogleCloudBucket"
      - $ref: "#/components/schemas/HDSContentBucket"
      - $ref: "#/components/schemas/HitachiContentCloudBucket"
      - $ref: "#/components/schemas/HuaweiBucket"
      - $ref: "#/components/schemas/IBMBucket"
      - $ref: "#/components/schemas/MicrosoftAzureBucket"
      - $ref: "#/components/schemas/NetAppBucket"
      - $ref: "#/components/schemas/NutanixBucket"
      - $ref: "#/components/schemas/OpenStackBucket"
      - $ref: "#/components/schemas/OracleArchiveBucket"
      - $ref: "#/components/schemas/OracleObjectBucket"
      - $ref: "#/components/schemas/RackspaceBucket"
      - $ref: "#/components/schemas/CCLVaultV2Bucket"
      - $ref: "#/components/schemas/S3CompatibleBucket"
      - $ref: "#/components/schemas/ScalityRingBucket"
      - $ref: "#/components/schemas/WasabiHotBucket"
    inline_response_200_3:
      allOf:
      - $ref: "#/components/schemas/IdName"
      - $ref: "#/components/schemas/GenericResp"
      x-terraform-id: Id
    inline_response_200_4:
      discriminator:
        propertyName: cloudType
      oneOf:
      - $ref: "#/components/schemas/AlibabaBucketContentResp"
      - $ref: "#/components/schemas/AmazonS3BucketContentResp"
      - $ref: "#/components/schemas/CephBucketContentResp"
      - $ref: "#/components/schemas/ChinaMobileOnestBucketContentResp"
      - $ref: "#/components/schemas/CloudianHyperStoreBucketContentResp"
      - $ref: "#/components/schemas/DellEMCBucketContentResp"
      - $ref: "#/components/schemas/EMCAtmosBucketContentResp"
      - $ref: "#/components/schemas/FujitsuBucketContentResp"
      - $ref: "#/components/schemas/GoogleCloudBucketContentResp"
      - $ref: "#/components/schemas/HDSContentBucketContentResp"
      - $ref: "#/components/schemas/HitachiContentCloudBucketContentResp"
      - $ref: "#/components/schemas/HPECatalystBucketContentResp"
      - $ref: "#/components/schemas/HuaweiBucketContentResp"
      - $ref: "#/components/schemas/IBMBucketContentResp"
      - $ref: "#/components/schemas/MicrosoftAzureBucketContentResp"
      - $ref: "#/components/schemas/NetAppBucketContentResp"
      - $ref: "#/components/schemas/NutanixBucketContentResp"
      - $ref: "#/components/schemas/OpenStackBucketContentResp"
      - $ref: "#/components/schemas/OracleArchiveBucketContentResp"
      - $ref: "#/components/schemas/OracleObjectBucketContentResp"
      - $ref: "#/components/schemas/RackspaceBucketContentResp"
      - $ref: "#/components/schemas/CCLVaultV2BucketContentResp"
      - $ref: "#/components/schemas/S3CompatibleBucketContentResp"
      - $ref: "#/components/schemas/ScalityRingBucketContentResp"
      - $ref: "#/components/schemas/WasabiHotBucketContentResp"
    Bucket_bucketId_body:
      discriminator:
        propertyName: cloudType
      oneOf:
      - $ref: "#/components/schemas/AlibabaBucketContent"
      - $ref: "#/components/schemas/AmazonS3BucketContent"
      - $ref: "#/components/schemas/CephBucketContent"
      - $ref: "#/components/schemas/ChinaMobileOnestBucketContent"
      - $ref: "#/components/schemas/CloudianHyperStoreBucketContent"
      - $ref: "#/components/schemas/DellEMCBucketContent"
      - $ref: "#/components/schemas/EMCAtmosBucketContent"
      - $ref: "#/components/schemas/FujitsuBucketContent"
      - $ref: "#/components/schemas/GoogleCloudBucketContent"
      - $ref: "#/components/schemas/HDSContentBucketContent"
      - $ref: "#/components/schemas/HitachiContentCloudBucketContent"
      - $ref: "#/components/schemas/HPECatalystBucketContent"
      - $ref: "#/components/schemas/HuaweiBucketContent"
      - $ref: "#/components/schemas/IBMBucketContent"
      - $ref: "#/components/schemas/MicrosoftAzureBucketContent"
      - $ref: "#/components/schemas/NetAppBucketContent"
      - $ref: "#/components/schemas/NutanixBucketContent"
      - $ref: "#/components/schemas/OpenStackBucketContent"
      - $ref: "#/components/schemas/OracleArchiveBucketContent"
      - $ref: "#/components/schemas/OracleObjectBucketContent"
      - $ref: "#/components/schemas/RackspaceBucketContent"
      - $ref: "#/components/schemas/CCLVaultV2BucketContent"
      - $ref: "#/components/schemas/S3CompatibleBucketContent"
      - $ref: "#/components/schemas/ScalityRingBucketContent"
      - $ref: "#/components/schemas/WasabiHotBucketContent"
    bucketId_AccessPath_body:
      type: object
      properties:
        mediaAgent:
          $ref: "#/components/schemas/IdName"
      description: Used to add a new access path to a bucket
    inline_response_200_5:
      type: object
      properties:
        hyperScaleStorage:
          type: array
          items:
            $ref: "#/components/schemas/StorageListSummary"
      example:
        hyperScaleStorage:
        - freeSpace: 1
          sizeOnDisk: 5
          capacity: 6
          libraryVendorType: 5
          storagePoolType: DEDUPLICATION
          cloudStorageClass: null
          name: name
          commcell: null
          storageType: ALL
          company:
            name: name
            id: 0
          id: 0
          region:
            displayName: displayName
            name: name
            id: 2
          status: status
        - freeSpace: 1
          sizeOnDisk: 5
          capacity: 6
          libraryVendorType: 5
          storagePoolType: DEDUPLICATION
          cloudStorageClass: null
          name: name
          commcell: null
          storageType: ALL
          company:
            name: name
            id: 0
          id: 0
          region:
            displayName: displayName
            name: name
            id: 2
          status: status
    hyperScaleStorageId_Nodes_body:
      type: object
      properties:
        nodes:
          type: array
          description: List of Nodes (MediaAgents) one want to add to the specified
            HyperScale Storage
          items:
            $ref: "#/components/schemas/IdName"
    V4_ReplicationGroup_body:
      discriminator:
        propertyName: destVendor
      oneOf:
      - $ref: "#/components/schemas/CreateReplicationGroupAmazon"
      - $ref: "#/components/schemas/CreateReplicationGroupAzure"
      - $ref: "#/components/schemas/CreateReplicationGroupHyperV"
      - $ref: "#/components/schemas/CreateReplicationGroupVMWare"
    inline_response_200_6:
      oneOf:
      - $ref: "#/components/schemas/OCIReplicationGroup"
      - $ref: "#/components/schemas/VMwareReplicationGroup"
      - $ref: "#/components/schemas/AmazonReplicationGroup"
      - $ref: "#/components/schemas/HyperVReplicationGroup"
      - $ref: "#/components/schemas/AzureReplicationGroup"
      - $ref: "#/components/schemas/GCPReplicationGroup"
      - $ref: "#/components/schemas/ContinuousReplicationGroup"
    inline_response_200_7:
      type: object
      properties:
        failoverGroups:
          type: array
          description: List of failover groups
          items:
            $ref: "#/components/schemas/FailoverGroupsList"
      example:
        failoverGroups:
        - failoverGroups:
          - name: name
            id: 0
            source: ARRAY_REPLICATION_TEST_FAILOVER
            numberOfVirtualMachines: 6
          - name: name
            id: 0
            source: ARRAY_REPLICATION_TEST_FAILOVER
            numberOfVirtualMachines: 6
        - failoverGroups:
          - name: name
            id: 0
            source: ARRAY_REPLICATION_TEST_FAILOVER
            numberOfVirtualMachines: 6
          - name: name
            id: 0
            source: ARRAY_REPLICATION_TEST_FAILOVER
            numberOfVirtualMachines: 6
    inline_response_200_8:
      type: object
      properties:
        virtualMachines:
          type: array
          items:
            $ref: "#/components/schemas/TestFailoverVirtualMachines"
      example:
        virtualMachines:
        - creator:
            GUID: GUID
            name: name
            id: 0
          expirationTime: 0
          name: name
          ipAddress: ipAddress
          state: STOPPED
          operatingSystem: operatingSystem
        - creator:
            GUID: GUID
            name: name
            id: 0
          expirationTime: 0
          name: name
          ipAddress: ipAddress
          state: STOPPED
          operatingSystem: operatingSystem
    inline_response_200_9:
      type: object
      properties:
        virtualMachines:
          type: array
          items:
            $ref: "#/components/schemas/FailoverGroupEligibleMachineList"
      example:
        virtualMachines:
        - arrayReplicationPairs:
          - sourceId: 7
            hostname: hostname
            destinationName: destinationName
            ipSettings:
            - sourceSubnetMask: sourceSubnetMask
              destinationIP: destinationIP
              destinationPreferredDNS: destinationPreferredDNS
              sourceIP: sourceIP
              destinationDefaultGateway: destinationDefaultGateway
              destinationAlternateWINS: destinationAlternateWINS
              destinationPreferredWINS: destinationPreferredWINS
              sourceDefaultGateway: sourceDefaultGateway
              destinationSubnetMask: destinationSubnetMask
              useDhcp: false
              destinationAlternateDNS: destinationAlternateDNS
            - sourceSubnetMask: sourceSubnetMask
              destinationIP: destinationIP
              destinationPreferredDNS: destinationPreferredDNS
              sourceIP: sourceIP
              destinationDefaultGateway: destinationDefaultGateway
              destinationAlternateWINS: destinationAlternateWINS
              destinationPreferredWINS: destinationPreferredWINS
              sourceDefaultGateway: sourceDefaultGateway
              destinationSubnetMask: destinationSubnetMask
              useDhcp: false
              destinationAlternateDNS: destinationAlternateDNS
            GUID: GUID
            id: 4
            sourceName: sourceName
            destinationId: 1
            priority: 1
          - sourceId: 7
            hostname: hostname
            destinationName: destinationName
            ipSettings:
            - sourceSubnetMask: sourceSubnetMask
              destinationIP: destinationIP
              destinationPreferredDNS: destinationPreferredDNS
              sourceIP: sourceIP
              destinationDefaultGateway: destinationDefaultGateway
              destinationAlternateWINS: destinationAlternateWINS
              destinationPreferredWINS: destinationPreferredWINS
              sourceDefaultGateway: sourceDefaultGateway
              destinationSubnetMask: destinationSubnetMask
              useDhcp: false
              destinationAlternateDNS: destinationAlternateDNS
            - sourceSubnetMask: sourceSubnetMask
              destinationIP: destinationIP
              destinationPreferredDNS: destinationPreferredDNS
              sourceIP: sourceIP
              destinationDefaultGateway: destinationDefaultGateway
              destinationAlternateWINS: destinationAlternateWINS
              destinationPreferredWINS: destinationPreferredWINS
              sourceDefaultGateway: sourceDefaultGateway
              destinationSubnetMask: destinationSubnetMask
              useDhcp: false
              destinationAlternateDNS: destinationAlternateDNS
            GUID: GUID
            id: 4
            sourceName: sourceName
            destinationId: 1
            priority: 1
          replicationPairs:
          - sourceId: 7
            copyPrecedence: 0
            preFailoverScript:
              scriptContent: scriptContent
              path: path
              guestCredentials: null
              scriptCredentials: null
              osType: WINDOWS
              guid: guid
              scriptName: scriptName
              reset: true
              type: UNC
            postFailbackScript: null
            destinationName: destinationName
            postFailoverScript: null
            GUID: GUID
            id: 2
            sourceName: sourceName
            destinationId: 9
            priority: 3
            preFailbackScript: null
          - sourceId: 7
            copyPrecedence: 0
            preFailoverScript:
              scriptContent: scriptContent
              path: path
              guestCredentials: null
              scriptCredentials: null
              osType: WINDOWS
              guid: guid
              scriptName: scriptName
              reset: true
              type: UNC
            postFailbackScript: null
            destinationName: destinationName
            postFailoverScript: null
            GUID: GUID
            id: 2
            sourceName: sourceName
            destinationId: 9
            priority: 3
            preFailbackScript: null
        - arrayReplicationPairs:
          - sourceId: 7
            hostname: hostname
            destinationName: destinationName
            ipSettings:
            - sourceSubnetMask: sourceSubnetMask
              destinationIP: destinationIP
              destinationPreferredDNS: destinationPreferredDNS
              sourceIP: sourceIP
              destinationDefaultGateway: destinationDefaultGateway
              destinationAlternateWINS: destinationAlternateWINS
              destinationPreferredWINS: destinationPreferredWINS
              sourceDefaultGateway: sourceDefaultGateway
              destinationSubnetMask: destinationSubnetMask
              useDhcp: false
              destinationAlternateDNS: destinationAlternateDNS
            - sourceSubnetMask: sourceSubnetMask
              destinationIP: destinationIP
              destinationPreferredDNS: destinationPreferredDNS
              sourceIP: sourceIP
              destinationDefaultGateway: destinationDefaultGateway
              destinationAlternateWINS: destinationAlternateWINS
              destinationPreferredWINS: destinationPreferredWINS
              sourceDefaultGateway: sourceDefaultGateway
              destinationSubnetMask: destinationSubnetMask
              useDhcp: false
              destinationAlternateDNS: destinationAlternateDNS
            GUID: GUID
            id: 4
            sourceName: sourceName
            destinationId: 1
            priority: 1
          - sourceId: 7
            hostname: hostname
            destinationName: destinationName
            ipSettings:
            - sourceSubnetMask: sourceSubnetMask
              destinationIP: destinationIP
              destinationPreferredDNS: destinationPreferredDNS
              sourceIP: sourceIP
              destinationDefaultGateway: destinationDefaultGateway
              destinationAlternateWINS: destinationAlternateWINS
              destinationPreferredWINS: destinationPreferredWINS
              sourceDefaultGateway: sourceDefaultGateway
              destinationSubnetMask: destinationSubnetMask
              useDhcp: false
              destinationAlternateDNS: destinationAlternateDNS
            - sourceSubnetMask: sourceSubnetMask
              destinationIP: destinationIP
              destinationPreferredDNS: destinationPreferredDNS
              sourceIP: sourceIP
              destinationDefaultGateway: destinationDefaultGateway
              destinationAlternateWINS: destinationAlternateWINS
              destinationPreferredWINS: destinationPreferredWINS
              sourceDefaultGateway: sourceDefaultGateway
              destinationSubnetMask: destinationSubnetMask
              useDhcp: false
              destinationAlternateDNS: destinationAlternateDNS
            GUID: GUID
            id: 4
            sourceName: sourceName
            destinationId: 1
            priority: 1
          replicationPairs:
          - sourceId: 7
            copyPrecedence: 0
            preFailoverScript:
              scriptContent: scriptContent
              path: path
              guestCredentials: null
              scriptCredentials: null
              osType: WINDOWS
              guid: guid
              scriptName: scriptName
              reset: true
              type: UNC
            postFailbackScript: null
            destinationName: destinationName
            postFailoverScript: null
            GUID: GUID
            id: 2
            sourceName: sourceName
            destinationId: 9
            priority: 3
            preFailbackScript: null
          - sourceId: 7
            copyPrecedence: 0
            preFailoverScript:
              scriptContent: scriptContent
              path: path
              guestCredentials: null
              scriptCredentials: null
              osType: WINDOWS
              guid: guid
              scriptName: scriptName
              reset: true
              type: UNC
            postFailbackScript: null
            destinationName: destinationName
            postFailoverScript: null
            GUID: GUID
            id: 2
            sourceName: sourceName
            destinationId: 9
            priority: 3
            preFailbackScript: null
    inline_response_200_10:
      type: object
      properties:
        vmGroups:
          type: array
          items:
            $ref: "#/components/schemas/VMGroupSummary"
      example:
        vmGroups:
        - instance: null
          replicationGroup: null
          SnapBackupEnabled: false
          tags:
          - name: name
            id: 5
            value: value
          - name: name
            id: 5
            value: value
          HypervisorType: NONE
          lastBackup:
            jobId: 5
            failureReason: failureReason
            time: 5
            status: NEVER_BACKED_UP
          isDefaultVMGroup: false
          vmGroup:
            name: name
            id: 0
          storagePolicyRetentionExtension: false
          hypervisor:
            displayName: displayName
            name: name
            id: 2
          name: name
          company:
            name: name
            multiCommcellId: 5
            id: 1
          indexingStatus: NOT_APPLICABLE
          id: 0
          plan:
            name: name
            subType: ANY
            id: 6
          status: ALL
        - instance: null
          replicationGroup: null
          SnapBackupEnabled: false
          tags:
          - name: name
            id: 5
            value: value
          - name: name
            id: 5
            value: value
          HypervisorType: NONE
          lastBackup:
            jobId: 5
            failureReason: failureReason
            time: 5
            status: NEVER_BACKED_UP
          isDefaultVMGroup: false
          vmGroup:
            name: name
            id: 0
          storagePolicyRetentionExtension: false
          hypervisor:
            displayName: displayName
            name: name
            id: 2
          name: name
          company:
            name: name
            multiCommcellId: 5
            id: 1
          indexingStatus: NOT_APPLICABLE
          id: 0
          plan:
            name: name
            subType: ANY
            id: 6
          status: ALL
    inline_response_200_11:
      type: object
      properties:
        vmDetails:
          $ref: "#/components/schemas/VirtualMachineDetails"
      example:
        vmDetails:
          summary:
            os: os
            oldestRecoveryPoint: 5
            latestRecoveryPoint: 1
            SLA:
              reason: reason
              status: MET_SLA
            vmGroup: null
            vendor: NONE
            hypervisor:
              name: name
              id: 0
            host: host
            applicationSize: 6
            company: null
            vmSize: 0
            plan: null
            status: PROTECTED
          activityControl:
          - delayTime:
              timeZone: null
              time: 1
              value: value
            activityType: BACKUP
            enableAfterADelay: true
            enableActivityType: true
          - delayTime:
              timeZone: null
              time: 1
              value: value
            activityType: BACKUP
            enableAfterADelay: true
            enableActivityType: true
          security:
            associations:
            - role: null
              useGroup: null
              user:
                name: name
                company: null
                id: 1
            - role: null
              useGroup: null
              user:
                name: name
                company: null
                id: 1
            permissions:
            - permissionId: 5
              exclude: true
              type: ALL_CATEGORIES
              categoryName: categoryName
              categoryId: 2
              permissionName: permissionName
            - permissionId: 5
              exclude: true
              type: ALL_CATEGORIES
              categoryName: categoryName
              categoryId: 2
              permissionName: permissionName
            owners:
            - userGroupId: 2
              userGroupName: userGroupName
              userName: userName
              userId: 3
            - userGroupId: 2
              userGroupName: userGroupName
              userName: userName
              userId: 3
          passkey:
            expirationTime: 9
            passKeyRequiredForRestore: true
            enableAuthorizeForRestore: true
            authType: USE_LOGIN
          displayName: displayName
          applicationValidationResults:
            lastValidationJobId: 5
            backupCompletionDate: 7
            bootStatus: true
            appsDiscovered:
            - scriptStatus: true
              failureReason: failureReason
              name: name
            - scriptStatus: true
              failureReason: failureReason
              name: name
            backupValidated: 2
          tags:
          - name: name
            id: 5
            value: value
          - name: name
            id: 5
            value: value
    V4_Hypervisor_body:
      discriminator:
        propertyName: hypervisorType
      oneOf:
      - $ref: "#/components/schemas/CreateHypervisorGroupAzure"
      - $ref: "#/components/schemas/CreateHypervisorGroupAmazon"
      - $ref: "#/components/schemas/CreateHypervisorGroupVMWare"
      - $ref: "#/components/schemas/CreateHypervisorGroupHyperV"
      - $ref: "#/components/schemas/CreateHypervisorGroupNutanix"
      - $ref: "#/components/schemas/CreateHypervisorGroupXen"
      - $ref: "#/components/schemas/CreateHypervisorGroupAzureStack"
      - $ref: "#/components/schemas/CreateHypervisorGroupGoogleCloud"
      - $ref: "#/components/schemas/CreateHypervisorGroupRhev"
      - $ref: "#/components/schemas/CreateHypervisorGroupOpenstack"
      - $ref: "#/components/schemas/CreateHypervisorGroupDocker"
      - $ref: "#/components/schemas/CreateHypervisorGroupOracleCloud"
      - $ref: "#/components/schemas/CreateHypervisorGroupAliCloud"
      - $ref: "#/components/schemas/CreateHypervisorGroupOracleVM"
      - $ref: "#/components/schemas/CreateHypervisorGroupRedHatOpenShift"
      - $ref: "#/components/schemas/CreateHypervisorGroupVCloud"
      - $ref: "#/components/schemas/CreateHypervisorGroupProxmox"
      - $ref: "#/components/schemas/CreateHypervisorGroupAzureStackHCI"
    inline_response_200_12:
      type: object
      properties:
        response:
          $ref: "#/components/schemas/CreateHypervisorResp"
      example:
        response:
          warningCode: 6
          errorMessage: errorMessage
          errorCode: 1
          warningMessage: warningMessage
          hypervisorId: 0
    Hypervisor_hypervisorId_body:
      discriminator:
        propertyName: hypervisorType
      oneOf:
      - $ref: "#/components/schemas/UpdateHypervisorGroupAzure"
      - $ref: "#/components/schemas/UpdateHypervisorGroupAmazon"
      - $ref: "#/components/schemas/UpdateHypervisorGroupVMWare"
      - $ref: "#/components/schemas/UpdateHypervisorGroupHyperV"
      - $ref: "#/components/schemas/UpdateHypervisorGroupXen"
      - $ref: "#/components/schemas/UpdateHypervisorGroupGoogleCloud"
      - $ref: "#/components/schemas/UpdateHypervisorGroupRhev"
      - $ref: "#/components/schemas/UpdateHypervisorGroupOpenstack"
      - $ref: "#/components/schemas/UpdateHypervisorGroupDocker"
      - $ref: "#/components/schemas/UpdateHypervisorGroupOracleCloud"
      - $ref: "#/components/schemas/UpdateHypervisorGroupAliCloud"
      - $ref: "#/components/schemas/UpdateHypervisorGroupOracleVM"
      - $ref: "#/components/schemas/UpdateHypervisorGroupRedHatOpenShift"
      - $ref: "#/components/schemas/UpdateHypervisorGroupAzureStackHCI"
    inline_response_200_13:
      oneOf:
      - $ref: "#/components/schemas/NetworkInventoryResponseList"
      - $ref: "#/components/schemas/DatastoreInventoryResponseList"
      - $ref: "#/components/schemas/ResourcePoolInventoryResponseList"
    HypervisorId_Credentials_body:
      oneOf:
      - $ref: "#/components/schemas/UpdateHypervisorGroupGoogleCloud"
      - $ref: "#/components/schemas/UpdateHypervisorGroupVMWare"
      - $ref: "#/components/schemas/UpdateHypervisorGroupVCloud"
      - $ref: "#/components/schemas/UpdateHypervisorGroupAmazon"
      - $ref: "#/components/schemas/UpdateHypervisorGroupAzure"
      - $ref: "#/components/schemas/UpdateHypervisorGroupAzureStack"
      - $ref: "#/components/schemas/UpdateHypervisorGroupHyperV"
      - $ref: "#/components/schemas/UpdateHypervisorGroupRhev"
      - $ref: "#/components/schemas/UpdateHypervisorGroupOpenstack"
      - $ref: "#/components/schemas/UpdateHypervisorGroupOracleCloud"
      - $ref: "#/components/schemas/UpdateHypervisorGroupAliCloud"
      - $ref: "#/components/schemas/UpdateHypervisorGroupOracleVM"
      - $ref: "#/components/schemas/UpdateHypervisorGroupNutanix"
      - $ref: "#/components/schemas/UpdateHypervisorGroupAzureStackHCI"
    inline_response_200_14:
      type: object
      properties:
        firewallTopologies:
          type: array
          items:
            $ref: "#/components/schemas/FirewallTopology"
      example:
        firewallTopologies:
        - clientType: SERVER
          topologyType: NETWORK_GATEWAY
          topology:
            name: name
            id: 0
        - clientType: SERVER
          topologyType: NETWORK_GATEWAY
          topology:
            name: name
            id: 0
    inline_response_200_15:
      type: object
      properties:
        topologyDetails:
          $ref: "#/components/schemas/FirewallTopologyDetails"
      example:
        topologyDetails:
          firewallGroups:
          - groupType: INTERNAL
            clientGroupId: 0
            advancedOptions:
              keepAliveInterval: 1
              tunnelPort: 6
            mnemonic: MY_COMMSERVE
          - groupType: INTERNAL
            clientGroupId: 0
            advancedOptions:
              keepAliveInterval: 1
              tunnelPort: 6
            mnemonic: MY_COMMSERVE
          clientType: SERVER
          useWildCardProxy: true
          topologyType: NETWORK_GATEWAY
          tunnelsPerRoute: 5
          topology:
            name: name
            id: 0
          tunnelProtocol: REGULAR
          encryptTraffic: true
    inline_response_200_16:
      type: object
      properties:
        SNMPHosts:
          type: array
          items:
            $ref: "#/components/schemas/SNMPConfigurationSummary"
      example:
        SNMPHosts:
        - authenticationAlgorithm: HMAC_MD5
          name: name
          privacyAlgorithm: None
          id: 0
          userName: userName
        - authenticationAlgorithm: HMAC_MD5
          name: name
          privacyAlgorithm: None
          id: 0
          userName: userName
    V4_Credential_body:
      oneOf:
      - $ref: "#/components/schemas/CredentialInfo"
      - $ref: "#/components/schemas/CloudCredentialInfo"
      - $ref: "#/components/schemas/CloudCredentialInfoWithTokenId"
      - $ref: "#/components/schemas/CloudCredentialInfoWithAPIKey"
      - $ref: "#/components/schemas/SalesforceCredentialInfo"
      - $ref: "#/components/schemas/AmazonCredentialInfo"
      - $ref: "#/components/schemas/AmazonCredentialInfoWithRoleArn"
      - $ref: "#/components/schemas/AzureCredentialInfo"
      - $ref: "#/components/schemas/AzureCredentialInfoWithTenantId"
      - $ref: "#/components/schemas/AzureCredentialInfoWithCertificate"
      - $ref: "#/components/schemas/GoogleCredentialInfo"
      - $ref: "#/components/schemas/GoogleServiceAccountCredentialInfo"
      - $ref: "#/components/schemas/OracleCredentialInfo"
    inline_response_200_17:
      oneOf:
      - $ref: "#/components/schemas/CredentialInfo"
      - $ref: "#/components/schemas/CloudCredentialInfo"
      - $ref: "#/components/schemas/CloudCredentialInfoWithTokenId"
      - $ref: "#/components/schemas/CloudCredentialInfoWithAPIKey"
      - $ref: "#/components/schemas/SalesforceCredentialInfo"
      - $ref: "#/components/schemas/AmazonCredentialInfo"
      - $ref: "#/components/schemas/AmazonCredentialInfoWithRoleArn"
      - $ref: "#/components/schemas/AzureCredentialInfo"
      - $ref: "#/components/schemas/AzureCredentialInfoWithTenantId"
      - $ref: "#/components/schemas/AzureCredentialInfoWithCertificate"
    Credential_credentialName_body:
      oneOf:
      - $ref: "#/components/schemas/CredentialContent"
      - $ref: "#/components/schemas/CloudCredentialContent"
      - $ref: "#/components/schemas/CloudCredentialContentWithTokenId"
      - $ref: "#/components/schemas/CloudCredentialContentWithAPIKey"
      - $ref: "#/components/schemas/SalesforceCredentialContent"
      - $ref: "#/components/schemas/AmazonCredentialContent"
      - $ref: "#/components/schemas/AmazonCredentialContentWithRoleArn"
      - $ref: "#/components/schemas/AzureCredentialContent"
      - $ref: "#/components/schemas/AzureCredentialContentWithTenantId"
      - $ref: "#/components/schemas/AzureCredentialContentWithCertificate"
      - $ref: "#/components/schemas/GoogleCredentialContent"
      - $ref: "#/components/schemas/GoogleServiceAccountCredentialContent"
      - $ref: "#/components/schemas/OracleCredentialContent"
    Credential_credentialId_body:
      oneOf:
      - $ref: "#/components/schemas/CredentialContent"
      - $ref: "#/components/schemas/CloudCredentialContent"
      - $ref: "#/components/schemas/CloudCredentialContentWithTokenId"
      - $ref: "#/components/schemas/CloudCredentialContentWithAPIKey"
      - $ref: "#/components/schemas/SalesforceCredentialContent"
      - $ref: "#/components/schemas/AmazonCredentialContent"
      - $ref: "#/components/schemas/AmazonCredentialContentWithRoleArn"
      - $ref: "#/components/schemas/AzureCredentialContent"
      - $ref: "#/components/schemas/AzureCredentialContentWithTenantId"
      - $ref: "#/components/schemas/AzureCredentialContentWithCertificate"
      - $ref: "#/components/schemas/GoogleCredentialContent"
      - $ref: "#/components/schemas/GoogleServiceAccountCredentialContent"
      - $ref: "#/components/schemas/OracleCredentialContent"
    inline_response_200_18:
      type: object
      properties:
        RecoveryTarget:
          $ref: "#/components/schemas/RecoveryTargetDetails"
      example:
        RecoveryTarget:
          associatedClientGroup: null
          destinationOptions:
            iamRole: null
            dataStoreClusterName: dataStoreClusterName
            resourcePoolPath: resourcePoolPath
            vmFolder: vmFolder
            dataStore: dataStore
            destinationHost: destinationHost
          networkOptions:
            networkCard:
              subnetId: subnetId
              networkNames:
              - networkNames
              - networkNames
              destinationNetworks:
              - destinationNetworks
              - destinationNetworks
              networkId: networkId
              networkDisplayName: networkDisplayName
              network: network
            cloudNetwork:
              networkName: networkName
              subnetNames:
                name: name
                value: value
              label: label
          vmDisplayName:
            prefix: prefix
            suffix: suffix
          cloudDestinationOptions:
            volumeType: volumeType
            instanceTypes:
            - instanceTypes
            - instanceTypes
            testDiskType: testDiskType
            publicIP: true
            encryptionKey: null
            availabilityZone: availabilityZone
            tags:
            - null
            - null
            soleTenancyNodes:
            - null
            - null
            keyPair: keyPair
            restoreAsManagedVM: true
            region:
              name: name
              id: id
            machineType: null
            vmInstanceType: vmInstanceType
          accessNode:
            name: name
            id: 1
            type: type
          securityOptions:
            userGroups:
            - name: name
              id: 0
            - name: name
              id: 0
            testSecurityGroups:
            - null
            - null
            securityGroups:
            - name: name
              id: id
            - name: name
              id: id
            users:
            - name: name
              fullName: fullName
              id: 0
            - name: name
              fullName: fullName
              id: 0
          virtualLabOptions:
            ipSettings:
            - ipAddressRange: ipAddressRange
              networkName: networkName
              subnetMask: subnetMask
              defaultGatewayIP: defaultGatewayIP
            - ipAddressRange: ipAddressRange
              networkName: networkName
              subnetMask: subnetMask
              defaultGatewayIP: defaultGatewayIP
            gatewayTemplate: gatewayTemplate
            externalNetwork: externalNetwork
            configureIsolatedNetwork: true
            gatewayNetwork: gatewayNetwork
          zone:
            primaryZoneName: primaryZoneName
            secondaryZoneName: secondaryZoneName
          isoInfo:
          - isoPath: isoPath
            osType: UNIX
          - isoPath: isoPath
            osType: UNIX
          provisioningOptions:
            templates:
            - vmName: vmName
              vmGUID: vmGUID
            - vmName: vmName
              vmGUID: vmGUID
            maximumMemory: maximumMemory
            numberOfVMs: 1
            maximumCPUCores: 6
          vmStoragePolicyName: vmStoragePolicyName
          liveMountOptions:
            isLiveMountEnabled: true
            mediaAgent: null
            expirationTime:
              minutesRetainUntil: minutesRetainUntil
              daysRetainUntil: daysRetainUntil
            migrateVMs: true
          entity:
            destinationHypervisor:
              name: name
              id: 0
            applicationType: REPLICATION
            policyType: policyType
            name: name
            id: 0
    Action_Renew_body:
      type: object
      properties:
        time:
          type: integer
          format: int64
    V4_LDAP_body:
      description: Five different directory types
      oneOf:
      - $ref: "#/components/schemas/ActiveDirectoryType"
      - $ref: "#/components/schemas/AppleDirectoryServiceType"
      - $ref: "#/components/schemas/LDAPServerType"
      - $ref: "#/components/schemas/OpenLDAPType"
      - $ref: "#/components/schemas/OracleDirectoryType"
    inline_response_200_19:
      type: object
      properties:
        serviceCommcells:
          type: array
          items:
            $ref: "#/components/schemas/ServiceCommcells"
      example:
        serviceCommcells:
        - hostName: hostName
          useUniversalCommandCenter: true
          role: NOTCONFIGURED
          name: name
          id: 0
          syncStatus:
            lastSyncedWithIDP: 6
            errorMessage:
            - name: name
              message: message
            - name: name
              message: message
            status: SUCCESSFUL
        - hostName: hostName
          useUniversalCommandCenter: true
          role: NOTCONFIGURED
          name: name
          id: 0
          syncStatus:
            lastSyncedWithIDP: 6
            errorMessage:
            - name: name
              message: message
            - name: name
              message: message
            status: SUCCESSFUL
    inline_response_200_20:
      type: object
      properties:
        KeyManagementServers:
          type: array
          items:
            $ref: "#/components/schemas/KeyManagementServer"
      example:
        KeyManagementServers:
        - name: name
          id: 0
          type: NONE
        - name: name
          id: 0
          type: NONE
    inline_response_200_21:
      type: object
      properties:
        virtualMachines:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: "#/components/schemas/TestFailoverMonitorMachines"
      description: ""
      example:
        virtualMachines:
        - modifiedTime: 9
          creator:
            GUID: GUID
            name: name
            id: 0
          memory: 1
          creationTime: 1
          instanceTypeEntity: instanceTypeEntity
          flags: 5
          ipAddress:
            subnet: 3
            address: address
            family: 2
          isVirtualLabGateway: true
          vmLocation:
            hostName: hostName
            dataCenterName: dataCenterName
            vCenter: vCenter
          operatingSystem: operatingSystem
          vmAllocPolicyId: 5
          lastPowerOnTime: 1
          numberOfCPUs: 2
          advancedProperties:
            connectionString: connectionString
            additionalFlags: 1
          userCapabilities: 0
          expirationTime: 4
          vm:
            hostName: hostName
            vmName: vmName
            clientId: 7
            clientName: clientName
            vmGUID: vmGUID
          numberOfDisks: 6
          proxyClient:
            name: name
            id: 0
          vmState: 7
          entity: null
        - modifiedTime: 9
          creator:
            GUID: GUID
            name: name
            id: 0
          memory: 1
          creationTime: 1
          instanceTypeEntity: instanceTypeEntity
          flags: 5
          ipAddress:
            subnet: 3
            address: address
            family: 2
          isVirtualLabGateway: true
          vmLocation:
            hostName: hostName
            dataCenterName: dataCenterName
            vCenter: vCenter
          operatingSystem: operatingSystem
          vmAllocPolicyId: 5
          lastPowerOnTime: 1
          numberOfCPUs: 2
          advancedProperties:
            connectionString: connectionString
            additionalFlags: 1
          userCapabilities: 0
          expirationTime: 4
          vm:
            hostName: hostName
            vmName: vmName
            clientId: 7
            clientName: clientName
            vmGUID: vmGUID
          numberOfDisks: 6
          proxyClient:
            name: name
            id: 0
          vmState: 7
          entity: null
    hypervisorId_AccessNode_body:
      type: object
      properties:
        accessNode:
          $ref: "#/components/schemas/IdName"
    hypervisorId_FBR_body:
      type: object
      properties:
        FBRMA:
          $ref: "#/components/schemas/IdName"
    inline_response_200_22:
      type: object
      properties:
        anomalousConditions:
          type: array
          description: This has collection of various anomalous conditions
          items:
            $ref: "#/components/schemas/AnomalousConditionInfo"
      example:
        anomalousConditions:
        - anomalyType: Anomalous runtime
          clientInfo:
            name: name
            id: 0
          description: description
          time: 0
        - anomalyType: Anomalous runtime
          clientInfo:
            name: name
            id: 0
          description: description
          time: 0
    inventoryId_Assets_body:
      oneOf:
      - $ref: "#/components/schemas/FileServerAsset"
      - $ref: "#/components/schemas/IdentityServerAsset"
      - $ref: "#/components/schemas/ObjectStorageAsset"
    inline_response_200_23:
      type: object
      properties:
        snaps:
          type: array
          items:
            $ref: "#/components/schemas/ListSnapshots"
      example:
        snaps:
        - mountPath: mountPath
          sourceClientName: sourceClientName
          capabilities: 7
          creationTime: 9
          snapshotType: 4
          smVolumeId: 0
          appTypeName: Windows File System
          masterJobId: 2
          arrayName: arrayName
          mountStatusUpdateTime: 2
          arrayId: 6
          mountStatusName: mountStatusName
          jobId: 7
          appTypeId: 5
          mountHostName: mountHostName
          mountStatusId: 3
          sourceClientId: 1
          sourcePath: sourcePath
          mountHostId: 5
        - mountPath: mountPath
          sourceClientName: sourceClientName
          capabilities: 7
          creationTime: 9
          snapshotType: 4
          smVolumeId: 0
          appTypeName: Windows File System
          masterJobId: 2
          arrayName: arrayName
          mountStatusUpdateTime: 2
          arrayId: 6
          mountStatusName: mountStatusName
          jobId: 7
          appTypeId: 5
          mountHostName: mountHostName
          mountStatusId: 3
          sourceClientId: 1
          sourcePath: sourcePath
          mountHostId: 5
  securitySchemes:
    token:
      type: apiKey
      name: Authtoken
      in: header
    bearerToken:
      type: http
      scheme: bearer
