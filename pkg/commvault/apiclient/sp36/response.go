/*
 * Commvault Rest API - Public
 *
 * Welcome -------------- Welcome to Commvault's Rest APIs.  You can explore our APIs in [Postman](https://getpostman.com) using the predefined requests we created.  Setup -------------- To get started, [create an environment in Postman](https://www.getpostman.com/docs/environments), select that environment, and set your environment variables by entering your platform API keys in the `0 - Setup/Environment Setup` pre-request script ([documentation on pre-request scripts](http://www.getpostman.com/docs/pre_request_scripts)).  Also, Some of our calls have dependencies. `GET`/`UPDATE`/`DELETE` may only work after an item is created with a `POST`.  Notes: - Data created or modified in an environment will not affect other environments. - Data cannot be transfered from one environment to another environment.  Questions/Comments/Suggestions -------------- If you have any questions or comments, please let us know at [dev-api@commvault.com](mailto:dev-api@commvault.com).
 *
 * API version: 1.0.0
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */
package sp36

import (
	"net/http"
)

type APIResponse struct {
	*http.Response `json:"-"`
	Message        string `json:"message,omitempty"`
	// Operation is the name of the swagger operation.
	Operation string `json:"operation,omitempty"`
	// RequestURL is the request URL. This value is always available, even if the
	// embedded *http.Response is nil.
	RequestURL string `json:"url,omitempty"`
	// Method is the HTTP method used for the request.  This value is always
	// available, even if the embedded *http.Response is nil.
	Method string `json:"method,omitempty"`
	// Payload holds the contents of the response body (which may be nil or empty).
	// This is provided here as the raw response.Body() reader will have already
	// been drained.
	Payload []byte `json:"-"`
}

func NewAPIResponse(r *http.Response) *APIResponse {

	response := &APIResponse{Response: r}
	return response
}

func NewAPIResponseWithError(errorMessage string) *APIResponse {

	response := &APIResponse{Message: errorMessage}
	return response
}
