openapi: 3.0.1
tags:
  - name: Plan
    description: APIs for Plan Operations
  - name: PlanRules
    description: APIs for Plan Rule Operations
  - name: ServerPlan
    description: APIs for Server Plan Operations
  - name: CDMPlan
    description: APIs for CDM Plan Operations
  - name: ObjectStorePlan
    description: APIs for ObjectStore Plan Operations
  - name: LaptopPlan
    description: APIs for Laptop Plan Operations
  - name: ArchivePlan
    description: APIs for Archive Plan Operations
  - name: DCPlan
    description: APIs for Data Classification Plan Operations
  - name: User
    description: APIs for User Operations
  - name: Company
    description: APIs for Company Operations
  - name: ServerGroup
    description: APIs for ServerGroup Operations
  - name: CommcellGroup
    description: APIs for CommcellGroup Operations
  - name: CloudStorage
    description: APIs for Cloud Storage Pool Operations
  - name: UserGroup
    description: APIs for UserGroup Operations
  - name: Storage
    description: APIs for Storage Pool Operations
  - name: DiskStorage
    description: APIs for Disk Storage Pool Operations
  - name: HyperScaleStorage
    description: APIs for HyperScale Storage Pool Operations
  - name: Roles
    description: APIs for Role Operations
  - name: TapeStorage
    description: APIs for Tape Operations
  - name: BigDataApps
    description: APIs for Big Data App Operations
  - name: CloudApps
    description: APIs for Cloud Apps Operations
  - name: DistributedStorage
    description: APIs for Distributed Storage Operations
  - name: FileServers
    description: APIs for File Server Operations
  - name: ArchiveFileServers
    description: APIs for Archive File Server Operations
  - name: Instances
    description: APIs for Instance Operations
  - name: InstantClones
    description: APIs for Database Instant Clone Operations
  - name: Databases
    description: APIs for Databases Operations
  - name: VirtualMachines
    description: APIs for Virtual Machines Operations
  - name: ReplicationGroup
    description: APIs for Replication Group Operations
  - name: FailoverGroups
    description: APIs for Failover Group Operations
  - name: GCPSpanner
    description: APIs for GCPSpanner Operations
  - name: Agent
    description: APIs for Agent Operations
  - name: Subclient
    description: APIs for Subclient Operations
  - name: MediaAgent
    description: APIs for MediaAgent Operations
  - name: EpicServers
    description: APIs for EpicServer Operations
  - name: Laptop
    description: APIs for Laptop Operations
  - name: NetworkTopology
    description: APIs for Network Topology Operations
  - name: Regions
    description: APIs for Regions Operations
  - name: BlackoutWindows
    description: APIs for Blackout Window Operations
  - name: ResourcePools
    description: APIs for Resource Pool Operations
  - name: SNMP
    description: APIs for SNMP Configuration Operations
  - name: IndexServers
    description: APIs for Index Server Operations
  - name: HybridFileStores
    description: APIs for Hybrid File Stores Operations
  - name: EmailServer
    description: APIs for SMTP Email Server Operations
  - name: Commcell
    description: APIs for Commcell Operations
  - name: ScrubLogs
    description: APIs for Scrub Log Operations
  - name: Alerts
    description: APIs for Alerts Operations
  - name: Servers
    description: APIs for Server Operations
  - name: AdditionalSettings
    description: APIs for Additional Settings Operations
  - name: CredentialManager
    description: APIs for Credential Manager Operations
  - name: Recovery Point Stores
    description: APIs for RP Store Operations
  - name: Solutions
    description: APIs for Workload Solutions Operations
  - name: GlobalExceptions
    description: APIs for Global Exception Operations
  - name: KeyManagementServer
    description: APIs for Key Management Server Operations
  - name: RecoveryTarget
    description: APIs for Recovery Target Operations
  - name: IdentityServers
    description: APIs for Identity Servers Operations
  - name: SyslogServer
    description: APIs for Syslog Server Operations
  - name: ServiceCommcells
    description: APIs for Service Commcells Operations
  - name: MultiCommCell
    description: APIs for retrieving information about MultiCommCells
  - name: RequestManager
    description: APIs for Request Manager Operations
  - name: DistributedSystems
    description: APIs for Distributed systems Operations
  - name: AccessControl
    description: APIs for Access Control Operations
  - name: License
    description: APIs for License Operations
  - name: Activate
    description: APIs for Activate Operations
  - name: AnomalousConditions
    description: APIs for Anomalous Condition Operations
  - name: ReplicationMonitor
    description: APIs for Replication Monitor Pair Operations
  - name: LaptopOwnerMapping
    description: APIs for Laptop Owner Mapping Operations
  - name: Schedule
    description: APIs for schedule and schedule policy operations
  - name: GlobalSearch
    description: APIs for global search related operations
  - name: EntityTag
    description: APIs for entity tags related operations
  - name: InventoryManager
    description: APIs for Inventory Manager Operations
  - name: VMProvisioning
    description: APIs for VM Provisioning Operations
  - name: StorageArrays
    description: APIs for Storage Array Operations
  - name: Office365
    description: APIs for Office 365 Operations
  - name: Exchange
    description: APIs for Office 365 Exchange Operations
  - name: OneDrive
    description: APIs for Office 365 OneDrive Operations
  - name: Sharepoint
    description: APIs for Office 365 Sharepoint Operations
  - name: Teams
    description: APIs for Office 365 Teams Operations
  - name: Dynamics365
    description: APIs for Dynamics 365 Operations
  - name: ActiveDirectory
    description: APIs for Active Directory Operations
  - name: DeveloperTools
    description: APIs for Development Operations
  - name: ActivityControl
    description: APIs to manage activity controls
  - name: SoftwareCache
    description: APIs to manage Software Caches
  - name: Kubernetes
    description: APIs to manage Kubernetes Workloads
  - name: SnapshotManagement
    description: APIs to manage Storage snapshot
  - name: Snapshot Configurations
    description: APIs to manage snapshot configurations
  - name: Snapshot Operations
    description: APIs to manage snapshot operations
  - name: Array Management
    description: APIs to manage storage arrays
  - name: RecoveryGroup
    description: APIs to manage recovery groups
  - name: RecoveryGroupEntities
    description: APIs to manage entities in recovery groups
  - name: Cleanroom Targets
    description: APIs to manage cleanroom targets
  - name: CVFS
    description: APIs to manage CVFS S3 bucket operations
  - name: CyberResilience
    description: APIs for Cyber Resilience Operations
  - name: DRBackup
    description: APIs for DR Backup Operations
  - name: PSA
    description: APIs for PSA Operations
  - name: CommServ
    description: APIs for CommServ Operations
info:
  title: Commvault REST API
  version: LATEST
  description: Commvault APIs
  contact:
    name: Commvault API
servers:
  - url: "https://{ServerURL}/commandcenter/api"
    description: "Configure your API Endpoint: \n Replace {ServerURL} with the server URL where the API is hosted."
    variables:
      ServerURL:
        default: CommandCenterHostName
        description: Add your server url
  - url: "https://api.metallic.io"
    description: "Metallic API Gateway Endpoint"
  - url: /commandcenter/api
    description: ''
paths:
  /V4/PlanIds:
    get:
      tags:
        - Plan
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityDetails'
        '404':
          description: Requested Details not found
      description: Get All Plans as Name Id Pairs
      operationId: GetPlanIds
      summary: Get List of Plans
  /V4/Plan/Summary:
    get:
      tags:
        - Plan
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanSummaryListResp'
        '404':
          description: Requested Details not found
      operationId: GetPlanSummary
      description: Get Summary of a Plan
      summary: Get Summary of a Plan
  /V4/CDMPlan:
    post:
      tags:
        - CDMPlan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCDMPlan'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanResp'
        '404':
          description: Requested Details not found
      operationId: CreateCDMPlan
      description: Create a CDM Plan
      summary: Create CDM Plan
  /V4/ObjectStorePlan:
    post:
      tags:
        - ObjectStorePlan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateObjectStorePlan'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanResp'
        '404':
          description: Requested Details not found
      operationId: CreateObjectStorePlan
      description: Create a ObjectStore Plan
      summary: Create ObjectStore Plan
  '/V4/ObjectStorePlan/{planId}':
    get:
      tags:
        - ObjectStorePlan
      parameters:
        - name: planId
          in: path
          description: Id of the object store plan to fetch details
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectStorePlan'
        '404':
          description: Requested Details not found
      operationId: GetObjectStorePlanId
      description: 'Get Object Store Plan details '
      summary: Get Object Store Plan Details
    put:
      description: Used to modify an exsiting ObjectStore plan
      tags:
        - ObjectStorePlan
      parameters:
        - name: planId
          in: path
          description: Id of the Plan to update
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateObjectStorePlan'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '404':
          description: Requested Details not found
      operationId: ModifyObjectStorePlan
      summary: Update the object store plan
    delete:
      description: Used to delete an existing server plan
      tags:
        - ObjectStorePlan
      parameters:
        - name: planId
          in: path
          description: Id of the object store plan to delete
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '404':
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      operationId: DeleteObjectStorePlan
      summary: Delete Object Store Plan
  /V4/ServerPlan:
    post:
      x-terraform-resource: Plan_Server
      tags:
        - ServerPlan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateServerPlan'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanResp'
        '404':
          description: Requested Details not found
      operationId: CreateServerPlan
      description: Create a Server Plan
      summary: Create Server Plan
  /V4/Global/ServerPlan:
    post:
      x-terraform-resource: Plan_Server
      tags:
        - GlobalServerPlan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGlobalServerPlan'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanResp'
        '404':
          description: Requested Details not found
      operationId: CreateGlobalServerPlan
      description: Create a Global Server Plan
      summary: Create Global Server Plan
  /V4/DCPlan:
    post:
      x-terraform-resource: plan_v2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDCPlan'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanResp'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '404':
          description: Requested Details not found
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      operationId: CreateDCPlan
      description: Create a Data Classification Plan
      summary: Create a Data Classification Plan
      tags:
        - DCPlan
  '/V4/ServerPlan/{planId}':
    get:
      x-terraform-resource: Plan_Server
      tags:
        - ServerPlan
      parameters:
        - name: planId
          x-terraform-id: true
          in: path
          description: Id of the plan to fetch details
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerPlan'
        '404':
          description: Requested Details not found
      operationId: GetPlanById
      description: 'Get Plan details '
      summary: Get Server Plan Details
    put:
      x-terraform-resource: Plan_Server
      description: Used to modify an exsiting server plan
      tags:
        - ServerPlan
      parameters:
        - name: planId
          x-terraform-id: true
          in: path
          description: Id of the Plan to update
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateServerPlan'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '404':
          description: Requested Details not found
      operationId: ModifyPlan
      summary: Update the server plan
    delete:
      x-terraform-resource: Plan_Server
      description: Used to delete an existing server plan
      tags:
        - ServerPlan
      parameters:
        - name: planId
          x-terraform-id: true
          in: path
          description: Id of the plan to delete
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '404':
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      operationId: DeletePlan
      summary: Delete a Server Plan
  '/V4/DCPlan/{planId}':
    get:
      parameters:
        - name: planId
          in: path
          description: Id of the plan to fetch details
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DCPlanDetails'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '404':
          description: Requested Details not found
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      operationId: GetDCPlanById
      description: 'Get Data Classification Plan details '
      summary: Get Data Classification Plan By ID
      tags:
        - DCPlan
    put:
      description: Used to modify an existing data classification plan
      parameters:
        - name: planId
          in: path
          description: Id of the Plan to update
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDCPlan'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '404':
          description: Requested Details not found
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      operationId: ModifyDCPlan
      summary: Modify Data Classification Plan
      tags:
        - DCPlan
    delete:
      description: Used to delete an existing data classification plan
      parameters:
        - name: planId
          in: path
          description: Id of the plan to delete
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      operationId: DeleteDCPlan
      summary: Delete Data Classification Plan
      tags:
        - DCPlan
    parameters:
      - schema:
          type: string
        name: planId
        in: path
        required: true
  '/V4/ServerPlan/{planId}/BackupDestinations':
    get:
      tags:
        - ServerPlan
      parameters:
        - name: planId
          in: path
          description: Id of the Plan to retrieve backup destinations
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanBackupDestinations'
        '404':
          description: Requested Details not found
      operationId: GetBackupDestinations
      description: Get Backup Destinations for a Plan
      summary: Get Backup Destination of Server Plan
  '/V4/ServerPlan/{planId}/BackupContent':
    post:
      tags:
        - ServerPlan
      operationId: CreateServerPlanBackupContent
      description: API to create backup content on server plan
      summary: Create Server Plan Backup Content
      parameters:
        - name: planId
          in: path
          description: Id of the Plan to modify
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateServerPlanBackupContent'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateServerPlanBackupContentResponse'
        '404':
          description: Requested Details not found
  '/V4/ServerPlan/{planId}/RPO':
    parameters:
      - name: planId
        in: path
        description: Id of the Server Plan
        required: true
        schema:
          type: integer
          format: int32
    get:
      tags:
        - ServerPlan
      operationId: GetServerPlanRPO
      description: API to fetch schedules responsible for server plan RPO
      summary: Get Server Plan RPO
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanSchedules'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
    post:
      tags:
        - ServerPlan
      operationId: CreateServerPlanRPO
      description: API to create RPO schedules on server plan
      summary: Create Server Plan RPO
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateServerPlanRPO'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateServerPlanRPOResponse'
        '404':
          description: Requested Details not found
    put:
      tags:
        - ServerPlan
      operationId: UpdateServerPlanRPO
      description: API to modify RPO schedules on server plan
      summary: Update Server Plan RPO
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServerPlanUpdateSchedules'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
  '/V4/ServerPlan/{planId}/Retention/Synthfull':
    put:
      description: Used to update synthetic full schedule on plan based on retention settings
      tags:
        - ServerPlan
      parameters:
        - name: planId
          x-terraform-id: true
          in: path
          description: Id of the Plan to update
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '404':
          description: Requested Details not found
      summary: Update the server plan retention based synthetic full
  '/V4/ServerPlan/{planId}/BackupDestination':
    post:
      tags:
        - ServerPlan
      parameters:
        - name: planId
          in: path
          description: Id of the Plan to modify
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePlanBackupDestinations'
              examples:
              'Create Vault/Replica snapshot copy ':
                value:
                  destinations:
                    - retentionPeriodDays: 30
                      isSnapCopy: true
                      backupStartTime: -1
                      overrideRetentionSettings: true
                      retentionRuleType: RETENTION_PERIOD
                      useExtendedRetentionRules: false
                      backupsToCopy: All_JOBS
                      netAppCloudTarget: false
                      mappings:
                        - source:
                            id: 25
                            name: Source_vserver
                          target:
                            id: 44
                            name: Target_vserver
                          targetVendor:
                            name: NetApp
                          vendor: NETAPP
                      backupDestinationName: Vault/Replica
                      storagePool:
                        id: 139
                        name: test_pool
                      sourceCopy:
                        id: 58
                        name: Snap
                      newName: Vault/Replica
              Create Mirror Snapshot copy:
                value:
                  destinations:
                    - isSnapCopy: true
                      backupStartTime: -1
                      overrideRetentionSettings: true
                      retentionRuleType: RETENTION_PERIOD
                      backupsToCopy: All_JOBS
                      netAppCloudTarget: false
                      mappings:
                        - source:
                            id: 25
                            name: Source_vserver
                          target:
                            id: 44
                            name: Target_vserver
                          targetVendor:
                            name: NETAPP
                          vendor: NETAPP
                      isMirrorCopy: true
                      backupDestinationName: Mirror
                      storagePool:
                        id: 139
                        name: test_pool_pool
                      sourceCopy:
                        id: 58
                        name: Snap
                      newName: Mirror
              Create NetApp SnapMirror Cloud Target Copy:
                value:
                  destinations:
                    - snapRecoveryPoints: 8
                      isSnapCopy: true
                      backupStartTime: -1
                      overrideRetentionSettings: true
                      retentionRuleType: SNAP_RECOVERY_POINTS
                      useExtendedRetentionRules: false
                      backupsToCopy: All_JOBS
                      netAppCloudTarget: true
                      mappings:
                        - source:
                            id: 1726
                            name: Source_vserver
                          target:
                            id: 7072
                            name: SnapMirror Cloud Target
                          targetVendor:
                            name: NetApp SnapMirror Cloud Target - NetApp StorageGRID
                          vendor: NETAPP
                      backupDestinationName: NetApp SM-C Target
                      isMirrorCopy: false
                      storagePool:
                        id: 11005
                        name: test-Pool
                      sourceCopy:
                        id: 81272
                        name: snap copy
                      newName: NetApp SM-C Target
        description: ''
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanBackupDestinationResp'
        '404':
          description: Requested Details not found
      operationId: CreateBackupDestination
      description: Create a Backup Destination for a Plan
      summary: Create Backup Destination for Server Plan
  '/V4/ServerPlan/{planId}/BackupDestination/{BackupDestinationId}':
    put:
      tags:
        - ServerPlan
      parameters:
        - name: planId
          in: path
          description: Id of the Plan to modify
          required: true
          schema:
            type: integer
            format: int32
        - name: BackupDestinationId
          in: path
          description: Id of the backupDestination to be modified
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePlanBackupDestination'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanBackupDestinationResp'
        '404':
          description: Requested Details not found
      operationId: ModifyBackupDestination
      description: Modify Backup Destination for a Plan
      summary: Modify ServerPlan BackupDestination
    delete:
      tags:
        - ServerPlan
      parameters:
        - name: planId
          in: path
          description: Id of the Plan to modify
          required: true
          schema:
            type: integer
            format: int32
        - name: BackupDestinationId
          in: path
          description: Id of the backupDestination to be deleted
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '404':
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '412':
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      operationId: DeleteBackupDestination
      description: Delete Backup Destination for a Plan
      summary: Delete ServerPlan BackupDestination
  '/V5/ServerPlan/{planId}/BackupDestination/{BackupDestinationId}':
    get:
      tags:
        - ServerPlan
      parameters:
        - name: planId
          in: path
          description: Id of the plan to retrieve backup destination
          required: true
          schema:
            type: integer
            format: int32
        - name: BackupDestinationId
          in: path
          description: Id of the backup destination
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanBackupDestinationDetails'
        '404':
          description: Requested Details not found
      operationId: GetBackupDestinationDetails
      description: Get specific backup destination details for a server plan
      summary: Get Backup Destination details of ServerPlan
    put:
      tags:
        - ServerPlan
      parameters:
        - name: planId
          in: path
          description: Id of the Plan to modify
          required: true
          schema:
            type: integer
            format: int32
        - name: BackupDestinationId
          in: path
          description: Id of the backupDestination to be modified
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePlanBackupDestinationDetails'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanBackupDestinationResp'
        '404':
          description: Requested Details not found
      operationId: ModifyBackupDestinationDetails
      description: Modify Backup Destination details for a Plan
      summary: Update Backup Destination details of ServerPlan
  '/V5/ServerPlan/{planId}/BackupDestination/SourceCopy/Eligible':
    parameters:
      - schema:
          type: integer
        name: planId
        in: path
        required: true
        description: Id of plan
      - schema:
          type: integer
        in: query
        name: regionId
        description: Region Id against which we want to check eligible source copies. Skip if no region present.
      - schema:
          type: boolean
        in: query
        name: forSnapCopy
        description: Get list of source copy eligible for snap copy in given region.
    get:
      tags:
        - ServerPlan
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanSourceCopies'
      operationId: GetSourceCopiesForGivenServerPlanRegion
      description: Gives a list of eligible source copies for given region id
      summary: Gives a list of eligible source copies for given region id
  '/V4/ServerPlan/{planId}/storageRegion/{regionList}':
    delete:
      tags:
        - ServerPlan
      parameters:
        - name: planId
          in: path
          description: Id of the Plan to modify
          required: true
          schema:
            type: integer
            format: int32
        - name: regionList
          in: path
          description: 'List of region names/ids to be deleted. If region ids are passed, set isRegionIdList=true'
          required: true
          schema:
            type: string
        - name: isRegionIdList
          in: query
          description: Is regionList a list of region ids
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '404':
          description: Requested Details not found
      operationId: DeleteStorageRegion
      description: Delete Storage Region for an Elastic Plan
      summary: Delete Server Plan Storage Region
  '/V4/Global/ServerPlan/{planId}/storageRegion/{regionId}':
    delete:
      tags:
        - ServerPlan
      parameters:
        - name: planId
          in: path
          description: Id of the Plan to modify
          required: true
          schema:
            type: integer
            format: int32
        - name: regionId
          in: path
          description: 'Region id to be deleted.'
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '404':
          description: Requested Details not found
      operationId: DeleteStorageTagRegion
      description: Delete Storage Region for a Global Plan
      summary: Delete Global Server Plan Storage Region
  '/V4/ServerPlan/{planId}/Backup/Enable':
    parameters:
      - name: planId
        in: path
        description: Id of the Server Plan
        required: true
        schema:
          type: integer
          format: int32
    put:
      tags:
        - ServerPlan
      operationId: EnableBackupOnPlan
      description: API to Enable backup schedule policies on server plan
      summary: Enable backup Schedule policies on server plan
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
  '/V4/ServerPlan/{planId}/Backup/Disable':
    parameters:
      - name: planId
        in: path
        description: Id of the Server Plan
        required: true
        schema:
          type: integer
          format: int32
    put:
      tags:
        - ServerPlan
      operationId: DisableBackupOnPlan
      description: API to Disable backup schedule policies on server plan
      summary: Disable Backup Schedule policies on serverplan
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
  '/V4/ServerPlan/{planId}/Backup':
    parameters:
      - name: planId
        in: path
        description: Id of the Server Plan
        required: true
        schema:
          type: integer
          format: int32
    post:
      operationId: BackupServerPlan
      summary: Run backups on server plan associated entities
      tags:
        - ServerPlan
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTaskRespforBackup'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      description: Run backups on server plan associated entities
      parameters:
        - schema:
            type: string
            enum:
              - INCREMENTAL
              - DIFFERENTIAL
              - FULL
              - SYNTHETIC_FULL
          in: query
          name: backupLevel
          description: Backup level of jobs
          required: true
  '/V4/ServerPlan/{planId}/RPO/Run':
    post:
      operationId: BackupServerPlan
      summary: Run backups on server plan associated entities based on existing schedule
      tags:
        - ServerPlan
      parameters:
        - name: planId
          in: path
          description: Id of the Plan to modify
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTaskRespforBackup'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      description: Run backups on server plan associated entities
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServerPlanBackupRequest'
  '/RecoveryEntity/{recoveryEntityId}':
    parameters:
      - schema:
          type: integer
        name: recoveryEntityId
        description: Recovery entity Id
        in: path
        required: true
    get:
      tags:
        - RecoveryGroupEntities
      summary: 'Get the details of a recovery entity'
      description: Get the details of a recovery entity
      operationId: GetRecoveryEntity
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecoveryEntity'
        '400':
          description: Unable to get recovery entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
  '/RecoveryGroup/{recoveryGroupId}':
    put:
      tags:
        - RecoveryGroup
      summary: Update Recovery Group
      operationId: UpdateRecoveryGroup
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateRecoveryGroupResp'
            application/xml:
              schema:
                type: object
                properties: {}
      description: Update Recovery Group
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecoveryGroup'
    parameters:
      - schema:
          type: integer
        name: recoveryGroupId
        description: Recovery group Id
        in: path
        required: true
    delete:
      tags:
        - RecoveryGroup
      summary: Delete recovery group
      description: Delete recovery group
      operationId: DeleteRecoveryGroup
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateRecoveryGroupResp'
            application/xml:
              schema:
                type: object
                properties: {}
    get:
      tags:
        - RecoveryGroup
      summary: 'Get details for recovery group'
      description: Get details for recovery group
      operationId: GetRecoveryGroup
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRecoveryGroupDetailsResp'
        '404':
          description: Recovery group could not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      parameters:
        - schema:
            type: boolean
            default: false
          in: query
          name: getEntityDetails
          description: Get the entity details with recovery group details
          required: false
  '/RecoveryGroup/{recoveryGroupId}/Entity':
    parameters:
      - schema:
          type: integer
        name: recoveryGroupId
        description: Recovery group Id
        in: path
        required: true
    post:
      tags:
        - RecoveryGroupEntities
      summary: 'Create entities in a recovery group'
      operationId: CreateRecoveryEntities
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '400':
          description: Entity cannot be created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      description: Create entities in the recovery group
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddUpdateRecoveryEntityRequest'
    delete:
      tags:
        - RecoveryGroupEntities
      summary: Delete recovery entities for a group
      operationId: DeleteRecoveryEntities
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      description: Delete recovery entities for a group
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteRecoveryEntityReq'
    put:
      tags:
        - RecoveryGroupEntities
      summary: 'Update recovery entities in a recovery group'
      operationId: UpdateRecoveryEntities
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '400':
          description: Entity cannot be created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      description: Updating recovery entities in the recovery group
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddUpdateRecoveryEntityRequest'
  '/RecoveryGroup/{recoveryGroupId}/Entity/{entityId}':
    parameters:
      - schema:
          type: integer
        name: recoveryGroupId
        description: Recovery group Id
        in: path
        required: true
      - schema:
          type: integer
        name: entityId
        description: Recovery entity Id
        in: path
        required: true
    put:
      tags:
        - RecoveryGroupEntities
      summary: 'Update recovery entity in a recovery group'
      operationId: UpdateRecoveryEntity
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '400':
          description: Entity cannot be updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      description: Updating the entity in the recovery group
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecoveryEntity'
  /RecoveryGroups:
    get:
      tags:
        - RecoveryGroup
      summary: Get the list of Recovery groups
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecoveryGroupListResp'
        '501':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      operationId: GetRecoveryGroups
      description: Get the list of Recovery groups
  /RecoveryGroup:
    post:
      tags:
        - RecoveryGroup
      summary: Create Recovery Group
      operationId: CreateRecoveryGroup
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateRecoveryGroupResp'
      description: Create Recovery group
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecoveryGroup'
  '/RecoveryGroup/{recoveryGroupId}/Recover':
    parameters:
      - schema:
          type: string
        name: recoveryGroupId
        description: Recovery group Id
        in: path
        required: true
    post:
      tags:
        - RecoveryGroup
      summary: 'Launching recovery action for a recovery group'
      operationId: RecoveryGroupRecover
      description: Launching recovery action for a recovery group
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobIdResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecoveryActionRequest'
  /RecoveryGroup/CleanupRecovery:
    post:
      tags:
        - RecoveryGroup
      summary: 'Launching cleanup recovery action for a recovery group'
      operationId: RecoveryGroupCleanupRecovery
      description: Cleanup recovery action will delete the recovered entities for a recovery group
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobIdResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecoveryActionRequest'
  /LicenseUsage:
    get:
      tags:
        - RecoveryGroup
      summary: Get license usage details for a license type
      description: Get license usage details for a license type
      operationId: GetLicenseUsage
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LicenseUsageDetails'
        '404':
          description: License type is not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      parameters:
        - schema:
            $ref: '#/components/schemas/LicenseType'
          in: query
          name: licenseType
          description: License type for which usage details are required
          required: true
  /V4/LaptopPlan:
    post:
      summary: Create Laptop Plan
      tags:
        - LaptopPlan
      operationId: CreateLaptopPlan
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/LaptopPlanRespSaaS'
                  - $ref: '#/components/schemas/LaptopPlanResp'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      description: Create Laptop Plan
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/LaptopPlanSaaS'
                - $ref: '#/components/schemas/LaptopPlan'
  '/V4/LaptopPlan/{planId}':
    parameters:
      - schema:
          type: integer
          format: int32
        name: planId
        in: path
        required: true
        description: Id of the plan
    get:
      summary: Get Laptop Plan details
      tags:
        - LaptopPlan
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LaptopPlanDetails'
        '404':
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      operationId: GetLaptopPlanById
      description: Get Laptop Plan details
    put:
      summary: ' Modify existing laptop plan details'
      operationId: ModifyLaptopPlanById
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '404':
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      tags:
        - LaptopPlan
      description: Modify existing laptop plan details
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateLaptopPlan'
    delete:
      summary: Delete existing laptop plan
      operationId: DeleteLaptopPlanById
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '404':
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      tags:
        - LaptopPlan
      description: Delete existing laptop plan
  '/V4/LaptopPlan/{planId}/BackupDestinations':
    get:
      tags:
        - LaptopPlan
      parameters:
        - name: planId
          in: path
          description: Id of the Laptop Plan to retrieve backup destinations
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanBackupDestinations'
        '404':
          description: Requested Details not found
      operationId: GetLaptopBackupDestinations
      description: Get Backup Destinations for a Plan
      summary: Get LaptopPlan BackupDestinations
  '/V4/LaptopPlan/{planId}/BackupDestination':
    post:
      tags:
        - LaptopPlan
      parameters:
        - name: planId
          in: path
          description: Id of the Plan to modify
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePlanBackupDestinations'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanBackupDestinationResp'
        '404':
          description: Requested Details not found
      operationId: CreateLaptopBackupDestination
      description: Create a Backup Destination for a Plan
      summary: Create a LaptopPlan BackupDestination
  '/V4/LaptopPlan/{planId}/BackupDestination/{BackupDestinationId}':
    put:
      tags:
        - LaptopPlan
      parameters:
        - name: planId
          in: path
          description: Id of the Plan to modify
          required: true
          schema:
            type: integer
            format: int32
        - name: BackupDestinationId
          in: path
          description: Id of the backupDestination to be modified
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePlanBackupDestination'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanBackupDestinationResp'
        '404':
          description: Requested Details not found
      operationId: ModifyLaptopBackupDestination
      summary: Update LaptopPlan BackupDestination
      description: Modify Backup Destination for a Plan
    delete:
      tags:
        - LaptopPlan
      parameters:
        - name: planId
          in: path
          description: Id of the Plan to modify
          required: true
          schema:
            type: integer
            format: int32
        - name: BackupDestinationId
          in: path
          description: Id of the backupDestination to be deleted
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '404':
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '412':
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      operationId: DeleteLaptopBackupDestination
      description: Delete Backup Destination for a Plan
      summary: Delete LaptopPlan BackupDestination
  '/V4/LaptopPlan/{planId}/storageRegion/{regionList}':
    delete:
      tags:
        - LaptopPlan
      parameters:
        - name: planId
          in: path
          description: Id of the Laptop Plan to modify
          required: true
          schema:
            type: integer
            format: int32
        - name: regionList
          in: path
          description: 'List of region names/ids to be deleted. If region ids are passed, set isRegionIdList=true'
          required: true
          schema:
            type: string
        - name: isRegionIdList
          in: query
          description: Is regionList a list of region ids
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '404':
          description: Requested Details not found
      operationId: DeleteStorageRegionForLaptopPlan
      description: Delete Storage Region for a laptop Plan
      summary: Delete Storage Region of LaptopPlan
  /V4/ArchivePlan:
    post:
      summary: Create Archive Plan
      tags:
        - ArchivePlan
      operationId: CreateArchivePlan
      description: Create Archive Plan
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanResp'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArchivePlan'
  '/V4/ArchivePlan/{planId}':
    parameters:
      - schema:
          type: integer
          format: int32
        name: planId
        in: path
        required: true
        description: Id of the plan
    get:
      summary: Get Archive Plan details
      tags:
        - ArchivePlan
      operationId: GetArchivePlanById
      description: Get Archive Plan details
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArchivePlanDetails'
        '404':
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
    put:
      summary: Modify existing archive plan details
      tags:
        - ArchivePlan
      operationId: ModifyArchivePlanById
      description: Modify existing archive plan details
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '404':
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateArchivePlan'
    delete:
      summary: Delete existing archive plan
      tags:
        - ArchivePlan
      operationId: DeleteArchivePlanById
      description: Delete existing archive plan
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '404':
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
  '/V4/ArchivePlan/{planId}/BackupDestinations':
    get:
      tags:
        - ArchivePlan
      operationId: GetArchiveBackupDestinations
      description: Get Backup Destinations for a Plan
      parameters:
        - name: planId
          in: path
          description: Id of the Archive Plan to retrieve backup destinations
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArchivePlanBackupDestinations'
        '404':
          description: Requested Details not found
  '/V4/ArchivePlan/{planId}/BackupDestination':
    post:
      tags:
        - ArchivePlan
      operationId: CreateArchiveBackupDestination
      description: Create a Backup Destination for a Plan
      parameters:
        - name: planId
          in: path
          description: Id of the Plan to modify
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateArchivePlanBackupDestinations'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanBackupDestinationResp'
        '404':
          description: Requested Details not found
  '/V4/ArchivePlan/{planId}/BackupDestination/{BackupDestinationId}':
    put:
      tags:
        - ArchivePlan
      operationId: ModifyArchiveBackupDestination
      description: Modify Backup Destination for a Plan
      parameters:
        - name: planId
          in: path
          description: Id of the Plan to modify
          required: true
          schema:
            type: integer
            format: int32
        - name: BackupDestinationId
          in: path
          description: Id of the backupDestination to be modified
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateArchivePlanBackupDestination'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanBackupDestinationResp'
        '404':
          description: Requested Details not found
    delete:
      tags:
        - ArchivePlan
      operationId: DeleteArchiveBackupDestination
      description: Delete Backup Destination for a Plan
      parameters:
        - name: planId
          in: path
          description: Id of the Plan to modify
          required: true
          schema:
            type: integer
            format: int32
        - name: BackupDestinationId
          in: path
          description: Id of the backupDestination to be deleted
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '404':
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '412':
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
  '/V4/ArchivePlan/{planId}/storageRegion/{regionList}':
    delete:
      tags:
        - ArchivePlan
      operationId: DeleteStorageRegionForArchivePlan
      description: Delete Storage Region for a archive Plan
      parameters:
        - name: planId
          in: path
          description: Id of the Archive Plan to modify
          required: true
          schema:
            type: integer
            format: int32
        - name: regionList
          in: path
          description: 'List of region names/ids to be deleted. If region ids are passed, set isRegionIdList=true'
          required: true
          schema:
            type: string
        - name: isRegionIdList
          in: query
          description: Is regionList a list of region ids
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '404':
          description: Requested Details not found
  '/V4/DRBackup/BackupDestinations':
    get:
      tags:
        - DRBackup
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanBackupDestinations'
        '404':
          description: Requested Details not found
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      operationId: GetDRBackupDestinations
      description: Get backup destinations for CommServe DR Backups
      summary: Get backup destinations for CommServe DR Backups
    post:
      tags:
        - DRBackup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePlanBackupDestinations'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanBackupDestinationResp'
        '404':
          description: Requested Details not found
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      operationId: CreateDRBackupDestination
      description: Create a backup destination for CommServe DR Backups
      summary: Create a backup destination for CommServe DR Backups
  '/V4/DRBackup/BackupDestination/SourceCopy/Eligible':
    get:
      tags:
        - DRBackup
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanSourceCopies'
      operationId: GetSourceCopiesForDRBackup
      description: Gives a list of eligible source copies for CommServe DR storage policy
      summary: Gives a list of eligible source copies for CommServe DR storage policy
  '/V4/DRBackup/BackupDestination/{BackupDestinationId}':
    get:
      tags:
        - DRBackup
      parameters:
        - name: BackupDestinationId
          in: path
          description: Id of the backup destination
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanBackupDestinationDetails'
        '404':
          description: Requested Details not found
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      operationId: GetDRBackupDestinationDetails
      description: Get specific backup destination details for Commserve DR Backups
      summary: Get Backup Destination details of DR backup destination
    put:
      tags:
        - DRBackup
      parameters:
        - name: BackupDestinationId
          in: path
          description: Id of the backupDestination to be modified
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePlanBackupDestinationDetails'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanBackupDestinationResp'
        '404':
          description: Requested Details not found
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      operationId: ModifyDRBackupDestinationDetails
      description: Modify Backup Destination details for CommServe DR backups
      summary: Update Backup Destination details of DR backup destination
    delete:
      tags:
        - DRBackup
      parameters:
        - name: BackupDestinationId
          in: path
          description: Id of the backupDestination to be deleted
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '404':
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '412':
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      operationId: DeleteDRBackupDestination
      description: Delete DR Backup Destination for Commserve DR backup
      summary: Delete Backup Destination of Commserve DR backup
  '/V4/DRBackup/StoragePolicy':
    get:
      tags:
        - DRBackup
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdName'
        '404':
          description: Requested Details not found
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      operationId: GetDRBackupStoragePolicy
      description: Get DR backup storage policy details
      summary: Get details of DR backup storage policy
  /V4/user:
    get:
      tags:
        - User
      parameters:
        - schema:
            type: boolean
          in: query
          name: laptopUsers
          description: Returns only laptop users when set to true. This param is only effective when EdgeMode header is passed.
        - schema:
            type: integer
          in: query
          name: userGroupId
          description: Returns the list of users associated to the userGroupId provided.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserListResp'
        '404':
          description: Requested Details not found
      description: Get All Users
      x-hidden-description: |
        This api can be used to get all users present in the commcell
      operationId: GetUsers
      summary: Get Users
    post:
      tags:
        - User
      x-terraform-resource: User_V2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUsers'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUserResp'
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error
      operationId: CreateUser
      description: Create a User
      x-hidden-description: |
        This api can be used to create a new commcell user
  /V4/user/action/delete:
    put:
      tags:
        - User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteMultipleUsers'
            examples:
              Delete multiple users:
                value:
                  users:
                    - skipOwnerTransfer: true
                      newUser:
                        id: 0
                        name: string
                      user:
                        id: 0
                        name: string
                    - skipOwnerTransfer: true
                      newUserGroup:
                        id: 0
                        name: string
                      user:
                        id: 0
                        name: string
                    - skipOwnerTransfer: false
                      user:
                        id: 0
                        name: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '400':
          description: Bad Request
        '404':
          description: Requested Details not found
      operationId: DeleteMultipleUsers
      description: Delete multiple users
      x-hidden-description: |
        This api can be used to delete multiple commcell users
      summary: Delete Multiple Users
  '/V4/user/{userId}':
    get:
      tags:
        - User
      x-terraform-resource: User_V2
      parameters:
        - name: userId
          x-terraform-id: true
          in: path
          description: Id of the User whose details have to be fetched
          required: true
          schema:
            type: integer
            format: int32
        - name: mode
          in: header
          schema:
            $ref: '#/components/schemas/Mode'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: Requested Details not found
      operationId: GetUserDetails
      description: Get details of a User based on id
      x-hidden-description: |
        This api can be get the details of a commcell user from its id
      summary: Get User Details
    put:
      description: Used to modify an existing user
      x-hidden-description: |
        This api can be update the details of a commcell user
      summary: Update existing user
      tags:
        - User
      x-terraform-resource: User_V2
      x-terraform-function: handler.UpdateUserRequest
      parameters:
        - name: userId
          x-terraform-id: true
          in: path
          description: Id of the User to update
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUser'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '400':
          description: Bad Request
        '404':
          description: Requested Details not found
      operationId: ModifyUser
    delete:
      description: Used to delete a user
      x-hidden-description: |
        This api can be delete a commcell user
      tags:
        - User
      x-terraform-resource: User_V2
      parameters:
        - name: userId
          x-terraform-id: true
          in: path
          description: Id of the user to delete
          required: true
          schema:
            type: integer
            format: int32
        - name: skipOwnerShipTransfer
          in: query
          description: If user properties needn't be transferred to other user or usergroup
          schema:
            type: boolean
        - name: transferToUser
          in: query
          description: If user properties needs to be transferred to other user
          schema:
            type: integer
            format: int32
        - name: transfertoUserGroup
          in: query
          description: If user properties needs to be transferred to other userGroup
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '404':
          description: Requested Details not found
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      operationId: DeleteUser
      summary: Delete an User
  '/V4/user/{userId}/authenticationMethods':
    get:
      description: Used to fetch authentication methods of an existing user
      x-hidden-description: |
        Can be used to fetch auth methods of an existing commcell user
      operationId: getUserauthenticationMethods
      tags:
        - HIDDEN
      parameters:
        - name: userId
          in: path
          description: Id of the User whose authentication method details have to be fetched
          required: true
          schema:
            type: integer
            format: int32
        - schema:
            type: boolean
          in: query
          name: fetchAvailableMethodsOnly
          description: Set as true to fetch the list of available authentication methods for the user
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAuthenticationMethods'
        '404':
          description: Requested Details not found
  /V4/company:
    get:
      tags:
        - Company
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyListResponse'
        '404':
          description: Requested Details not found
      description: Get All Companies
      operationId: GetCompanies
      summary: Get Companies
      x-hidden-description: |
        Can be used to get the id of a company/organization
      parameters:
        - schema:
            type: boolean
          in: query
          name: includeDeletedCompanies
          description: 'If true, companies marked for deletion are included in the response'
    post:
      tags:
        - Company
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCompany'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdName'
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error
      operationId: CreateCompany
      description: Create a Company
      summary: Create a Company
  '/V4/company/{companyId}':
    get:
      tags:
        - Company
      parameters:
        - name: companyId
          in: path
          description: Id of the Company whose details have to be fetched
          required: true
          schema:
            type: integer
            format: int32
        - schema:
            type: boolean
          in: query
          name: showInheritedAssociation
          description: Show inherited security association
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
        '404':
          description: Requested Details not found
      operationId: GetCompanyDetails
      description: Get details of a company based on id
      summary: Get Company Details
    put:
      tags:
        - Company
      parameters:
        - name: companyId
          in: path
          description: Id of the company to update
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCompany'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '400':
          description: Bad Request
        '404':
          description: Requested Details not found
      operationId: ModifyCompany
      description: Modify the properties of an existing company
      summary: Update the properties of existing company
    delete:
      description: Used to delete a company which has been deactivated
      tags:
        - Company
      parameters:
        - name: companyId
          in: path
          description: Id of the company to delete
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '404':
          description: Requested Details not found
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      operationId: DeleteCompany
      summary: Delete a company
  '/V4/Company/{companyId}/Servers/Timezone':
    put:
      parameters:
        - name: companyId
          in: path
          description: Id of the company whose timezone is used to update timezone of servers (with no packages)
          required: true
          schema:
            type: integer
            format: int32
      description: Assigns company's timezone as the timezone for servers with no packages installed
      summary: Update the company Timezone for servers
      operationId: UpdateCompanyTimezoneForServers
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTimezoneForClientsReq'
        description: ''
      tags:
        - Company
  '/V4/Company/{companyId}/LocalAuthentication':
    get:
      tags:
        - HIDDEN
      parameters:
        - name: companyId
          in: path
          description: Id of the company
          required: true
          schema:
            type: integer
            format: int32
      description: Fetch local authentication details of the company
      operationId: FetchLocalAuthenticationDetilsOfCompany
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocalAuthenticationDetailsResponse'
  '/V4/Company/{companyId}/LocalAuthentication/Action/Enable':
    put:
      tags:
        - HIDDEN
      parameters:
        - name: companyId
          in: path
          description: Id of the company
          required: true
          schema:
            type: integer
            format: int32
      description: Enable local authentication for the company
      operationId: EnableLocalAuthenticationForCompany
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocalAuthenticationDetails'
  '/V4/Company/{companyId}/LocalAuthentication/Action/Disable':
    put:
      tags:
        - HIDDEN
      parameters:
        - name: companyId
          in: path
          description: Id of the company
          required: true
          schema:
            type: integer
            format: int32
      description: Disable local authentication for the company
      operationId: DisableLocalAuthenticationForCompany
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
  /V4/UserGroup:
    get:
      tags:
        - UserGroup
      parameters:
        - name: mode
          in: header
          schema:
            $ref: '#/components/schemas/Mode'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGroupListResponse'
          headers: {}
        '404':
          description: Requested Details not found
      description: Get a list of existing user groups.
      x-hidden-description: |
        Can be used to fetch list of existing commcell user groups
      operationId: GetUserGroups
      summary: Get UserGroups
    post:
      tags:
        - UserGroup
      x-terraform-resource: UserGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserGroup'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                x-terraform-id: id
                $ref: '#/components/schemas/IdNameGUID'
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error
      operationId: CreateUserGroup
      description: Create a new user-group
      x-hidden-description: |
        Can be used to create a new commcell user group
      summary: Create User group
  /V4/UserGroup/action/delete:
    put:
      tags:
        - UserGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteMultipleUserGroups'
            examples:
              Delete multiple usergroups:
                value:
                  userGroups:
                    - skipOwnerTransfer: true
                      newUser:
                        id: 0
                        name: string
                      userGroup:
                        id: 0
                        name: string
                    - skipOwnerTransfer: true
                      newUserGroup:
                        id: 0
                        name: string
                      userGroup:
                        id: 0
                        name: string
                    - skipOwnerTransfer: false
                      userGroup:
                        id: 0
                        name: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '400':
          description: Bad Request
        '404':
          description: Requested Details not found
      operationId: DeleteMultipleUserGroups
      description: Delete multiple userGroups
      x-hidden-description: |
        Can be used to delete multiple commcell user group
      summary: Delete user groups
  '/V4/UserGroup/{userGroupId}':
    get:
      tags:
        - UserGroup
      x-terraform-resource: UserGroup
      x-terraform-query: ?additionalproperties=true
      parameters:
        - name: userGroupId
          x-terraform-id: true
          in: path
          description: Id of the user-group whose details have to be fetched
          required: true
          schema:
            type: integer
            format: int32
        - name: mode
          in: header
          schema:
            $ref: '#/components/schemas/Mode'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGroup'
        '404':
          description: Requested Details not found
      operationId: GetUserGroupDetails
      description: Get details of a user-group based on id
      x-hidden-description: |
        Get details of a commcell user group from its id
      summary: Get User Group Details
    put:
      tags:
        - UserGroup
      x-terraform-resource: UserGroup
      parameters:
        - name: userGroupId
          x-terraform-id: true
          in: path
          description: Id of the user-group to update
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserGroup'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '400':
          description: Bad Request
        '404':
          description: Requested Details not found
      operationId: ModifyUserGroup
      description: Modify the properties of an existing user-group
      x-hidden-description: |
        This can be used to enable two-factor authentication at user group level
        Update propertiers of a commcell user group
      summary: Update User Group Details
    delete:
      description: Used to delete a user-group
      x-hidden-description: |
        delete a commcell user group
      tags:
        - UserGroup
      x-terraform-resource: UserGroup
      parameters:
        - name: userGroupId
          x-terraform-id: true
          in: path
          description: Id of the user-group to delete
          required: true
          schema:
            type: integer
            format: int32
        - name: skipOwnerShipTransfer
          in: query
          description: If user group properties needn't be transferred to other user or usergroup
          schema:
            type: boolean
        - name: transferToUser
          in: query
          description: If user group properties needs to be transferred to other user
          schema:
            type: integer
            format: int32
        - name: transfertoUserGroup
          in: query
          description: If user group properties needs to be transferred to other userGroup
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '404':
          description: Requested Details not found
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      operationId: DeleteUserGroup
      summary: Delete User Group
  '/V4/Storage/{storagePoolId}/associatedCopies':
    get:
      tags:
        - Storage
      parameters:
        - name: storagePoolId
          in: path
          description: Id of the storage pool whose associated copies have to be fetched
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageAssociatedCopies'
        '404':
          description: Requested Details not found
        '500':
          description: Internal Server Error
      operationId: GetStorageAssociatedCopies
      description: Get associated copies and plan which are utilizing this storage.
  /V4/Storage/Disk:
    get:
      tags:
        - DiskStorage
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageListResponse'
        '404':
          description: Requested Details not found
      description: Get a list of disk storage pools
      operationId: GetDiskStorages
      summary: Get Disk Storage
    post:
      x-terraform-resource: Storage_Disk
      tags:
        - DiskStorage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDiskStorage'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                x-terraform-id: Id
                $ref: '#/components/schemas/IdName'
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error
      operationId: CreateDiskStorage
      description: Create a new disk storage pool
      summary: Create a disk storage pool
  '/V4/Storage/Disk/{storagePoolId}':
    get:
      x-terraform-resource: Storage_Disk
      tags:
        - DiskStorage
      parameters:
        - name: storagePoolId
          x-terraform-id: true
          in: path
          description: Id of the disk storage pool whose details have to be fetched
          required: true
          schema:
            type: integer
            format: int32
        - schema:
            type: boolean
          in: query
          name: showInheritedAssociation
          description: Show inherited security association
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiskStorage'
        '404':
          description: Requested Details not found
        '500':
          description: Internal Server Error
      operationId: GetDiskStorageDetails
      description: Get details of a disk storage pool based on id
      summary: Get Disk Storage Details
    put:
      x-terraform-resource: Storage_Disk
      tags:
        - DiskStorage
      parameters:
        - name: storagePoolId
          x-terraform-id: true
          in: path
          description: Id of the disk storage to update
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDiskStorage'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '400':
          description: Bad Request
        '404':
          description: Requested Details not found
      operationId: ModifyDiskStorage
      description: Modify the properties of an existing disk storage pool
      summary: Update Disk Storage Properties
    delete:
      x-terraform-resource: Storage_Disk
      description: Used to delete a disk storage pool
      tags:
        - DiskStorage
      parameters:
        - name: storagePoolId
          x-terraform-id: true
          in: path
          description: Id of the disk storage pool to delete
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '404':
          description: Requested Details not found
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      operationId: DeleteDiskStorage
      summary: Delete Disk Storage
  '/V4/Storage/Disk/{storagePoolId}/BackupLocation':
    post:
      x-terraform-resource: Storage_Disk_Backup_Location
      tags:
        - DiskStorage
      parameters:
        - name: storagePoolId
          in: path
          description: Id of the disk storage to update
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBackupLocation'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                x-terraform-id: Id
                $ref: '#/components/schemas/IdName'
        '400':
          description: Bad Request
        '404':
          description: Requested Details not found
        '500':
          description: Internal Server Error
      operationId: CreateBackupLocation
      description: Create a new backup location
      summary: Create Backup Location
  '/V4/Storage/Disk/{storagePoolId}/BackupLocation/{backupLocationId}':
    get:
      x-terraform-resource: Storage_Disk_Backup_Location
      description: Used to fetch mount path details of the disk storage pool
      tags:
        - DiskStorage
      parameters:
        - name: storagePoolId
          in: path
          description: Id of the disk storage pool whose details have to be fetched
          required: true
          schema:
            type: integer
            format: int32
        - name: backupLocationId
          x-terraform-id: true
          in: path
          description: Id of the backup location whose details have to be fetched
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupLocationDetails'
        '404':
          description: Requested Details not found
      operationId: GetBackupLocationDetails
      summary: Get Backup location details
    put:
      x-terraform-resource: Storage_Disk_Backup_Location
      tags:
        - DiskStorage
      parameters:
        - name: storagePoolId
          in: path
          description: Id of the disk storage to update
          required: true
          schema:
            type: integer
            format: int32
        - name: backupLocationId
          x-terraform-id: true
          in: path
          description: Id of the backup location to update
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBackupLocation'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '400':
          description: Bad Request
        '404':
          description: Requested Details not found
      operationId: ModifyBackupLocation
      description: Modify the properties of an existing mount path
      summary: Update Backup Location properties
    delete:
      x-terraform-resource: Storage_Disk_Backup_Location
      tags:
        - DiskStorage
      parameters:
        - name: storagePoolId
          in: path
          description: Id of the disk storage to whose backup location has to be deleted
          required: true
          schema:
            type: integer
            format: int32
        - name: backupLocationId
          x-terraform-id: true
          in: path
          description: Id of the backup location to delete
          required: true
          schema:
            type: integer
            format: int32
        - name: forceDelete
          in: query
          description: Force deletes a backup location.
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '400':
          description: Bad Request
        '404':
          description: Requested Details not found
      operationId: DeleteBackupLocation
      description: Modify the properties of an existing mount path
      summary: Delete Backup Location
  /V4/Storage/Disk/{storagePoolId}/BackupLocation/{backupLocationId}/AccessPath/MediaAgents:
    get:
      description: Used to fetch available media agents which can be added as access paths for disk storage
      tags:
        - DiskStorage
      parameters:
        - name: storagePoolId
          in: path
          description: Id of the disk storage pool whose media agent has to be shared
          required: true
          schema:
            type: integer
            format: int32
        - name: backupLocationId
          in: path
          description: Id of the back up location of which media agent has to be shared
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MediaAgentList'
        '404':
          description: Requested Details not found
      operationId: DiskGetEligibleMediaAgentsForAccessPath
  '/V4/Storage/Disk/{storagePoolId}/BackupLocation/{backupLocationId}/AccessPath':
    post:
      x-terraform-resource: Disk_AccessPath
      x-terraform-id-function: handler.RetrieveBackupLocationAccessPathId
      description: Used to add a media agent to a disk access path
      tags:
        - DiskStorage
      parameters:
        - name: storagePoolId
          in: path
          description: Id of the disk storage pool whose details have to be fetched to add a new access path
          required: true
          schema:
            type: integer
            format: int32
        - name: backupLocationId
          in: path
          description: Id of the backup location whose details have to be fetched to add a new access path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddDiskAccessPath'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '404':
          description: Requested Details not found
        '500':
          description: Internal Server Error
      operationId: AddMediaAgent
      summary: Add Media Agent to Disk Path
  '/V4/Storage/Disk/{storagePoolId}/BackupLocation/{backupLocationId}/AccessPath/{accessPathId}':
    delete:
      x-terraform-resource: Disk_AccessPath
      description: Used to delete a media agent to a disk access path
      tags:
        - DiskStorage
      parameters:
        - name: storagePoolId
          in: path
          description: Id of the disk storage pool whose access path has to be deleted
          required: true
          schema:
            type: integer
            format: int32
        - name: backupLocationId
          in: path
          description: Id of the mount path whose access path has to be deleted
          required: true
          schema:
            type: integer
            format: int32
        - name: accessPathId
          x-terraform-id: true
          in: path
          description: Id of the mount path whose access path has to be deleted
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '404':
          description: Requested Details not found
      operationId: DeleteDiskAccessPath
      summary: Delete Media Agent to Disk Path
    put:
      x-terraform-resource: Disk_AccessPath
      description: Used to modify a disk access path
      summary: Modify a disk access path
      tags:
        - DiskStorage
      parameters:
        - name: storagePoolId
          in: path
          description: Id of the disk storage pool whose access path has to be modified
          required: true
          schema:
            type: integer
            format: int32
        - name: backupLocationId
          in: path
          description: Id of the mount path whose access path has to be modified
          required: true
          schema:
            type: integer
            format: int32
        - name: accessPathId
          x-terraform-id: true
          in: path
          description: Id of the mount path whose access path has to be modified
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDiskAccessPath'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '404':
          description: Requested Details not found
      operationId: ModifyDiskAccessPath
  /V4/Storage/Local:
    get:
      tags:
        - LocalStorage
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageListResponse'
        '404':
          description: Requested Details not found
      description: Get a list of Local storage pools
      operationId: GetLocalStorages
      summary: Get All Local Storage
    post:
      tags:
        - LocalStorage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateLocalStorage'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdName'
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error
      operationId: CreateLocalStorage
      description: Create a new Local storage pool
      summary: Create a local storage pool
  '/V4/Storage/Local/{storagePoolId}':
    get:
      tags:
        - LocalStorage
      parameters:
        - name: storagePoolId
          in: path
          description: Id of the local storage pool whose details have to be fetched
          required: true
          schema:
            type: integer
            format: int32
        - schema:
            type: boolean
          in: query
          name: showInheritedAssociation
          description: Show inherited security association
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocalStorage'
        '404':
          description: Requested Details not found
        '500':
          description: Internal Server Error
      operationId: GetLocalStorageDetails
      description: Get details of a local storage pool based on id.
      summary: Get Local Storage Details
    put:
      tags:
        - LocalStorage
      parameters:
        - name: storagePoolId
          in: path
          description: Id of the local storage to update
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateLocalStorage'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '400':
          description: Bad Request
        '404':
          description: Requested Details not found
      operationId: ModifyLocalStorage
      description: Modify the properties of an existing local storage pool
      summary: Update Local Storage Properties
    delete:
      description: Used to delete a local storage pool
      tags:
        - LocalStorage
      parameters:
        - name: storagePoolId
          in: path
          description: Id of the local storage pool to delete
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '404':
          description: Requested Details not found
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      operationId: DeleteLocalStorage
      summary: Delete Local Storage
  '/V4/Storage/Local/{storagePoolId}/BackupLocation':
    post:
      tags:
        - LocalStorage
      parameters:
        - name: storagePoolId
          in: path
          description: Id of the local storage pool to update
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBackupLocation'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdName'
        '400':
          description: Bad Request
        '404':
          description: Requested Details not found
        '500':
          description: Internal Server Error
      operationId: CreateLocalBackupLocation
      description: Create a new backup location for local storage.
      summary: Create a backup location for local storage
  '/V4/Storage/Local/{storagePoolId}/BackupLocation/{backupLocationId}':
    get:
      description: Used to fetch mount path details of the local storage pool
      tags:
        - LocalStorage
      parameters:
        - name: storagePoolId
          in: path
          description: Id of the local storage pool whose details have to be fetched
          required: true
          schema:
            type: integer
            format: int32
        - name: backupLocationId
          in: path
          description: Id of the backup location whose details have to be fetched
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupLocationDetails'
        '404':
          description: Requested Details not found
      operationId: GetLocalBackupLocationDetails
      summary: Get Backup location details of local storage
    put:
      tags:
        - LocalStorage
      parameters:
        - name: storagePoolId
          in: path
          description: Id of the local storage pool to update
          required: true
          schema:
            type: integer
            format: int32
        - name: backupLocationId
          in: path
          description: Id of the backup location to update
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBackupLocation'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '400':
          description: Bad Request
        '404':
          description: Requested Details not found
      operationId: ModifyLocalBackupLocation
      description: Modify the properties of an existing mount path of local storage pool
      summary: Update Backup Location properties of local storage
    delete:
      tags:
        - LocalStorage
      parameters:
        - name: storagePoolId
          in: path
          description: Id of the local storage pool to whose backup location has to be deleted.
          required: true
          schema:
            type: integer
            format: int32
        - name: backupLocationId
          in: path
          description: Id of the backup location to delete
          required: true
          schema:
            type: integer
            format: int32
        - name: forceDelete
          in: query
          description: Force deletes a backup location.
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '400':
          description: Bad Request
        '404':
          description: Requested Details not found
      operationId: DeleteLocalBackupLocation
      description: Delete an existing mount path of local storage pool.
      summary: Delete Backup Location of local storage
  /V4/Storage/Local/{storagePoolId}/BackupLocation/{backupLocationId}/AccessPath/MediaAgents:
    get:
      description: Used to fetch available media agents which can be added as access paths for local storage
      tags:
        - LocalStorage
      parameters:
        - name: storagePoolId
          in: path
          description: Id of the local storage pool whose media agent has to be shared
          required: true
          schema:
            type: integer
            format: int32
        - name: backupLocationId
          in: path
          description: Id of the backup location of which media agent has to be shared
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MediaAgentList'
        '404':
          description: Requested Details not found
      operationId: LocalGetEligibleMediaAgentsForAccessPath
      summary: fetch media agents which can be added as access paths for local storage
  '/V4/Storage/Local/{storagePoolId}/BackupLocation/{backupLocationId}/AccessPath':
    post:
      description: Used to add a media agent to a local storage pool access path
      tags:
        - LocalStorage
      parameters:
        - name: storagePoolId
          in: path
          description: Id of the local storage pool whose details have to be fetched to add a new access path
          required: true
          schema:
            type: integer
            format: int32
        - name: backupLocationId
          in: path
          description: Id of the backup location whose details have to be fetched to add a new access path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddLocalAccessPath'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '404':
          description: Requested Details not found
        '500':
          description: Internal Server Error
      operationId: AddLocalAccessPath
      summary: Add Media Agent to Local Storage Path
  '/V4/Storage/Local/{storagePoolId}/BackupLocation/{backupLocationId}/AccessPath/{accessPathId}':
    delete:
      description: Used to delete a media agent to a local storage access path
      tags:
        - LocalStorage
      parameters:
        - name: storagePoolId
          in: path
          description: Id of the local storage pool whose access path has to be deleted
          required: true
          schema:
            type: integer
            format: int32
        - name: backupLocationId
          in: path
          description: Id of the mount path whose access path has to be deleted
          required: true
          schema:
            type: integer
            format: int32
        - name: accessPathId
          in: path
          description: Id of the mount path whose access path has to be deleted
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '404':
          description: Requested Details not found
      operationId: DeleteLocalAccessPath
      summary: Delete Media Agent to Local Storage Path
    put:
      description: Used to modify a local storage access path
      tags:
        - LocalStorage
      parameters:
        - name: storagePoolId
          in: path
          description: Id of the Local storage pool whose access path has to be modified
          required: true
          schema:
            type: integer
            format: int32
        - name: backupLocationId
          in: path
          description: Id of the mount path whose access path has to be modified
          required: true
          schema:
            type: integer
            format: int32
        - name: accessPathId
          in: path
          description: Id of the mount path whose access path has to be modified
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateLocalAccessPath'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '404':
          description: Requested Details not found
      operationId: ModifyLocalAccessPath
      summary: Modify a local storage access path
  /V4/CommcellGroup:
    get:
      description: Get All Commcell Groups
      summary: Get Commcell Groups
      operationId: GetCommcellGroups
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCommcellGroupsResp'
        '404':
          description: Requested Details not found
      tags:
        - CommcellGroup
    post:
      description: Create Commcell group
      summary: Create a Commcell Group
      operationId: CreateCommcellGroups
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateCommcellGroupResp'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '404':
          description: Requested Details not found
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      tags:
        - CommcellGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCommcellGroupReq'
  /V4/ServerGroup:
    get:
      description: Get All Server Groups
      summary: Get Server Groups
      operationId: GetServerGroups
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetServerGroupsResp'
        '404':
          description: Requested Details not found
      tags:
        - ServerGroup
    post:
      description: Create Server group
      summary: Create a Server Group
      operationId: CreateServerGroups
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateServerGroupResp'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '404':
          description: Requested Details not found
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      tags:
        - ServerGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateServerGroup'
  /V4/ServerGroup/Preview:
    post:
      description: Get a preview of servers affected with create server group operation
      operationId: ServerGroupsCreationPreview
      summary: Server Group Preview
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateServerGroupPreviewResp'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      tags:
        - ServerGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AutomaticServerGroupAssociationDetails'
  '/V4/CommcellGroup/{commcellGroupId}':
    get:
      description: Get details of a commcellGroup based on id
      operationId: GetCommcellGroupIdDetails
      summary: Get Commcell Group Details
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommcellGroupInfo'
        '404':
          description: Requested Details not found
      tags:
        - CommcellGroup
      parameters:
        - name: commcellGroupId
          in: path
          description: Id of the commcellGroupId whose details have to be fetched
          required: true
          schema:
            type: integer
            format: int32
        - name: mode
          in: header
          schema:
            $ref: '#/components/schemas/Mode'
    put:
      description: Used to update commcell associations for a server group
      operationId: UpdateCommcellGroupAssociation
      summary: Update the commcell group
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCommcellGroupReq'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '404':
          description: Requested Details not found
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      parameters:
        - name: commcellGroupId
          in: path
          description: Id of the commcellGroupId whose details have to be fetched
          required: true
          schema:
            type: integer
            format: int32
      tags:
        - CommcellGroup
    delete:
      description: Used to delete a commcellGroup
      operationId: DeleteCommcellGroup
      summary: Delete a CommcellGroup
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '404':
          description: Requested Details not found
      tags:
        - CommcellGroup
      parameters:
        - name: commcellGroupId
          in: path
          description: Id of the commcellGroup to delete
          required: true
          schema:
            type: integer
            format: int32
  '/V4/ServerGroup/{serverGroupId}':
    get:
      description: Get details of a serverGroup based on id
      operationId: GetServerGroupIdDetails
      summary: Get Server Group Details
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerGroup'
        '404':
          description: Requested Details not found
      tags:
        - ServerGroup
      parameters:
        - name: serverGroupId
          in: path
          description: Id of the serverGroupId whose details have to be fetched
          required: true
          schema:
            type: integer
            format: int32
        - name: mode
          in: header
          schema:
            $ref: '#/components/schemas/Mode'
    put:
      description: Used to update server associations for a server group
      operationId: UpdateServerGroupAssociation
      summary: Update the server group
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateServerGroup'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '404':
          description: Requested Details not found
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      parameters:
        - name: serverGroupId
          in: path
          description: Id of the serverGroupId whose details have to be fetched
          required: true
          schema:
            type: integer
            format: int32
      tags:
        - ServerGroup
    delete:
      description: Used to delete a serverGroup
      operationId: DeleteServerGroup
      summary: Delete a ServerGroup
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '404':
          description: Requested Details not found
      tags:
        - ServerGroup
      parameters:
        - name: serverGroupId
          in: path
          description: Id of the serverGroup to delete
          required: true
          schema:
            type: integer
            format: int32
  '/V4/ServerGroup/{serverGroupId}/Refresh':
    put:
      description: Used to immediately refresh automatic server associations for a server group
      operationId: RefreshServerGroupAssociation
      summary: Refresh the server group associations
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
      parameters:
        - name: serverGroupId
          in: path
          description: Id of the serverGroup whose associations has to be refreshed
          required: true
          schema:
            type: integer
            format: int32
      tags:
        - ServerGroup
  '/V4/ServerGroup/{serverGroupId}/Restore/Action/Disable':
    put:
      description: Used to disable restore property for a server group
      operationId: DisableRestoreServerGroup
      x-hidden-description: |
        This is used to disable activity control on a server group
      summary: Disable Restore for servergroup
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      tags:
        - ServerGroup
      parameters:
        - name: serverGroupId
          in: path
          description: Id of the serverGroup to modify
          required: true
          schema:
            type: integer
            format: int32
        - name: enableAfterADelay
          in: query
          description: Provide UTC time in unix format.
          required: false
          schema:
            type: integer
            format: int32
  '/V4/ServerGroup/{serverGroupId}/Backup/Action/Disable':
    put:
      description: Used to disable backup property for a server group
      summary: Disable backups for ServerGroup
      operationId: DisableBackupServerGroup
      x-hidden-description: |
        This is used to disable activity control on a server group
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      tags:
        - ServerGroup
      parameters:
        - name: serverGroupId
          in: path
          description: Id of the serverGroup to modify
          required: true
          schema:
            type: integer
            format: int32
        - name: enableAfterADelay
          in: query
          description: Provide UTC time in unix format.
          required: false
          schema:
            type: integer
            format: int32
  '/V4/ServerGroup/{serverGroupId}/DataAging/Action/Disable':
    put:
      description: Used to disable data aging property for a server group
      summary: Disable dataaging for ServerGroup
      operationId: DisableDataAgingServerGroup
      x-hidden-description: |
        This is used to disable activity control on a server group
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      tags:
        - ServerGroup
      parameters:
        - name: serverGroupId
          in: path
          description: Id of the serverGroup to modify
          required: true
          schema:
            type: integer
            format: int32
        - name: enableAfterADelay
          in: query
          description: Provide UTC time in unix format.
          required: false
          schema:
            type: integer
            format: int32
  '/V4/ServerGroup/{serverGroupId}/Restore/Action/Enable':
    put:
      description: Used to enable restore property for a server group
      operationId: EnableRestoreServerGroup
      summary: Enable restore for ServerGroup
      x-hidden-description: |
        This is used to enable activity control on a server group
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      tags:
        - ServerGroup
      parameters:
        - name: serverGroupId
          in: path
          description: Id of the serverGroup to modify
          required: true
          schema:
            type: integer
            format: int32
  '/V4/ServerGroup/{serverGroupId}/Backup/Action/Enable':
    put:
      description: Used to enable backup property for a server group
      operationId: EnableBackupServerGroup
      summary: Enable Backup for ServerGroup
      x-hidden-description: |
        This is used to enable activity control on a server group
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      tags:
        - ServerGroup
      parameters:
        - name: serverGroupId
          in: path
          description: Id of the serverGroup to modify
          required: true
          schema:
            type: integer
            format: int32
  '/V4/ServerGroup/{serverGroupId}/DataAging/Action/Enable':
    put:
      description: Used to enable data aging property for a server group
      operationId: EnableDataAgingServerGroup
      summary: Enable Data aging for Server Group
      x-hidden-description: |
        This is used to enable activity control on a server group
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      tags:
        - ServerGroup
      parameters:
        - name: serverGroupId
          in: path
          description: Id of the serverGroup to modify
          required: true
          schema:
            type: integer
            format: int32
  /CommcellGroup:
    get:
      description: Get Commcell Groups info
      summary: Get Commcell Groups
      operationId: GetCommcellGroups
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCommcellGroupsResp'
        '404':
          description: Requested Details not found
      tags:
        - CommcellGroup

  '/V4/Server/{serverId}/Agent/{agentId}/Backup/Action/Disable':
    put:
      description: |-
        Used to disable backup property for an agent.
        Types of available agentIds are:
        41-Active Directory,
        21-AIX File System,
        64-Big Data Apps,
        134-Cloud Apps,
        37-DB2,
        103-DB2 MultiNode,
        62-DB2 on Unix,
        128-Documentum,
        90-Domino Mailbox Archiver,
        91-DPM,
        67-Exchange Compliance Archiver,
        53-Exchange Database,
        45-Exchange Mailbox,
        54-Exchange Mailbox (Classic),
        56-Exchange Mailbox Archiver,
        82-Exchange PF Archiver,
        35-Exchange Public Folder,
        73-File Share Archiver,
        33-File System,
        74-FreeBSD,
        71-GroupWise DB,
        17-HP-UX Files System,
        65-Image Level,
        75-Image Level On Unix,
        76-Image Level ProxyHost,
        87-Image Level ProxyHost on Unix,
        3-Informix Database,
        29-Linux File System,
        89-MS SharePoint Archiver,
        104-MySQL,
        13-NAS,
        83-Netware File Archiver,
        12-Netware File System,
        10-Novell Directory Services,
        124-Object Link,
        131-Object Store,
        86-OES File System on Linux,
        22-Oracle,
        80-Oracle RAC,
        130-Other External Agent,
        125-PostgreSQL,
        38-Proxy Client File System,
        87-ProxyHost on Unix,
        61-SAP for Oracle,
        135-SAP HANA,
        78-SharePoint Server,
        20-Solaris 64bit File System,
        19-Solaris File System,
        81-SQL Server,
        5-Sybase Database,
        66-Unix File Archiver,
        36-Unix Tru64 64-bit File System,
        106-Virtual Server,
        58- Windows File Archiver
      operationId: DisableBackupAgent
      summary: Disable Backup Property for an Agent
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
      tags:
        - Agent
      parameters:
        - name: serverId
          in: path
          description: Id of the server to modify
          required: true
          schema:
            type: integer
            format: int32
        - name: agentId
          in: path
          description: Id of the agent to be modified
          required: true
          schema:
            type: integer
            format: int32
        - name: enableAfterADelay
          in: query
          description: Provide UTC time in unix format.
          required: false
          schema:
            type: integer
            format: int32
  '/V4/Server/{serverId}/Agent/{agentId}/Restore/Action/Disable':
    put:
      description: |-
        Used to disable restore property for an agent
        Types of available agentIds are:
        41-Active Directory,
        21-AIX File System,
        64-Big Data Apps,
        134-Cloud Apps,
        37-DB2,
        103-DB2 MultiNode,
        62-DB2 on Unix,
        128-Documentum,
        90-Domino Mailbox Archiver,
        91-DPM,
        67-Exchange Compliance Archiver,
        53-Exchange Database,
        45-Exchange Mailbox,
        54-Exchange Mailbox (Classic),
        56-Exchange Mailbox Archiver,
        82-Exchange PF Archiver,
        35-Exchange Public Folder,
        73-File Share Archiver,
        33-File System,
        74-FreeBSD,
        71-GroupWise DB,
        17-HP-UX Files System,
        65-Image Level,
        75-Image Level On Unix,
        76-Image Level ProxyHost,
        87-Image Level ProxyHost on Unix,
        3-Informix Database,
        29-Linux File System,
        89-MS SharePoint Archiver,
        104-MySQL,
        13-NAS,
        83-Netware File Archiver,
        12-Netware File System,
        10-Novell Directory Services,
        124-Object Link,
        131-Object Store,
        86-OES File System on Linux,
        22-Oracle,
        80-Oracle RAC,
        130-Other External Agent,
        125-PostgreSQL,
        38-Proxy Client File System,
        87-ProxyHost on Unix,
        61-SAP for Oracle,
        135-SAP HANA,
        78-SharePoint Server,
        20-Solaris 64bit File System,
        19-Solaris File System,
        81-SQL Server,
        5-Sybase Database,
        66-Unix File Archiver,
        36-Unix Tru64 64-bit File System,
        106-Virtual Server,
        58- Windows File Archiver
      operationId: DisableRestoreAgent
      summary: Disable restore property for an agent
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
      tags:
        - Agent
      parameters:
        - name: serverId
          in: path
          description: Id of the server to modify
          required: true
          schema:
            type: integer
            format: int32
        - name: agentId
          in: path
          description: Id of the agent to be modified
          required: true
          schema:
            type: integer
            format: int32
        - name: enableAfterADelay
          in: query
          description: Provide UTC time in unix format.
          required: false
          schema:
            type: integer
            format: int32
  '/V4/Server/{serverId}/Agent/{agentId}/Backup/Action/Enable':
    put:
      description: |-
        Used to enable backup property for an agent
        Types of available agentIds are:
        41-Active Directory,
        21-AIX File System,
        64-Big Data Apps,
        134-Cloud Apps,
        37-DB2,
        103-DB2 MultiNode,
        62-DB2 on Unix,
        128-Documentum,
        90-Domino Mailbox Archiver,
        91-DPM,
        67-Exchange Compliance Archiver,
        53-Exchange Database,
        45-Exchange Mailbox,
        54-Exchange Mailbox (Classic),
        56-Exchange Mailbox Archiver,
        82-Exchange PF Archiver,
        35-Exchange Public Folder,
        73-File Share Archiver,
        33-File System,
        74-FreeBSD,
        71-GroupWise DB,
        17-HP-UX Files System,
        65-Image Level,
        75-Image Level On Unix,
        76-Image Level ProxyHost,
        87-Image Level ProxyHost on Unix,
        3-Informix Database,
        29-Linux File System,
        89-MS SharePoint Archiver,
        104-MySQL,
        13-NAS,
        83-Netware File Archiver,
        12-Netware File System,
        10-Novell Directory Services,
        124-Object Link,
        131-Object Store,
        86-OES File System on Linux,
        22-Oracle,
        80-Oracle RAC,
        130-Other External Agent,
        125-PostgreSQL,
        38-Proxy Client File System,
        87-ProxyHost on Unix,
        61-SAP for Oracle,
        135-SAP HANA,
        78-SharePoint Server,
        20-Solaris 64bit File System,
        19-Solaris File System,
        81-SQL Server,
        5-Sybase Database,
        66-Unix File Archiver,
        36-Unix Tru64 64-bit File System,
        106-Virtual Server,
        58- Windows File Archiver
      operationId: EnableBackupAgent
      summary: Enable Backup Property for an Agent
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
      tags:
        - Agent
      parameters:
        - name: serverId
          in: path
          description: Id of the server to modify
          required: true
          schema:
            type: integer
            format: int32
        - name: agentId
          in: path
          description: Id of the agent to be modified
          required: true
          schema:
            type: integer
            format: int32
  '/V4/Server/{serverId}/Agent/{agentId}/Restore/Action/Enable':
    put:
      description: |-
        Used to enable restore property for an agent
        Types of available agentIds are:
        41-Active Directory,
        21-AIX File System,
        64-Big Data Apps,
        134-Cloud Apps,
        37-DB2,
        103-DB2 MultiNode,
        62-DB2 on Unix,
        128-Documentum,
        90-Domino Mailbox Archiver,
        91-DPM,
        67-Exchange Compliance Archiver,
        53-Exchange Database,
        45-Exchange Mailbox,
        54-Exchange Mailbox (Classic),
        56-Exchange Mailbox Archiver,
        82-Exchange PF Archiver,
        35-Exchange Public Folder,
        73-File Share Archiver,
        33-File System,
        74-FreeBSD,
        71-GroupWise DB,
        17-HP-UX Files System,
        65-Image Level,
        75-Image Level On Unix,
        76-Image Level ProxyHost,
        87-Image Level ProxyHost on Unix,
        3-Informix Database,
        29-Linux File System,
        89-MS SharePoint Archiver,
        104-MySQL,
        13-NAS,
        83-Netware File Archiver,
        12-Netware File System,
        10-Novell Directory Services,
        124-Object Link,
        131-Object Store,
        86-OES File System on Linux,
        22-Oracle,
        80-Oracle RAC,
        130-Other External Agent,
        125-PostgreSQL,
        38-Proxy Client File System,
        87-ProxyHost on Unix,
        61-SAP for Oracle,
        135-SAP HANA,
        78-SharePoint Server,
        20-Solaris 64bit File System,
        19-Solaris File System,
        81-SQL Server,
        5-Sybase Database,
        66-Unix File Archiver,
        36-Unix Tru64 64-bit File System,
        106-Virtual Server,
        58- Windows File Archiver
      operationId: EnableRestoreAgent
      summary: Enable restore property for an agent
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
      tags:
        - Agent
      parameters:
        - name: serverId
          in: path
          description: Id of the server to modify
          required: true
          schema:
            type: integer
            format: int32
        - name: agentId
          in: path
          description: Id of the agent to be modified
          required: true
          schema:
            type: integer
            format: int32
  '/V4/Subclient/{subclientId}/Backup/Action/Disable':
    put:
      description: Used to disable backup property for a subclient
      operationId: DisableBackupSubclient
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      tags:
        - Subclient
      parameters:
        - name: subclientId
          in: path
          description: Id of the subclient to modify
          required: true
          schema:
            type: integer
            format: int32
        - name: enableAfterADelay
          in: query
          description: Provide UTC time in unix format.
          required: false
          schema:
            type: integer
            format: int32
  '/V4/Subclient/{subclientId}/Backup/Action/Enable':
    put:
      description: Used to enable backup property for an subclient
      operationId: EnableBackupSubclient
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      tags:
        - Subclient
      parameters:
        - name: subclientId
          in: path
          description: Id of the subclient to modify
          required: true
          schema:
            type: integer
            format: int32
  /V4/Storage/Cloud:
    get:
      tags:
        - CloudStorage
      parameters:
        - schema:
            type: string
            enum:
              - ALL
              - IBMi_VTL
              - ALL_EXCEPT_IBMi_VTL
              - HEDVIG
              - METALLIC
              - METALLIC_CLOUD_STORAGE
              - ALL_INCLUDING_METALLIC_CLOUD_STORAGE
              - ALL_EXCEPT_METALLIC_CLOUD_STORAGE
          in: query
          name: storageSubType
          description: Filter cloud storage list to given subtype.
          required: false
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  cloudStorage:
                    type: array
                    items:
                      $ref: '#/components/schemas/StorageListSummary'
        '404':
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      operationId: GetCloudStorageList
      description: Get All Cloud Storage
      summary: Get All Cloud Storage
    post:
      x-terraform-resource: Storage_Cloud
      x-terraform-oneof-map:
        - schema: AmazonS3
          resource: S3
        - schema: MicrosoftAzure
          resource: Azure
      summary: Create a Cloud Storage
      operationId: CreateCloudStorage
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudStorageResp'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/Alibaba'
                - $ref: '#/components/schemas/AmazonS3'
                - $ref: '#/components/schemas/Ceph'
                - $ref: '#/components/schemas/ChinaMobileOnest'
                - $ref: '#/components/schemas/CloudianHyperStore'
                - $ref: '#/components/schemas/DellEMC'
                - $ref: '#/components/schemas/EMCAtmos'
                - $ref: '#/components/schemas/Fujitsu'
                - $ref: '#/components/schemas/GoogleCloud'
                - $ref: '#/components/schemas/HDSContent'
                - $ref: '#/components/schemas/HitachiContentCloud'
                - $ref: '#/components/schemas/HPECatalyst'
                - $ref: '#/components/schemas/Huawei'
                - $ref: '#/components/schemas/IBM'
                - $ref: '#/components/schemas/MicrosoftAzure'
                - $ref: '#/components/schemas/NetApp'
                - $ref: '#/components/schemas/Nutanix'
                - $ref: '#/components/schemas/OpenStack'
                - $ref: '#/components/schemas/OracleArchive'
                - $ref: '#/components/schemas/OracleObject'
                - $ref: '#/components/schemas/Rackspace'
                - $ref: '#/components/schemas/CCLVaultV2'
                - $ref: '#/components/schemas/S3Compatible'
                - $ref: '#/components/schemas/ScalityRing'
                - $ref: '#/components/schemas/WasabiHot'
              discriminator:
                propertyName: cloudType
            examples:
              Amazon S3:
                value:
                  name: string
                  cloudType: Amazon S3
                  mediaAgent:
                    name: string
                    id: 0
                  serviceHost: 's3.[region].amazonaws.com'
                  authentication: Access and secret keys
                  credentials:
                    name: string
                    id: 0
                  bucket: string
                  storageClass: Standard
        description: ''
      description: Create a Cloud Storage
      tags:
        - CloudStorage
  '/V4/Storage/Cloud/{cloudStorageId}':
    parameters:
      - schema:
          type: integer
          format: int32
        name: cloudStorageId
        x-terraform-id: true
        in: path
        required: true
        description: Id of cloud Storage
    get:
      x-terraform-resource: Storage_Cloud
      tags:
        - CloudStorage
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/CloudStorageDetails'
        '404':
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
      operationId: GetCloudStorageById
      description: Get Cloud Storage Details
      parameters:
        - schema:
            type: string
            enum:
              - 'true'
          in: query
          name: showInheritedAssociation
          description: Set to true if want to show inherited security associations
          explode: false
          allowEmptyValue: false
    put:
      x-terraform-resource: Storage_Cloud
      operationId: ModifyCloudStorageById
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '404':
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      tags:
        - CloudStorage
      description: 'Modify details like name, encryption, security of a specific cloud storage'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCloudStorage'
    delete:
      x-terraform-resource: Storage_Cloud
      operationId: DeleteCloudStorageById
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '404':
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      tags:
        - CloudStorage
      description: Delete existing cloud storage
  '/V4/Storage/Cloud/{cloudStorageId}/MetadataCache':
    parameters:
      - schema:
          type: integer
          format: int32
        name: cloudStorageId
        in: path
        required: true
        description: Id of cloud Storage
    post:
      operationId: CreateCloudStorageMetaDataCache
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '404':
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      tags:
        - CloudStorage
      description: Add metadata cache paths to storage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMetadataCacheConfigurations'
            examples:
              For a local mediaAgent:
                value:
                  mediaAgent:
                    id: 0
                    name: string
                  path: string
              'For a network mediaAgent with saved credentials  ':
                value:
                  mediaAgent:
                    id: 0
                    name: string
                  savedCredentials:
                    id: 0
                    name: string
                  path: string
              For a network mediaAgent with credentials:
                value:
                  mediaAgent:
                    id: 0
                    name: string
                  credentials:
                    name: string
                    password: string
                  path: string
  '/V4/Storage/Cloud/{cloudStorageId}/MetadataCache/{metadataCacheId}':
    parameters:
      - schema:
          type: integer
          format: int32
        name: cloudStorageId
        in: path
        required: true
        description: Id of cloud Storage
      - schema:
          type: integer
          format: int32
        name: metadataCacheId
        in: path
        required: true
        description: Id of metadata cache
    get:
      operationId: GetCloudStorageMetaDataCacheById
      tags:
        - CloudStorage
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetadataCacheConfiguration'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      description: Get details of metadata Cache of a cloud storage based on Id
    put:
      operationId: ModifyCloudStorageMetaDataCacheById
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '404':
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      tags:
        - CloudStorage
      description: 'Modify details like credentials and path for metadata Cache of a cloud storage based on Id'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMetadataCacheConfiguration'
    delete:
      operationId: DeleteCloudStorageMetadataCacheById
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '404':
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      tags:
        - CloudStorage
      description: Delete metadata cache of an existing cloud storage
  '/V4/Storage/Cloud/{cloudStorageId}/Bucket':
    parameters:
      - schema:
          type: integer
          format: int32
        name: cloudStorageId
        in: path
        required: true
    post:
      x-terraform-resource: Storage_Cloud_Bucket
      x-terraform-oneof-map:
        - schema: AmazonS3Bucket
          resource: S3
        - schema: MicrosoftAzureBucket
          resource: Azure
      summary: Create a new bucket for a specific cloud storage
      operationId: CreateBucketforCloudStorage
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                x-terraform-id: Id
                allOf:
                  - $ref: '#/components/schemas/IdName'
                  - $ref: '#/components/schemas/GenericResp'
        '400':
          description: Bad Request
        '404':
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
      description: Create a new bucket for a specific cloud storage
      tags:
        - CloudStorage
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/AlibabaBucket'
                - $ref: '#/components/schemas/AmazonS3Bucket'
                - $ref: '#/components/schemas/CephBucket'
                - $ref: '#/components/schemas/ChinaMobileOnestBucket'
                - $ref: '#/components/schemas/CloudianHyperStoreBucket'
                - $ref: '#/components/schemas/DellEMCBucket'
                - $ref: '#/components/schemas/EMCAtmosBucket'
                - $ref: '#/components/schemas/FujitsuBucket'
                - $ref: '#/components/schemas/GoogleCloudBucket'
                - $ref: '#/components/schemas/HDSContentBucket'
                - $ref: '#/components/schemas/HitachiContentCloudBucket'
                - $ref: '#/components/schemas/HuaweiBucket'
                - $ref: '#/components/schemas/IBMBucket'
                - $ref: '#/components/schemas/MicrosoftAzureBucket'
                - $ref: '#/components/schemas/NetAppBucket'
                - $ref: '#/components/schemas/NutanixBucket'
                - $ref: '#/components/schemas/OpenStackBucket'
                - $ref: '#/components/schemas/OracleArchiveBucket'
                - $ref: '#/components/schemas/OracleObjectBucket'
                - $ref: '#/components/schemas/RackspaceBucket'
                - $ref: '#/components/schemas/CCLVaultV2Bucket'
                - $ref: '#/components/schemas/S3CompatibleBucket'
                - $ref: '#/components/schemas/ScalityRingBucket'
                - $ref: '#/components/schemas/WasabiHotBucket'
              discriminator:
                propertyName: cloudType
            examples:
              Amazon S3:
                value:
                  cloudType: Amazon S3
                  mediaAgent:
                    name: string
                  serviceHost: 's3.[region].amazonaws.com'
                  authentication: Access and secret keys
                  credentials:
                    name: string
                    id: 0
                  bucket: string
                  storageClass: Standard
                  proxyAddress: string
                  port: 0
                  username: string
                  password: string
  '/V4/Storage/Cloud/{cloudStorageId}/Bucket/{bucketId}':
    parameters:
      - schema:
          type: integer
          format: int32
        name: cloudStorageId
        in: path
        required: true
        description: Id of cloud Storage
      - schema:
          type: integer
          format: int32
        name: bucketId
        x-terraform-id: true
        in: path
        required: true
        description: Id of Bucket
    get:
      x-terraform-resource: Storage_Cloud_Bucket
      x-terraform-oneof-map:
        - schema: AmazonS3BucketContentResp
          resource: S3
        - schema: MicrosoftAzureBucketContentResp
          resource: Azure
      tags:
        - CloudStorage
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/AlibabaBucketContentResp'
                  - $ref: '#/components/schemas/AmazonS3BucketContentResp'
                  - $ref: '#/components/schemas/CephBucketContentResp'
                  - $ref: '#/components/schemas/ChinaMobileOnestBucketContentResp'
                  - $ref: '#/components/schemas/CloudianHyperStoreBucketContentResp'
                  - $ref: '#/components/schemas/DellEMCBucketContentResp'
                  - $ref: '#/components/schemas/EMCAtmosBucketContentResp'
                  - $ref: '#/components/schemas/FujitsuBucketContentResp'
                  - $ref: '#/components/schemas/GoogleCloudBucketContentResp'
                  - $ref: '#/components/schemas/HDSContentBucketContentResp'
                  - $ref: '#/components/schemas/HitachiContentCloudBucketContentResp'
                  - $ref: '#/components/schemas/HPECatalystBucketContentResp'
                  - $ref: '#/components/schemas/HuaweiBucketContentResp'
                  - $ref: '#/components/schemas/IBMBucketContentResp'
                  - $ref: '#/components/schemas/MicrosoftAzureBucketContentResp'
                  - $ref: '#/components/schemas/NetAppBucketContentResp'
                  - $ref: '#/components/schemas/NutanixBucketContentResp'
                  - $ref: '#/components/schemas/OpenStackBucketContentResp'
                  - $ref: '#/components/schemas/OracleArchiveBucketContentResp'
                  - $ref: '#/components/schemas/OracleObjectBucketContentResp'
                  - $ref: '#/components/schemas/RackspaceBucketContentResp'
                  - $ref: '#/components/schemas/CCLVaultV2BucketContentResp'
                  - $ref: '#/components/schemas/S3CompatibleBucketContentResp'
                  - $ref: '#/components/schemas/ScalityRingBucketContentResp'
                  - $ref: '#/components/schemas/WasabiHotBucketContentResp'
                discriminator:
                  propertyName: cloudType
        '404':
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      operationId: GetBucketDetailsOfCloudStorage
      description: Get details of a specific bucket of a cloud storage
    put:
      x-terraform-resource: Storage_Cloud_Bucket
      x-terraform-oneof-map:
        - schema: AmazonS3BucketContent
          resource: S3
        - schema: MicrosoftAzureBucketContent
          resource: Azure
      tags:
        - CloudStorage
      operationId: ModifyBucketOfCloudStorage
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      description: Modify configuration of a specific bucket of a specific cloud storage
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/AlibabaBucketContent'
                - $ref: '#/components/schemas/AmazonS3BucketContent'
                - $ref: '#/components/schemas/CephBucketContent'
                - $ref: '#/components/schemas/ChinaMobileOnestBucketContent'
                - $ref: '#/components/schemas/CloudianHyperStoreBucketContent'
                - $ref: '#/components/schemas/DellEMCBucketContent'
                - $ref: '#/components/schemas/EMCAtmosBucketContent'
                - $ref: '#/components/schemas/FujitsuBucketContent'
                - $ref: '#/components/schemas/GoogleCloudBucketContent'
                - $ref: '#/components/schemas/HDSContentBucketContent'
                - $ref: '#/components/schemas/HitachiContentCloudBucketContent'
                - $ref: '#/components/schemas/HPECatalystBucketContent'
                - $ref: '#/components/schemas/HuaweiBucketContent'
                - $ref: '#/components/schemas/IBMBucketContent'
                - $ref: '#/components/schemas/MicrosoftAzureBucketContent'
                - $ref: '#/components/schemas/NetAppBucketContent'
                - $ref: '#/components/schemas/NutanixBucketContent'
                - $ref: '#/components/schemas/OpenStackBucketContent'
                - $ref: '#/components/schemas/OracleArchiveBucketContent'
                - $ref: '#/components/schemas/OracleObjectBucketContent'
                - $ref: '#/components/schemas/RackspaceBucketContent'
                - $ref: '#/components/schemas/CCLVaultV2BucketContent'
                - $ref: '#/components/schemas/S3CompatibleBucketContent'
                - $ref: '#/components/schemas/ScalityRingBucketContent'
                - $ref: '#/components/schemas/WasabiHotBucketContent'
              discriminator:
                propertyName: cloudType
            examples:
              BucketConfiguration:
                value:
                  cloudType: Amazon S3
                  mediaAgent:
                    name: string
                    id: 0
                  configuration:
                    enable: true
                    disableBackupLocationForFutureBackups: false
                    prepareForRetirement: false
                    storageAcceleratorCredentials:
                      name: string
                      id: 0
              Amazon S3:
                value:
                  cloudType: Amazon S3
                  mediaAgent:
                    name: string
                    id: 0
                  serviceHost: 's3.[region].amazonaws.com'
                  authentication: Access and secret keys
                  credentials:
                    name: string
                    id: 0
                  bucket: string
                  storageClass: Standard
                  proxyAddress: string
                  port: 0
                  username: string
                  password: string
    delete:
      x-terraform-resource: Storage_Cloud_Bucket
      operationId: DeleteBucketOfCloudStorage
      parameters:
        - name: forceDelete
          in: query
          description: Force deletes the bucket when physical deletion of data not possible. It will do DB cleanup only.
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      tags:
        - CloudStorage
      description: Delete the specified bucket of the cloud storage
  /V4/Storage/Cloud/{cloudStorageId}/Bucket/{bucketId}/AccessPath/MediaAgents:
    get:
      description: Used to fetch available media agents which can be added as access paths for cloud storage
      tags:
        - CloudStorage
      parameters:
        - name: cloudStorageId
          in: path
          description: Id of the cloud storage pool for which media agent has to be added
          required: true
          schema:
            type: integer
            format: int32
        - name: bucketId
          in: path
          description: Id of the access path of which media agent has to be shared
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MediaAgentList'
        '404':
          description: Requested Details not found
      operationId: CloudGetEligibleMediaAgentsForAccessPath
  '/V4/Storage/Cloud/{cloudStorageId}/Bucket/{bucketId}/AccessPath':
    parameters:
      - schema:
          type: integer
          format: int32
        name: cloudStorageId
        in: path
        required: true
        description: Id of cloud Storage
      - schema:
          type: integer
          format: int32
        name: bucketId
        in: path
        required: true
        description: Id of Bucket
    post:
      operationId: CreateAccessPathForBucketOfCloudStorage
      x-terraform-resource: Storage_Cloud_AccessPath
      x-terraform-id-function: handler.RetrieveBucketAccessPathId
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '400':
          description: Bad Request
        '404':
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
      tags:
        - CloudStorage
      description: Add a new Access path (mediaAgent) to a specific bucket of a specific cloud storage
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: Used to add a new access path to a bucket
              properties:
                mediaAgent:
                  $ref: '#/components/schemas/IdName'
  '/V4/Storage/Cloud/{cloudStorageId}/Bucket/{bucketId}/AccessPath/{accessPathId}':
    parameters:
      - schema:
          type: integer
          format: int32
        name: cloudStorageId
        in: path
        required: true
        description: Id of cloud Storage
      - schema:
          type: integer
          format: int32
        name: bucketId
        in: path
        required: true
        description: Id of Bucket
      - schema:
          type: integer
          format: int32
        name: accessPathId
        x-terraform-id: true
        in: path
        required: true
        description: Id of access path (can be fetched from GET Bucket Details API)
    put:
      operationId: ModifyAccessPathOfBucketOfCloudStorage
      #x-terraform-resource: Storage_Cloud_AccessPath
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '404':
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      description: Modify access path details of specific bucket of a specific cloud storage
      tags:
        - CloudStorage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloudStorageAdvanced'
    delete:
      operationId: DeleteAccessPathForBucketOfCloudStorage
      x-terraform-resource: Storage_Cloud_AccessPath
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '404':
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      tags:
        - CloudStorage
      description: Disassociate a MediaAgent (cloud Access Path) from a bucket of a cloud storage
  /V4/Storage/HyperScale:
    get:
      summary: Get All HyperScale Storage
      tags:
        - HyperScaleStorage
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  hyperScaleStorage:
                    type: array
                    items:
                      $ref: '#/components/schemas/StorageListSummary'
        '404':
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      operationId: GetHyperScaleStorageList
      description: Get All HyperScale Storage
    post:
      summary: Create HyperScaleStorage
      operationId: CreateHyperScaleStorage
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HyperScaleStorageResp'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      description: Create a HyperScale Storage
      tags:
        - HyperScaleStorage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HyperScaleStorage'
  '/V4/Storage/HyperScale/{hyperScaleStorageId}':
    parameters:
      - schema:
          type: integer
          format: int32
        name: hyperScaleStorageId
        in: path
        required: true
        description: Id of hyperscale storage
    get:
      summary:  Get details of a specific HyperScale Storage
      tags:
        - HyperScaleStorage
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HyperScaleStorageDetails'
        '404':
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
      operationId: GetHyperScaleStorageById
      description: Get details of a specific HyperScale Storage
      parameters:
        - schema:
            type: string
            enum:
              - 'true'
          in: query
          name: showInheritedAssociation
          description: Set to true if want to show inherited security associations
    put:
      summary: Modify HyperScaleStorage ById
      operationId: ModifyHyperScaleStorageById
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '404':
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      description: 'Modify details like name, encryption, security of a specific hyperscale storage'
      tags:
        - HyperScaleStorage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateHyperScaleStorage'
    delete:
      summary: Delete HyperScaleStorage ById
      operationId: DeleteHyperScaleStorageById
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '404':
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      description: Delete existing hyperscale storage
      tags:
        - HyperScaleStorage
  '/V4/Storage/HyperScale/{hyperScaleStorageId}/Nodes':
    parameters:
      - schema:
          type: integer
          format: int32
        name: hyperScaleStorageId
        in: path
        required: true
        description: Id of hyperscale storage
    post:
      summary: Create Node for Hyper ScaleStorage
      operationId: CreateNodeforHyperScaleStorage
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '400':
          description: Bad Request
        '404':
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
      description: Add nodes for a specific hyperscale storage
      tags:
        - HyperScaleStorage
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                nodes:
                  type: array
                  description: List of Nodes (MediaAgents) one want to add to the specified HyperScale Storage
                  items:
                    $ref: '#/components/schemas/IdName'
  '/V4/Storage/HyperScale/{hyperScaleStorageId}/Node/{nodeId}':
    parameters:
      - schema:
          type: integer
          format: int32
        name: hyperScaleStorageId
        in: path
        required: true
        description: Id of hyperscale storage
      - schema:
          type: integer
          format: int32
        name: nodeId
        in: path
        required: true
        description: Id of node
    get:
      summary: Get NodeDetails Of HyperScaleStorage
      tags:
        - HyperScaleStorage
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HyperScaleNodeDetails'
        '404':
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      operationId: GetNodeDetailsOfHyperScaleStorage
      description: Get details of a specific node of a hyperscale storage
  '/V4/Storage/HyperScale/{hyperScaleStorageId}/Node/{nodeId}/Refresh':
    parameters:
      - schema:
          type: integer
          format: int32
        name: hyperScaleStorageId
        in: path
        required: true
        description: Id of hyperscale storage
      - schema:
          type: integer
          format: int32
        name: nodeId
        in: path
        required: true
        description: Id of node
    put:
      summary: Refresh Node Of HyperScaleStorage
      tags:
        - HyperScaleStorage
      operationId: RefreshNodeOfHyperScaleStorage
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '400':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      description: Refresh a specific node of HyperScale
  /V4/Role:
    get:
      summary: Get a list of all the roles
      tags:
        - Roles
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleListResponse'
        '404':
          description: Requested Details not found
      operationId: GetListOfRoles
      description: Get a list of all the roles
    post:
      x-terraform-resource: Role
      tags:
        - Roles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRole'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                x-terraform-id: Id
                $ref: '#/components/schemas/IdNameGUID'
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error
      operationId: CreateNewRole
      description: Create a new role
      summary: Create a Role
  /V4/Permissions:
    get:
      tags:
        - Roles
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionListResp'
        '404':
          description: Requested Details not found
      operationId: GetPermissionResponse
      description: Get a list of categories and permissions in each category
      summary: Get Permissions
  '/V4/Role/{roleId}':
    parameters:
      - schema:
          type: integer
          format: int32
        name: roleId
        x-terraform-id: true
        in: path
        required: true
        description: Role Id
    get:
      x-terraform-resource: Role
      tags:
        - Roles
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
        '404':
          description: Requested Details not found
      operationId: GetRoleDetails
      description: Get a details of the role whose role id has been provided
      summary: Get a details of the role whose role id has been provided
      parameters:
        - schema:
            type: boolean
          in: query
          name: showInheritedAssociation
          description: Shows inherited security associations
    put:
      x-terraform-resource: Role
      tags:
        - Roles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRole'
            examples:
              Updating a role:
                value:
                  newName: modifying_name
                  visibleToAll: true
                  enabled: true
                  permissionList:
                    - permission:
                        id: 151
                        name: Create Alert
                      category:
                        id: 117
                        name: Alert
                    - permission:
                        id: 134
                        name: File Analytics
                    - category:
                        id: 120
                        name: Billing
                  security:
                    - userGroup:
                        name: master
                      role:
                        id: 4
                    - user:
                        id: 1
                      role:
                        name: compliance
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '400':
          description: Bad Request
        '404':
          description: Requested Details not found
      operationId: ModifyRole
      description: Modify the properties of an existing role
      summary: Update the Role
    delete:
      x-terraform-resource: Role
      description: Used to delete a role
      summary: Delete a role
      tags:
        - Roles
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '404':
          description: Requested Details not found
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      operationId: DeleteRoles
  /V4/Storage/Tape:
    get:
      tags:
        - TapeStorage
      x-excludedfrom-saas: true
      operationId: ReturnListOfTapes
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TapeListResp'
        '404':
          description: Requested Details not found
      description: This endpoint is used to return the list of tape storages.
      summary: Get Tape Storage
  /V4/Storage/Tape/Locations:
    get:
      tags:
        - TapeStorage
      x-excludedfrom-saas: true
      operationId: ReturnListOfLocations
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationListResp'
        '404':
          description: Requested Details not found
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
  /V4/Storage/Tape/{libraryId}:
    get:
      description: Fetches tape details based on the tape library Id provided
      operationId: FetchTapeDetails
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TapeDetails'
        '404':
          description: Requested Details not found
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      tags:
        - TapeStorage
      x-excludedfrom-saas: true
      parameters:
        - name: libraryId
          in: path
          description: Id of the library to view the data
          required: true
          schema:
            type: integer
            format: int32
  /V4/Storage/Tape/{libraryId}/Media:
    get:
      description: Fetch tape media details based on the tape library Id
      operationId: FetchTapeMediaDetails
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TapeMediaDetails'
        '404':
          description: Requested Details not found
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      tags:
        - TapeStorage
      x-excludedfrom-saas: true
      parameters:
        - name: libraryId
          in: path
          description: Id of the library to view the data
          required: true
          schema:
            type: integer
            format: int32
    post:
      summary: Perform operation on Tape media
      operationId: PerformTapeMediaOperation
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
      description: API to perform various media level operations on a Tape Storage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TapeMediaOperationsReq'
      tags:
        - TapeStorage
      x-excludedfrom-saas: true
  '/V4/Storage/Tape/{libraryId}/SpareGroup/{spareGroupId}':
    parameters:
      - schema:
          type: integer
          format: int32
        name: spareGroupId
        in: path
        required: true
        description: 'Id of the Spare group whose properties need to be fetched. spareGroupId can be fetched from GET V4/Storage/Tape/{libraryId}/MediaType'
      - schema:
          type: integer
          format: int32
        name: libraryId
        in: path
        required: true
        description: Library ID of the Tape Storage
    get:
      summary: Fetches properties of a Spare group
      tags:
        - TapeStorage
      x-excludedfrom-saas: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSpareGroupProperties'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
      operationId: GetSpareGroupProperties
      description: API to fetch properties of a Spare Group
  '/V4/Storage/Tape/{libraryId}/MediaType':
    parameters:
      - schema:
          type: integer
          format: int32
        name: libraryId
        in: path
        required: true
        description: Library ID of the Tape Storage
    get:
      summary: Get Info for Discover Media Operation
      tags:
        - TapeStorage
      x-excludedfrom-saas: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiscoverMediaInfoResp'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
      operationId: GetInfoForDiscoverMedia
      description: API to fetch all required details for performing Discover Media operation
  '/V4/Plan/{planId}/MediaAgents':
    parameters:
      - schema:
          type: integer
          format: int32
        name: planId
        in: path
        required: true
        description: Plan id of the plan
    get:
      summary: Get associated media agents detail for a Plan
      tags:
        - Plan
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociatedMAsForPlanResp'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
      operationId: GetAssocMAsForPlan
      description: Get list of associated media agents detail for a Plan
      parameters:
        - schema:
            $ref: '#/components/schemas/packageName'
          in: query
          name: packageName
          description: Provide the name of the package that needs to be checked if installed on the Media Agents. isPackageInstalled will be populated accordingly. By default it checks for Media agent package. Refer to packageName list.
          required: false
  '/V4/Storage/Tape/{libraryId}/SpareGroups':
    parameters:
      - schema:
          type: integer
          format: int32
        name: libraryId
        in: path
        required: true
        description: Library ID of the Tape Storage
    get:
      summary: List of Spare Group Details
      tags:
        - TapeStorage
      x-excludedfrom-saas: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSpareGroupListResp'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
      operationId: GetSpareGroupDetails
      description: API to fetch information of Spare Groups of a particular type for a Storage
      parameters:
        - schema:
            $ref: '#/components/schemas/SpareGroupTypes'
          in: query
          name: SpareGroupType
          description: Get all spare groups of given SpareGroupType
          required: true
  /V4/Storage/Tape/{libraryId}/Drive/{driveId}:
    get:
      tags:
        - TapeStorage
      x-excludedfrom-saas: true
      parameters:
        - name: libraryId
          in: path
          description: Id of the Tape of which the drive details has to be displayed
          required: true
          schema:
            type: integer
            format: int32
        - name: driveId
          in: path
          description: Id of the Drive of which the drive details has to be displayed
          required: true
          schema:
            type: integer
            format: int32
      operationId: ReturnDrivePoolDetails
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DrivePoolDetailsResp'
        '404':
          description: Requested Details not found
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      description: This endpoint is used to return the details of Drive Pool.
  /V4/FileServers:
    get:
      tags:
        - FileServers
      operationId: GetFileServers
      summary: Get File Servers
      x-hidden-description: |
        When top largest servers are asked for, this api can be used since it has the size (applicationSize) in its return response.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileServerListResp'
        '404':
          description: Requested Details not found
      description: This endpoint is used to return the list of file servers.
  /V4/MMConfiguration/Unlock:
    put:
      tags:
        - TapeStorage
      x-excludedfrom-saas: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericRespWithWarning'
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error
      operationId: CreatelunlockConfiguration
      description: To unlock a configuration
  /V4/MMConfiguration/Lock:
    put:
      tags:
        - TapeStorage
      x-excludedfrom-saas: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericRespWithWarning'
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error
      operationId: CreatelockConfiguration
      description: To lock a configuration
  /V4/ArchiveFileServers:
    get:
      tags:
        - ArchiveFileServers
      operationId: GetArchiveFileServers
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileServerListResp'
        '404':
          description: Requested Details not found
      description: This endpoint is used to return the list of Archive file servers.
      summary: List of Archive file servers.
  /V4/EpicServers:
    get:
      tags:
        - EpicServers
      operationId: GetEpicServers
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileServerListResp'
        '404':
          description: Requested Details not found
      description: This endpoint is used to return the list of epic servers.
      summary: Get EpicServers
  /V4/BigDataApps:
    get:
      tags:
        - BigDataApps
        - HIDDEN
      operationId: GetBigDataList
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BigDataAppListResp'
        '404':
          description: Requested Details not found
      description: This endpoint is used to return the list of big data apps.
  /V4/CRD/CloudAccounts:
    parameters:
      - schema:
          type: integer
        name: vendor
        in: query
        required: true
        description: |
          Type of the cloud vendor. Cloud accounts for the specified cloud vendor will be returned.
          Supported Vendor type:
          3-Azure
      - schema:
          type: integer
        in: query
        name: targetApp
        description: |
          App type for which the Cloud Resorce Discovery instance is being configured.
          Supported App type:
          134-Cloud Apps
      - schema:
          type: integer
        in: query
        name: targetInstance
        description: |
          Cloud apps instance type for which the Cloud Resorce Discovery instance is being configured.
          Supported Cloud apps instance type:
          6-Azure Blob
    get:
      summary: Get cloud accounts for Cloud Resource Discovery operation
      tags:
        - CloudApps
      operationId: GetCRDCloudAccounts
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCRDCloudAccountsResponse'
        '404':
          description: Requested Details not found
      description: This endpoint is used to return the list of cloud accounts for Cloud Resource Discovery operation.
  /V4/DistributedSystems:
    get:
      tags:
        - DistributedSystems
        - HIDDEN
      operationId: GetDistributedSystems
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DistributedSystemsListResp'
        '404':
          description: Requested Details not found
      description: This endpoint is used to return the list of distributed systems.
  /V4/Instances:
    get:
      tags:
        - Instances
      operationId: GetInstances
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstanceListResp'
        '404':
          description: Requested Details not found
      description: This endpoint is used to return the list of instances.
      summary: Get DB Instances
  '/V4/Instance/{instanceId}/Restore/Action/Disable':
    put:
      description: Used to disable restore property for an instance
      summary: Disable Restore for an Instance
      operationId: DisableRestoreInstance
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      tags:
        - Instances
      parameters:
        - name: instanceId
          in: path
          description: Id of the instance to modify
          required: true
          schema:
            type: integer
            format: int32
        - name: enableAfterADelay
          in: query
          description: Provide UTC time in unix format.
          required: false
          schema:
            type: integer
            format: int32
  '/V4/Instance/{instanceId}/Backup/Action/Disable':
    put:
      description: Used to disable backup property for an instance
      summary: Disable Backup for a Database Instance
      operationId: DisableBackupInstance
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      tags:
        - Instances
      parameters:
        - name: instanceId
          in: path
          description: Id of the instance to modify
          required: true
          schema:
            type: integer
            format: int32
        - name: enableAfterADelay
          in: query
          description: Provide UTC time in unix format.
          required: false
          schema:
            type: integer
            format: int32
  '/V4/Instance/{instanceId}/SLA/Exclude':
    put:
      description: Used to exclude instance from SLA. Applicable for Salesforce & Office365
      operationId: ExcludeSLAInstance
      summary: Exclude Instance from the SLA
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      tags:
        - Instances
      parameters:
        - name: instanceId
          in: path
          description: Id of the instance to modify
          required: true
          schema:
            type: integer
            format: int32
  '/V4/Instance/{instanceId}/Restore/Action/Enable':
    put:
      description: Used to enable restore property for an instance
      operationId: EnableRestoreInstance
      summary: Enable restore for an Instance
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      tags:
        - Instances
      parameters:
        - name: instanceId
          in: path
          description: Id of the instance to modify
          required: true
          schema:
            type: integer
            format: int32
  '/V4/Instance/{instanceId}/Backup/Action/Enable':
    put:
      description: Used to enable backup property for an instance
      operationId: EnableBackupInstance
      summary: Enable Backups for an Instance
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      tags:
        - Instances
      parameters:
        - name: instanceId
          in: path
          description: Id of the instance to modify
          required: true
          schema:
            type: integer
            format: int32
  '/V4/Instance/{instanceId}/SLA/Include':
    put:
      description: Used to include instance in SLA. Applicable for Salesforce
      operationId: IncludeSLAInstance
      summary: Include Instance in SLA
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      tags:
        - Instances
      parameters:
        - name: instanceId
          in: path
          description: Id of the instance to modify
          required: true
          schema:
            type: integer
            format: int32
  /V4/InstantClones:
    get:
      summary: Get all instant clones
      tags:
        - InstantClones
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstantClonesListResp'
        '404':
          description: Requested Details not found
      operationId: getInstantClones
      description: Get all instant clones
  /V4/Databases:
    get:
      summary: Get all databases
      tags:
        - Databases
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseListResp'
      operationId: GetDatabases
      description: Get all databases
  /V4/ReplicationGroup:
    get:
      summary: Get list of replication groups
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReplicationGroupListResp'
        '404':
          description: Requested details not found
      operationId: getReplicationGroups
      description: Get all replication groups
      tags:
        - ReplicationGroup
    post:
      tags:
        - ReplicationGroup
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/CreateReplicationGroupAmazon'
                - $ref: '#/components/schemas/CreateReplicationGroupAzure'
                - $ref: '#/components/schemas/CreateReplicationGroupHyperV'
                - $ref: '#/components/schemas/CreateReplicationGroupVMWare'
              discriminator:
                propertyName: destVendor
            examples:
              Amazon as Destination:
                value:
                  destVendor: Amazon
                  name: string
                  sourceHypervisor:
                    id: 0
                    name: string
                  vms:
                    - GUID: string
                      name: string
                  frequencyInMinutes: 240
                  recoveryTarget:
                    id: 0
                    name: string
                  storage:
                    - storagePool:
                        id: 0
                        name: string
                      isDedupe: true
                  advancedOptions:
                    validateDestinationVM: true
                    unconditionalOverwrite: false
                  overrideReplicationOptions:
                    - sourceVM:
                        GUID: string
                        name: string
                      instanceName: string
                      regionName: string
                      availabilityZone: string
                      volumeType: string
                      encryptionKey: string
                      network:
                        vpc: string
                        subnetId: string
                        network: string
                      securityGroups:
                        - id: string
                          name: string
                      instanceType: string
                      computerName: string
                      userName: string
              Azure as Destination:
                value:
                  name: string
                  sourceHypervisor:
                    id: 0
                    name: string
                  vms:
                    - GUID: string
                      name: string
                  frequencyInMinutes: 240
                  recoveryTarget:
                    id: 0
                    name: string
                  storage:
                    - storagePool:
                        id: 0
                        name: string
                      isDedupe: true
                  destVendor: Azure
                  advancedOptions:
                    unconditionalOverwrite: false
                    deployVmOnlyDuringfailover: true
                  overrideReplicationOptions:
                    - sourceVM:
                        GUID: string
                        name: string
                      vmDisplayName: string
                      resourceGroup: string
                      region: string
                      storageAccount: string
                      vmSizeId: string
                      diskTypeId: string
                      virtualNetwork:
                        - subnetId: string
                          network: string
                      securityGroup:
                        id: string
                        name: string
                      createPublicIP: true
                      restoreAsManagedVM: true
              HyperV as Destination:
                value:
                  name: string
                  sourceHypervisor:
                    id: 0
                    name: string
                  vms:
                    - GUID: string
                      name: string
                  frequencyInMinutes: 240
                  recoveryTarget:
                    id: 0
                    name: string
                  storage:
                    - storagePool:
                        id: 0
                        name: string
                      isDedupe: true
                  destVendor: HyperV
                  advancedOptions:
                    validateDestinationVM: true
                    unconditionalOverwrite: false
                  overrideReplicationOptions:
                    - sourceVM:
                        GUID: string
                        name: string
                      vmDisplayName: string
                      registerVMWithFailoverCluster: true
                      networkName: string
              VMWare as Destination:
                value:
                  name: string
                  sourceHypervisor:
                    id: 0
                    name: string
                  vms:
                    - GUID: string
                      name: string
                  frequencyInMinutes: 240
                  recoveryTarget:
                    id: 0
                    name: string
                  storage:
                    - storagePool:
                        id: 0
                        name: string
                      isDedupe: true
                  destVendor: VMware
                  replicationType: Periodic
                  advancedOptions:
                    validateDestinationVM: true
                    diskProvisioning: ORIGINAL
                    transportMode: AUTO
                    unconditionalOverwrite: false
                    SnapshotsToRetain: 0
                  snapEngine:
                    id: 0
                    name: string
                  overrideReplicationOptions:
                    - sourceVM:
                        GUID: string
                        name: string
                      vmDisplayName: string
                      destinationHost: string
                      datastore: string
                      resourcePool: string
                      vmFolder: string
                      networkSettings:
                        - source: string
                          destination: string
                      ipAddressSettings:
                        - sourceIP: string
                          sourceSubnetMask: string
                          sourceDefaultGateway: string
                          useDhcp: false
                          destinationIP: string
                          destinationSubnetMask: string
                          destinationdefaultGateway: string
                          destinationPreferredDNS: string
                          destinationAlternateDNS: string
                          destinationPreferredWINS: string
                          destinationAlternateWINS: string
                          hostname: string
        description: Provide the options for one of the vendors to create a replication group
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdName'
        '400':
          description: Bad Request
        '500':
          description: Internal server error
      operationId: CreateReplicationGroup
      description: Create a replication group
      summary: Create replication group
  '/V4/ReplicationGroup/{replicationGroupId}':
    parameters:
      - schema:
          type: string
        name: replicationGroupId
        in: path
        required: true
    get:
      summary: Get replication group details
      responses:
        '200':
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/OCIReplicationGroup'
                  - $ref: '#/components/schemas/VMwareReplicationGroup'
                  - $ref: '#/components/schemas/AmazonReplicationGroup'
                  - $ref: '#/components/schemas/HyperVReplicationGroup'
                  - $ref: '#/components/schemas/AzureReplicationGroup'
                  - $ref: '#/components/schemas/GCPReplicationGroup'
                  - $ref: '#/components/schemas/ContinuousReplicationGroup'
              examples:
                VMWare as destination:
                  value:
                    id: 0
                    name: string
                    summary:
                      source: string
                      recoveryTarget: string
                      destinationVendor: VMware
                      replicationType: Periodic
                      state: Enabled
                    rpo:
                      replicationFrequency: 240
                    storage:
                      copies:
                        - name: string
                          storagePool:
                            id: 0
                            name: string
                          retention: 0
                      copyForReplication: string
                    advancedOption:
                      validateDestinationVM: true
                      diskProvisioning: Auto
                      transportMode: Auto
                      unconditionalOverwrite: false
                      SnapshotsToRetain: 0
                    replicationConfiguration:
                      - sourceVM: string
                        destinationVM: string
                        destinationHost: string
                        datastore: string
                        overrideReplicationOptions:
                          vmDisplayName: string
                          destinationHost: string
                          datastore: string
                          resourcePool: string
                          vmFolder: string
                          networkSettings:
                            - source: string
                              destination: string
                          ipAddressSettings:
                            - sourceIp: string
                              subnetMask: string
                              defaultGateway: string
                              useDhcp: true
                              hostName: string
                              destinationIp: string
                              SubnetMaskNoDhcp: string
                              defaultGatewayNoDhcp: string
                    vendor: VMware
                Amazon as Destination:
                  value:
                    id: 0
                    name: string
                    summary:
                      source: string
                      recoveryTarget: string
                      destinationVendor: Amazon
                      replicationType: Periodic
                      state: Enabled
                    rpo:
                      replicationFrequency: 240
                    storage:
                      copies:
                        - name: string
                          storagePool:
                            id: 0
                            name: string
                          retention: 0
                      copyForReplication: string
                    advancedOption:
                      validateDestinationVM: true
                      unconditionalOverwrite: false
                    replicationConfiguration:
                      - sourceVM: string
                        destinationVM: string
                        availabilityZone: string
                        instanceType: string
                        overrideReplicationOptions:
                          instanceName: string
                          availabilityZone: string
                          volumeType: string
                          encryptionKey: string
                          network:
                            networkDisplayName: string
                            networkName: string
                            subnetId: string
                          autoSelectSecurityGroup:
                            - id: string
                              name: string
                          instanceType: string
                          computerName: string
                          userName: string
                    vendor: Amazon
                HyperV as destination:
                  value:
                    id: 0
                    name: string
                    summary:
                      source: string
                      recoveryTarget: string
                      destinationVendor: HyperV
                      replicationType: Periodic
                      state: Enabled
                    rpo:
                      replicationFrequency: 240
                    storage:
                      copies:
                        - name: string
                          storagePool:
                            id: 0
                            name: string
                          retention: 0
                      copyForReplication: string
                    advancedOption:
                      validateDestinationVM: true
                      unconditionalOverwrite: false
                    replicationConfiguration:
                      - sourceVM: string
                        destinationVM: string
                        hypervHost: string
                        destinationVolume: string
                        overrideReplicationOptions:
                          vmDisplayName: string
                          registerVMWithFailoverCluster: string
                          networkAdapter:
                            - networkName: string
                    vendor: HyperV
                Azure as Destination:
                  value:
                    id: 0
                    name: string
                    summary:
                      source: string
                      recoveryTarget: string
                      destinationVendor: Azure
                      replicationType: Periodic
                      state: Enabled
                    rpo:
                      replicationFrequency: 240
                    storage:
                      copies:
                        - name: string
                          storagePool:
                            id: 0
                            name: string
                          retention: 0
                      copyForReplication: string
                    advancedOption:
                      unconditionalOverwrite: false
                      deployVmOnlyDuringfailover: true
                    replicationConfiguration:
                      - sourceVM: string
                        destinationVM: string
                        resourceGroup: string
                        storageAccount: string
                        vmSize: string
                        createPublicIP: true
                        restoreAsManagedVm: true
                        overrideReplicationOptions:
                          vmDisplayName: string
                    vendor: Azure
        '404':
          description: Requested details not Found
      operationId: getReplicationGroupDetails
      description: Get details of a replication group based on replicationGroupId
      tags:
        - ReplicationGroup
      parameters:
        - schema:
            type: boolean
          in: query
          name: viewReplicationOptions
          description: Set to true if want to show replication options for a continuous replication group
        - schema:
            type: boolean
          in: query
          name: overrideReplicationOptions
          description: Set to true if you want to see override replication options for a periodic replication group
    put:
      summary: Modify ReplicationGroup
      operationId: ModifyReplicationGroup
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '400':
          description: Bad Request
        '404':
          description: Requested Details not found
        '500':
          description: Internal Server Error
      description: Modify the properties of an existing replication group
      tags:
        - ReplicationGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateReplicationGroup'
  /V4/GCPSpanner/instances:
    get:
      summary: To get the list of instances for GCP
      tags:
        - GCPSpanner
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GCPInstanceList'
      operationId: getGCPSpannerInstanceList
      description: To get the list of instances for GCP
      parameters:
        - schema:
            type: integer
            format: int32
          in: query
          name: cloudAccountId
          required: true
          description: the google cloud hypervisor account id
  /V4/FailoverGroups:
    get:
      summary: Get Failover groups
      tags:
        - FailoverGroups
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  failoverGroups:
                    type: array
                    items:
                      $ref: '#/components/schemas/FailoverGroupsList'
                    description: List of failover groups
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      operationId: ListFailoverGroups
      description: This end point return the list of failover groups
  '/V4/FailoverGroups/{failoverGroupId}':
    parameters:
      - name: failoverGroupId
        in: path
        description: Id of the failover group
        required: true
        schema:
          type: integer
          format: int32
    get:
      summary: Get Failover group details
      tags:
        - FailoverGroups
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailoverGroupDetails'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      operationId: GetFailoverGroupDetails
      description: API to fetch failover group information
    delete:
      summary: Delete failover group
      tags:
        - FailoverGroups
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      operationId: DeleteFailoverGroup
      description: API to delete failover group
    put:
      summary: Modify the failover group
      tags:
        - FailoverGroups
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      operationId: ModifyFailoverGroup
      description: API to modify failover group
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifyFailoverGroupRequest'
  '/V4/FailoverGroups/{failoverGroupId}/Schedules':
    post:
      summary: Create failover group DR operation schedule
      tags:
        - FailoverGroups
      responses:
        '200':
          description: Failover group DR operation schedule created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanSchedule'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      operationId: CreateFailoverGroupSchedule
      description: API to create failover group DR operation schedule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlanSchedule'
    parameters:
      - name: failoverGroupId
        in: path
        description: Id of the failover group
        required: true
        schema:
          type: integer
          format: int32
  '/V4/FailoverGroups/{failoverGroupId}/Schedules/{scheduleId}':
    put:
      summary: Modify failover group DR operation schedule
      tags:
        - FailoverGroups
      responses:
        '200':
          description: Failover group DR operation schedule created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      operationId: ModifyFailoverGroupSchedule
      description: API to create failover group DR operation schedule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlanSchedule'
    delete:
      summary: Delete failover group DR operation schedule
      tags:
        - FailoverGroups
      responses:
        '200':
          description: Failover group DR operation schedule deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      operationId: DeleteFailoverGroupSchedule
      description: API to delete failover group DR operation schedule
    parameters:
      - name: failoverGroupId
        in: path
        description: Id of the failover group
        required: true
        schema:
          type: integer
          format: int32
      - name: scheduleId
        in: path
        description: ID of the DR operation schedule
        required: true
        schema:
          type: integer
          format: int32
  '/V4/FailoverGroups/{failoverGroupId}/Action/{drOperation}':
    put:
      summary: Perform failover group DR operation
      tags:
        - FailoverGroups
      responses:
        '200':
          description: Job initiated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobId'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      operationId: PlannedFailoverFailoverGroup
      description: API to perform planned failover for failover group
      parameters:
        - name: skipDisableNetworkAdapter
          in: query
          description: Whether to skip disabling network adapter in DR job
          schema:
            type: boolean
        - name: replicationId
          in: query
          description: Replication ID of particular VM in group to perform DR job on
          schema:
            type: integer
            format: int32
    parameters:
      - name: failoverGroupId
        in: path
        description: Id of the failover group
        required: true
        schema:
          type: integer
          format: int32
      - name: drOperation
        in: path
        description: Name of DR operation. Case insensitive
        required: true
        schema:
          $ref: '#/components/schemas/DROperation'
  '/V4/FailoverGroups/{failoverGroupId}/TestFailoverMachines':
    get:
      summary: Get test failover VMs list
      tags:
        - FailoverGroups
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  virtualMachines:
                    type: array
                    items:
                      $ref: '#/components/schemas/TestFailoverVirtualMachines'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      operationId: GetTestFailoverMachinesFailoverGroup
      description: API to get test failover machines for failover group
    parameters:
      - name: failoverGroupId
        in: path
        description: Id of the failover group
        required: true
        schema:
          type: integer
          format: int32
  '/V4/FailoverGroups/EligibleMachines':
    get:
      summary: Get list of eligible machines that can be added to failover groups
      tags:
        - FailoverGroups
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  virtualMachines:
                    type: array
                    items:
                      $ref: '#/components/schemas/FailoverGroupEligibleMachineList'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      operationId: GetEligibleMachinesFailoverGroup
      description: API to get list of machines eligible to be added to failover group
      parameters:
        - schema:
            type: integer
            format: int32
          in: query
          name: sourceEntityId
          description: The ID of the source entity. This is the ID for client or client group
          required: true
        - schema:
            $ref: '#/components/schemas/FailoverGroupSource'
          in: query
          name: failoverGroupSource
          description: The type of failover group source. Default value is 'REPLICATION'
        - schema:
            $ref: '#/components/schemas/FailoverGroupHypervisorType'
          in: query
          name: sourceEntityType
          description: The type of source entity. It can be 'CLIENT' or 'CLIENT_ENTITY'. Default value is 'CLIENT'
        - schema:
            type: integer
            format: int32
          in: query
          name: destinationClientId
          description: The client ID of the destination
  /V4/GCPSpanner/databases:
    get:
      summary: Get database list for GCP
      tags:
        - GCPSpanner
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GCPDatabaseList'
      operationId: getGCPSpannerDatabases
      description: Get database list for GCP
      parameters:
        - schema:
            type: integer
          in: query
          name: cloudAccountId
          required: true
          description: the id of the node where the browse request is sent
        - schema:
            type: string
          in: query
          name: projectName
          required: true
          description: google cloud project the instance belongs to
        - schema:
            type: string
          in: query
          name: instanceName
          required: true
          description: the google spanner instance name
  /V4/GCPSpanner/permissions:
    get:
      summary: Check permission on a project for a cloud account
      tags:
        - GCPSpanner
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusModel'
              examples:
                When account has permission:
                  value:
                    status: true
                When account doesn't have permission:
                  value:
                    status: false
      operationId: getGCPSpannerPermissions
      description: Get permission status for a cloudAccount on a GCP project
      parameters:
        - schema:
            type: integer
          in: query
          name: cloudAccountId
          description: the id of the node where the browse request is sent
        - schema:
            type: string
          in: query
          name: projectName
          description: google cloud project the instance belongs to
  /V4/VMGroup:
    post:
      x-terraform-resource: VMGroup_V2
      tags:
        - VM Group Operations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatevmGroupReq'
      operationId: CreateVMGroup
      x-hidden-description:
        When the user says configure vmware vcenter backups, they mean create a vmgroup and a hypervisor with vms of type vmware.
        When the user says onboard azure vm backups, they mean create a vmgroup and a hypervisor of type azure.
        To store it in a different storage media like azure storage, create a storagepool of that type first.
      x-dependency:
        - List all hypervisors, a hypervisor id and name is needed to create vm group
        - List all serverplans, a plan id and name is used in vm group request
        - List storages
        - Create a storagepool with /storagepool
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateVMGroupResp'
        '400':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      description: Create a VM Group
      summary: Create a VM Group

  /V4/VMGroups:
    get:
      tags:
        - VM Group Operations
      parameters:
        - name: hypervisorId
          in: query
          description: Id of the hypervisor to list vm groups
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  vmGroups:
                    type: array
                    items:
                      $ref: '#/components/schemas/VMGroupSummary'
        '404':
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      description: Get the details of all vmGroup
      operationId: GetAllVMGroups
      summary: Get VM Groups
  '/V4/VmGroup/{VmGroupId}':
    put:
      x-terraform-resource: VMGroup_V2
      tags:
        - VM Group Operations
      parameters:
        - name: VmGroupId
          x-terraform-id: true
          in: path
          description: Id of the VMgroup to update
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatevmGroupReq'
      operationId: UpdateVMGroup
      summary: Modify VM Group Details
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericRespWithWarning'
        '400':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      description: Updates the VM Group
      x-hidden-description: |
        This can be used to update the properties of virtual machine group. can be used to answer queries like "Associate new plan to a vm group"
        or "disable backup or restore jobs on a vm group" or "enable backup or restore jobs on a vm group"
    get:
      x-terraform-resource: VMGroup_V2
      tags:
        - VM Group Operations
      parameters:
        - name: VmGroupId
          x-terraform-id: true
          in: path
          description: Id of the VmGroup to get
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetVMGroupResp'
        '404':
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      description: Get the details of  vmGroup
      operationId: GetVMGroup
      summary: Get VM Group Details
    delete:
      x-terraform-resource: VMGroup_V2

      description: delete an existing vm group
      x-hidden-description: |
        This can be used to delete a virtual machine group by using its id. Deleting a vm inside vm group is not required to delete a vm group.
      x-dependency:
        - Get list of virtual machine groups.
      tags:
        - VM Group Operations
      parameters:
        - name: VmGroupId
          x-terraform-id: true
          in: path
          description: Id of the vmgroup to delete
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vmgroupdeleteResponse'
        '404':
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      operationId: DeleteVMGroup
  '/V4/VM/{vmGuid}/restore':
    post:
      summary: VM Restore Operation
      tags:
        - VirtualMachines
      operationId: VMRestore
      description: To restore a virtual machine
      parameters:
        - name: vmGuid
          in: path
          description: GUID of VM to backup
          required: true
          schema:
            type: string
        - schema:
            type: string
          in: query
          name: mediaAgentName
          description: Media agent name
        - schema:
            type: string
          in: query
          name: mediaAgentId
          description: Media agent id
        - schema:
            type: string
            example: '2012-10-01T09:45:00'
          in: query
          name: fromTime
          description: 'Restore window UTC from time. Valid Formats: yyyy-MM-ddTHH:mm:ss or yyyy-MM-ddTHH:mm:sszzz or yyyy-MM-dd'
          allowEmptyValue: true
        - schema:
            type: string
            format: date-time
            example: '2023-06-19T14:00:00'
          in: query
          name: toTime
          description: 'Restore window UTC to time. Valid Formats: yyyy-MM-ddTHH:mm:ss or yyyy-MM-ddTHH:mm:sszzz or yyyy-MM-dd'
          allowEmptyValue: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTaskRespforBackup'
        '404':
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VMGroupRestoreRequest'
            examples:
              Azure Inplace Restore:
                value:
                  inPlaceRestore: true
                  accessNode:
                    id: 25
                    name: azure-access-node
                  vmDestinationInfo:
                    azure:
                      azureVMInfoList:
                        - sourceVMGuid: e4bfbde5-ded2-468f-8a30-4896c5349a52
                          storageAccount: azureStroage
              Azure Out Of Place Restore:
                value:
                  inPlaceRestore: false
                  backupSource: 2
                  destination:
                    id: 4
                    name: azure-hypervisor
                  accessNode:
                    id: 25
                    name: azure-access-node
                  vmDestinationInfo:
                    azure:
                      azureVMInfoList:
                        - sourceVMGuid: 92e15a8a-0f7a-11ee-be56-0242ac120002
                          name: azure-vm-2
                          resourceGroup: azureResourceGroup
                          region: westus3
                          availabilityZone: None
                          storageAccount: azureStroage
                          vmSize: Standard_A1
                          diskType: Standard_LRS
                          createPublicIP: false
                          restoreAsManagedVM: true
                          securityGroupId: /subscriptions/b077d7b8-0fa2-11ee-be56-0242ac120002/resourceGroups/azureResourceGroup/providers/Microsoft.Network/networkSecurityGroups/securityGroupName
                          diskEncryptionSetTypeId: EncryptionAtRestWithCustomerKey
                          diskEncryptionSetId: /subscriptions/b077d7b8-0fa2-11ee-be56-0242ac120002/resourceGroups/azureResourceGroup/providers/Microsoft.Compute/diskEncryptionSets/diskEncryptionSetName
                          nics:
                            - networkId: /subscriptions/b077d7b8-0fa2-11ee-be56-0242ac120002/resourceGroups/resourceGroupName/providers/Microsoft.Network/virtualNetworks/networkName
                              subnetId: /subscriptions/b077d7b8-0fa2-11ee-be56-0242ac120002/resourceGroups/resourceGroupName/providers/Microsoft.Network/virtualNetworks/networkName/subnets/subnetName
                              privateIpAddress: 10.2.12.22
                              publicIpAddress: 192.168.0.1
                              publicIpAddressId: /subscriptions/b077d7b8-0fa2-11ee-be56-0242ac120002/resourceGroups/resourceGroupName/providers/Microsoft.Network/publicIPAddresses/publicIPAddressName
                          vmTags:
                            - name: tagName
                              value: tagValue
                  transportMode: Auto
                  restoreFlavour: VIRTUAL_MACHINE
                  notifyOnJobCompletion: true
                  reuseVMClient: true
              GCP Inplace Restore:
                value:
                  inPlaceRestore: true
                  accessNode:
                    id: 25
                    name: azure-access-node
                  vmDestinationInfo:
                    googleCloud:
                      googleCloudVMInfoList:
                        - instanceId: '123456789123456'
              GCP Out Of Place Restore:
                value:
                  inPlaceRestore: false
                  backupSource: 2
                  destination:
                    id: 4
                    name: GCP-hypervisor
                  accessNode:
                    id: 25
                    name: gcp-access-node
                  vmDestinationInfo:
                    googleCloud:
                      googleCloudVMInfoList:
                        - instanceId: '123456789123456'
                          name: gcp-vm
                          projectId: gcp-project-Id
                          zone: us-central1-c
                          region: us-central1
                          machineType: e2-micro
                          createPublicIP: false
                          networkInterfaces:
                            - name: 'https://www.googleapis.com/compute/v1/projects/project-name/global/networks/default'
                              networkName: default
                              subnetId: 'https://www.googleapis.com/compute/v1/projects/project-name/regions/us-central1/subnetworks/default'
                              networkId: 'https://www.googleapis.com/compute/v1/projects/project-name/global/networks/default+https://www.googleapis.com/compute/v1/projects/project-name/regions/us-central1/subnetworks/default'
                              internalIP: 10.128.15.19
                              externalIP: 10.138.16.19
                          customMetadata:
                            - name: metadataName
                              value: metadataValue
                          nodeAffinities:
                            - name: string
                              value: string
                          serviceAccount:
                            id: '1142330163833163'
                            name: serviceaccountName
                            email: serviceaccount@project-name.iam.gserviceaccount.com
                          encryptionKey: 'kmsKeyName:projects/projectName/locations/global/keyRings/enc-key/cryptoKeys/enc-key-name'
                          keyProtectionLevel: SOFTWARE
                  transportMode: Auto
                  restoreFlavour: VIRTUAL_MACHINE
                  notifyOnJobCompletion: true
                  reuseVMClient: true
              AWS Inplace Restore:
                value:
                  inPlaceRestore: true
                  accessNode:
                    id: 25
                    name: aws-access-node
                  vmDestinationInfo:
                    aws:
                      awsInstanceInfoList:
                        - instanceId: i-0f90bef70bd90c9e0
              AWS Out Of Place Restore:
                value:
                  inPlaceRestore: false
                  backupSource: 2
                  destination:
                    id: 4
                    name: aws-hypervisor
                  accessNode:
                    id: 25
                    name: aws-access-node
                  vmDestinationInfo:
                    aws:
                      awsInstanceInfoList:
                        - instanceId: i-0f90bef70bd90c9e0
                          instanceName: instance-name
                          zone: us-east1-a
                          region: us-east-1
                          instanceSize: t2.micro
                          volumeType: string
                          encryptionKey:
                            isEncrypted: true
                            encryptionKey: 'arn:aws:kms:us-east-1:63829106:key/d3bc59d8-43fc-891d-6b38e0bfbb51'
                          nics:
                            - vpcId: vpc-02fbd4b022f1c7331
                              networkName: xyz-vpc\\xyz-subnet\\New-Network-Interface
                              subnetId: subnet-0fe12aab7f5c6ac67
                              eniId: New-Network-Interface
                          securityGroups:
                            - groupId: sg-09b2ac7e61433b1ef
                              groupName: rohith-sg
                          vmTags:
                            - name: tagName
                              value: tagValue
                          restoreSourceVMTags: true
                          keyPairs:
                            - keyId: KeyId
                              keyName: KeyValue
                          restoreSourceNetworkConfig: true
                  transportMode: Auto
                  restoreFlavour: VIRTUAL_MACHINE
                  notifyOnJobCompletion: true
                  reuseVMClient: true
    parameters:
      - schema:
          type: string
        name: vmGuid
        in: path
        required: true
  '/V4/VmGroup/{VmGroupId}/restore':
    post:
      summary: VMGroup Restore Operation
      tags:
        - VirtualMachines
      operationId: VMGroupRestore
      description: To restore the virtual machines in vmgroup
      parameters:
        - name: VmGroupId
          in: path
          description: Id of the VMgroup to backup
          required: true
          schema:
            type: integer
            format: int32
        - schema:
            type: string
          in: query
          name: mediaAgentName
          description: Media agent name
        - schema:
            type: string
          in: query
          name: mediaAgentId
          description: Media agent id
        - schema:
            type: string
            example: '2012-10-01T09:45:00'
          in: query
          name: fromTime
          description: 'Restore window UTC from time. Valid Formats: yyyy-MM-ddTHH:mm:ss or yyyy-MM-ddTHH:mm:sszzz or yyyy-MM-dd'
          allowEmptyValue: true
        - schema:
            type: string
            format: date-time
            example: '2023-06-19T14:00:00'
          in: query
          name: toTime
          description: 'Restore window UTC to time. Valid Formats: yyyy-MM-ddTHH:mm:ss or yyyy-MM-ddTHH:mm:sszzz or yyyy-MM-dd'
          allowEmptyValue: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTaskRespforBackup'
        '404':
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VMGroupRestoreRequest'
            examples:
              Azure Inplace Restore:
                value:
                  inPlaceRestore: true
                  accessNode:
                    id: 25
                    name: azure-access-node
                  vmDestinationInfo:
                    azure:
                      azureVMInfoList:
                        - sourceVMGuid: e4bfbde5-ded2-468f-8a30-4896c5349a52
                          storageAccount: azureStroageAccount1
                        - sourceVMGuid: 92e15a8a-0f7a-11ee-be56-0242ac120002
                          storageAccount: azureStroageAccount2
              Azure Out Of Place Restore:
                value:
                  inPlaceRestore: false
                  backupSource: 2
                  destination:
                    id: 4
                    name: azure-hypervisor
                  accessNode:
                    id: 25
                    name: azure-access-node
                  vmDestinationInfo:
                    azure:
                      azureVMInfoList:
                        - sourceVMGuid: 92e15a8a-0f7a-11ee-be56-0242ac120002
                          name: azure-vm-2
                          resourceGroup: azureResourceGroup
                          region: westus3
                          availabilityZone: None
                          storageAccount: azureStroage
                          vmSize: Standard_A1
                          diskType: Standard_LRS
                          createPublicIP: false
                          restoreAsManagedVM: true
                          securityGroupId: /subscriptions/b077d7b8-0fa2-11ee-be56-0242ac120002/resourceGroups/azureResourceGroup/providers/Microsoft.Network/networkSecurityGroups/securityGroupName
                          diskEncryptionSetTypeId: EncryptionAtRestWithCustomerKey
                          diskEncryptionSetId: /subscriptions/b077d7b8-0fa2-11ee-be56-0242ac120002/resourceGroups/azureResourceGroup/providers/Microsoft.Compute/diskEncryptionSets/diskEncryptionSetName
                          nics:
                            - networkId: /subscriptions/b077d7b8-0fa2-11ee-be56-0242ac120002/resourceGroups/resourceGroupName/providers/Microsoft.Network/virtualNetworks/networkName
                              subnetId: /subscriptions/b077d7b8-0fa2-11ee-be56-0242ac120002/resourceGroups/resourceGroupName/providers/Microsoft.Network/virtualNetworks/networkName/subnets/subnetName
                              privateIpAddress: 10.2.12.22
                              publicIpAddress: 192.168.0.1
                              publicIpAddressId: /subscriptions/b077d7b8-0fa2-11ee-be56-0242ac120002/resourceGroups/resourceGroupName/providers/Microsoft.Network/publicIPAddresses/publicIPAddressName
                          vmTags:
                            - name: tagName
                              value: tagValue
                  transportMode: Auto
                  restoreFlavour: VIRTUAL_MACHINE
                  notifyOnJobCompletion: true
                  reuseVMClient: true
        description: ''
  '/V4/VmGroup/{VmGroupId}/backup':
    post:
      summary: Backup VM Group
      tags:
        - VM Group Operations
      operationId: VMGroupBackup
      description: To Backup the virtual machines in vmgroup
      x-hidden-description: |
        If the request is to configure virtual machine, and not just to backup, then the vm to backup needs to be created first
      x-dependency:
        - Create credentials using POST /V4/Credentials
        - Create hypervisor using POST /V4/Hypervisor
        - Create server plan using POST /V4/ServerPlan
        - create virtual machine group POST /V4/VmGroup
      parameters:
        - name: VmGroupId
          in: path
          description: Id of the VMgroup to backup
          required: true
          schema:
            type: integer
            format: int32

        - name: backupLevel
          in: query
          description: Backup level , Default :Incremental
          schema:
            type: string
            enum:
              - FULL
              - INCREMENTAL
              - DIFFERENTIAL
              - SYNTHETIC_FULL
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTaskRespforBackup'
        '404':
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
  /V4/VirtualMachines:
    get:
      tags:
        - VirtualMachines
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineListResp'
        '404':
          description: Requested Details not found
      operationId: GetVirtualMachines
      summary: Get Virtual Machines
      description: Get all virtual machines
  '/V4/VirtualMachines/{vmUUID}':
    parameters:
      - schema:
          type: string
        name: vmUUID
        in: path
        required: true
        description: The vmUUID can be obtained from GET /virtualMachines UUID property
    get:
      tags:
        - VirtualMachines
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  vmDetails:
                    $ref: '#/components/schemas/VirtualMachineDetails'
        '404':
          description: Requested Details not found
      operationId: GetVMDetails
      description: Get details for virtual machine
      summary: Get Virtual Machine Details
      parameters:
        - schema:
            type: boolean
          in: query
          name: showInheritedAssociation
    delete:
      operationId: DeleteVirtualMachine
      summary: Delete a Virtual Machine
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '400':
          description: Requested Details not found
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      description: Used to delete a virtual machine
      tags:
        - VirtualMachines
    put:
      operationId: ModifyVirtualMachine
      summary: Modify Virtual Machine Details
      responses:
        '200':
          description: Success
        '401':
          description: Unauthorized
        '404':
          description: Requested Details not found
      description: Modify the properties of an existing virtual machine
      tags:
        - VirtualMachines
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateVMProperties'
  '/V4/VirtualMachines/{vmUUID}/backup':
    post:
      tags:
        - VirtualMachines
      operationId: VirtualMachineBackup
      summary: Backup VM Group
      description: To Backup the virtual machines in vmgroup
      x-hidden-description: |
        If the request is to configure virtual machine, and not just to backup, then the vm to backup needs to be created first
      x-dependency:
        - Create credentials
        - Create hypervisor
        - Create server plan
        - create virtual machine group
        - Create a virtual machine
      parameters:
        - name: vmUUID
          in: path
          description: Id of the Virtual Machine to backup
          required: true
          schema:
            type: string

        - name: backupLevel
          in: query
          description: Backup level , Default :Incremental
          schema:
            type: string
            enum:
              - FULL
              - INCREMENTAL
              - DIFFERENTIAL
              - SYNTHETIC_FULL
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTaskRespforBackup'
        '404':
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
  /V4/mediaAgent:
    get:
      tags:
        - MediaAgent
      operationId: GetMediaAgents
      summary: Get MediaAgents
      description: Get All Media Agents
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MediaAgentListResponse'
        '404':
          description: Requested Details not found
    post:
      operationId: InstallMediaAgent
      summary: Create a Media Agent
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobId'
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error
      description: To install MediaAgent package on a server
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InstallMediaAgent'
        description: Server information where you want to install MediaAgent package.
      tags:
        - MediaAgent
  /V4/DDB/MediaAgents:
    get:
      tags:
        - MediaAgent
      operationId: GetMediaAgentsForDDB
      summary: Get MediaAgents for DDB
      description: Get All Media Agents for DDB
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MediaAgentForDDBListResponse'
        '404':
          description: Requested Details not found
      parameters:
        - schema:
            type: boolean
            default: false
          in: query
          name: fetchDDBDisks
          description: If set to true then fetch the list of DDB disks hosted on each MediaAgent
  '/V4/mediaAgent/{mediaAgentId}':
    get:
      tags:
        - MediaAgent
      parameters:
        - name: mediaAgentId
          in: path
          description: Id of the Media Agent whose details have to be fetched
          required: true
          schema:
            type: integer
            format: int32
        - schema:
            type: boolean
          in: query
          name: showInheritedAssociation
          description: Show inherited security association
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MediaAgent'
        '404':
          description: Requested Details not found
      operationId: GetMediaAgentDetails
      summary: Get Media Agent Details
      description: Get details of a media agent based on id
    put:
      tags:
        - MediaAgent
      parameters:
        - name: mediaAgentId
          in: path
          description: Id of the mediaAgent to update
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMediaAgent'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '400':
          description: Bad Request
        '404':
          description: Requested Details not found
      operationId: ModifyMediaAgent
      summary: Modify Media Agent Details
      description: Modify the properties of an existing media agent
    delete:
      description: Used to delete a media agent.
      summary: Delete Media Agent
      tags:
        - MediaAgent
      parameters:
        - name: mediaAgentId
          in: path
          description: Id of the media agent to delete
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '404':
          description: Requested Details not found
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      operationId: DeleteMediaAgent
  /V4/Hypervisor:
    post:
      x-terraform-resource: Hypervisor
      x-terraform-oneof-map:
        - schema: CreateHypervisorGroupAmazon
          resource: AWS
        - schema: CreateHypervisorGroupAzure
          resource: Azure
      tags:
        - Hypervisor Operations
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/CreateHypervisorGroupAzure'
                - $ref: '#/components/schemas/CreateHypervisorGroupAmazon'
                - $ref: '#/components/schemas/CreateHypervisorGroupVMWare'
                - $ref: '#/components/schemas/CreateHypervisorGroupHyperV'
                - $ref: '#/components/schemas/CreateHypervisorGroupNutanix'
                - $ref: '#/components/schemas/CreateHypervisorGroupXen'
                - $ref: '#/components/schemas/CreateHypervisorGroupAzureStack'
                - $ref: '#/components/schemas/CreateHypervisorGroupGoogleCloud'
                - $ref: '#/components/schemas/CreateHypervisorGroupRhev'
                - $ref: '#/components/schemas/CreateHypervisorGroupOpenstack'
                - $ref: '#/components/schemas/CreateHypervisorGroupDocker'
                - $ref: '#/components/schemas/CreateHypervisorGroupOracleCloud'
                - $ref: '#/components/schemas/CreateHypervisorGroupAliCloud'
                - $ref: '#/components/schemas/CreateHypervisorGroupOracleVM'
                - $ref: '#/components/schemas/CreateHypervisorGroupRedHatOpenShift'
                - $ref: '#/components/schemas/CreateHypervisorGroupVCloud'
                - $ref: '#/components/schemas/CreateHypervisorGroupProxmox'
                - $ref: '#/components/schemas/CreateHypervisorGroupAzureStackHCI'
              discriminator:
                propertyName: hypervisorType
            examples:
              VMWARE:
                value:
                  name: string
                  hypervisorType: VMW
                  accessNodes:
                    - id: 0
                      name: string
                      type: 3
                  credentials:
                    id: 0
                    name: string
                  vcenterHostName: string
              AZURE:
                value:
                  name: string
                  hypervisorType: AZURE_V2
                  accessNodes:
                    - id: 0
                      name: string
                      type: 3
                  credentials:
                    id: 0
                    name: string
                  subscriptionId: string
              AZURE_USE_MANAGED_IDENTITY:
                value:
                  name: string
                  hypervisorType: AZURE_V2
                  accessNodes:
                    - id: 0
                      name: string
                      type: 3
                  subscriptionId: string
                  useManagedIdentity: true
              HYPER-V:
                value:
                  name: string
                  hypervisorType: Hyper-V
                  accessNodes:
                    - id: 0
                      name: string
                      type: 3
                  credentials:
                    id: 0
                    name: string
                  serverName: string
              AWS_ACCESS_AND_SECRET_KEY:
                value:
                  name: string
                  hypervisorType: AMAZON
                  accessNodes:
                    - id: 0
                      name: string
                      type: 3
                  credentials:
                    id: 0
                    name: string
                  region: default
              AWS_IAM_ROLE:
                value:
                  name: string
                  hypervisorType: AMAZON
                  accessNodes:
                    - id: 0
                      name: string
                      type: 3
                  useIamRole: true
                  region: default
              AWS_STS_ASSUME_ROLE:
                value:
                  name: string
                  hypervisorType: AMAZON
                  accessNodes:
                    - id: 0
                      name: string
                      type: 3
                  credentials:
                    id: 0
                    name: string
                  isSTSAssumeRole: true
                  region: default
              NUTANIX:
                value:
                  name: string
                  hypervisorType: NUTANIX
                  accessNodes:
                    - id: 2
                      name: string
                      type: 3
                  password: string
                  userName: string
                  hostName: string
              OPENSTACK:
                value:
                  name: string
                  hypervisorType: OPENSTACK
                  accessNodes:
                    - id: 0
                      name: string
                      type: 3
                  openstackDomain: string
                  password: string
                  userName: string
                  keynoteAddress: string
              GCP:
                value:
                  name: string
                  hypervisorType: GOOGLE_CLOUD
                  accessNodes:
                    - id: 0
                      name: string
                      type: 3
                  credentials:
                    id: 0
                    name: string
              AZURE STACK:
                value:
                  name: string
                  hypervisorType: AZURE_STACK
                  accessNodes:
                    - id: 0
                      name: string
                      type: 3
                  ApplicationPassword: string
                  subscriptionId: string
                  resourceManagerURL: string
                  tenantId: string
                  ApplicationId: string
                  selectAuthenticationType:
                    name: Azure Active Directory
                    id: azureAD
                    selected: true
              OCI:
                value:
                  name: string
                  hypervisorType: ORACLE_CLOUD_INFRASTRUCTURE
                  accessNodes:
                    - id: 0
                      name: string
                      type: 3
                  credentials:
                    id: 0
                    name: string
                  regionName: string
              ALIBABA CLOUD:
                value:
                  name: string
                  hypervisorType: ALIBABA_CLOUD
                  accessNodes:
                    - id: 0
                      name: string
                      type: 3
                  secretKey: string
                  accessKey: string
              ORACLE VM:
                value:
                  name: string
                  hypervisorType: ORACLE_VM
                  accessNodes:
                    - id: 0
                      name: string
                      type: 3
                  password: string
                  userName: string
                  oracleVMManager: string
              RED HAT VIRTUALIZATION:
                value:
                  name: string
                  hypervisorType: REDHAT
                  accessNodes:
                    - id: 0
                      name: string
                      type: 3
                  password: string
                  userName: string
                  RhevMManager: string
              VCLOUD:
                value:
                  name: string
                  hypervisorType: VCLOUD
                  accessNodes:
                    - id: 0
                      name: string
                      type: 3
                  credentials:
                    id: 0
                    name: string
                  hostName: string
                  cloudTenantAccount: false
              VCLOUD_ORGANIZATION_ACCOUNT:
                value:
                  name: string
                  hypervisorType: VCLOUD
                  createOrgAccount: true
                  vCloudDirector: string
                  vOrganizationName: string
                  vOrganizationGuid: string
                  vcenterHostName: string
              Azure Stack HCI:
                value:
                  name: string
                  hypervisorType: AZURE_STACK_HCI
                  accessNodes:
                    - id: 0
                      name: string
                      type: 3
                  credentials:
                    id: 0
                    name: string
                  clusterName: string
      description: Create Hypervisor for that particular type
      x-dependency:
        - List access nodes
      operationId: CreateHypervisor
      summary: Create a Hypervisor
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    $ref: '#/components/schemas/CreateHypervisorResp'
        '400':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
    get:
      tags:
        - Hypervisor Operations
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListHypervisors'
        '404':
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      description: Get the details of all Hypervisor
      operationId: ListHypervisors
      summary: Get all Hypervisor
  '/V4/Hypervisor/{hypervisorId}':
    put:
      summary: Update the Hypervisor details
      x-terraform-resource: Hypervisor
      x-terraform-oneof-map:
        - schema: UpdateHypervisorGroupAmazon
          resource: AWS
        - schema: UpdateHypervisorGroupAzure
          resource: Azure
      tags:
        - Hypervisor Operations
      parameters:
        - name: hypervisorId
          x-terraform-id: true
          in: path
          description: Id of the Hypervisor to update
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/UpdateHypervisorGroupAzure'
                - $ref: '#/components/schemas/UpdateHypervisorGroupAmazon'
                - $ref: '#/components/schemas/UpdateHypervisorGroupVMWare'
                - $ref: '#/components/schemas/UpdateHypervisorGroupHyperV'
                - $ref: '#/components/schemas/UpdateHypervisorGroupXen'
                - $ref: '#/components/schemas/UpdateHypervisorGroupGoogleCloud'
                - $ref: '#/components/schemas/UpdateHypervisorGroupRhev'
                - $ref: '#/components/schemas/UpdateHypervisorGroupOpenstack'
                - $ref: '#/components/schemas/UpdateHypervisorGroupDocker'
                - $ref: '#/components/schemas/UpdateHypervisorGroupOracleCloud'
                - $ref: '#/components/schemas/UpdateHypervisorGroupAliCloud'
                - $ref: '#/components/schemas/UpdateHypervisorGroupOracleVM'
                - $ref: '#/components/schemas/UpdateHypervisorGroupRedHatOpenShift'
                - $ref: '#/components/schemas/UpdateHypervisorGroupAzureStackHCI'
              discriminator:
                propertyName: hypervisorType
            examples:
              VMware:
                value:
                  hypervisorType: VMW
                  accessNodes:
                    - id: 0
                      name: string
                  fbrUnixMediaAgent:
                    id: 0
                    name: string
                  activityControl:
                    enableBackup: true
                    enableRestore: true
                  newName: string
                  vcenterHostName: string
                  userName: string
                  password: string
                description: ''
      operationId: updateHypervisor
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HypervisorPropertiesResp'
        '400':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      description: Updates the Hypervisors
      x-hidden-description: |
        Can be used to disable or enable backup or restore jobs on a hypervisor using activityControl.
    get:
      summary: Get Hypervisor Details
      x-terraform-resource: Hypervisor
      tags:
        - Hypervisor Operations
      parameters:
        - name: hypervisorId
          x-terraform-id: true
          in: path
          description: Id of the HYpervisor to get
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HypervisorPropertiesResp'
        '404':
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      description: Get the details of  HYpervisor
      operationId: GetHypervisors
    delete:
      x-terraform-resource: Hypervisor
      x-terraform-override: '/Client/{hypervisorId}/Retire'
      description: delete an existing Hypervisor
      summary: Delete a Hypervisor
      tags:
        - Hypervisor Operations
      parameters:
        - name: hypervisorId
          x-terraform-id: true
          in: path
          description: Id of the Hypervisor to delete
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '404':
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      operationId: DeleteHypervisor
  /V4/Hypervisor/{hypervisorId}/{InventoryEntityName}/Browse:
    get:
      description: Browse the Inventory of your hypervisor
      summary: Browse the Inventory of your hypervisor by hypervisor ID
      tags:
        - Hypervisor Operations
      parameters:
        - name: hypervisorId
          schema:
            type: string
          in: path
          required: true
          description: Hypervisor client ID to browse
        - name: InventoryEntityName
          schema:
            type: string
          in: path
          required: true
          description: Name of the inventory entity that needs to be browsed like ESX Host name in VCenter
        - name: InventoryType
          in: query
          schema:
            $ref: '#/components/schemas/VMContentType'
          description: Type of resource to browse in inventory
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/NetworkInventoryResponseList'
                  - $ref: '#/components/schemas/DatastoreInventoryResponseList'
                  - $ref: '#/components/schemas/ResourcePoolInventoryResponseList'
        '404':
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      operationId: BrowseHypervisorInventory
  /V4/Hypervisor/{hypervisorId}/Reconfigure:
    post:
      description: REconfigures and Renew License for  the hypervisor client
      summary: REconfigures and Renew License for  the hypervisor client
      tags:
        - Hypervisor Operations
      parameters:
        - name: hypervisorId
          schema:
            type: string
          in: path
          required: true
          description: Hypervisor client ID to reconfigure
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '404':
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      operationId: ReConfigureHypervisor
  /V4/Hypervisor/{HypervisorId}/Credentials:
    parameters:
      - schema:
          type: string
        name: HypervisorId
        in: path
        required: true
    put:
      summary: Update Hypervisor Credentials
      operationId: updateHypervisorCredentials
      tags:
        - Hypervisor Operations
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateHypervisorResp'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      description: Update Hypervisor's credentials information
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/UpdateHypervisorGroupGoogleCloud'
                - $ref: '#/components/schemas/UpdateHypervisorGroupVMWare'
                - $ref: '#/components/schemas/UpdateHypervisorGroupVCloud'
                - $ref: '#/components/schemas/UpdateHypervisorGroupAmazon'
                - $ref: '#/components/schemas/UpdateHypervisorGroupAzure'
                - $ref: '#/components/schemas/UpdateHypervisorGroupAzureStack'
                - $ref: '#/components/schemas/UpdateHypervisorGroupHyperV'
                - $ref: '#/components/schemas/UpdateHypervisorGroupRhev'
                - $ref: '#/components/schemas/UpdateHypervisorGroupOpenstack'
                - $ref: '#/components/schemas/UpdateHypervisorGroupOracleCloud'
                - $ref: '#/components/schemas/UpdateHypervisorGroupAliCloud'
                - $ref: '#/components/schemas/UpdateHypervisorGroupOracleVM'
                - $ref: '#/components/schemas/UpdateHypervisorGroupNutanix'
                - $ref: '#/components/schemas/UpdateHypervisorGroupAzureStackHCI'
            examples:
              Google Cloud:
                value:
                  hypervisorType: GOOGLE_CLOUD
                  userName: string
                  password: string
                  serviceAccountId: string
              VMware:
                value:
                  hypervisorType: VMW
                  vcenterHostName: string
                  userName: string
                  password: string
              vCloud:
                value:
                  hypervisorType: VCLOUD
                  hostName: string
                  userName: string
                  password: string
              Amazon:
                value:
                  hypervisorType: Amazon
                  accessKey: string
                  RoleARN: string
                  secretKey: string
                  Region: string
                  useIamRole: true
                  useServiceAccount: integer
              Azure_V2:
                value:
                  hypervisorType: AZURE_V2
                  tenantId: string
                  serverName: string
                  subscriptionId: string
                  userName: string
                  password: string
              Azure Stack:
                value:
                  hypervisorType: AZURE_STACK
                  tenantId: string
                  subscriptionId: string
                  useManagedIdentity: false
                  ApplicationId: string
                  ApplicationPassword: string
                  resourceManagerURL: string
              Hyper-v:
                value:
                  hypervisorType: Hyper-V
                  hostName: string
                  userName: string
                  password: string
              ALIBABA_CLOUD:
                value:
                  hypervisorType: ALIBABA_CLOUD
                  accessKey: string
                  secretKey: string
              ORACLE_CLOUD_INFRASTRUCTURE:
                value:
                  hypervisorType: ORACLE_CLOUD_INFRASTRUCTURE
                  tenancyOCId: string
                  userOCId: string
                  fingerPrint: string
                  privateKeyFileName: string
                  privateKeyPassword: string
                  regionName: string
              REDHAT:
                value:
                  hypervisorType: REDHAT
                  RhevMManager: string
                  userName: string
                  password: string
              OPENSTACK:
                value:
                  hypervisorType: OPENSTACK
                  userName: string
                  password: string
                  openstackDomain: string
                  keynoteAddress: string
              ORACLE_VM:
                value:
                  hypervisorType: ORACLE_VM
                  userName: string
                  password: string
                  oracleVMManager: string
              NUTANIX:
                value:
                  hypervisorType: NUTANIX
                  userName: string
                  password: string
                  hostName: string
              Azure Stack HCI:
                value:
                  hypervisorType: AZURE_STACK_HCI
                  clusterName: string
                  userName: string
                  password: string
        description: ''
  /V4/Laptop:
    post:
      summary: create a laptop
      operationId: postLaptop
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddLaptopResp'
        '400':
          description: Bad Request
        '404':
          description: Requested Details not found
      description: Simplified API to create a laptop
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddLaptop'
      tags:
        - Laptop
    get:
      summary: Get Laptop Devices (New)
      operationId: GetLaptopList
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LaptopsList'
      parameters:
        - schema:
            type: boolean
          in: query
          name: edgemode
        - schema:
            type: boolean
          in: query
          name: additionalProperties
      description: Get list of laptops
      tags:
        - Laptop
  /V4/NetworkTopology:
    get:
      summary: Get Network Topologies
      tags:
        - NetworkTopology
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  firewallTopologies:
                    type: array
                    items:
                      $ref: '#/components/schemas/FirewallTopology'
        '404':
          description: Requested Details not found
      operationId: GETFirewallTopology
      description: This endpoint is used to return the list of network topology.
    post:
      summary: Create a Network Topology
      operationId: POSTFirewallTopology
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirewallTopologyCreateResp'
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error
      description: This endpoint is used to create network topology.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FirewallTopologyCreateReq'
      tags:
        - NetworkTopology
  '/V4/NetworkTopology/{topologyId}':
    parameters:
      - schema:
          type: string
        name: topologyId
        in: path
        required: true
    get:
      summary: Get Network Topology Details
      tags:
        - NetworkTopology
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  topologyDetails:
                    $ref: '#/components/schemas/FirewallTopologyDetails'
        '404':
          description: Requested Details not found
      operationId: GETFirewallTopologyDetails
      description: This endpoint is used to return the detail of network topology.
    put:
      summary: Modify Network Topology details
      operationId: PUTFirewallTopology
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '404':
          description: Requested details not found
        '500':
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FirewallTopologyCreateReq'
      description: This endpoint is used to edit network topology.
      tags:
        - NetworkTopology
    delete:
      summary: Delete a Network Topology
      operationId: DELETEFirewallTopology
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '404':
          description: Requested Details not found
        '500':
          description: Internal Server Error
      description: This endpoint is used to delete network topology.
      tags:
        - NetworkTopology
  /V4/Regions:
    get:
      summary: Get Regions
      tags:
        - Regions
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegionsListResp'
      operationId: GetRegions
      description: 'Get list of regions '
      parameters:
        - name: type
          in: query
          schema:
            $ref: '#/components/schemas/RegionType'
          description: Region type to be filtered
          required: false
    post:
      summary: Create Region
      operationId: CreateRegion
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdNameGUID'
        '400':
          description: Bad Request
        '409':
          description: Region with same name already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
      description: Create a region
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRegion'
      tags:
        - Regions
  '/V4/Regions/{regionId}':
    parameters:
      - schema:
          type: string
        name: regionId
        in: path
        required: true
    delete:
      summary: Delete Region
      operationId: DeleteRegion
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '400':
          description: Region not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      description: Delete the region
      tags:
        - Regions
    get:
      summary: Get Region Details
      operationId: GetRegionDetails
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegionDetails'
        '500':
          description: Internal Server Error
      description: Get details of the region
      tags:
        - Regions
    put:
      summary: Update Region
      operationId: UpdateRegion
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
      description: Update details of the region
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRegion'
        description: Properties to be updated for the region
      tags:
        - Regions
  '/v4/Plan/Summary/{planId}':
    get:
      tags:
        - Plan
      parameters:
        - name: planId
          in: path
          description: Id of the plan to get summary of
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SinglePlanSummary'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      operationId: getSinglePlanSummary
      summary: Get Single Plan Summary
      description: Api to fetch summary of a plan.
  '/V4/Plan/BackupDestinations':
    post:
      x-terraform-resource: Plan_BackupDestination
      tags:
        - Plan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBackupDestinations'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatePlanBackupDestinationResp'
        '400':
          description: Bad Request
      operationId: CreateBackupDestinationWithoutPlanInfo
      summary: Create backup destination (without Plan)
      description: |
        Create backup destination(s) for a plan before creating the plan.
        The primary backup destination can be then associated with the plan to associate all secondary copies also.
  '/V4/Plan/BackupDestination/{BackupDestinationId}':
    get:
      x-terraform-resource: Plan_BackupDestination
      tags:
        - Plan
      parameters:
        - name: BackupDestinationId
          x-terraform-id: true
          in: path
          description: Id of the backupDestination for which details will be fetched.
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupDestination'
        '400':
          description: Bad Request
      operationId: GetBackupDestinationDetailsWithoutPlanInfo
      summary: Get details of a backup destination
      description: |
        Fetch details of a backup destination.
    put:
      x-terraform-resource: Plan_BackupDestination
      tags:
        - Plan
      parameters:
        - name: BackupDestinationId
          x-terraform-id: true
          in: path
          description: Id of the backupDestination to be modified
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBackupDestination'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanBackupDestinationResp'
        '404':
          description: Requested Details not found
      operationId: ModifyBackupDestinationWithoutPlanInfo
      summary: Modify Backup Destination (Without a Plan)
      description: |-
        Modify Backup Destination. Only primary backup destination will be considered for region updation.
        If the primary backup destination is not associated with a plan, only then the region associaion can be modified.
    delete:
      x-terraform-resource: Plan_BackupDestination
      tags:
        - Plan
      parameters:
        - name: BackupDestinationId
          x-terraform-id: true
          in: path
          description: Id of the backupDestination to be deleted
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '404':
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '412':
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      operationId: DeleteBackupDestinationWithoutPlanInfo
      summary: Delete backup destination
      description: Delete Backup Destination. If trying to delete primary backup destination which is not associated with any plan, it will delete all secondary copies also.
  /V4/Plan/Rule:
    get:
      summary: 'Fetch plan rules list.'
      tags:
        - PlanRules
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanEntityRuleList'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      operationId: getPlanRules
      description: Api to fetch plan rules list.
    post:
      summary: Create a Plan Rule
      tags:
        - PlanRules
      operationId: createPlanRule
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdName'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      description: 'Api to create plan rules. Request body will suggest plan against which rule need to be created and type of entities(workloads type, server groups, regions and all) that need to be referenced for applying that rule against a workload.'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePlanEntityRule'
        description: ''
    put:
      summary: Update a Plan Rule
      tags:
        - PlanRules
      operationId: updatePlanRule
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      description: 'Api to update existing plan rules. Request body will suggest which rule need to be updated and type of entities(workloads type, server groups, regions and all) that need to be referenced for applying that rule against a workload.'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePlanEntityRule'
  '/V4/Plan/Rule/{ruleId}':
    get:
      summary: Api to fetch plan rules details.
      tags:
        - PlanRules
      operationId: getPlanRuleDetails
      parameters:
        - name: ruleId
          in: path
          description: Id of the rule to update in Plan
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanEntityRuleInfo'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      description: Api to fetch plan rules details.
    delete:
      summary: Delete selected plan rule
      parameters:
        - name: ruleId
          in: path
          description: Id of the rule to update in Plan
          required: true
          schema:
            type: integer
            format: int32
      tags:
        - PlanRules
      operationId: deletePlanRule
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '400':
          description: Bad Request(Rule not found)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '403':
          description: Forbidden(Access Denied)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error (in case of any error on Server while processing request)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      description: Api to delete selected plan rule
  '/V4/entity/{entityType}/{entityId}/region':
    parameters:
      - schema:
          $ref: '#/components/schemas/EntityTypes'
        name: entityType
        in: path
        required: true
        description: Type of the entity
      - schema:
          type: integer
          format: int32
          minimum: 1
        name: entityId
        in: path
        required: true
        description: Unique id for the entity
    get:
      summary: Get Region Details of entity
      tags:
        - Regions
      operationId: getRegionForEntity
      parameters:
        - schema:
            type: boolean
          in: query
          name: calculate
          description: Flag for Enable/Disable Region Calculation
        - schema:
            $ref: '#/components/schemas/EntityRegionTypes'
          in: query
          name: entityRegionType
          description: Region Type Enum
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdNameDisplayName'
        '500':
          description: Internal Server Error
      description: Api to fetch region details for an entity.
    put:
      summary: Set Region for an entity
      tags:
        - Regions
      operationId: setRegionForEntity
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      description: Api to set region for an entity.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EntityRegionInfo'
  '/V4/entity/region':
    get:
      tags:
        - Regions
      description: Fetch region for multiple entity
      summary: Get Region for entities
      parameters:
        - schema:
            $ref: '#/components/schemas/EntityTypes'
          in: query
          name: entityType
          required: true
          description: Entity Type Enum
          example: CLIENT
        - schema:
            $ref: '#/components/schemas/EntityRegionTypes'
          in: query
          name: regionType
          description: Region Type Enum
          example: BACKUP
        - schema:
            type: string
          in: query
          name: entities
          required: true
          description: Comma Seprated Entity Ids
          example: 1,2,3
      operationId: getRegionForEntities
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEntityRegionResp'
              examples:
                Region For Entities:
                  value:
                    regions:
                      - id: 43
                        name: South India
                        entityId: 1
                      - id: 5
                        name: North America
                        entityId: 2
                      - id: 4
                        name: Europe
                        entityId: 3
                    entityType: CLIENT
                    regionType: BACKUP
                    error:
                      errorCode: 0
                      errorMessage: ''
        '400':
          description: Bad Request
  /V5/BlackoutWindow:
    get:
      tags:
        - BlackoutWindows
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlackoutWindowsListResponse'
        '404':
          description: Requested Details not found
      description: Get All Blackout Windows
      operationId: GetBlackoutWindows
      summary: Get Blackout Window
      parameters:
        - schema:
            type: boolean
          in: query
          name: showOnlyCommcellLevel
          description: Shows blackout window at commcell level if set to true.
        - schema:
            type: integer
          in: query
          name: companyId
          description: Shows blackout windows associated with the company whose id has been provided.
        - schema:
            type: string
          in: query
          name: serverGroupId
          description: Shows blackout windows associated with the server group whose id has been provided.
        - schema:
            type: string
          in: query
          name: commcellId
          description: Shows blackout windows associated with the commcell whose id has been provided.
    post:
      tags:
        - BlackoutWindows
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBlackoutWindow'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdName'
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error
      operationId: CreateBlackoutWindow
      summary: Create a Blackout Window
      description: Create a Blackout Window
  /V5/BlackoutWindow/{blackoutWindowId}:
    get:
      tags:
        - BlackoutWindows
      parameters:
        - name: blackoutWindowId
          in: path
          description: Id of the Blackout Window whose details have to be fetched
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlackoutWindow'
        '404':
          description: Requested Details not found
      operationId: GetBlackoutWindowDetails
      summary: Get Blackout Window Properties
      description: Get details of a blackout window based on id
    put:
      tags:
        - BlackoutWindows
      parameters:
        - name: blackoutWindowId
          in: path
          description: Id of the Blackout Window to update
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBlackoutWindow'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '400':
          description: Bad Request
        '404':
          description: Requested Details not found
      operationId: ModifyBlackoutWindow
      summary: Modify Blackout Window properties
      description: Modify the properties of an existing Blackout Window
  /V4/BlackoutWindow:
    get:
      tags:
        - BlackoutWindows
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V4BlackoutWindowsListResponse'
        '404':
          description: Requested Details not found
      description: Get All Blackout Windows
      operationId: GetV4BlackoutWindows
      summary: Get Blackout Windows List
      parameters:
        - schema:
            type: boolean
          in: query
          name: showOnlyCommcellLevel
          description: Shows blackout window at commcell level if set to true.
        - schema:
            type: integer
          in: query
          name: companyId
          description: Shows blackout windows associated with the company whose id has been provided.
        - schema:
            type: string
          in: query
          name: serverGroupId
          description: Shows blackout windows associated with the server group whose id has been provided.
        - schema:
            type: string
          in: query
          name: commcellId
          description: Shows blackout windows associated with the commcell whose id has been provided.
    post:
      tags:
        - BlackoutWindows
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V4CreateBlackoutWindow'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdName'
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error
      operationId: CreateV4BlackoutWindow
      description: Create a Blackout Window
      summary: Create new Blackout Window
  /V4/BlackoutWindow/{blackoutWindowId}:
    get:
      tags:
        - BlackoutWindows
      parameters:
        - name: blackoutWindowId
          in: path
          description: Id of the Blackout Window whose details have to be fetched
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V4BlackoutWindow'
        '404':
          description: Requested Details not found
      operationId: GetV4BlackoutWindowDetails
      description: Get details of a blackout window based on id
      summary: Get Blackout Window Details
    put:
      tags:
        - BlackoutWindows
      parameters:
        - name: blackoutWindowId
          in: path
          description: Id of the Blackout Window to update
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V4UpdateBlackoutWindow'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '400':
          description: Bad Request
        '404':
          description: Requested Details not found
      operationId: ModifyV4BlackoutWindow
      summary: Modify Blackout Window Details
      description: Modify the properties of an existing Blackout Window
    delete:
      description: Used to delete a Blackout Window
      summary: Delete Blackout Window
      tags:
        - BlackoutWindows
      parameters:
        - name: blackoutWindowId
          in: path
          description: Id of the Blackout Window to delete
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '404':
          description: Requested Details not found
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      operationId: DeleteBlackoutWindow
  /V4/ResourcePool:
    get:
      tags:
        - ResourcePools
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourcePoolListResponse'
        '404':
          description: Requested Details not found
      description: Get All Resource Pools
      operationId: GetResourcePools
      summary: Get Resource Pools
  /V4/Snmp:
    get:
      tags:
        - SNMP
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  SNMPHosts:
                    type: array
                    items:
                      $ref: '#/components/schemas/SNMPConfigurationSummary'
        '404':
          description: Requested Details not found
      description: Get list of SNMP hosts for alert notification
      operationId: GetSNMPhosts
      summary: Get SNMP Servers
  /V4/IndexServers:
    get:
      summary: Get Index Servers
      tags:
        - IndexServers
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IndexServersListResp'
      operationId: GetIndexServers
      description: Get list of index servers
  /v4/HFSShare/{HFSShareId}/Status:
    get:
      tags:
        - HybridFileStores
      x-excludedfrom-saas: true
      operationId: GetHybridFileStoreShareStatus
      summary: Get Hybrid File Store Share Status
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HFSShareStatusResp'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HFSShareStatusResp'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HFSShareStatusResp'
      description: API to get Hybrid File Store Share Status
    parameters:
      - name: HFSShareId
        in: path
        description: Id of the HFS Share to fetch its status
        required: true
        schema:
          type: integer
          format: int32
  /V4/HybridFileStores:
    get:
      summary: Get Hybrid File Stores
      tags:
        - HybridFileStores
      x-excludedfrom-saas: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HybridFileStoresListResp'
      operationId: GetHybridFileStores
      description: Get list of hybrid file stores
  /V4/EmailServer:
    post:
      summary: Configure Email Server
      tags:
        - EmailServer
      operationId: ConfigureEmailServer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
      description: Configure SMTP server settings.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigureSMTPServerReq'
    put:
      tags:
        - EmailServer
      summary: Update Email Server
      operationId: UpdateEmailServer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
      description: Update the SMTP server settings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEmailServerReq'
        description: ''
    get:
      summary: Get Email Server
      operationId: GetEmailServer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEmailServerDetails'
        '401':
          description: Unauthorized
      description: Retrieves SMTP server details
      tags:
        - EmailServer
  /V4/EmailServer/Action/Test:
    post:
      summary: Send Test Mail Req
      operationId: SendTestMailReq
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
      description: To test Email settings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendTestMailReq'
        description: ''
      tags:
        - EmailServer
  /V4/Servers:
    get:
      summary: Get Servers
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServersListResp'
      operationId: GetServers
      description: This end point returns the list of servers
      parameters:
        - schema:
            type: integer
            format: int32
            default: 1
          in: query
          name: showOnlyInfrastructureMachines
          description: 'Returns only infrastructure machines if value is 1 if 0, it returns all servers, default value is 1'
      tags:
        - Servers
  /V4/Kubernetes/{clusterId}/Modifier:
    get:
      description: Fetch all the modifiers
      summary: Fetch all the modifiers
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/K8sRestoreModifierAPIResp'
      tags:
        - Kubernetes
      parameters:
        - name: clusterId
          in: path
          description: Id of the cluster whose modifier has to be listed.
          required: true
          schema:
            type: integer
            format: int32
    post:
      description: Create a Modifier
      summary: Create a Modifier
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      tags:
        - Kubernetes
      parameters:
        - name: clusterId
          in: path
          description: Id of the cluster whose modifier has to be created.
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/K8sRestoreModifierAPIReq'
        description: ''
  /V4/Kubernetes/{clusterId}/Modifier/{ModifierName}:
    get:
      description: Fetch(Read) Modfier details
      summary: Fetch(Read) Modfier details
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/K8sRestoreModifierAPIResp'
      tags:
        - Kubernetes
      parameters:
        - name: clusterId
          in: path
          description: Id of the cluster whose modifier has to be read.
          required: true
          schema:
            type: integer
            format: int32
        - name: ModifierName
          in: path
          description: Name of the modifier to be read.
          required: true
          schema:
            type: string
    put:
      description: Edit a Restore modifier
      summary: Edit a Restore modifier
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      tags:
        - Kubernetes
      parameters:
        - name: clusterId
          in: path
          description: Id of the cluster whose modifier has to be modified.
          required: true
          schema:
            type: integer
            format: int32
        - name: ModifierName
          in: path
          description: Name of the modifier to be modified.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/K8sRestoreModifierAPIReq'
        description: ''
    delete:
      description: Delete a Modifier
      summary: Delete a Modifier
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      tags:
        - Kubernetes
      parameters:
        - name: clusterId
          in: path
          description: Id of the cluster whose modifier has to be deleted.
          required: true
          schema:
            type: integer
            format: int32
        - name: ModifierName
          in: path
          description: Name of the modifier to be deleted.
          required: true
          schema:
            type: string
  /V4/Kubernetes/{clusterId}/Modifier/Test:
    post:
      description: Test a Yaml paylod against a restore modfier
      summary: Test a Yaml paylod against a restore modfier
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/K8sRestoreModifierAPIResp'
      tags:
        - Kubernetes
      parameters:
        - name: clusterId
          in: path
          description: Id of the cluster whose modifier needs to be tested
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestK8sModifierReq'
        description: ''
  /V4/Server/{serverId}/Restore/Action/Disable:
    put:
      description: Used to disable restore property for server
      summary: Disable Restores for a Server
      operationId: DisableRestoreServer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      tags:
        - Servers
      parameters:
        - name: enableAfterADelay
          in: query
          description: Provide UTC time in unix format.
          required: false
          schema:
            type: integer
            format: int32
        - name: serverId
          in: path
          description: Id of the Server whose details have to be modified
          required: true
          schema:
            type: integer
            format: int32
  /V4/Server/{serverId}/Restore/Action/Enable:
    put:
      description: Used to enable restore property for Server
      summary: Enable Restores for a Server
      operationId: EnableRestoreServer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      tags:
        - Servers
      parameters:
        - name: serverId
          in: path
          description: Id of the Server whose details have to be modified
          required: true
          schema:
            type: integer
            format: int32
  /V4/Server/{serverId}/Backup/Action/Disable:
    put:
      description: Used to disable backup property for server
      summary: Disable Backups for a server
      operationId: DisableBackupServer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      tags:
        - Servers
      parameters:
        - name: enableAfterADelay
          in: query
          description: Provide UTC time in unix format.
          required: false
          schema:
            type: integer
            format: int32
        - name: serverId
          in: path
          description: Id of the Server whose details have to be modified
          required: true
          schema:
            type: integer
            format: int32
  /V4/Server/{serverId}/Backup/Action/Enable:
    put:
      description: Used to enable backup property for Server
      summary: Enable backup property for a server
      operationId: EnableBackupServer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      tags:
        - Servers
      parameters:
        - name: serverId
          in: path
          description: Id of the Server whose details have to be modified
          required: true
          schema:
            type: integer
            format: int32
  /V4/Server/{serverId}/DataAging/Action/Disable:
    put:
      description: Used to disable Data Aging property for server
      summary: Disable Data Aging for a Server
      operationId: DisableDataAgingServer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      tags:
        - Servers
      parameters:
        - name: enableAfterADelay
          in: query
          description: Provide UTC time in unix format.
          required: false
          schema:
            type: integer
            format: int32
        - name: serverId
          in: path
          description: Id of the Server whose details have to be modified
          required: true
          schema:
            type: integer
            format: int32
  /V4/Server/{serverId}/DataAging/Action/Enable:
    put:
      description: Used to enable Data Aging property for Server
      operationId: EnableDataAgingServer
      summary: Enable Data Aging for a Server
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      tags:
        - Servers
      parameters:
        - name: serverId
          in: path
          description: Id of the Server whose details have to be modified
          required: true
          schema:
            type: integer
            format: int32
  /V4/scrubLogs/Action/Disable:
    put:
      description: Used to disable log scrubbing
      summary: Disable Log Scrubbing
      operationId: DisableLogScrubbing
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      tags:
        - ScrubLogs
  /V4/scrubLogs/Action/Enable:
    put:
      description: Used to enable log scrubbing
      operationId: EnableLogScrubbing
      summary: Enable Log Scrubbing
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      tags:
        - ScrubLogs
  /V4/Commcell/Restore/Action/Disable:
    put:
      description: Used to disable restore property for commcell
      operationId: DisableRestoreCommcell
      summary: Disable Restore at Commcell Level
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      tags:
        - Commcell
      parameters:
        - name: enableAfterADelay
          in: query
          description: Provide UTC time in unix format.
          required: false
          schema:
            type: integer
            format: int32
  /V4/Commcell/Backup/Action/Disable:
    put:
      description: Used to disable backup property for commcell
      operationId: DisableBackupCommcell
      summary: Disable Backup at Commcell Level
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      tags:
        - Commcell
      parameters:
        - name: enableAfterADelay
          in: query
          description: Provide UTC time in unix format.
          required: false
          schema:
            type: integer
            format: int32
  /V4/Commcell/Restore/Action/Enable:
    put:
      description: Used to enable restore property for commcell
      operationId: EnableRestoreCommcell
      summary: Enable Restore at Commcell Level
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      tags:
        - Commcell
  /V4/Commcell/Backup/Action/Enable:
    put:
      description: Used to enable backup property for commcell
      operationId: EnableBackupCommcell
      summary: Enable Backup at Commcell Level
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      tags:
        - Commcell
  /V4/Commcell/Scheduler/Action/Disable:
    put:
      description: Used to disable scheduler property for commcell
      operationId: DisableSchedulerCommcell
      summary: Disable Scheduler at Commcell Level
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      tags:
        - Commcell
      parameters:
        - name: enableAfterADelay
          in: query
          description: Provide UTC time in unix format.
          required: false
          schema:
            type: integer
            format: int32
  /V4/Commcell/DataAging/Action/Disable:
    put:
      description: Used to disable data aging property for commcell
      operationId: DisableDataAgingCommcell
      summary: Disable Data Aging at Commcell Level
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      tags:
        - Commcell
      parameters:
        - name: enableAfterADelay
          in: query
          description: Provide UTC time in unix format.
          required: false
          schema:
            type: integer
            format: int32
  /V4/Commcell/Scheduler/Action/Enable:
    put:
      description: Used to enable scheduler property for commcell
      operationId: EnableSchedulerCommcell
      summary: Enable Scheduler at Commcell Level
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      tags:
        - Commcell
  /V4/Commcell/DataAging/Action/Enable:
    put:
      description: Used to enable data aging property for commcell
      operationId: EnableDataAgingCommcell
      summary: Enable Data Aging at commcell level
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      tags:
        - Commcell
  /V4/Commcell/DDB/Action/Disable:
    put:
      description: Used to disable DDB property for commcell
      operationId: DisableDDBCommcell
      summary: Disable DDB Backups at Commcell Level
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      tags:
        - Commcell
      parameters:
        - name: enableAfterADelay
          in: query
          description: Provide UTC time in unix format.
          required: false
          schema:
            type: integer
            format: int32
  /V4/Commcell/DataVerification/Action/Disable:
    put:
      description: Used to disable data verification property for commcell
      operationId: DisableDataVerificationCommcell
      summary: Disable Data Verification at Commcell Level
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      tags:
        - Commcell
      parameters:
        - name: enableAfterADelay
          in: query
          description: Provide UTC time in unix format.
          required: false
          schema:
            type: integer
            format: int32
  /V4/Commcell/DDB/Action/Enable:
    put:
      description: Used to enable DDB property for commcell
      operationId: EnableDDBCommcell
      summary: Enable DDB Backups at Commcell Level
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      tags:
        - Commcell
  /V4/Commcell/AllJobActivity/Action/Enable:
    put:
      description: Used to enable all job activity property for commcell
      operationId: EnableAllJobActivity
      summary: Enable All Job Activity at Commcell Level
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      tags:
        - Commcell
  /V4/Commcell/AllJobActivity/Action/Disable:
    put:
      description: Used to disable all job activity property for commcell
      operationId: DisableAllJobActivityCommcell
      summary: Disable All Job Activity at Commcell Level
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      tags:
        - Commcell
      parameters:
        - name: enableAfterADelay
          in: query
          description: Provide UTC time in unix format.
          required: false
          schema:
            type: integer
            format: int32
  /V4/Commcell/DataVerification/Action/Enable:
    put:
      description: Used to enable data verification property for commcell
      operationId: EnableDataVerificationCommcell
      summary: Enable Data Verification at Commcell Level
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      tags:
        - Commcell
  /V4/Commcell/AuxillaryCopy/Action/Disable:
    put:
      description: Used to disable auxillary copy property for commcell
      operationId: DisableAuxillaryCopyCommcell
      summary: Disable Auxillary copy Jobs at Commcell Level
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      tags:
        - Commcell
      parameters:
        - name: enableAfterADelay
          in: query
          description: Provide UTC time in unix format.
          required: false
          schema:
            type: integer
            format: int32
  /V4/Commcell/ContentIndexing/Action/Disable:
    put:
      description: Used to disable content indexing property for commcell
      operationId: DisableContentIndexingCommcell
      summary: Disable Context Indexing Jobs at Commcell Level
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      tags:
        - Commcell
      parameters:
        - name: enableAfterADelay
          in: query
          description: Provide UTC time in unix format.
          required: false
          schema:
            type: integer
            format: int32
  /V4/Commcell/AuxillaryCopy/Action/Enable:
    put:
      description: Used to enable auxillary copy property for commcell
      operationId: EnableAuxillaryCopyCommcell
      summary: Enable Auxillary Copy Jobs at Commcell Level
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      tags:
        - Commcell
  /V4/Commcell/ContentIndexing/Action/Enable:
    put:
      description: Used to enable content indexing property for commcell
      operationId: EnableContentIndexingCommcell
      summary: Enable Content Indexing Jobs at Commcell Level
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      tags:
        - Commcell
  /V4/DownloadSoftware:
    put:
      description: Download or Copy Software
      summary: Download or Copy Software
      operationId: DownloadOrCopySoftware
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobIdResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DownloadOrCopySoftware'
        description: ''
      tags:
        - Commcell
  /V4/UpgradeSoftware:
    put:
      description: Upgrade software for client and client group.
      x-hidden-description: |
        This can be used to upgrade hyperscale software to a specific version
        This can be used to upgrade/update software of a client (server) or client group (server group) to latest or specific version
      summary: Upgrade client and client group software
      operationId: UpgradeSoftware
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobIdResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpgradeSoftware'
        description: ''
      tags:
        - Commcell
  /V4/RepairSoftware:
    put:
      description: Repair software for client and clients for the given client group(s).
      summary: Repair software
      operationId: RepairSoftware
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobIdResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RepairSoftware'
        description: ''
      tags:
        - Commcell
  /V4/TriggeredAlerts:
    get:
      summary: Get Alerts Triggered
      tags:
        - Alerts
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertsTriggeredListResp'
        '404':
          description: Requested Details not found
      operationId: GetAlertsTriggered
      description: Get List Of Alerts Triggered
  /Alert/CustomRule:
    get:
      summary: Get Alert Custom Rules List
      tags:
        - Alerts
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertRulesDetailsList'
        '500':
          description: Internal Server Error
      operationId: getAlertCustomRulesList
      description: Get the list of alert custom rules
  '/Alert/CustomRule/{alertRuleId}':
    parameters:
      - name: alertRuleId
        in: path
        required: true
        description: Unique Id of the alert custom rule to get details
        schema:
          type: integer
          format: int32
          description: Unique Id of the alert custom rule
    get:
      summary: Alert custom rule details
      tags:
        - Alerts
      operationId: getAlertCustomRuleDetails
      description: Get the details of the custom alert rule by Id
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertRulesDetailsList'
        '500':
          description: Internal Server Error
  '/Alert/CustomRule/{alertRuleId}/Enable':
    parameters:
      - name: alertRuleId
        in: path
        required: true
        description: Unique Id of the alert custom rule to enable it
        schema:
          type: integer
          format: int32
          description: Unique Id of the alert custom rule
    put:
      summary: Enable Alert Custom Rule
      tags:
        - Alerts
      operationId: enableAlertCustomRule
      description: Enable the alert custom rule by using the given alert rule id
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertRuleGenericResp'
        '500':
          description: Internal Server Error
  '/Alert/CustomRule/{alertRuleId}/Disable':
    parameters:
      - name: alertRuleId
        in: path
        required: true
        description: Unique Id of the alert custom rule to disable it
        schema:
          type: integer
          format: int32
          description: Unique Id of the alert custom rule
    put:
      summary: Disable Alert Custom Rule
      tags:
        - Alerts
      operationId: disableAlertCustomRule
      description: Disable the alert custom rule by using the given alert rule id
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertRuleGenericResp'
        '500':
          description: Internal Server Error
  '/Alert/CustomRule/{alertRuleId}/Delete':
    parameters:
      - name: alertRuleId
        in: path
        required: true
        description: Unique Id of the alert custom rule to delete it
        schema:
          type: integer
          format: int32
          description: Unique Id of the alert custom rule
    put:
      summary: Delete Alert Custom Rule
      tags:
        - Alerts
      operationId: deleteAlertCustomRule
      description: Delete the alert custom rule by using the given alert rule id
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertRuleGenericResp'
        '500':
          description: Internal Server Error
  /V4/AlertType:
    get:
      summary: Get Alert Type and Alert Custom Rules list
      tags:
        - Alerts
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertTypeResp'
        '500':
          description: Internal Server Error
      operationId: getAlertType
      description: Get the list of alert types and alert custom rules
  /V4/Solutions:
    get:
      summary: Get Solutions
      tags:
        - Solutions
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SolutionsList'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      operationId: getSolutionsId
      description: 'API to fetch applicable workload solutions for the user like File Server, Virtualization or Database'
  /V4/Plan/Rule/Entities:
    get:
      summary: Get entities applicable for plan association
      tags:
        - PlanRules
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanRuleApplicableEntitiesList'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      operationId: GetPlanRuleAssociatedEntities
      description: API to fetch list of entities that are applicable for plan association via plan assignment rules.
    put:
      summary: Process list of entities against plan rules.
      operationId: PutPlanRuleAssociatedEntities
      tags:
        - PlanRules
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      description: API to send request to process plan rules against specific set of entities.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExecutePlanRules'
        description: Request body will consist of entities that are need to be evaluated against plan rules.
  '/V4/{globalSearchEntity}/aggregate':
    get:
      tags:
        - GlobalSearch
      parameters:
        - name: globalSearchEntity
          in: path
          description: name of global search entity
          required: true
          schema:
            type: string
            enum:
              - SERVER
              - FILESERVER
              - ARCHIVESERVER
              - EPIC_CLIENT
              - DEVICE
              - USER
              - USERGROUP
              - ROLE
              - SERVERGROUP
              - PLAN
              - COMPANY
              - VMGROUPS
              - VM
              - HYPERVISOR
              - KUBERNETES_APPLICATION
              - KUBERNETES_APPLICATION_GROUP
              - KUBERNETES_CLUSTER
              - DATABASES
              - DBINSTANCE
        - name: fq
          in: query
          description: Filter criteria to filter out global search entities
          schema:
            type: string
        - name: groupBy
          in: query
          description: comma-separated list of entity response attributes based on which aggregate results would be grouped
          schema:
            type: string
        - name: func
          in: query
          required: true
          description: aggregation function to be applied.
          schema:
            type: string
            enum:
              - COUNT
              - MIN
              - MAX
              - AVG
              - SUM
        - name: aggregateOn
          in: query
          description: attribute on which aggregation function would be applied.
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlobalEntityAggregationValueResp'
              examples:
                '/V4/VM/aggregate?fq=vmStatusInfoList.vmStatus:eq:1&groupBy=vendor,slaStatus&func=COUNT':
                  value:
                    aggregation:
                      - funcValue: '3'
                        groupByVals:
                          - name: vendor
                            value: '4'
                          - name: slaStatus
                            value: '1'
                      - funcValue: '3'
                        groupByVals:
                          - name: vendor
                            value: '1'
                          - name: slaStatus
                            value: '1'
                      - funcValue: '2'
                        groupByVals:
                          - name: vendor
                            value: '1'
                          - name: slaStatus
                            value: '2'
        '404':
          description: requested details not found.
      description: Get aggregate count of entity
      operationId: GetAggregateOnEntity
      summary: Get Aggregate count of Entity
  /V4/GlobalSettings:
    put:
      summary: Add or Update Global Settings
      operationId: AddorUpdateGlobalSettings
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      description: 'This API allows you to add new global settings or update existing ones, overriding the default configurations to customize the system''s behavior.'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifyGlobalSettings'
            examples:
              Modify global settings:
                value:
                  globalSettings:
                    - name: AccountLockDuration
                      category: CommServDB.GxGlobalParam
                      type: Integer
                      newValue: '1000'
                      comment: Needed to change the account lock duration to 1000 seconds
              Reset global settings:
                value:
                  globalSettings:
                    - name: AccountLockDuration
                      category: CommServDB.GxGlobalParam
                      type: Integer
                      reset: true
              Set clean recovery point at Recovery group level:
                value:
                  globalSettings:
                    - name: cleanRecoveryPoint
                      category: CommServDB.GxGlobalParam
                      type: Integer
                      newValue: 'Epoch Time'
                      comment: Clean Point for Recovery group
              Reset clean recovery point:
                value:
                  globalSettings:
                    - name: cleanRecoveryPoint
                      category: CommServDB.GxGlobalParam
                      type: Integer
                      reset: true
        description: ''
      tags:
        - AdditionalSettings
        - RecoveryGroup
        - HIDDEN
    get:
      summary: Get Global Settings
      operationId: GetGlobalSettings
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlobalSettingsResponse'
              examples:
                Global settings:
                  value:
                    globalSettings:
                      - name: AccountLockDuration
                        description: 'Use this additional setting to set the number of seconds a locked account remains locked. '
                        defaultValue: '0'
                        type: Integer
                        isRestartRequired: true
                        minValue: 0
                        maxValue: 2147483647
                        category: CommServDB.GxGlobalParam
                      - name: ActivateHPECatalyst
                        description: Use this additional setting to show or hide HP Store Once library creation in the UI.
                        defaultValue: 'False'
                        type: Boolean
                        isRestartRequired: false
                        value: 'True'
                        isModified: true
                        comment: Needed to show HP store
                        category: CommServDB.GxGlobalParam
                      - name: AddDecisionPointInformation
                        description: Set to 1 to add debugging information to collect file identifying reason entry was added and where in code that decision was made Set to 0 to disable (default)
                        defaultValue: '0'
                        type: Integer
                        isRestartRequired: false
                        minValue: 0
                        maxValue: 1
                        acceptableValues:
                          - '0'
                          - '1'
                        category: CommServDB.GxGlobalParam
      description: Get list of global settings used to modify system default behaviour
      tags:
        - AdditionalSettings
  /V4/EntitySettings:
    get:
      summary: Get Entity Settings
      tags:
        - AdditionalSettings
        - HIDDEN
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitySettingsResponse'
              examples:
                Entity settings:
                  value:
                    entitySettings:
                      - name: 3dfsCfgClient_DEBUGLEVEL
                        description: 'Specifies the default debug level for application. Note that if other means exist to set debug level  those will probably override this method. '
                        defaultValue: '2'
                        values:
                          - value: '4'
                            comment: Needed to debug 3dfs application
                            entity:
                              name: oes2018_3
                              id: 4
                              type: Server
                          - value: '3'
                            comment: Needed to debug 3dfs application
                            entity:
                              name: amsterdam
                              id: 3
                              type: Server
                        type: Integer
                        isRestartRequired: false
                        minValue: 0
                        maxValue: 10
                        isModified: true
                        category: EventManager
                      - name: AllowEmptySubClientToSucceed
                        description: 'By default, if a subclient is empty, the backup job fails. To allow backup jobs for empty subclients to complete, set the value to 1.'
                        defaultValue: '0'
                        type: Integer
                        isRestartRequired: false
                        minValue: 0
                        maxValue: 1
                        category: MSExchangeDBAgent
      operationId: GetEntitySettings
      description: Get list of entity settings used to modify default behaviour for linked entity like servers or server groups
    put:
      summary: Add or Update Entity Settings
      operationId: AddorUpdateEntitySettings
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      tags:
        - AdditionalSettings
        - RecoveryGroupEntities
      description: 'This API allows you to add or update settings for linked entities, such as servers or server groups. Use this endpoint to modify the default behavior of these entities.'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifyEntitySettings'
            examples:
              Modify entity setting:
                value:
                  entitySettings:
                    - name: AllowEmptyDefaultSubclient
                      category: VirtualServer
                      type: Boolean
                      value: 'True'
                      comment: Needed to allow empty default subclients
                      entity:
                        id: 4
                        type: Server
              Reset entity setting:
                value:
                  entitySettings:
                    - name: AllowEmptyDefaultSubclient
                      category: VirtualServer
                      type: Boolean
                      reset: true
                      entity:
                        id: 4
                        type: Server
              Set clean recovery point in entity of Recovery group:
                value:
                  entitySettings:
                    - name: cleanRecoveryPoint
                      category: CommServDB.GxGlobalParam
                      type: Integer
                      newValue: 'Epoch time'
                      comment: Clean Point for entity in Recovery group
                      entity:
                        id: 0
                        type: Server
              Reset clean recovery point:
                value:
                  entitySettings:
                    - name: cleanRecoveryPoint
                      category: CommServDB.GxGlobalParam
                      type: Boolean
                      reset: true
                      entity:
                        id: 0
                        type: Server
  '/V4/RecoveryPointStore/{rpsId}':
    parameters:
      - schema:
          type: string
        name: rpsId
        in: path
        required: true
    get:
      summary: Get Recovery Point Stores
      tags:
        - Recovery Point Stores
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecoveryPointStoreDetails'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      operationId: GetRecoveryPointStores
      description: Fetch details about recovery point stores or library details
    delete:
      summary: Delete Recovery Point Stores
      tags:
        - Recovery Point Stores
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      operationId: DeleteRecoveryPointStores
      description: Delete a specific recovery point store
  /V4/GlobalExceptions:
    get:
      summary: Get GlobalExceptions
      tags:
        - GlobalExceptions
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetGlobalExceptions'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      operationId: GetGlobalExceptions
      description: Get list of global execptions
    post:
      summary: Update GlobalExceptions
      tags:
        - GlobalExceptions
      operationId: UpdateGlobalExceptions
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error
      description: Add/Edit/Delete global execptions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetGlobalExceptions'
        description: Request body to be passed to the POST API
  /V4/Kubernetes/ApplicationGroups:
    get:
      tags:
        - VirtualMachines
      parameters:
        - name: ClusterId
          in: query
          description: Id of the hypervisor to list application groups
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationGroupListResp'
        '404':
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      description: Get the details of all applicationGroups
      operationId: GetAllAPllicationGroups
      summary: Get All Application Groups of Kubernetes
  /V4/Kubernetes/Applications:
    get:
      summary: Get all application in Kubenetes cluster
      tags:
        - VirtualMachines
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationListResp'
        '404':
          description: Requested Details not found
      operationId: GetKubernetesApplication
      description: Get all application in Kubenetes cluster
  /V4/Kubernetes/cluster:
    post:
      tags:
        - VirtualMachines
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateKubernetesCluster'
            examples:
              Kubernetes:
                value:
                  name: string
                  hypervisorType: KUBERNETES
                  accessNodes:
                    - id: 0
                      name: string
                  endpointurl: string
                  serviceName: string
                  secretKey: string
                  k8ServiceType: ONPREM
                  etcdProtection: true
                  planEntity:
                    id: 0
                    name: string
      description: Create Kubernetes cluster
      operationId: CreateKubernetescluster
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateClusterResp'
        '400':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
    get:
      tags:
        - VirtualMachines
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListClusters'
        '404':
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      description: Get the details of all cluster
      operationId: ListKubernetesCluster
  '/V4/SAML/{name}':
    parameters:
      - schema:
          type: string
        name: name
        in: path
        required: true
    get:
      summary: Get SAML Server
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SAML'
      operationId: GetSAMLApp
      description: Gets details of SAML app based on SAML app name
      tags:
        - IdentityServers
    put:
      summary: Modify SAML App Details
      operationId: UpdateSAMLApp
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      description: Updates details of existing SAML app
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SAMLUpdate'
      tags:
        - IdentityServers
  /V4/SAML:
    post:
      summary: Create SAML App
      operationId: CreateSAMLApp
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      description: Creates SAML app
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SAMLReq'
      tags:
        - IdentityServers
  /V4/Credential:
    get:
      tags:
        - CredentialManager
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialManagerListResp'
        '404':
          description: Requested Details not found
      operationId: GetCredentials
      description: List of Credentials
      summary: Get list of credentials
    post:
      x-terraform-resource: Credential
      x-terraform-function: handler.ConfigureCredential
      x-terraform-oneof-map:
        - schema: AmazonCredentialInfo
          resource: AWS
        - schema: AmazonCredentialInfoWithRoleArn
          resource: AWSWithRoleArn
        - schema: AzureCredentialInfo
          resource: Azure
        - schema: AzureCredentialInfoWithTenantId
          resource: AzureWithTenantId
      tags:
        - CredentialManager
      summary: Create Credential
      operationId: CreateCredential
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                x-terraform-id: id
                $ref: '#/components/schemas/IdType'
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error
      description: Create a new credential
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/CredentialInfo'
                - $ref: '#/components/schemas/CloudCredentialInfo'
                - $ref: '#/components/schemas/CloudCredentialInfoWithTokenId'
                - $ref: '#/components/schemas/CloudCredentialInfoWithAPIKey'
                - $ref: '#/components/schemas/SalesforceCredentialInfo'
                - $ref: '#/components/schemas/AmazonCredentialInfo'
                - $ref: '#/components/schemas/AmazonCredentialInfoWithRoleArn'
                - $ref: '#/components/schemas/AzureCredentialInfo'
                - $ref: '#/components/schemas/AzureCredentialInfoWithTenantId'
                - $ref: '#/components/schemas/AzureCredentialInfoWithCertificate'
                - $ref: '#/components/schemas/GoogleCredentialInfo'
                - $ref: '#/components/schemas/GoogleServiceAccountCredentialInfo'
                - $ref: '#/components/schemas/OracleCredentialInfo'
            examples:
              Linux Account:
                value:
                  name: Credential1
                  accountType: LINUXACCOUNT
                  userAccount: xyz
                  password: UGFzc3dvcmQ=
                  description: This is a description
                  security:
                    owner:
                      user:
                        id: 1
                    associations:
                      - userGroup:
                          id: 12
                        permissions:
                          permissionId: 218
                        isCreatorAssociation: false
  '/V4/Credential/{credentialName}':
    parameters:
      - schema:
          type: string
        name: credentialName
        in: path
        required: true
    get:
      tags:
        - CredentialManager
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/CredentialInfo'
                  - $ref: '#/components/schemas/CloudCredentialInfo'
                  - $ref: '#/components/schemas/CloudCredentialInfoWithTokenId'
                  - $ref: '#/components/schemas/CloudCredentialInfoWithAPIKey'
                  - $ref: '#/components/schemas/SalesforceCredentialInfo'
                  - $ref: '#/components/schemas/AmazonCredentialInfo'
                  - $ref: '#/components/schemas/AmazonCredentialInfoWithRoleArn'
                  - $ref: '#/components/schemas/AzureCredentialInfo'
                  - $ref: '#/components/schemas/AzureCredentialInfoWithTenantId'
                  - $ref: '#/components/schemas/AzureCredentialInfoWithCertificate'
        '404':
          description: Not Found
      operationId: GetCredentialDetailsByName
      summary: Get Credential Details by name
      description: Get details of the credential whose credential name is provided
    delete:
      tags:
        - CredentialManager
      summary: Delete Credential ByName
      operationId: DeleteCredentialByName
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '404':
          description: Not Found
      description: Delete Credential whose name has been provided
    put:
      tags:
        - CredentialManager
      summary: Update Credential By Name
      operationId: UpdateCredentialByName
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
              examples:
                example-1:
                  value:
                    name: Credential1
                    accountType: LINUXACCOUNT
                    userAccount: xyz
                    newPassword: TmV3UGFzc3dvcmQ=
                    description: This is a description
                    security:
                      owner:
                        user:
                          id: 1
                      associations:
                        - userGroup:
                            id: 12
                          permissions:
                            permissionId: 218
                          isCreatorAssociation: false
                        - userGroup:
                            id: 30
                          permissions:
                            permissionId: 218
                          isCreatorAssociation: false
        '400':
          description: Bad Request
        '404':
          description: Not Found
      description: Edit credential whose name has been provided by credential owner
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/CredentialContent'
                - $ref: '#/components/schemas/CloudCredentialContent'
                - $ref: '#/components/schemas/CloudCredentialContentWithTokenId'
                - $ref: '#/components/schemas/CloudCredentialContentWithAPIKey'
                - $ref: '#/components/schemas/SalesforceCredentialContent'
                - $ref: '#/components/schemas/AmazonCredentialContent'
                - $ref: '#/components/schemas/AmazonCredentialContentWithRoleArn'
                - $ref: '#/components/schemas/AzureCredentialContent'
                - $ref: '#/components/schemas/AzureCredentialContentWithTenantId'
                - $ref: '#/components/schemas/AzureCredentialContentWithCertificate'
                - $ref: '#/components/schemas/GoogleCredentialContent'
                - $ref: '#/components/schemas/GoogleServiceAccountCredentialContent'
                - $ref: '#/components/schemas/OracleCredentialContent'
            examples:
              Linux Account:
                value:
                  newName: New Credential name
                  accountType: LINUXACCOUNT
                  userAccount: xyz
                  newPassword: TmV3UGFzc3dvZA==
                  description: New description for credential
  '/V5/Credential/{credentialId}':
    parameters:
      - schema:
          type: string
        name: credentialId
        x-terraform-id: true
        in: path
        required: true
    get:
      x-terraform-resource: Credential
      x-terraform-oneof-map:
        - schema: AmazonCredentialInfo
          resource: AWS
        - schema: AmazonCredentialInfoWithRoleArn
          resource: AWSWithRoleArn
        - schema: AzureCredentialInfo
          resource: Azure
        - schema: AzureCredentialInfoWithTenantId
          resource: AzureWithTenantId
      tags:
        - CredentialManager
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/CredentialInfo'
                  - $ref: '#/components/schemas/CloudCredentialInfo'
                  - $ref: '#/components/schemas/CloudCredentialInfoWithTokenId'
                  - $ref: '#/components/schemas/CloudCredentialInfoWithAPIKey'
                  - $ref: '#/components/schemas/SalesforceCredentialInfo'
                  - $ref: '#/components/schemas/AmazonCredentialInfo'
                  - $ref: '#/components/schemas/AmazonCredentialInfoWithRoleArn'
                  - $ref: '#/components/schemas/AzureCredentialInfo'
                  - $ref: '#/components/schemas/AzureCredentialInfoWithTenantId'
                  - $ref: '#/components/schemas/AzureCredentialInfoWithCertificate'
        '404':
          description: Not Found
      operationId: GetCredentialDetails
      summary: Get Credential Details
      description: Get details of the credential whose credential id is provided
    delete:
      x-terraform-resource: Credential
      tags:
        - CredentialManager
      summary: Delete Credential
      operationId: DeleteCredential
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '404':
          description: Not Found
      description: Delete Credential whose id has been provided
    put:
      x-terraform-resource: Credential
      x-terraform-function: handler.UpdateCredential
      x-terraform-always-update: true
      x-terraform-oneof-map:
        - schema: AmazonCredentialContent
          resource: AWS
        - schema: AmazonCredentialContentWithRoleArn
          resource: AWSWithRoleArn
        - schema: AzureCredentialContent
          resource: Azure
        - schema: AzureCredentialContentWithTenantId
          resource: AzureWithTenantId
      tags:
        - CredentialManager
      summary: Update Credential
      operationId: UpdateCredential
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
              examples:
                example-1:
                  value:
                    name: Credential1
                    accountType: LINUXACCOUNT
                    userAccount: xyz
                    newPassword: TmV3UGFzc3dvcmQ=
                    description: This is a description
                    security:
                      owner:
                        user:
                          id: 1
                      associations:
                        - userGroup:
                            id: 12
                          permissions:
                            permissionId: 218
                          isCreatorAssociation: false
                        - userGroup:
                            id: 30
                          permissions:
                            permissionId: 218
                          isCreatorAssociation: false
        '400':
          description: Bad Request
        '404':
          description: Not Found
      description: Edit credential whose id has been provided by credential owner
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/CredentialContent'
                - $ref: '#/components/schemas/CloudCredentialContent'
                - $ref: '#/components/schemas/CloudCredentialContentWithTokenId'
                - $ref: '#/components/schemas/CloudCredentialContentWithAPIKey'
                - $ref: '#/components/schemas/SalesforceCredentialContent'
                - $ref: '#/components/schemas/AmazonCredentialContent'
                - $ref: '#/components/schemas/AmazonCredentialContentWithRoleArn'
                - $ref: '#/components/schemas/AzureCredentialContent'
                - $ref: '#/components/schemas/AzureCredentialContentWithTenantId'
                - $ref: '#/components/schemas/AzureCredentialContentWithCertificate'
                - $ref: '#/components/schemas/GoogleCredentialContent'
                - $ref: '#/components/schemas/GoogleServiceAccountCredentialContent'
                - $ref: '#/components/schemas/OracleCredentialContent'
  '/V4/Company/{companyId}/Servers':
    get:
      parameters:
        - name: companyId
          in: path
          description: Id of the Company whose servers(with no packages) have to be fetched
          required: true
          schema:
            type: integer
            format: int32
      summary: ' API to get list of servers with no packages for a company'
      tags:
        - Company
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPseudoClientsForCompanyResp'
      operationId: GetServersForCompany
      description: API to get list of servers with no packages for a company
  '/V4/Company/{companyId}/associations':
    get:
      parameters:
        - name: companyId
          in: path
          description: Id of the Company whose associations have to be fetched
          required: true
          schema:
            type: integer
            format: int32
      summary: API to get list of association for a company
      tags:
        - Company
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAssociationsForCompanyResp'
              example:
                associatedEntities:
                  - name: client1
                    id: 31
                  - name: client2
                    id: 443
        '400':
          description: Bad Request
        '404':
          description: Requested Details not found
        '503':
          description: Service unavailable
      operationId: GetAssociationsForCompany
      description: API to get list of association for a company
  /V4/RecoveryTargets:
    get:
      summary: Get Recovery Target List
      tags:
        - RecoveryTarget
        - Cleanroom Targets
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRecoveryTargetListResponse'
        '404':
          description: Requested details not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      operationId: GetRecoveryTargets
      description: Get the list of recovery targets
  '/V4/RecoveryTarget/{recoveryTargetId}':
    delete:
      summary: Delete existing Recovery Target
      tags:
        - RecoveryTarget
        - Cleanroom Targets
      operationId: DeleteRecoveryTarget
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '404':
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '503':
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      description: To delete an exisitng recovery target
    parameters:
      - schema:
          type: integer
          format: int32
        name: recoveryTargetId
        in: path
        required: true
        description: id of recovery target
    get:
      summary: Get an existing recovery target details
      operationId: GetRecoveryTarget
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  RecoveryTarget:
                    $ref: '#/components/schemas/RecoveryTargetDetails'
        '404':
          description: ' Not found - Unable to fetch recovery target details'
        '503':
          description: Service Unavailable
      description: To get recovery target details by ID
      parameters:
        - schema:
            type: integer
            format: int32
          in: path
          name: recoveryTargetId
          description: id of recovery target
          required: true
      tags:
        - RecoveryTarget
        - Cleanroom Targets
  '/V4/VM/{vmGUID}/Action/Renew':
    parameters:
      - schema:
          type: string
        name: vmGUID
        in: path
        description: GUID of the Provisioned VM
        required: true
    post:
      summary: Renew provisioned virtual machine
      operationId: PostVmActionRenew
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
              examples:
                example-1:
                  value:
                    errorMessage: ''
                    errorCode: 0
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
              examples:
                example-1:
                  value:
                    errorMessage: 'Unable to find VM details for guid [5036d065-b189-526a-156c-ad1b905cbfbb]'
                    errorCode: -1
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
              examples:
                example-1:
                  value:
                    errorMessage: Virtual machine provisioning operation failed with unknown error. Try this operation after some time.
                    errorCode: -1
                example-2:
                  value:
                    errorMessage: No expiration time provided for renew operation
                    errorCode: -1
      description: Renew the VM with the provided timestamp.
      tags:
        - VMProvisioning
        - HIDDEN
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                time:
                  type: integer
                  format: int64
            examples:
              example-1:
                value:
                  time: 1650538241
        description: The renewal timestamp has to be provided in unix format.
  '/V4/VM/{vmGUID}/Action/Refresh':
    parameters:
      - schema:
          type: string
        name: vmGUID
        in: path
        description: GUID of the Provisioned VM
        required: true
    post:
      summary: Refresh the provisioned virtual machine
      operationId: PostVmActionRefresh
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
              examples:
                example-1:
                  value:
                    errorMessage: ''
                    errorCode: 0
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
              examples:
                example-1:
                  value:
                    errorMessage: 'Unable to find VM details for guid [5036d065-b189-526a-156c-ad1b905cbfbb]'
                    errorCode: -1
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
              examples:
                example-1:
                  value:
                    errorMessage: Virtual machine provisioning operation failed with unknown error. Try this operation after some time.
                    errorCode: -1
      description: Refreshes the VM.
      tags:
        - VMProvisioning
        - HIDDEN
  '/V4/VM/{vmGUID}/Action/Delete':
    parameters:
      - schema:
          type: string
        name: vmGUID
        in: path
        description: GUID of the Provisioned VM
        required: true
    post:
      summary: Delete the provisioned virtual machine
      operationId: PostVmActionDelete
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
              examples:
                example-1:
                  value:
                    errorMessage: ''
                    errorCode: 0
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
              examples:
                example-1:
                  value:
                    errorMessage: 'Unable to find VM details for guid [5036d065-b189-526a-156c-ad1b905cbfbb]'
                    errorCode: -1
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
              examples:
                example-1:
                  value:
                    errorMessage: Virtual machine provisioning operation failed with unknown error. Try this operation after some time.
                    errorCode: -1
      description: Deletes the VM.
      tags:
        - VMProvisioning
        - HIDDEN
  /V4/IdentityServers:
    get:
      summary: Get Identity Servers
      tags:
        - IdentityServers
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityServersListResp'
      operationId: GetIdentityServers
      description: Get identity servers list
  '/V4/LDAP/{domainId}':
    get:
      summary: Get AD/LDAP Details
      tags:
        - IdentityServers
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ADLDAPDetails'
              examples:
                Active Directory:
                  value:
                    id: 85
                    name: domain.com
                    domainName: domain
                    directoryType: ACTIVE_DIRECTORY
                    credentials: username
                    company:
                      id: 0
                      name: Commcell
                    users: 0
                    userGroups: 1
                    baseDNForCardUsers: 'CN=Name,OU=Sales,OU=Employees,DC=dn,DC=domain,DC=com'
                    useSecureLDAP: false
                    enableSSO: true
                    accessViaClient: false
                Apple Directory Service:
                  value:
                    id: 85
                    name: domain.com
                    domainName: domain
                    directoryType: APPLE_DIRECTORY_SERVICE
                    credentials: username
                    company:
                      id: 0
                      name: Commcell
                    users: 10
                    userGroups: 2
                    accessViaClient: false
                LDAP Server:
                  value:
                    id: 74
                    name: domain.com
                    domainName: domain
                    directoryType: LDAP_SERVER
                    credentials: 'uid=admin,cn=users,cn=compat,dc=domain,dc=com'
                    company:
                      id: 0
                      name: Commcell
                    users: 10
                    userGroups: 5
                    accessViaClient: true
                    proxies:
                      - id: 2
                        name: client2
                    LDAPQueryParameters:
                      - id: 6
                        name: User group filter
                        value: (objectClass=groupofnames)
                        defaultValue: (objectClass=group)
                        isOverridden: true
                      - id: 7
                        name: User filter
                        value: (objectClass=posixaccount)
                        defaultValue: (&(objectCategory=User)(sAMAccountName=*))
                        isOverridden: true
                      - id: 9
                        name: Unique identifier
                        value: uid
                        defaultValue: sAMAccountName
                        isOverridden: true
                      - id: 10
                        name: base DN
                        value: 'cn=accounts,dc=domain,dc=com'
                        defaultValue: baseDN
                        isOverridden: true
                    attributeMap:
                      - id: 1
                        name: Object class
                        value: objectClass
                        defaultValue: objectClass
                        isOverridden: false
                      - id: 2
                        name: Common name
                        value: common name
                        defaultValue: cn
                        isOverridden: true
                      - id: 3
                        name: Email
                        value: mail
                        defaultValue: mail
                        isOverridden: false
                      - id: 4
                        name: GUID
                        value: objectGUID
                        defaultValue: objectGUID
                        isOverridden: false
                      - id: 5
                        name: Dns
                        value: dnsroot
                        defaultValue: dnsroot
                        isOverridden: false
                      - id: 11
                        name: Member user group
                        value: member
                        defaultValue: member
                        isOverridden: false
                      - id: 12
                        name: Member unique identifier
                        value: memberuid
                        defaultValue: memberuid
                        isOverridden: false
                Open LDAP:
                  value:
                    id: 58
                    name: domain.com
                    domainName: domain
                    directoryType: OPEN_LDAP
                    credentials: 'cn=user,dc=domain,dc=com'
                    company:
                      id: 1
                      name: Company1
                    users: 0
                    userGroups: 0
                    accessViaClient: true
                    proxies:
                      - id: 115
                        name: client115
                      - id: 2
                        name: client2
                Oracle Directory:
                  value:
                    id: 56
                    name: ODS.domain.com
                    domainName: domain
                    directoryType: ORACLE_DIRECTORY
                    credentials: 'cn=ODSUser1,dc=domain,dc=com'
                    company:
                      id: 2
                      name: Company2
                    users: 0
                    userGroups: 0
                    accessViaClient: false
      operationId: GetADLDAPDetails
      description: Get detail of the AD/LDAP domain
    parameters:
      - schema:
          type: integer
          format: int32
        name: domainId
        in: path
        required: true
        description: ID of the AD/LDAP domain
    put:
      summary: Update AD/LDAP
      operationId: UpdateADLDAP
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '400':
          description: Request body is empty or format is invalid.
      description: Update an AD/LDAP domain
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateADLDAP'
            examples:
              Active Directory:
                value:
                  directoryType: ACTIVE_DIRECTORY
                  NETBIOSName: domain
                  name: domain.com
                  username: username
                  password: cGFzc3dvcmQ=
                  baseDNForCardUsers: 'CN=Name,OU=Sales,OU=Employees,DC=dn,DC=domain,DC=com'
                  useSecureLDAP: true
                  enableSSO: true
                  accessViaClient: true
                  proxies:
                    - id: 1
                      name: client1
              Apple Directory Service:
                value:
                  directoryType: APPLE_DIRECTORY_SERVICE
                  OSXServerName: domain
                  name: domain.com
                  username: username
                  password: cGFzc3dvcmQ=
                  accessViaClient: false
              LDAP Server:
                value:
                  directoryType: LDAP_SERVER
                  host: domain
                  name: domain.com
                  username: username
                  password: cGFzc3dvcmQ=
                  accessViaClient: true
                  proxies:
                    - id: 1
                      name: client
                  LDAPQueryParameters:
                    - id: 6
                      name: User group filter
                      value: (objectClass=groupofnames)
                    - id: 7
                      name: User filter
                      value: (objectClass=posixaccount)
                    - id: 9
                      name: Unique identifier
                      value: sAMAccountName
                    - id: 10
                      name: base DN
                      value: 'cn=accounts,dc=domain,dc=com'
                  attributeMap:
                    - id: 2
                      name: Common name
                      value: common name
              Open LDAP:
                value:
                  directoryType: OPEN_LDAP
                  NETBIOSName: domain
                  name: domain.com
                  username: 'cn=user,dc=domain,dc=com'
                  password: cGFzc3dvcmQ=
                  accessViaClient: false
              Oracle Directory:
                value:
                  directoryType: ORACLE_DIRECTORY
                  NETBIOSName: ods
                  name: ods.domain.com
                  username: 'cn=user,dc=example,dc=com'
                  password: cGFzc3dvcmQ=
                  accessViaClient: false
        description: Properties of the domain to be updated
      tags:
        - IdentityServers
    delete:
      summary: Delete AD/LDAP
      operationId: DeleteADLDAP
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      description: Delete an AD/LDAP domain
      parameters:
        - schema:
            type: integer
          in: query
          name: transferToUserId
          description: Optionally transfer the ownership to user
        - schema:
            type: integer
          in: query
          name: transferToUserGroupId
          description: Optionally transfer the ownership to user group
      tags:
        - IdentityServers
  /V4/LDAP:
    post:
      summary: Create LDAP/Active directory for user authentication
      operationId: CreateLDAP
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      description: Create LDAP/Active directory for user authentication
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/ActiveDirectoryType'
                - $ref: '#/components/schemas/AppleDirectoryServiceType'
                - $ref: '#/components/schemas/LDAPServerType'
                - $ref: '#/components/schemas/OpenLDAPType'
                - $ref: '#/components/schemas/OracleDirectoryType'
              description: Five different directory types
            examples:
              Active directory:
                value:
                  directoryType: ACTIVE_DIRECTORY
                  NETBIOSName: TEST_NETBIOS
                  name: TEST_NETBIOS.company.com
                  username: testing_username
                  password: cGFzc3dvcmQK
                  useSecureLdap: false
                  enableSSO: false
              Apple directory service:
                value:
                  directoryType: APPLE_DIRECTORY_SERVICE
                  OSXServerName: HOST_NAME
                  name: TEST_NETBIOS.company.com
                  username: testing_username
                  password: cGFzc3dvcmQK
              LDAP server:
                value:
                  directoryType: LDAP_SERVER
                  host: HOST_NAME
                  username: testing_username
                  password: cGFzc3dvcmQK
                  LDAPQueryParameters:
                    baseDN: baseDN
                    uniqueIdentifier: sAMAccountName
                    userFilter: (&(objectCategory=User)(sAMAccountName=*))
                    userGroupFilter: (objectClass=group)
              Open LDAP:
                value:
                  directoryType: OPEN_LDAP
                  NETBIOSName: HOST_NAME
                  name: TEST_NETBIOS.company.com
                  username: testing_username
                  password: cGFzc3dvcmQK
                  proxies:
                    - id: 1
                      name: client1
                    - id: 2
                      name: client2
                    - id: 3
                      name: client3
        description: LDAP body request
      tags:
        - IdentityServers
  /V4/syslogServer:
    get:
      summary: Get Syslog Server Status
      tags:
        - SyslogServer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyslogStatus'
        '503':
          description: Service Unavailable
      operationId: GetSyslogStatus
      description: This endpoint returns the details of a syslog server.
    post:
      summary: Configure Syslog Server
      operationId: ConfigureSyslogStatus
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error
      description: This endpoint configures a syslog server.
      tags:
        - SyslogServer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SyslogConfigure'
  /V4/ServiceCommcells:
    get:
      summary: Get serviceCommcells
      tags:
        - ServiceCommcells
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  serviceCommcells:
                    type: array
                    items:
                      $ref: '#/components/schemas/ServiceCommcells'
        '503':
          description: Service Unavailable
      operationId: GetServiceCommcells
      description: Returns a list of Service Commcells
  /V4/RequestManager/Request:
    get:
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RMRequestList'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      operationId: RequestManagerRequestList
      description: Retrieves the list of Requests
      tags:
        - RequestManager
        - HIDDEN
      parameters:
        - schema:
            type: string
            enum:
              - SDG
              - FSO
          in: query
          name: createdFrom
          description: Source application of the request
        - schema:
            type: string
            enum:
              - CLIENT_ENTITY
              - SEA_DATASOURCE_ENTITY
              - EDISCOVERY_PROJECT_ENTITY
          in: query
          name: sourceEntityType
          description: Entity type of the source from which data is gathered for the request
        - schema:
            type: integer
            format: int32
            minimum: 1
          in: query
          name: sourceEntityId
          description: Entity id of the source from which data is gathered for the request
    post:
      summary: RequestManager - Create Request Operation
      operationId: RMCreateRequestOperation
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdName'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      description: Creating a request for request manager
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RMCreateRequest'
      tags:
        - RequestManager
        - HIDDEN
  '/V4/RequestManager/Request/{requestId}':
    parameters:
      - schema:
          type: integer
          format: int32
          minimum: 1
        name: requestId
        in: path
        required: true
        description: Unique identifier for the request
    delete:
      operationId: DeleteRequestManagerRequest
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      description: Deleting an existing request
      tags:
        - RequestManager
        - HIDDEN
    get:
      operationId: GetRequestDetails
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RMRequestDetails'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      tags:
        - RequestManager
        - HIDDEN
      description: Retrieve details of an existing request
      summary: Retrieve details of an existing request
  /V4/Plan/Rule/Rank:
    put:
      tags:
        - PlanRules
      summary: Update rank for multiple rules at a time.
      operationId: updatePlanRuleRank
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      description: API to update rank for multiple rules at a time.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePlanEntityRuleRanks'
        description: ''
  '/V4/Activate/Entity/{entityType}/{entityId}/Audit':
    parameters:
      - schema:
          type: integer
          format: int32
          minimum: 1
        name: entityType
        in: path
        required: true
        description: Type of the entity
      - schema:
          type: integer
          format: int32
          minimum: 1
        name: entityId
        in: path
        required: true
        description: Unique id for the entity
    get:
      tags:
        - Activate
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityAuditList'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      operationId: GetActivateEntityAuditList
      summary: Get Activate Entity Audit
      description: |-
        Retrieve the audit details for activate entities like clients, data sources, requests.
        Available entity types:
        3 - Client
        132 - Data source
        9515 - Request
  /V4/KeyManagementServers:
    get:
      tags:
        - KeyManagementServer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  KeyManagementServers:
                    type: array
                    items:
                      $ref: '#/components/schemas/KeyManagementServer'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      operationId: GetKeyManagementServers
      summary: Get Key Management Servers
      description: Get key management servers
  '/V4/KeyManagementServers/{kmsId}':
    delete:
      operationId: DeleteKeyManagementServers
      summary: Delete Key Management Server
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '404':
          description: Requested Details not found
      description: Delete key management server based on Id
      tags:
        - KeyManagementServer
    parameters:
      - schema:
          type: integer
        name: kmsId
        in: path
        required: true
        description: Id of Key Management Server
  /V4/ArrayReplicationMonitor:
    get:
      tags:
        - ReplicationMonitor
      summary: Get replication monitor information for array replication
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayReplicationMonitorResp'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      operationId: GetArrayReplicationMonitor
      description: Get Array Replication Pair information
      parameters:
        - schema:
            type: integer
            format: int32
          in: query
          name: failoverGroupId
          description: The ID of the failover group associated to array replication pairs
        - schema:
            type: integer
            format: int32
          in: query
          name: replicationId
          description: The ID of the array replication pair
  '/V4/ReplicationMonitor/{pairId}':
    parameters:
      - schema:
          type: integer
          format: int32
        name: pairId
        in: path
        required: true
    get:
      tags:
        - ReplicationMonitor
      summary: Get continuous replication pair details
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReplicationMonitorDetail'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      operationId: GetReplicationMonitorPairId
      description: Get Continuous Replication Pair Details
      parameters:
        - schema:
            type: boolean
          in: query
          name: additionalProperties
          description: To get extra meta data details for the api
  '/V4/ReplicationMonitor/{replicationPairId}/testFailoverMachines':
    parameters:
      - schema:
          type: integer
        name: replicationPairId
        in: path
        required: true
        description: Replication pair id of the Pair
    get:
      summary: Get testFailover machines from replication monitor
      tags:
        - ReplicationMonitor
      operationId: GetTestFailoverMachines
      description: View all TestFailover Machines of the replication pair using replicationPairId
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  virtualMachines:
                    uniqueItems: true
                    minItems: 1
                    type: array
                    items:
                      $ref: '#/components/schemas/TestFailoverMonitorMachines'
              examples:
                View test failover:
                  value:
                    virtualMachines:
                      - operatingSystem: Microsoft Windows Server 2012 (64-bit)
                        userCapabilities: 65535
                        numberOfDisks: 2
                        memory: 4096
                        flags: 101
                        isVirtualLabGateway: false
                        vmAllocPolicyId: 7
                        numberOfCPUs: 1
                        vmState: 0
                        modifiedTime: 1706545860
                        proxyClient:
                          clientId: 10
                        ipAddress:
                          subnet: 0
                          address: ''
                          family: 32
                        vmLocation:
                          hostName: hostname
                          dataCenterName: datacentername
                          vCenter: vCenterName
                        expirationTime: 1706549461
                        vm:
                          hostName: hostname
                          clientName: test_rpstore15DRVM-Clone-7970
                          vmName: test_rpstore15DRVM-Clone-7970
                          clientId: 50
                          vmGUID: 8503c555-e8fa-4612-8295-bfaf2cca74de
                        creationTime: 1706545859
                        lastPowerOnTime: 0
                        creator:
                          userGUID: 78E3E37C-CA88-4AD4-85E4-AEF48E943D73
                          userName: Tempadmin
                          userId: 12
                        instanceTypeEntity: ''
                        advancedProperties:
                          connectionString: ''
                          additionalFlags: 3
                        entity:
                          instanceId: 3
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
  /V4/AccessControl:
    get:
      summary: Get Access Control Details
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessControl'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      operationId: getAccessControl
      description: Gets owner permissions and laptop ownership details
      tags:
        - AccessControl
    put:
      summary: Modify Access Control
      operationId: putAccessControl
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      description: Updates owner permissions and/or automatic laptop ownership assignment
      tags:
        - AccessControl
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccessControl'
  /V4/License:
    get:
      tags:
        - License
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LicenseInfo'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      operationId: GetLicenseInfo
      summary: Get License Info
      description: This endpoint returns license information
  '/V4/RequestManager/Request/{requestId}/Projects':
    parameters:
      - schema:
          type: integer
          format: int32
          minimum: 1
        name: requestId
        in: path
        required: true
        description: Unique request id
    get:
      tags:
        - RequestManager
        - HIDDEN
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RMProjectsList'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      operationId: GetProjectsForRequest
      description: Retrieve list of projects for the request
  '/V4/RequestManager/Request/{requestId}/Configure':
    parameters:
      - schema:
          type: integer
          format: int32
          minimum: 1
        name: requestId
        in: path
        required: true
    put:
      summary: RequestManager - Configure Request Operation
      operationId: RMConfigureRequestOperation
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      description: Configure a created request
      tags:
        - RequestManager
        - HIDDEN
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RMConfigureRequest'
  '/V4/Hypervisor/{hypervisorId}/AccessNode':
    put:
      tags:
        - Hypervisor Operations
      description: Endpoint to Change the Access Node
      summary: Change the Access Node for Hypervisor
      operationId: setHypervisorAccessNode
      parameters:
        - schema:
            type: integer
          name: hypervisorId
          in: path
          description: Hypervisor ID to update the Access Node
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                accessNode:
                  $ref: '#/components/schemas/IdName'
      responses:
        '200':
          description: OK
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
  '/V4/Hypervisor/{hypervisorId}/FBR':
    put:
      tags:
        - VirtualMachines
      parameters:
        - schema:
            type: string
          name: hypervisorId
          in: path
          required: true
          description: Linux Media Agent to set as FBR for  linux File based restores
      operationId: SetHypervisorFBR
      description: Endpoint to set FBR
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                FBRMA:
                  $ref: '#/components/schemas/IdName'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateHypervisorResp'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
  /V4/AccessNodes:
    get:
      summary: Get Access Nodes
      tags:
        - VirtualMachines
      description: Endpoint to get the list of access nodes
      parameters:
        - schema:
            type: string
          in: query
          name: vendor
          description: Vendor Name to be filtered
        - schema:
            type: integer
          in: query
          name: userId
          description: user id to be filtered
      operationId: getAccessNodes
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/accessNodesList'
  '/V4/Servers/{serverId}/Role/MediaAgent':
    parameters:
      - schema:
          type: integer
          format: int32
        name: serverId
        in: path
        required: true
        description: serverId of the client for which the MA role needs to be added
    put:
      summary: Add Media Agent License for a Client
      tags:
        - Servers
      operationId: addMediaAgentRole
      responses:
        '200':
          description: MA role added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      description: Put call to consume ma license for a client
  /V4/Plan/Rule/Entities/Associate:
    put:
      summary: Associate workloads to selected plan and plan rule
      tags:
        - PlanRules
      operationId: PutPlanRuleEntitiesAssociate
      responses:
        '200':
          description: OK
        '500':
          description: Internal Server Error in case of any failure
      description: API to associate workloads to selected plan and plan rule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssociatePlanRuleEntityList'
        description: ''
  /V4/Plan/Rule/Entities/Include:
    put:
      summary: Include workloads to be applicable for plan rule evaluation.
      tags:
        - PlanRules
      operationId: PutPlanRuleEntitiesInclude
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '403':
          description: Forbidden in case of no access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error in case of any error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      description: API to include workloads to be applicable for plan rule evaluation.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IncludeEntitiesForPlanRuleEvaluation'
  /V4/Plan/Rule/Entities/Exclude:
    put:
      summary: Exclude workloads from plan rule evaluation framework
      tags:
        - PlanRules
      operationId: PutPlanRuleEntitiesExclude
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '403':
          description: Forbidden in case of no access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error in case of any error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      description: API to exclude workloads from plan rule evaluation framework
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExcludeEntitiesFromPlanRuleEvaluation'
    get:
      summary: Get excluded workloads from plan rule evaluation framework
      tags:
        - PlanRules
      operationId: GetPlanRuleEntitiesExclude
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanRuleExcludedEntitiesList'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      description: API to get excluded workloads from plan rule evaluation framework
  /V4/Plan/Rule/Settings:
    get:
      summary: Fetch plan rule execution settings
      tags:
        - PlanRules
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanRuleExecutionSettings'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      operationId: GetPlanRuleSettings
      description: Fetch plan rule execution settings
    put:
      summary: Put PlanRuleSettings
      tags:
        - PlanRules
      operationId: PutPlanRuleSettings
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error in case of wrong value being supplied.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      description: API to set plan rule execution settings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlanRuleExecutionSettings'
  /V4/VmGroup/Preview:
    post:
      tags:
        - VM Group Operations
      operationId: vmGroupPreview
      summary: Preview VM Group
      description: Preview of the vm to be protected in VMGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vmGroupPreviewReq'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vmGroupPreviewResp'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericRespWithWarning'
      parameters:
        - schema:
            type: integer
          in: query
          name: hypervisorId
          description: Hypervisor Id of VMGroup
        - schema:
            type: string
          in: query
          name: vmgroupId
          description: Id of VMGroup
  /V4/Storage/DistributedStorage:
    get:
      summary: Get Distributed Storages
      tags:
        - DistributedStorage
        - HIDDEN
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DistributedStorageListResp'
      operationId: GetDistributedStorages
      description: Get the list of distributed storages
  /V4/AlertDefinitions:
    get:
      summary: Get the list of Alert Definitions
      tags:
        - Alerts
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertDefinitionsList'
        '500':
          description: Internal Server Error
      operationId: GetAlertDefinitionsList
      description: Get the list of Alert Definitions
      parameters:
        - schema:
            type: boolean
          in: query
          name: additionalProperties
          description: To get extra meta data details for the api
    post:
      summary: Create Alert Definitions
      operationId: CreateAlertDefinitions
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdNameGUID'
        '500':
          description: Internal Server Error
      tags:
        - Alerts
      description: Create Alert Definitions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlertDefinitonsCreate'
  '/V4/TriggeredAlerts/{id}':
    parameters:
      - schema:
          type: integer
          format: int32
        name: id
        in: path
        required: true
    get:
      summary: Get details of triggered alert
      tags:
        - Alerts
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TriggeredAlertsDetails'
        '500':
          description: Internal Server Error
      operationId: GetTriggeredAlertDetails
      description: Get details of triggered alert
    delete:
      operationId: DeleteTriggeredAlerts
      summary: Delete Triggered Alerts
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
      tags:
        - Alerts
      description: Delete Triggered Alerts
  '/V4/TriggeredAlerts/{id}/Pin':
    parameters:
      - schema:
          type: integer
          format: int32
        name: id
        in: path
        required: true
    put:
      summary: Pin TriggeredAlerts
      operationId: PinTriggeredAlerts
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
      description: Pin triggered alerts
      tags:
        - Alerts
  '/V4/TriggeredAlerts/{id}/Unpin':
    parameters:
      - schema:
          type: integer
          format: int32
        name: id
        in: path
        required: true
    put:
      summary: Unpin Triggered Alerts
      operationId: UnpinTriggeredAlerts
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
      description: Unpin triggered alerts
      tags:
        - Alerts
  '/V4/TriggeredAlerts/{id}/Read':
    parameters:
      - schema:
          type: integer
          format: int32
        name: id
        in: path
        required: true
    put:
      summary:  Read Triggered Alerts
      operationId: ReadTriggeredAlerts
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
      description: Mark a triggered alert as read
      tags:
        - Alerts
  '/V4/TriggeredAlerts/{id}/Unread':
    parameters:
      - schema:
          type: integer
          format: int32
        name: id
        in: path
        required: true
    put:
      summary: Unread TriggeredAlerts
      operationId: UnreadTriggeredAlerts
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
      description: Mark a triggered alert as unread
      tags:
        - Alerts
  '/V4/TriggeredAlerts/{id}/Notes':
    parameters:
      - schema:
          type: integer
          format: int32
        name: id
        in: path
        required: true
    put:
      summary: Modify Triggered AlertsNotes
      operationId: ModifyTriggeredAlertsNotes
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
      description: 'Add, Modify and Delete notes for triggered alerts'
      tags:
        - Alerts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTriggeredAlertsNotes'
  '/V4/AlertDefinitions/{id}':
    parameters:
      - schema:
          type: integer
          format: int32
        name: id
        in: path
        required: true
    delete:
      summary: Delete AlertDefinitions
      operationId: DeleteAlertDefinitions
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
      description: Delete alert definitions
      tags:
        - Alerts
    get:
      summary: Get Alert DefinitionsDetails
      operationId: GetAlertDefinitionsDetails
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertDefinitionsDetails'
        '500':
          description: Internal Server Error
      description: Get details of alert definition
      parameters:
        - schema:
            type: boolean
          in: query
          name: additionalProperties
      tags:
        - Alerts
    put:
      summary: Edit Alert Definitions
      operationId: EditAlertDefinitions
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
      description: Edit Alert Definition details
      tags:
        - Alerts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlertDefinitionsEdit'
  '/V4/AlertDefinitions/{id}/Enable':
    parameters:
      - schema:
          type: integer
          format: int32
        name: id
        in: path
        required: true
    put:
      summary: Enable Alert Definitions
      operationId: EnableAlertDefinitions
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
      tags:
        - Alerts
      description: Enable Alert Definitions
  '/V4/AlertDefinitions/{id}/Disable':
    parameters:
      - schema:
          type: integer
          format: int32
        name: id
        in: path
        required: true
    put:
      summary: Disable Alert Definitions
      operationId: DisableAlertDefinitions
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
      tags:
        - Alerts
      description: Disable Alert Definition
  /V4/TriggeredAlerts/Action/Delete:
    put:
      operationId: DeleteMultipleTriggeredalerts
      summary: Delete Multiple Triggered alerts
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
      description: Delete multiple triggered alerts
      tags:
        - Alerts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlertIds'
  /V4/AnomalousConditions:
    get:
      summary: get AnomalousConditions
      tags:
        - AnomalousConditions
        - HIDDEN
      operationId: get-AnomalousConditions
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  anomalousConditions:
                    type: array
                    description: This has collection of various anomalous conditions
                    items:
                      $ref: '#/components/schemas/AnomalousConditionInfo'
      description: 'Get various anomalous conditions like events, jobs, offline clients, high CPU and memory loaded clients'
      parameters:
        - schema:
            type: string
          in: query
          name: fromTime
          description: unix time stamp denotes from which the anomalous events should be retrieved
          required: true
  '/V4/SchedulePolicy/{schedulePolicyId}/Schedule/{scheduleId}/Pattern':
    parameters:
      - schema:
          type: string
        name: schedulePolicyId
        in: path
        required: true
      - schema:
          type: string
        name: scheduleId
        in: path
        required: true
    put:
      summary: Modify Schedule Pattern of Schedule Policy
      operationId: modifySchedulePattern
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      description: API to update pattern for schedule in schedule policy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlanPattern'
        description: ''
      tags:
        - Schedule
  /V4/LaptopOwnerMapping:
    get:
      summary: Get LaptopOwner Mapping
      tags:
        - LaptopOwnerMapping
        - HIDDEN
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LaptopOwnerMapping'
              examples:
                example-1:
                  value:
                    laptopOwnerMapping:
                      - id: 1
                        serialNumber: D57946E7-02DB-4596-8B59-FA9D80C023ED
                        laptopName: laptop1
                        host: 1.1.1.1
                        ownerEmail: a@b.com
                        ownerUPN: string
                        osType: MAC
                        company:
                          id: 1
                          name: Company1
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      operationId: GetLaptopOwnerMapping
      description: API to get the list of laptop owner mappings
      parameters:
        - schema:
            type: integer
            format: int32
          in: query
          name: companyId
          description: Id of the company for which the laptop owner mapping needs to be returned
    post:
      summary: Create laptop owner mappings
      tags:
        - LaptopOwnerMapping
        - HIDDEN
      operationId: PostLaptopOwnerMapping
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      description: API to create laptop owner mappings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateLaptopOwnerMapping'
            examples:
              example-1:
                value:
                  laptopOwnerMapping:
                    - serialNumber: D57946E7-02DB-4596-8B59-FA9D80C023EC
                      laptopName: laptop1
                      host: 1.1.1.1
                      ownerEmail: a@b.com
                      ownerUPN: string
                      osType: MAC
                      company:
                        id: 1
                        name: company1
        description: List of laptop owner mappings to be added
    put:
      summary: Update existing laptop owner mapping
      tags:
        - LaptopOwnerMapping
        - HIDDEN
      operationId: PutLaptopOwnerMapping
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      description: API to update existing laptop owner mapping
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LaptopOwnerMapping'
            examples:
              example-1:
                value:
                  laptopOwnerMapping:
                    - id: 21
                      serialNumber: D57946E7-02DB-4596-8B59-FA9D80C023ED
                      laptopName: laptop1
                      host: 1.1.1.1
                      ownerEmail: a@b.com
                      ownerUPN: a@b.com
                      osType: MAC
                      company:
                        id: 1
                        name: company1
        description: List of laptop owner mappings to update.
  /V4/LaptopOwnerMapping/action/Assign:
    put:
      summary: Put LaptopOwner Mapping Action Assign
      tags:
        - LaptopOwnerMapping
        - HIDDEN
      operationId: PutLaptopOwnerMappingActionAssign
      parameters:
        - name: companyId
          in: query
          description: Id of the company that this operation will be performed for
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      description: API to assign users specified in device owner mapping as owners of laptops presented in the request body.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssignLaptopOwnerMappingReq'
        description: Assign owners to laptops in the request.
  /V4/LaptopOwnerMapping/action/delete:
    put:
      summary: delete multiple laptopowner mappings
      tags:
        - LaptopOwnerMapping
        - HIDDEN
      operationId: DeleteBulkLaptopOwnerMappingActionDelete
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      description: API is used to delete multiple laptopowner mappings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteLaptopOwnerMapping'
            examples:
              example-1:
                value:
                  laptopOwnerMapping:
                    - 1
                    - 2
                    - 3
        description: List of laptop owner mappings ids which needs to be deleted
  /V4/CommCell/Agents:
    get:
      summary: Gets a list of all the agents configured for a user
      tags:
        - Agent
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAllApplicableAgentResp'
              examples:
                example-1:
                  value:
                    agentDetails:
                      - appTypeId: 33
                        appTypeName: File System
        '500':
          description: Internal Server Error
      operationId: getConfiguredAgents
      description: To get a list of all the agents configured for a user
  /V4/Tags/AssociatedEntities:
    get:
      summary: Get list of tags and count of its associated entities
      tags:
        - EntityTag
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAssociatedEntitiesResponse'
              examples:
                example-1:
                  value:
                    tagSetInfo:
                      id: 738
                      GUID: 59DBD39D-26DE-435E-8EEA-F8E1A2E0A5CA
                      name: Default Tag set
                    tags:
                      - id: 742
                        name: BRAND
                        count: 1
                        associatedEntities:
                          - id: 20
                            name: CVLT
                            type: '61'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
              examples:
                example-1:
                  value:
                    errorMessage: Page not found
                    errorCode: 404
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
              examples:
                example-1:
                  value:
                    errorMessage: Service unavailable
                    errorCode: 503
      operationId: getTagAssociatedEntities
      parameters:
        - schema:
            type: integer
            format: int32
          in: query
          name: tagId
          description: Id of the tag whose associated entities details needs to be returned
      description: Returns list of tags for the logged in user's default entity tag set along with count of associated entities
  /V4/CompareXML:
    post:
      tags:
        - DeveloperTools
        - HIDDEN
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompareXMLReq'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompareXMLResp'
        '404':
          description: Comparision Details not found
      operationId: CompareXmls
      description: Compare old and new XMl or objects
  /V4/ServerGroup/{serverGroupId}/DCPlan:
    parameters:
      - schema:
          type: string
        name: serverGroupId
        in: path
        required: true
    get:
      tags:
        - ServerGroup
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdName'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      operationId: getServerGroupDCPlan
      summary: Get ServerGroup DC Plan
      description: API to fetch DC plan associated to server group
    put:
      summary: Associate specific plan to servergroup
      operationId: putServerGroupDCPlan
      tags:
        - ServerGroup
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      description: API to associate data classification plan to servergroup
      x-hidden-description: |
        This is used to associated data classfiication plan to a servergroup. This can't be used for vm operations.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdName'
        description: DC Plan id and name
    delete:
      summary: Remove associated DC plan from server group
      operationId: deleteServerGroupDCPlan
      tags:
        - ServerGroup
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      description: Api to remove associated DC plan from server group
      parameters:
        - schema:
            type: boolean
          in: query
          name: removeChildAssociations
          description: 'Optional parameter. To be set only in case, if caller want to leave child association as-is and decouple them from server group'
  /V4/Company/{companyId}/LaptopAdmins:
    parameters:
      - schema:
          type: string
        name: companyId
        in: path
        required: true
    get:
      tags:
        - Company
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLaptopAdminsResp'
      operationId: GetCompanyLaptopAdmins
      description: Get a company's laptop admins.
      summary: Get a company's laptop admins.
    put:
      tags:
        - Company
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateLaptopAdminsResp'
      operationId: UpdateCompanyLaptopAdmins
      description: Update a company's laptop admins.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateLaptopAdminsReq'
        description: List of users or user groups and operation type
  /V4/InventoryManager/Inventory:
    post:
      summary: Creating a new inventory
      operationId: CreateInventory
      description: Creating a new inventory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InventoryCreateRequest'
      tags:
        - InventoryManager
        - HIDDEN
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdName'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
    get:
      summary: Retrieve the list of inventories
      operationId: GetInventoryList
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryList'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      description: Retrieve the list of inventories
      tags:
        - InventoryManager
        - HIDDEN
  '/V4/InventoryManager/Inventory/{inventoryId}/Assets':
    parameters:
      - schema:
          type: integer
          format: int32
        name: inventoryId
        in: path
        description: Inventory id
        required: true
    put:
      summary: Adding a new asset to the inventory
      operationId: AddInventoryAsset
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      tags:
        - InventoryManager
        - HIDDEN
      description: Adding a new asset to the inventory
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/FileServerAsset'
                - $ref: '#/components/schemas/IdentityServerAsset'
                - $ref: '#/components/schemas/ObjectStorageAsset'
    get:
      summary: GetInventoryAssetList
      operationId: GetInventoryAssetList
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryAssetList'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      tags:
        - InventoryManager
        - HIDDEN
      description: Get the list of assets associated to the inventory
  '/V4/InventoryManager/{indexServerClientId}/Default':
    parameters:
      - schema:
          type: integer
          format: int32
        name: indexServerClientId
        in: path
        required: true
        description: Pseudo client id of the index server
    get:
      summary: GetDefaultInventory
      tags:
        - InventoryManager
        - HIDDEN
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryDetails'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      operationId: GetDefaultInventory
      description: Fetch the default inventory associated to the index server
      x-internal: true
      parameters:
        - schema:
            type: boolean
          in: query
          name: createIfAbsent
          description: Create the default inventory if it is missing for the index server
  '/V4/InventoryManager/Inventory/{inventoryId}':
    parameters:
      - schema:
          type: integer
          format: int32
        name: inventoryId
        in: path
        required: true
    get:
      summary: Get inventory details
      tags:
        - InventoryManager
        - HIDDEN
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryDetails'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      operationId: GetInventoryDetails
      description: Get inventory details
    delete:
      summary: Deleting an inventory
      operationId: DeleteInventory
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      description: Deleting an inventory
      tags:
        - InventoryManager
        - HIDDEN
  /V4/RecoveryPointStores:
    get:
      summary: Get RecoveryPoint StoreList
      tags:
        - Recovery Point Stores
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RPStoreListResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      operationId: GetRecoveryPointStoreList
      description: Get the list of recovery point stores.
  '/V4/InventoryManager/Inventory/{inventoryId}/Assets/{assetId}':
    parameters:
      - schema:
          type: integer
          format: int32
        name: inventoryId
        in: path
        required: true
      - schema:
          type: string
        name: assetId
        in: path
        required: true
        description: FQDN of the asset
    get:
      summary: GetInventoryAssetDetails
      tags:
        - InventoryManager
        - HIDDEN
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryAssetDetails'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      operationId: GetInventoryAssetDetails
      description: Get the details of inventory asset
    delete:
      summary: DeleteInventoryAsset
      operationId: DeleteInventoryAsset
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      tags:
        - InventoryManager
        - HIDDEN
      description: Delete the inventory asset
  '/V4/EntityTags/{tagId}':
    delete:
      summary: Delete tag from the entity tag list
      operationId: DeleteEntityTag
      tags:
        - EntityTag
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
              examples:
                example-1:
                  value:
                    errorMessage: ''
                    errorCode: 0
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      description: Used to delete tag from the entity tag list
    parameters:
      - schema:
          type: integer
          format: int32
        name: tagId
        in: path
        required: true
        description: Id of the tag to delete
  /V4/LaptopOwnerMapping/Preview:
    get:
      tags:
        - LaptopOwnerMapping
        - HIDDEN
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LaptopOwnerMapping'
              examples:
                example-1:
                  value:
                    laptopOwnerMapping:
                      - id: 0
                        serialNumber: 0f6f5c09-a58f-4b3e-aa00-fb94b3843101
                        laptopName: AbhiCV365Proxy2
                        host: AbhiCV365Proxy2
                        ownerEmail: a@b.com
                        ownerUPN: a@b.com
                        osType: MAC
                        company:
                          id: 0
                          name: Commcell
                    error:
                      errorMessage: ''
                      errorCode: 0
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
              examples:
                example-1:
                  value:
                    errorMessage: Bad request
                    errorCode: 400
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
              examples:
                example-1:
                  value:
                    errorMessage: Forbidden
                    errorCode: 403
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
              examples:
                example-1:
                  value:
                    errorMessage: Page not found
                    errorCode: 404
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
              examples:
                example-1:
                  value:
                    errorMessage: Services unavilable
                    errorCode: 0
      operationId: GetV4LaptopOwnerMappingPreview
      description: Gives list of valid laptop owner mapping in the response
  '/V4/StorageArrays/{arrayId}/Snaps':
    parameters:
      - schema:
          type: integer
          format: int32
        name: arrayId
        in: path
        required: true
    get:
      summary: List Snapshots of Storage Array
      operationId: ListSnapshots
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  snaps:
                    type: array
                    items:
                      $ref: '#/components/schemas/ListSnapshots'
              examples:
                Example 1:
                  value:
                    snaps:
                      - smVolumeId: 8834
                        arrayId: 16
                        arrayName: xxx.xx.xx.xx
                        sourceClientId: 3
                        sourceClientName: Client_name
                        sourcePath: /path
                        mountHostId: 0
                        mountHostName: ''
                        mountPath: ''
                        appTypeId: 29
                        appTypeName: Linux File System
                        masterJobId: 0
                        jobId: 12345
                        creationTime: 123456789
                        mountStatusId: 98
                        mountStatusName: Failed to delete
                        mountStatusUpdateTime: 123456789
                        snapshotType: 1
                        capabilities: 1564369309
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      tags:
        - Snapshot Operations
      description: Listing Snapshot of a particular array
  '/V4/StorageArrays/Job/{jobId}/Snaps':
    parameters:
      - schema:
          type: integer
          format: int32
        name: jobId
        in: path
        required: true
    get:
      summary: Get Snaps for a Job
      tags:
        - Snapshot Operations
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  snaps:
                    type: array
                    items:
                      $ref: '#/components/schemas/ListSnapshots'
              examples:
                Example 1:
                  value:
                    snaps:
                      - smVolumeId: 8834
                        arrayId: 16
                        arrayName: xxx.xx.xx.xx
                        sourceClientId: 3
                        sourceClientName: Client_name
                        sourcePath: /path
                        mountHostId: 0
                        mountHostName: ''
                        mountPath: ''
                        appTypeId: 29
                        appTypeName: Linux File System
                        masterJobId: 0
                        jobId: 12345
                        creationTime: 123456789
                        mountStatusId: 98
                        mountStatusName: Failed to delete
                        mountStatusUpdateTime: 123456789
                        snapshotType: 1
                        capabilities: 1564369309
      operationId: SnapByJobs
      description: API to list snaps for a particular Job Id
      parameters:
        - schema:
            type: integer
            format: int32
            default: 2
          in: query
          name: commcellId
  /V4/StorageArrays:
    post:
      summary: Add Storage Array
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      operationId: createArray
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateArray'
        description: Request to create an Array
      tags:
        - Array Management
      description: Creating a Storage Array
    get:
      summary: List All Storage Arrays
      operationId: GetArrays
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetArraysResp'
        '400':
          description: Bad Request
      description: Get all storage arrays.
      tags:
        - Array Management
  '/V4/StorageArrays/{arrayId}':
    parameters:
      - schema:
          type: integer
          format: int32
        name: arrayId
        in: path
        required: true
    delete:
      summary: Deleting a Storage Array
      tags:
        - Array Management
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
              examples:
                Example 1:
                  value:
                    errorCode: 0
                    errorMessage: Array has been successfully deleted
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      operationId: DeleteArray
      description: Deleting a Storage Array
    get:
      summary: Get Storage Array Details
      operationId: GetArrayDetails
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayDetails'
              examples:
                Example 1:
                  value:
                    labels:
                      name: string
                      controlHost: string
                      userName: string
                      password: string
                    general:
                      snapVendor:
                        id: 0
                        name: string
                      array:
                        id: 0
                        name: string
                      controlHost: string
                      credential:
                        userName: string
                        password: string
                      savedCredential:
                        id: 0
                        name: string
                      region:
                        id: 0
                        name: string
                      flags: 0
                      enableNetAppCloudAccount: true
                      arrayType: 0
                      cloudVendorId: 0
                      uniqueIdentifier: string
                      description: string
                    security:
                      user:
                        id: 0
                        name: string
                      userGroup:
                        id: 0
                        name: string
                      externalUserGroup:
                        id: 0
                        name: string
                        providerId: 0
                        providerName: string
                      isCreatorAssociation: true
                      role:
                        id: 0
                        name: string
                      permissionList:
                        - permissionId: 0
                          permissionName: string
                          categoryId: 0
                          categoryName: string
                          type: ALL_CATEGORIES
                          exclude: true
                    accessNodes:
                      - id: 0
                        name: string
                        displayName: string
                        pruning: true
                    availableAccessNodes:
                      - id: 0
                        name: string
                        displayName: string
                    snapConfigurations:
                      - masterConfigId: 0
                        name: string
                        type: 1
                        value: string
                        values:
                          - id: 0
                            name: string
                        flags: 0
                        description: string
                        isEnabled: true
                    serverGroups:
                      - id: 0
                        name: string
                        mediaAgentCount: 0
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      description: Getting Array Details
      tags:
        - Array Management
    put:
      summary: Edit Storage Array
      operationId: EditArray
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditArray'
      tags:
        - Array Management
      description: Editing Array details
  /V4/StorageArrays/Vendors:
    get:
      summary: List Snapshot Vendors
      tags:
        - Snapshot Configurations
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnapVendors'
        '400':
          description: Bad Request
      operationId: GetVendors
      description: Get all snap vendors
  '/V4/StorageArrays/Vendors/{vendorId}':
    parameters:
      - schema:
          type: integer
          format: int32
        name: vendorId
        in: path
        required: true
    get:
      summary: Get Snap Configs for storage Array vendor
      tags:
        - Snapshot Configurations
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSnapConfig'
        '400':
          description: Bad Request
      operationId: GetSnapConfig
      description: get snap config for vendor.
  '/V4/StorageArrays/{arrayId}/Client/{clientId}/Snap/Configs':
    parameters:
      - schema:
          type: integer
          format: int32
        name: arrayId
        in: path
        required: true
      - schema:
          type: integer
          format: int32
        name: clientId
        in: path
        required: true
    get:
      summary: Get Snap Configs for Storage Array at Client
      tags:
        - Snapshot Configurations
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnapConfigOverrideResp'
              examples:
                Example 1:
                  value:
                    copyId: 737181738171
                    subclientId: 737181738172
                    clientId: 737181738173
                    snapConfigurations:
                      - masterConfigId: 27
                        isOverridden: false
                        isEnabled: true
                        name: Mount Retry Interval (in seconds)
                        flags: 0
                        description: |-
                          <html><body><b>Name : </b>Mount Retry Interval (in seconds)<br/><b>Description : </b>

                                                          Specifies the time interval (in seconds) after which the <br/>

                                                          next mount operation will be attempted. 

                                                          The default value is 300.

                                                          <br/>

                                                          <b>Default Value : </b>300<br/><b>Range : </b>0 - 3600</body></html>
                        id: 131
                        type: 2
                        values:
                          - name: '1000'
      operationId: GetClientSnapConfigs
      description: API to fetch Snap configs for Storage Arrays at client level
    put:
      summary: Edit Client Snap Configs for Storage Arrays
      tags:
        - Snapshot Configurations
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      operationId: EditClientSnapConfigs
      description: API to edit Snap Configurations at Client Level
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SnapConfigOverrideEditReq'
  '/V4/StorageArrays/{arrayId}/Snaps/Recon':
    parameters:
      - schema:
          type: string
        name: arrayId
        in: path
        required: true
    put:
      summary: Reconcile Snapshots of Storage Array
      operationId: SnapReconWorkflow
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnapReconResp'
        '400':
          description: Bad Request
      description: Starts a workflow snap reconcile for array
      tags:
        - Snapshot Operations
  '/V4/Plan/BackupDestination/JobOperations':
    post:
      tags:
        - Plan
      summary: Job Operations
      operationId: RunJobOperationOnPlanBackupDestination
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobOperationOnCopyResp'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobOperationOnCopyReq'
        description: ''
      description: Run different job operations for a plan backup destination
  '/V4/Plan/BackupDestination/{backupDestinationId}/Jobs':
    parameters:
      - schema:
          type: integer
          format: int32
        name: backupDestinationId
        in: path
        required: true
        description: Id of the BackupDestination to fetch Job List.
    get:
      tags:
        - Plan
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetJobsOnStorageResp'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      operationId: GetJobsOnBackupDestination
      parameters:
        - schema:
            type: string
            default: last24Hours
          in: query
          name: view
          description: 'Time period selection for which to fetch jobs. Accepted values [last24Hours, lastWeek, lastMonth, last3Months, custom]. When custom is selected Jobs are filtered based on values provided in other params.'
        - schema:
            type: string
            example: '2,3'
          in: query
          name: clients
          description: Comma separated Client Ids to filter the jobs based on clients associated
        - schema:
            type: integer
            format: int32
          in: query
          name: agedData
          description: 'Aged Jobs selection. Accepted values [ 0 to exclude aged jobs, 1 to show only aged jobs, 2 to include aged jobs].'
        - schema:
            type: integer
            format: int32
          in: query
          name: backupLvl
          description: 'Job backup type filter. Accepted values [1=Full, 2=Incremental, 4=Differential, 8=All, 64=Synthetic full].'
        - schema:
            type: integer
            format: int32
          in: query
          name: copyState
          description: 'Filter jobs by data status. Accepted values [0  = show all, 1  = show available, 4  = show to be copied, 8  = show not to be copied, 16 = show extended retained].'
        - schema:
            type: integer
            format: int64
          in: query
          name: startTime
          description: Start time of the time range.
        - schema:
            type: integer
            format: int64
          in: query
          name: endTime
          description: End time of the time range.
        - schema:
            type: integer
            format: int64
          in: query
          name: minAppSizeMB
          description: 'Minimum size of job in Megabytes for application size range filter'
        - schema:
            type: integer
            format: int64
          in: query
          name: maxAppSizeMB
          description: 'Maximum size of job in Megabytes for application size range filter'
      description: Get the list of Jobs for selected backupDestinationId.
      summary: Get Jobs for a Backup Destination
  '/V4/Plan/BackupDestination/{backupDestinationId}/Clients':
    parameters:
      - schema:
          type: integer
          format: int32
        name: backupDestinationId
        in: path
        required: true
        description: Id of the BackupDestination.
    get:
      tags:
        - Plan
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientListForStorageResp'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      operationId: GetClientsForBackupDestination
      description: Get the list of clients associated with the BackupDestination.
      summary: Get clients associated with BackupDestination
  '/V4/InventoryManager/Inventory/{inventoryId}/Crawl':
    parameters:
      - schema:
          type: integer
          format: int32
        name: inventoryId
        in: path
        required: true
    put:
      summary: Run Backup Copy Job For Plan's backupdestination
      operationId: InventoryCrawl
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      tags:
        - InventoryManager
        - HIDDEN
      description: To start the data collection job on inventory
  '/V4/Server/{serverId}/Agent/{agentId}':
    parameters:
      - name: serverId
        in: path
        description: Id of the server to modify
        required: true
        schema:
          type: integer
          format: int32
      - name: agentId
        in: path
        description: Id of the agent to be modified
        required: true
        schema:
          type: integer
          format: int32
    delete:
      summary: delete an agent from a server
      operationId: DeleteAgent
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      tags:
        - Agent
      description: |-
        Used to delete an agent from a server
        It is expected that the agent has been deconfigured before performing delete operation.
        But internally if the agent is not deconfigured, then we force deconfigure it to proceed with delete operation
        Examples of supported agentIds are:
        33-File System,
        106-Virtual Server
  '/V4/InventoryManager/Inventory/{inventoryId}/Assets/{assetId}/jobs':
    parameters:
      - schema:
          type: integer
          format: int32
        name: inventoryId
        in: path
        required: true
      - schema:
          type: string
        name: assetId
        in: path
        required: true
        description: FQDN of the asset
    get:
      summary: Retrieve job history for identity server asset
      tags:
        - InventoryManager
        - HIDDEN
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasourceJobHistory'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      operationId: GetIdentityServerAssetJobHistory
      description: Retrieve job history for identity server asset
  '/V4/StorageArrays/{arrayId}/Snaps/Mount':
    parameters:
      - schema:
          type: integer
          format: int32
        name: arrayId
        in: path
        required: true
    post:
      summary: Mount Storage Array Snapshot
      tags:
        - Snapshot Operations
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnapReconResp'
              examples:
                Example 1:
                  value:
                    jobId: 11785
                    errorCode: 0
                    errorMessage: ''
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      operationId: SnapMount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MountReq'
        description: ''
      description: Mounting a snapshot from the Storage Array
  '/V4/StorageArrays/{arrayId}/Snaps/Unmount':
    parameters:
      - schema:
          type: integer
          format: int32
        name: arrayId
        in: path
        required: true
    post:
      summary: Unmount Snapshot of Storage Array
      tags:
        - Snapshot Operations
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnapReconResp'
              examples:
                Example 1:
                  value:
                    jobId: 11786
                    errorCode: 0
                    errorMessage: ''
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      operationId: SnapUnmount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnmountSnapReq'
      description: Unmounting a mounted Snapshot from Storage Array
  '/V4/StorageArrays/{arrayId}/Snaps/Delete':
    parameters:
      - schema:
          type: integer
          format: int32
        name: arrayId
        in: path
        required: true
    post:
      summary: Delete Storage Array Snapshot
      tags:
        - Snapshot Operations
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnapReconResp'
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      operationId: SnapDelete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteSnapReq'
      description: Deleting an unmounted or created snapshot from Storage Arrays
  '/V4/StorageArrays/{arrayId}/Snaps/Revert':
    parameters:
      - schema:
          type: integer
          format: int32
        name: arrayId
        in: path
        required: true
    post:
      summary: Revert Snapshot of Storage Array
      tags:
        - Snapshot Operations
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnapReconResp'
      operationId: SnapRevert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SnapRevertReq'
      description: Reverting a created or unmounted snapshot from the storage array
  '/V4/Tags/{tagId}/Values':
    get:
      summary: Get list of values for given tagId
      tags:
        - EntityTag
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagValueResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      operationId: getTagValuesForTagId
      description: Gives list of values for given tagId
    parameters:
      - schema:
          type: integer
          format: int32
        name: tagId
        in: path
        required: true
        description: Id of the tag name whose value is requested
    put:
      summary: Modify values for give tagId
      operationId: putValuesForTagId
      tags:
        - EntityTag
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      description: Modify values for give tagId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTagValueRequest'
  '/V4/Tags/{tagId}/TagValues/{tagValue}':
    parameters:
      - schema:
          type: integer
          format: int32
        name: tagId
        in: path
        required: true
        description: tag id
      - schema:
          type: string
        name: tagValue
        in: path
        required: true
        description: tag value to delete
    delete:
      summary: Delete given tagValue for tagId
      operationId: deletagValueForTagId
      tags:
        - EntityTag
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      description: Delete given tagValue for tagId
  '/V4/StorageArrays/{arrayId}/Subclient/{subclientId}/Snap/Configs':
    parameters:
      - schema:
          type: integer
          format: int32
        name: arrayId
        in: path
        required: true
      - schema:
          type: integer
          format: int32
        name: subclientId
        in: path
        required: true
    get:
      summary: Get Snap Configs for Storage Array at Subclient
      tags:
        - Snapshot Configurations
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnapConfigOverrideResp'
      operationId: GetSubclientSnapConfigs
      description: API to fetch Snap configs for Storage Arrays at subclient level
    put:
      summary: Edit Subclient Snap Configs for Storage Arrays
      tags:
        - Snapshot Configurations
      operationId: EditSubclientSnapConfigs
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      description: API to edit Snap Configurations at Subclient level
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SnapConfigOverrideEditReq'
  '/V4/StorageArrays/Copy/{copyId}/Arrays/{arrayId}/Snap/Configs':
    parameters:
      - schema:
          type: integer
          format: int32
        name: copyId
        in: path
        required: true
      - schema:
          type: integer
          format: int32
        name: arrayId
        in: path
        required: true
    get:
      summary: Get Storage Array Snap Configs at Copy Level
      tags:
        - Snapshot Configurations
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnapConfigOverrideResp'
      operationId: GetCopyConfigs
      description: API to fetch snap configs for storage arrays at copy level
    put:
      summary: Edit Storage Array Snap Configs at Copy Level
      tags:
        - Snapshot Configurations
      operationId: EditCopySnapConfigs
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      description: API to edit snap configurations for storage array at copy level
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SnapConfigOverrideEditReq'
  /V4/MountPath/Content:
    get:
      summary: Get mount path content
      tags:
        - Storage
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMountPathContentResp'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      operationId: get-MountPath-Content
      description: API to get mountpath content
      parameters:
        - schema:
            type: integer
            format: int32
          in: query
          name: mountPathId
          description: Mountpath Id
        - schema:
            type: integer
            format: int32
          in: query
          name: deviceId
          description: Device Id
  /V4/StorageArrays/Client/Snap/Enabled:
    get:
      summary: List Intellisnap Enabled Clients
      tags:
        - SnapshotManagement
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IntelliSnapClientsList'
      operationId: GetSnapClients
      description: API to get all IntelliSnap enabled Clients
  '/V4/StorageArrays/Client/{clientId}/subclient/Snap/Enabled':
    parameters:
      - schema:
          type: integer
          format: int32
        name: clientId
        in: path
        required: true
    get:
      summary: List Intellisnap Enabled Subclients
      tags:
        - SnapshotManagement
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IntelliSnapSubclients'
      operationId: GetSnapSubclients
      description: API to get all IntelliSnap enabled subclients for particular client
  '/V4/StorageArrays/{arrayId}/Snap/Configs':
    parameters:
      - schema:
          type: integer
        name: arrayId
        in: path
        required: true
    put:
      summary: Edit Snap Configs for Storage Array at Array levels
      tags:
        - Snapshot Configurations
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
              examples:
                Example 1:
                  value:
                    snapConfigurations:
                      - masterConfigId: 0
                        id: 0
                        name: string
                        type: 1
                        value: string
                        values:
                          - id: 0
                            name: string
                        flags: 0
                        isUpdated: true
                        isOverridden: true
      operationId: EditSnapConfigs
      description: API to edit Snap configs at a Array level
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SnapConfigOverrideEditReq'
  '/V4/StorageArrays/{arrayId}/Snaps/MultiNode/Unmount':
    parameters:
      - schema:
          type: integer
          format: int32
        name: arrayId
        in: path
        required: true
    post:
      summary: Unmount Multi Node Snapshots of Storage Array
      tags:
        - Snapshot Operations
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnapReconResp'
      operationId: MultiNodeUnmount
      description: API for snap multi node unmount operation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SnapNodeReq'
  '/V4/PlatformUpgrade/Options':
    get:
      summary: Get Platform Upgrade Options
      tags:
        - Servers
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSetWindowsMSSQLPatchingMsg'
      operationId: GetPlatformUpgradeOptions
      parameters:
        - schema:
            type: integer
            format: int32
          in: query
          name: option
          description: 'Specify the entity level for which to fetch install jobs options. Accepted values [ 2 = Client, 3 = Client Group, 4 = Commcell]'
        - schema:
            type: integer
            format: int32
          in: query
          name: clientId
          description: Id of the client or client group for which to fetch install job options
      description: API to get eligibility for install job option at different entity level
  '/V4/StorageArrays/{arrayId}/Snaps/InstantClone/Delete':
    parameters:
      - schema:
          type: integer
          format: int32
        name: arrayId
        in: path
        required: true
    post:
      summary: Delete Instant Clone Snap
      tags:
        - Snapshot Operations
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnapReconResp'
      operationId: InstantCloneDelete
      description: API for snap instant clone delete operation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SnapNodeReq'
  '/V4/StorageArrays/{arrayId}/Snaps/MultiNode/Unmount/Force':
    parameters:
      - schema:
          type: integer
          format: int32
        name: arrayId
        in: path
        required: true
    post:
      summary: Force Unmount Multi Node Snapshots of Storage Array
      tags:
        - Snapshot Operations
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnapReconResp'
      operationId: MultiNodeForceUnmount
      description: API for snap multi node force unmount operation. Please be aware, triggering this API will not physically unmount the clones from the storage array or MA, so ensure that you unmapped the clones on the array and cleanup the mount host and LVM before using this operation.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SnapNodeReq'
  '/V4/StorageArrays/{arrayId}/Snaps/InstantClone/Delete/Force':
    parameters:
      - schema:
          type: integer
          format: int32
        name: arrayId
        in: path
        required: true
    post:
      summary: Force Delete Instant Clone Snapshot
      tags:
        - Snapshot Operations
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnapReconResp'
      operationId: InstantCloneForceDelete
      description: API for snap instant clone force delete operation. Please be aware, triggering this API will not delete the clones from the storage array, so ensure that you delete clones on the array before using this operation.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SnapNodeReq'
  '/V4/StorageArrays/{arrayId}/Snaps/Unmount/Force':
    parameters:
      - schema:
          type: integer
          format: int32
        name: arrayId
        in: path
        required: true
    post:
      summary: Force Unmount Snapshot
      tags:
        - Snapshot Operations
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnapReconResp'
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      operationId: SnapForceUnmount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SnapForceReq'
      description: Force unmounting a mounted Snapshot from Storage Array. Please be aware, triggering this API will not physically unmount the snapshots from the storage array or MA, so ensure that you unmapped the snapshots on the array and cleanup the mount host and LVM before using this operation.
  '/V4/StorageArrays/{arrayId}/Snaps/Delete/Force':
    parameters:
      - schema:
          type: integer
          format: int32
        name: arrayId
        in: path
        required: true
    post:
      summary: Delete Snapshot Force
      tags:
        - Snapshot Operations
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnapReconResp'
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      operationId: SnapForceDelete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SnapForceReq'
      description: Force deleting an unmounted or created snapshot from Storage Arrays. Please be aware, triggering this API will not delete the snapshots from the storage array, so ensure that you delete snapshots on the array before using this operation.
  '/V4/Office365/{appId}/AzureApp':
    parameters:
      - schema:
          type: integer
          format: int32
        name: appId
        in: path
        required: true
    get:
      summary: Get Office 365 Azure apps
      description: Get list of Office 365 Azure apps
      operationId: GetOffice365AzureApp
      tags:
        - Office365
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOffice365AzureAppResp'
    put:
      summary: Add/Update Office365 Azure Apps
      description: Add list of Office365 Azure Apps
      operationId: AddOffice365AzureApp
      tags:
        - Office365
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOffice365AzureAppReq'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateOffice365AzureAppResp'
    delete:
      summary: Delete Office365 Azure Apps
      description: Delete list of Office365 Azure Apps
      operationId: DeleteOffice365AzureApp
      tags:
        - Office365
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteOffice365AzureAppReq'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateOffice365AzureAppResp'
  /V4/Office365:
    get:
      summary: Get Office 365 apps
      description: Get list of Office 365 apps
      operationId: GetOffice365Client
      tags:
        - Office365
      parameters:
        - name: pageNumber
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          schema:
            type: string
            example: 'desc:name'
        - name: searchKey
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Office365AllClientsResp'
  /V4/Office365/Exchange:
    get:
      summary: Get Office 365 Exchange Online apps
      description: Get list of Office 365 Exchange Online apps
      operationId: GetExchangeClient
      tags:
        - Exchange
      parameters:
        - name: pageNumber
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          schema:
            type: string
            example: 'desc:name'
        - name: searchKey
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Office365ClientsResp'
    post:
      summary: Create Office 365 Exchange Online app
      operationId: CreateExchangeClient
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdName'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
              examples:
                example:
                  value:
                    errorMessage: An instance by this name already exists.
                    errorCode: 3
        '500':
          description: Internal Server Error
      description: Create Office 365 Exchange Online app
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateExchangeClient'
      tags:
        - Exchange
  /V4/Office365/OneDrive:
    get:
      summary: Get Office 365 Onedrive for Business apps
      description: Get list of Office 365 Onedrive for Business apps
      operationId: GetOnedriveClient
      tags:
        - OneDrive
      parameters:
        - name: pageNumber
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          required: false
          schema:
            type: string
            example: 'desc:name'
        - name: searchKey
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Office365ClientsResp'
    post:
      summary: Create Office 365 Onedrive for Business app
      operationId: CreateOnedriveClient
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdName'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
              examples:
                example:
                  value:
                    errorMessage: An instance by this name already exists.
                    errorCode: 3
        '500':
          description: Internal Server Error
      description: Create Office 365 Onedrive for Business app
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOnedriveClient'
      tags:
        - OneDrive
  /V4/Office365/SharePoint:
    get:
      summary: Get Office 365 Sharepoint Online apps
      description: Get list of Office 365 Sharepoint Online apps
      operationId: GetSharepointClient
      tags:
        - Sharepoint
      parameters:
        - name: pageNumber
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          required: false
          schema:
            type: string
            example: 'desc:name'
        - name: searchKey
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Office365ClientsResp'
    post:
      summary: Create Office 365 SharePoint Online
      operationId: CreateSharepointClient
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdName'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
              examples:
                example:
                  value:
                    errorMessage: An instance by this name already exists.
                    errorCode: 3
        '500':
          description: Internal Server Error
      description: Create Office 365 SharePoint Online app
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSharepointClient'
      tags:
        - Sharepoint
  /V4/Office365/Teams:
    get:
      summary: Get Office 365 Teams apps
      description: Get list of Office 365 Teams apps
      operationId: GetTeamsClient
      tags:
        - Teams
      parameters:
        - name: pageNumber
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          required: false
          schema:
            type: string
            example: 'desc:name'
        - name: searchKey
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Office365ClientsResp'
    post:
      summary: Create Office 365 Teams app
      operationId: CreateTeamsClient
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdName'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
              examples:
                example:
                  value:
                    errorMessage: An instance by this name already exists.
                    errorCode: 3
        '500':
          description: Internal Server Error
      description: Create Office 365 Teams app
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTeamsClient'
      tags:
        - Teams
  /v4/Dynamics365:
    parameters: []
    post:
      summary: Create D365 Client
      operationId: CreateD365Client
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdName'
        '500':
          description: Internal Server Error
      description: Create Dynamics 365 app
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDynamics365Client'
      tags:
        - Dynamics365
  /v4/ActiveDirectory/AzureAD:
    parameters: []
    post:
      summary: Create Azure Active Directory app
      operationId: CreateAzureADClient
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdName'
        '500':
          description: Internal Server Error
      description: Create Azure Active Directory app
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAzureADClient'
      tags:
        - ActiveDirectory
        - HIDDEN
  '/V4/ActiveDirectory/Apps':
    parameters: []
    get:
      summary: 'Get Azure and OnPrem Active Directory clients with their file system state'
      operationId: GetActiveDirectoryClientsV2
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActiveDirectoryClientsV2Resp'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      tags:
        - ActiveDirectory
  '/V4/SoftwareCache':
    get:
      summary: 'Get all software caches details'
      operationId: GetSoftwareCachesDetails
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SoftwareCacheDetailListResp'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      tags:
        - SoftwareCache
    post:
      summary: 'Create a new software cache'
      operationId: AddSoftwareCache
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SoftwareCacheDetail'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      tags:
        - SoftwareCache
  '/V4/SoftwareCache/{clientId}':
    parameters:
      - schema:
          type: integer
          format: int32
        name: clientId
        in: path
        required: true
        description: Software cache client id
    get:
      summary: 'Get software cache details for specific server'
      operationId: GetSoftwareCacheDetailsForServer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SoftwareCacheDetail'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      tags:
        - SoftwareCache
    put:
      summary: 'Modify software cache details'
      operationId: ModifySoftwareCacheDetails
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifySoftwareCacheDetails'
      tags:
        - SoftwareCache
    delete:
      summary: 'Delete software cache for server'
      operationId: DeleteSoftwareCacheServer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      tags:
        - SoftwareCache
  '/V4/SoftwareCache/QualifiedServers':
    get:
      summary: 'Get Qualified servers for software cache creation'
      description: 'Get qualified server list to create a new software cache'
      operationId: GetQualifiedServersForSoftwareCache
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SoftwareCacheDetailListResp'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      tags:
        - SoftwareCache
  '/V4/Office365/Exchange/{appId}/Content':
    parameters:
      - schema:
          type: integer
          format: int32
        name: appId
        in: path
        required: true
        description: Commvault exchange app id
    get:
      summary: Get Office 365 Exchange Online Content
      description: Get Office 365 Exchange Online Content
      operationId: GetExchangeContent
      tags:
        - Exchange
      parameters:
        - name: pageNumber
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          schema:
            type: string
            example: 'desc:name'
        - name: searchKey
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Office365ExchangeContentResp'
    put:
      summary: Add Content to Office 365 Exchange Online app
      operationId: AddExchangeContent
      description: Add Content to Office 365 Exchange Online app
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExchangeContentReq'
        description: ''
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      tags:
        - Exchange
  '/V4/Office365/OneDrive/{appId}/Content':
    parameters:
      - schema:
          type: integer
          format: int32
        name: appId
        in: path
        required: true
        description: Commvault onedrive app id
    get:
      summary: Get Office 365 Onedrive for Business Content
      description: Get Office 365 Onedrive for Business Content
      operationId: GetOnedriveContent
      tags:
        - OneDrive
      parameters:
        - name: pageNumber
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          schema:
            type: string
            example: 'desc:name'
        - name: searchKey
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Office365OnedriveContentResp'
    put:
      summary: Add content to Office 365 OneDrive for Business app
      operationId: AddOnedriveContent
      description: Add content to Office 365 OneDrive for Business app
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OnedriveContentReq'
      tags:
        - OneDrive
  '/V4/Office365/SharePoint/{appId}/Content':
    parameters:
      - schema:
          type: integer
          format: int32
        name: appId
        in: path
        required: true
        description: Commvault sharepoint app id
    get:
      summary: Get Office 365 Sharepoint Online Content
      description: Get Office 365 Sharepoint Online Content
      operationId: GetSharepointContent
      tags:
        - Sharepoint
      parameters:
        - name: pageNumber
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          schema:
            type: string
            example: 'desc:name'
        - name: searchKey
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Office365SharepointContentResp'
    put:
      summary: Add content to Office 365 SharePoint Online app
      operationId: AddSharepointContent
      description: Add content to Office 365 SharePoint Online app
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SharepointContentReq'
      tags:
        - Sharepoint
  '/V4/Office365/Teams/{appId}/Content':
    parameters:
      - schema:
          type: integer
          format: int32
        name: appId
        in: path
        required: true
        description: Commvault teams app id
    get:
      summary: Get Office 365 Teams Content
      description: Get Office 365 Teams Content
      operationId: GetTeamsContent
      tags:
        - Teams
      parameters:
        - name: pageNumber
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          schema:
            type: string
            example: 'desc:name'
        - name: searchKey
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Office365TeamsContentResp'
    put:
      summary: Add content to Office 365 Teams app
      operationId: AddTeamsContent
      description: Add content to Office 365 Teams app
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamsContentReq'
      tags:
        - Teams
  '/V4/Dynamics365/{appId}/Content':
    parameters:
      - schema:
          type: integer
          format: int32
        name: appId
        in: path
        required: true
        description: Commvault dynamics 365 app id
    put:
      summary: Add content to Dynamics 365 app
      operationId: AddD365Content
      description: Add content to Dynamics 365 app
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Dynamics365ContentReq'
      tags:
        - Dynamics365
  '/V4/Office365/Exchange/{appId}/Mailboxes':
    parameters:
      - schema:
          type: integer
          format: int32
        name: appId
        in: path
        required: true
        description: Commvault exchange app id
    get:
      summary: Get Office 365 Exchange Online Mailboxes
      description: Get Office 365 Exchange Online Mailboxes
      operationId: GetExchangeMailboxes
      tags:
        - Exchange
      parameters:
        - name: propertyLevel
          in: query
          required: false
          schema:
            type: string
          description: Optional parameter. Set it to BasicProperties or AllProperties
        - name: pageNumber
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          schema:
            type: string
            example: 'desc:name'
        - name: searchKey
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Office365MailboxesResp'
    put:
      summary: Add Office 365 Exchange Online Mailboxes List
      description: Add Office 365 Exchange Online Mailboxes List
      operationId: AddExchangeMailboxesList
      tags:
        - Exchange
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Office365MailboxesReq'
  '/V4/Office365/Onedrive/{appId}/Users':
    parameters:
      - schema:
          type: integer
          format: int32
        name: appId
        in: path
        required: true
        description: Commvault onedrive app id
    get:
      summary: Get Office 365 Onedrive for Business Users
      description: Get Office 365 Onedrive for Business Users
      operationId: GetOnedriveUsers
      tags:
        - OneDrive
      parameters:
        - name: propertyLevel
          in: query
          required: false
          schema:
            type: string
          description: Optional parameter. Set it to BasicProperties or AllProperties
        - name: pageNumber
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          schema:
            type: string
            example: 'desc:name'
        - name: searchKey
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Office365OnedriveUsersResp'
    put:
      summary: Add Office 365 Onedrive Users List
      description: Add Office 365 Onedrive Users List
      operationId: AddOnedriveUsersList
      tags:
        - OneDrive
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Office365OnedriveUsersReq'
  '/V4/Office365/Sharepoint/{appId}/Sites':
    parameters:
      - schema:
          type: integer
          format: int32
        name: appId
        in: path
        required: true
        description: Commvault sharepoint app id
    get:
      summary: Get Office 365 Sharepoint Online Sites
      description: Get Office 365 Sharepoint Online Sites
      operationId: GetSharepointSites
      tags:
        - Sharepoint
      parameters:
        - name: propertyLevel
          in: query
          required: false
          schema:
            type: string
          description: Optional parameter. Set it to BasicProperties or AllProperties
        - name: pageNumber
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          schema:
            type: string
            example: 'desc:name'
        - name: searchKey
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Office365SitesResp'
    put:
      summary: Add Office 365 Sharepoint sites
      operationId: AddSharepointSitesList
      description: Add sites to Office 365 SharePoint Online app
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Office365SitesReq'
      tags:
        - Sharepoint
  '/V4/Office365/Teams/{appId}/Teams':
    parameters:
      - schema:
          type: integer
          format: int32
        name: appId
        in: path
        required: true
        description: Commvault teams app id
    get:
      summary: Get Office 365 Teams List
      description: Get Office 365 Teams List
      operationId: GetTeamsList
      tags:
        - Teams
      parameters:
        - name: propertyLevel
          in: query
          required: false
          schema:
            type: string
          description: Optional parameter. Set it to BasicProperties or AllProperties
        - name: pageNumber
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          schema:
            type: string
            example: 'desc:name'
        - name: searchKey
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Office365TeamsResp'
    put:
      summary: Add Office 365 Teams List
      description: Add Office 365 Teams List
      operationId: AddTeamsList
      tags:
        - Teams
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Office365TeamsReq'
  '/V4/Office365/Teams/{appId}/Users':
    parameters:
      - schema:
          type: integer
          format: int32
        name: appId
        in: path
        required: true
        description: Commvault teams app id
    get:
      summary: Get Office 365 Teams Users List
      description: Get Office 365 Teams Users List
      operationId: GetTeamsUsersList
      tags:
        - Teams
      parameters:
        - name: propertyLevel
          in: query
          required: false
          schema:
            type: string
          description: Optional parameter. Set it to BasicProperties or AllProperties
        - name: pageNumber
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          schema:
            type: string
            example: 'desc:name'
        - name: searchKey
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Office365TeamsUsersResp'
    put:
      summary: Add Office 365 Teams Users List
      description: Add Office 365 Teams Users List
      operationId: AddTeamsUsersList
      tags:
        - Teams
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Office365TeamsUsersReq'
  '/V4/Office365/Exchange/{appId}/Content/CustomCategory':
    parameters:
      - schema:
          type: integer
          format: int32
        name: appId
        in: path
        required: true
        description: Commvault Exchange app id
    put:
      summary: Add Office 365 Exchange Custom Category
      description: Add Office 365 Exchange Custom Category
      operationId: AddExchangeCustomCategory
      tags:
        - Exchange
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Office365ExchangeCustomCategoryReq'
  '/V4/Office365/OneDrive/{appId}/Content/CustomCategory':
    parameters:
      - schema:
          type: integer
          format: int32
        name: appId
        in: path
        required: true
        description: Commvault OneDrive app id
    put:
      summary: Add Office 365 OneDrive Custom Category
      description: Add Office 365 OneDrive Custom Category
      operationId: AddOneDriveCustomCategory
      tags:
        - OneDrive
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Office365OnedriveCustomCategoryReq'
  '/V4/Office365/SharePoint/{appId}/Content/CustomCategory':
    parameters:
      - schema:
          type: integer
          format: int32
        name: appId
        in: path
        required: true
        description: Commvault Sharepoint app id
    put:
      summary: Add Office 365 Sharepoint Custom Category
      description: Add Office 365 Sharepoint Custom Category
      operationId: AddSharepointCustomCategory
      tags:
        - Sharepoint
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Office365SharepointCustomCategoryReq'
  '/V4/Office365/Teams/{appId}/Content/CustomCategory':
    parameters:
      - schema:
          type: integer
          format: int32
        name: appId
        in: path
        required: true
        description: Commvault Teams app id
    put:
      summary: Add Office 365 Teams Custom Category
      description: Add Office 365 Teams Custom Category
      operationId: AddTeamsCustomCategory
      tags:
        - Teams
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Office365TeamsCustomCategoryReq'
  '/V4/Office365/Exchange/{appId}/Backup':
    parameters:
      - schema:
          type: integer
          format: int32
        name: appId
        in: path
        required: true
        description: Commvault Exchange app id
    post:
      summary: Perform Office 365 Exchange Backup
      description: Perform Office 365 Exchange Backup
      operationId: PerformExchangeBackup
      tags:
        - Exchange
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTaskRespforBackup'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Office365ExchangeBackupReq'
            examples:
              App Level Backup:
                value:
                  totalRunningTime: 500
                  type: ALL_MAILBOXES
              Content Selection Backup:
                value:
                  totalRunningTime: 500
                  mailboxes:
                    - GUID: 3443c243-76fd-4658-bba2-62be7cf032f2
                      name: MailBox Name
                  content:
                    - type: ALL_MAILBOXES
                      name: Exchange Content Name
  '/V4/Office365/Exchange/{appId}/Restore':
    parameters:
      - schema:
          type: integer
          format: int32
        name: appId
        in: path
        required: true
        description: Commvault Exchange app id
    post:
      summary: Perform Office 365 Exchange Restore
      description: Perform Office 365 Exchange Restore
      operationId: PerformExchangeRestore
      tags:
        - Exchange
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTaskRespforBackup'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Office365ExchangeRestoreReq'
            examples:
              Restore Mailboxes:
                value:
                  ifMessageExists: SKIP
                  deletedItems: false
                  matchEmailAddress: false
                  mailboxes:
                    - GUID: 3443c243-76fd-4658-bba2-62be7cf032f2
                      name: MailBox Name
                      emailAddress: MailBox Address
              Restore Groups:
                value:
                  ifMessageExists: SKIP
                  deletedItems: false
                  matchEmailAddress: false
                  groups:
                    - GUID: 3443c243-76fd-4658-bba2-62be7cf032f2
                      name: Group Name
  '/V4/Office365/OneDrive/{appId}/Backup':
    parameters:
      - schema:
          type: integer
          format: int32
        name: appId
        in: path
        required: true
        description: Commvault Onedrive app id
    post:
      summary: Perform Office 365 Onedrive Backup
      description: Perform Office 365 Onedrive Backup
      operationId: PerformOnedriveBackup
      tags:
        - OneDrive
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTaskRespforBackup'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Office365OnedriveBackupReq'
            examples:
              App Level Backup:
                value:
                  totalRunningTime: 500
                  type: ALL_USERS
              Content Selection Backup:
                value:
                  totalRunningTime: 500
                  users:
                    - GUID: 3443c243-76fd-4658-bba2-62be7cf032f2
                      name: Name of the Onedrive User
                  content:
                    - type: ALL_USERS
                      name: Onedrive Content Name
                      GUID: 3443c243-76fd-4658-bba2-62be7cf032f2
  '/V4/Office365/OneDrive/{appId}/Restore':
    parameters:
      - schema:
          type: integer
          format: int32
        name: appId
        in: path
        required: true
        description: Commvault Onedrive app id
    post:
      summary: Perform Office 365 Onedrive Restore
      description: Perform Office 365 Onedrive Restore
      operationId: PerformOnedriveRestore
      tags:
        - OneDrive
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTaskRespforBackup'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Office365OnedriveRestoreReq'
            examples:
              Restore Users:
                value:
                  ifFileExists: SKIP
                  deletedItems: false
                  matchEmailAddress: false
                  skipFilePermissions: true
                  users:
                    - GUID: 3443c243-76fd-4658-bba2-62be7cf032f2
                      name: Name of Onedrive User
              Restore Groups:
                value:
                  ifFileExists: SKIP
                  deletedItems: false
                  matchEmailAddress: false
                  skipFilePermissions: true
                  groups:
                    - GUID: 3443c243-76fd-4658-bba2-62be7cf032f2
                      name: Group Name
  '/V4/Office365/Sharepoint/{appId}/Backup':
    parameters:
      - schema:
          type: integer
          format: int32
        name: appId
        in: path
        required: true
        description: Commvault Sharepoint app id
    post:
      summary: Perform Office 365 Sharepoint Backup
      description: Perform Office 365 Sharepoint Backup
      operationId: PerformSharepointBackup
      tags:
        - Sharepoint
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTaskRespforBackup'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Office365SharepointBackupReq'
            examples:
              App Level Backup:
                value:
                  totalRunningTime: 500
                  type: ALL_SITES
              Content Selection Backup:
                value:
                  totalRunningTime: 500
                  sites:
                    - GUID: 3443c243-76fd-4658-bba2-62be7cf032f2
                      name: Site Name
                      type: SITE
  '/V4/Office365/Sharepoint/{appId}/Restore':
    parameters:
      - schema:
          type: integer
          format: int32
        name: appId
        in: path
        required: true
        description: Commvault Sharepoint app id
    post:
      summary: Perform Office 365 Sharepoint Restore
      description: Perform Office 365 Sharepoint Restore
      operationId: PerformSharepointRestore
      tags:
        - Sharepoint
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTaskRespforBackup'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Office365SharepointRestoreReq'
            examples:
              Restore Sites:
                value:
                  ifDocumentExists: SKIP
                  deletedItems: false
                  additionalRestoreOption: RESTORE_ACLS_ONLY
                  latestVersion: true
                  skipLookupMetadata: false
                  sites:
                    - GUID: 3443c243-76fd-4658-bba2-62be7cf032f2
                      name: Site Name
                      type: SITE
              Restore using Custom Category:
                value:
                  ifDocumentExists: SKIP
                  deletedItems: false
                  additionalRestoreOption: RESTORE_ACLS_ONLY
                  latestVersion: true
                  skipLookupMetadata: false
                  category:
                    GUID: 3443c243-76fd-4658-bba2-62be7cf032f2
                    conditions:
                      - ruleOperator: CONTAINS
                        ruleValue: Value to match condition
                        ruleName: SITE_DESCRIPTION
  '/V4/Office365/Teams/{appId}/Backup':
    parameters:
      - schema:
          type: integer
          format: int32
        name: appId
        in: path
        required: true
        description: Commvault Teams app id
    post:
      summary: Perform Office 365 Teams Backup
      description: Perform Office 365 Teams Backup
      operationId: PerformTeamsBackup
      tags:
        - Teams
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTaskRespforBackup'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Office365TeamsBackupReq'
            examples:
              App Level Backup:
                value:
                  totalRunningTime: 500
                  type: ALL_TEAMS
              Content Selection Backup:
                value:
                  totalRunningTime: 500
                  teams:
                    - GUID: 3443c243-76fd-4658-bba2-62be7cf032f2
                      name: Team Name
                  users:
                    - GUID: 3443c243-76fd-4658-bba2-62be7cf032f2
                      name: Teams User Name
                  content:
                    - type: CUSTOM_CATEGORY
                      name: Custom Category Name
                      GUID: 3443c243-76fd-4658-bba2-62be7cf032f2
  '/V4/Office365/Teams/{appId}/Restore':
    parameters:
      - schema:
          type: integer
          format: int32
        name: appId
        in: path
        required: true
        description: Commvault Teams app id
    post:
      summary: Perform Office 365 Teams Restore
      description: Perform Office 365 Teams Restore
      operationId: PerformTeamsRestore
      tags:
        - Teams
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTaskRespforBackup'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Office365TeamsRestoreReq'
            examples:
              Restore Teams:
                value:
                  ifFileExists: SKIP
                  deletedItems: false
                  teams:
                    - GUID: 3443c243-76fd-4658-bba2-62be7cf032f2
                      name: Team Name
              Restore Teams Users:
                value:
                  ifFileExists: SKIP
                  deletedItems: false
                  users:
                    - GUID: 3443c243-76fd-4658-bba2-62be7cf032f2
                      name: Teams User Name
                  destinationUserInfo:
                    emailAddress: Onedrive User Email Address
                    GUID: 3443c243-76fd-4658-bba2-62be7cf032f1
              Restore using Custom Category:
                value:
                  ifFileExists: SKIP
                  deletedItems: false
                  category:
                    GUID: 3443c243-76fd-4658-bba2-62be7cf032f2
                    conditions:
                      - ruleOperator: CONTAINS
                        ruleValue: Value to match condition
                        ruleName: TEAM_DISPLAY_NAME
  '/V4/Storage/HyperScale/{storagePoolId}/Extend':
    parameters:
      - schema:
          type: integer
          format: int32
        name: storagePoolId
        in: path
        required: true
        description: Id of the HyperScale X storage pool
    put:
      summary: Allow Backup operation On HyperScale X StoragePool
      operationId: AllowBackupOpOnHyperScaleXStoragePool
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
      description: |-
        This operation is applicable only for HyperScale X Storage Pool.
        When the storage utilization is above 85%, it will be marked read only on next Tuesday.
        As long as utilization is below 90%, this API can be used to allow backup operation on the storage for an additional week.
      tags:
        - HyperScaleStorage
  '/V4/StoragePool/{StoragePoolId}/maintenance/Enable':
    parameters:
      - schema:
          type: integer
          format: int32
        name: StoragePoolId
        in: path
        required: true
        description: Id of storage pool
    put:
      summary: Enable maintenance for a storage pool
      operationId: EnableMaintenanceForStoragePool
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
      description: |-
        API is used to enable maintenance for a storage pool.
        It will put the libraries associated to storage pool in maintenance mode and if the storage pool is HyperScale, then same would be applied to the nodes associated to the storage pool.
        When a storage pool is in maintenance, it will not be used by any upcoming jobs.
      parameters:
        - schema:
            type: boolean
            default: true
          in: query
          description: Suspend the jobs running to the storage pool
          name: suspendRunningJobs
      tags:
        - Storage
  '/V4/StoragePool/{StoragePoolId}/maintenance/Disable':
    parameters:
      - schema:
          type: integer
          format: int32
        name: StoragePoolId
        in: path
        required: true
        description: Id of storage pool
    put:
      summary: Disable maintenance for a storage pool
      operationId: DisableMaintenanceForStoragePool
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
      description: |-
        API is used to disable maintenance for a storage pool.
        It will take the libraries associated to storage pool out maintenance mode and if the storage pool is HyperScale, then same would be applied to the nodes associated to the storage pool.
        Storage pool will be marked availabe for upcoming jobs.
      tags:
        - Storage
  '/V4/StoragePool/{storagePoolId}/runningJobs':
    parameters:
      - schema:
          type: integer
          format: int32
        name: storagePoolId
        in: path
        required: true
        description: Id of storage pool
    get:
      summary: Get running jobs for a storage pool
      tags:
        - Storage
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRunningJobsIdList'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
      operationId: GetRunningJobsForStoragePool
      parameters:
        - schema:
            type: string
            enum:
              - All
              - Admin
              - Backup
              - Restore
            default: All
          in: query
          name: jobType
          description: Type of job
        - schema:
            type: boolean
            default: true
          in: query
          name: ignoreSuspendedJobs
          description: To include/exlude suspended jobs in the response
      description: API to get jobs running to a storage pool.
  '/V4/Client/{clientId}/Retire':
    parameters:
      - schema:
          type: integer
          format: int32
        name: clientId
        in: path
        required: true
    put:
      summary: Retire ClientPackages
      operationId: RetireClientPackages
      tags:
        - Servers
      description: Selectively uninstall packages from given client
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RetireClientRequest'
            examples:
              RetireTwoPackages:
                value:
                  retireClient: false
                  packages:
                    - id: 353
                      name: iDA for MSSQL Server
                    - id: 358
                      name: MySQL iDataAgent
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetireClientResponse'
  '/V4/Client/{clientId}/RetireInformation':
    parameters:
      - schema:
          type: integer
          format: int32
        name: clientId
        in: path
        required: true
    get:
      summary: Get ClientInfo ForRetire
      operationId: GetClientInfoForRetire
      description: API to get client information that retire operation concerns
      tags:
        - HIDDEN
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientInfoForRetire'
  '/V4/StorageArrays/Client/{clientId}/Arrays':
    get:
      summary: List Storage Arrays of a Client
      tags:
        - Array Management
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetArraysResp'
              examples:
                Example 1:
                  value:
                    arrays:
                      - assocFlag: true
                        vendor: string
                        name: string
                        flags: 0
                        controlHost: string
                        userName: string
                        VSVendor: NONE
                        id: 0
                        description: string
      operationId: GetClientLvlArrays
      description: API to get all arrays at client level
    parameters:
      - schema:
          type: integer
          format: int32
        name: clientId
        in: path
        required: true
  '/V4/StorageArrays/Client/{clientId}/Subclient/{subclientId}/Arrays':
    parameters:
      - schema:
          type: integer
          format: int32
        name: clientId
        in: path
        required: true
      - schema:
          type: integer
          format: int32
        name: subclientId
        in: path
        required: true
    get:
      summary: List Storage Arrays of a Subclient
      tags:
        - Array Management
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetArraysResp'
      operationId: GetSubclientLvlArrays
      description: API to get all arrays at Subclient Level
  '/V4/StorageArrays/Copy/{copyId}/Arrays':
    get:
      summary: Get Storage Arrays for Copy
      tags:
        - Array Management
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetArraysResp'
      operationId: GetCopytLvlArrays
      description: API to get arrays list at copy level
    parameters:
      - schema:
          type: integer
          format: int64
        name: copyId
        in: path
        required: true
  '/V4/AccessNode':
    post:
      summary: Deploy Access Node
      tags:
        - VirtualMachines
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTaskRespforBackup'
        '404':
          description: Not Found
      operationId: AccessNode
      description: 'API to deploy Access Node'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccessNodeDeployment'
  '/V4/InventoryManager/Inventory/{inventoryId}/DataSources':
    parameters:
      - schema:
          type: integer
        name: inventoryId
        in: path
        required: true
        description: Inventory Id
    get:
      summary: Get Inventory Associated DataSource List
      tags:
        - InventoryManager
        - HIDDEN
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryAssociatedDatasourceList'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      operationId: GetInventoryAssociatedDataSourceList
      description: Get the list of data sources associated to the inventory
  '/V4/Office365/Plans':
    parameters: []
    get:
      summary: Get Office365 Plans for Dashboard
      operationId: GetOffice365PlanDashboard
      description: Returns all Office365 active plans with number of entities associated to the plan per workload
      tags:
        - Office365
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Office365PlanSummaryListResp'
              examples:
                success:
                  value:
                    o365Plans:
                      - plan:
                          id: 18
                          name: Office365 Standard Plan
                        planTier: STANDARD
                        contentIndexingEnabled: false
                        mailboxes: 24
                        users: 15
                        sites: 32
                        teams: 9
                        totalEntities: 80
                    totalO365Plans: 1
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
              examples:
                bad request:
                  value:
                    errorMessage: Invalid parameters
                    errorCode: 1
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
              examples:
                internal server error:
                  value:
                    errorMessage: Internal error
                    errorCode: 1
  '/V4/Entity/{entityType}/{entityId}/ActivityControl/{activityType}/Action/Enable':
    put:
      summary: Enable Activity Control For Entity
      tags:
        - ActivityControl
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      operationId: EnableActivityControlForEntity
      description: |-
        API to enable activity control for an entity
        Available activityType are
        1 - Backup,
        2 - Restore,
        16 - Archieve pruning/ data aging
        128 - All Job Activity,
        256 - Scheduler
      x-hidden-description: |
        This can be used to resume or enable various operations on a client entity. For example, backup, restore, copy, aging activity.
        Eg: Resume copy activity on client xyz
      parameters:
        - name: entityType
          in: path
          description: |-
            Entity type to enable activity control like subclient, instance, server, server group.
            Available entityType are
            3 - server
            4 - Application type
            5 - instance
            7 - subclient
            28 - server group
          required: true
          schema:
            type: integer
            format: int32
        - name: entityId
          in: path
          description: 'Entity Id to enable activity control like subclient, instance, server, server group.'
          required: true
          schema:
            type: integer
            format: int32
        - name: activityType
          in: path
          required: true
          description: denotes the activity type being considered
          schema:
            type: integer
            format: int32
        - name: clientId
          in: query
          required: false
          schema:
            type: integer
            format: int32
          description: clientId is mandatory when application entity type is passed
  '/V4/Entity/{entityType}/{entityId}/ActivityControl/{activityType}/Action/Disable':
    put:
      summary: Disable Activity Control For Entity
      tags:
        - ActivityControl
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      operationId: Disable Activity Control For Entity
      x-hidden-description: |
        This can be used to suspend or disable various operations on a client entity. For example, backup, restore, copy, aging activity.
        Eg: Suspend copy activity on client xyz
      x-dependency:
        - Get list of client to get client (entity) id for
      description: |-
        API to disable activity control for an entity.
        Available activityType are
        1 - Backup,
        2 - Restore,
        16 - Archieve pruning/ data aging
        128 - All Job Activity,
        256 - Scheduler
      parameters:
        - name: entityType
          in: path
          description: |-
            Entity type to enable activity control like subclient, instance, server, server group.
            Available entityType are
            3 - server
            4 - Application type
            5 - instance
            7 - subclient
            28 - server group
          required: true
          schema:
            type: integer
            format: int32
        - name: entityId
          in: path
          description: 'Entity Id to disable activity control like subclient, instance, server, server group.'
          required: true
          schema:
            type: integer
            format: int32
        - name: activityType
          in: path
          required: true
          schema:
            type: integer
            format: int32
          description: denotes the activity type being considered.
        - name: clientId
          in: query
          required: false
          schema:
            type: integer
            format: int32
          description: clientId is mandatory when application entity type is passed.
        - name: enableAfterDelayTime
          in: query
          description: epoch timestamp on which activity control should be automatically enabled back
          required: false
          schema:
            type: integer
            format: int32
        - name: enableAfterDelayTimeZone
          in: query
          required: false
          schema:
            type: integer
            format: int32
          description: timezone ID

  /V5/Kubernetes/Cluster:

    get:
      summary: Get all Kubernetes clusters
      tags:
        - Kubernetes
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetClusterResp'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      operationId: GetAllKubernetesClustersOp
      description: |-
        API to get all Kubernetes clusters

    post:
      summary: Create a new Kubernetes cluster client
      x-terraform-resource: Kubernetes_Cluster
      tags:
        - Kubernetes
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateKubernetesClusterResponse'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      operationId: CreateKubernetesClusterOp
      description: |-
        API to create new Kubernetes cluster client
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateKubernetesClusterRequest'
            examples:
              Create new Kubernetes Cluster with ETCD Protection enabled:
                value:
                  apiServer: https://kubernetes-cluster-prod.commvault.com:443
                  name: kubernetes-prod-cluster
                  serviceAccount: cvadmin
                  serviceToken: redacted-secret-token
                  accessNodes:
                    - id: 306
                      name: bastionan01
                  etcdProtection:
                    enabled: true
                    plan:
                      id: 1
                      name: CSPlan

  '/V5/Kubernetes/Cluster/{clusterId}':

    get:
      summary: Get details of a Kubernetes Cluster client
      x-terraform-resource: Kubernetes_Cluster
      tags:
        - Kubernetes
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetClusterDetailsResp'
        '404':
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'

      operationId: GetKubernetesClusterDetails
      description: |-
        API to get details of a Kubernetes clusters with clusterId
      parameters:
        - name: clusterId
          x-terraform-id: true
          in: path
          required: true
          schema:
            type: integer
            format: int32

    put:
      summary: Update properties of a Kubernetes cluster client
      x-terraform-resource: Kubernetes_Cluster
      tags:
        - Kubernetes
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '404':
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'

      operationId: UpdateKubernetesProperties
      description: |-
        API to update the properties of a Kubernetes cluster with clusterId
      parameters:
        - name: clusterId
          x-terraform-id: true
          in: path
          required: true
          schema:
            type: integer
            format: int32
          description: clusterId is the ID of the Kubernetes cluster client
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateKubernetesClusterRequest'
            examples:
              Update service account and token:
                value:
                  serviceAccount: cvadmin2
                  serviceToken: redacted-new-token
              Update access nodes:
                value:
                  accessNodes:
                    - name: bastion-proxy
                      id: 4
                    - name: bastion-proxy-2
                      id: 6
              Update cluster properties:
                value:
                  options:
                    jobStepWaitTime:
                      workerPodStartup: 1
                      resourceCleanup: 2
                      snapshotReady: 3
                      snapshotCleanup: 4
                    imageRegistry:
                      url: cv-registry.cv.com:5000
                      pullSecret: dockercred
                    configNamespace: cv-config-namespace
              Update ETCD Protection for the cluster:
                value:
                  etcdProtection:
                    id: 697
                    enabled: true
                    plan:
                      id: 2
                      name: TestPlan

    delete:
      summary: Delete a deconfigured Kubernetes cluster client
      tags:
        - Kubernetes
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '404':
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'

      operationId: DeleteDeconfiguredKubernetesCluster
      description: |-
        API to delete a deconfigured Kubernetes cluster with clusterId
      parameters:
        - name: clusterId
          x-terraform-id: true
          in: path
          required: true
          schema:
            type: integer
            format: int32
          description: clusterId is the ID of the Kubernetes cluster client

  '/V5/Kubernetes/Cluster/{clusterId}/Retire':
    delete:
      summary: Retire and release license of a Kubernetes clueter client
      x-terraform-resource: Kubernetes_Cluster
      tags:
        - Kubernetes
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '404':
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'

      operationId: RetireKubernetesCluster
      description: |-
        API to retire a Kubernetes cluster with clusterId
      parameters:
        - name: clusterId
          x-terraform-id: true
          in: path
          required: true
          schema:
            type: integer
            format: int32
          description: clusterId is the ID of the Kubernetes cluster client

  '/V5/Kubernetes/Cluster/{clusterId}/Reconfigure':
    put:
      summary: Reconfigure a retired Kubernetes cluster client
      tags:
        - Kubernetes
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericRespWithWarning'
        '404':
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      operationId: ReconfigureKubernetesCluster
      description: |-
        API to reconfigure a Kubernetes cluster with clusterId
      parameters:
        - name: clusterId
          in: path
          required: true
          schema:
            type: integer
            format: int32
          description: clusterId is the ID of the Kubernetes cluster client

  '/V5/Kubernetes/Cluster/{clusterId}/Content/Namespace':
    get:
      summary: Browse all namespaces of a Kubernetes cluster
      tags:
        - Kubernetes
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KubernetesBrowseClusterResp'
        '404':
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      operationId: BrowseKubernetesNamespaces
      description: |-
        API to get all namespaces of a Kubernetes cluster with clusterId
      parameters:
        - name: clusterId
          in: path
          required: true
          schema:
            type: integer
            format: int32
          description: clusterId is the ID of the Kubernetes cluster client

  '/V5/Kubernetes/Cluster/{clusterId}/Content/StorageClass':
    get:
      summary: Browse all storage classes of a Kubernetes cluster
      tags:
        - Kubernetes
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KubernetesBrowseClusterResp'
        '404':
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      operationId: BrowseKubernetesStorageClass
      description: |-
        API to get all StorageClasses of a Kubernetes cluster with clusterId
      parameters:
        - name: clusterId
          in: path
          required: true
          schema:
            type: integer
            format: int32
          description: clusterId is the ID of the Kubernetes cluster client

  '/V5/Kubernetes/Cluster/{clusterId}/Content/Namespace/{nameSpace}/Applications':
    get:
      summary: Content browse applications in a namespace
      tags:
        - Kubernetes
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KubernetesBrowseClusterResp'
        '404':
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      operationId: BrowseNamespaceApplications
      description: |-
        API to browse applications in a namespace
      parameters:
        - name: clusterId
          in: path
          required: true
          schema:
            type: integer
            format: int32
          description: clusterId is the ID of the Kubernetes cluster client
        - name: nameSpace
          in: path
          required: true
          schema:
            type: string
            format: ''
          description: Name of the namespace to browse for content

  '/V5/Kubernetes/Cluster/{clusterId}/Content/Namespace/{nameSpace}/Volumes':
    get:
      summary: Content browse volumes in a namespace
      tags:
        - Kubernetes
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KubernetesBrowseClusterResp'
        '404':
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      operationId: BrowseNamespaceVolumes
      description: |-
        API to browse volumes in a namespace
      parameters:
        - name: clusterId
          in: path
          required: true
          schema:
            type: integer
            format: int32
          description: clusterId is the ID of the Kubernetes cluster client
        - name: nameSpace
          in: path
          required: true
          schema:
            type: string
            format: ''
          description: Name of the namespace to browse for content

  '/V5/Kubernetes/Cluster/{clusterId}/Content/Namespace/{nameSpace}/Labels':
    get:
      summary: Content browse labels in a namespace
      tags:
        - Kubernetes
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KubernetesBrowseClusterResp'
        '404':
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      operationId: BrowseNamespaceLabels
      description: |-
        API to browse labels in a namespace
      parameters:
        - name: clusterId
          in: path
          required: true
          schema:
            type: integer
            format: int32
          description: clusterId is the ID of the Kubernetes cluster client
        - name: nameSpace
          in: path
          required: true
          schema:
            type: string
            format: ''
          description: Name of the namespace to browse for content

  /V5/Kubernetes/ApplicationGroup:

    get:
      summary: Get all Kubernetes application groups
      tags:
        - Kubernetes
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetApplicationGroupsList'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      parameters:
        - name: clusterId
          in: query
          schema:
            type: integer
            format: int32
          description: clusterId is the ID of the Kubernetes cluster client to filter Application Groups for

      operationId: GetAllKubernetesAppGroups
      description: |-
        API to get all Kubernetes application groups

    post:
      summary: Create a new Kubernetes application group
      x-terraform-resource: Kubernetes_Appgroup
      tags:
        - Kubernetes
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                x-terraform-id: id
                $ref: '#/components/schemas/IdName'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      operationId: CreateKubernetesApplicationGroup
      description: |-
        API to create new Kubernetes application group
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateApplicationGroupRequest'
            examples:
              Create Application Group with application and label selector content:
                value:
                  cluster:
                    id: 7
                    name: kubernetes-prod-cluster
                  name: AppGroup01
                  content:
                    applications:
                      - GUID: non-namespaced`Namespace`pod`65a3778c-410d-4cd5-ae64-42bf801a41ae
                        type: NAMESPACE
                      - GUID: default`Deployment`nginx`51a2378b-782r-4cd1-aa64-42bf823a62a3
                        type: APPLICATION
                    labelSelectors:
                      - selectorLevel: Application
                        selectorValue: backup=yes --all-namespaces
                  filters:
                    skipStatelessApps: true
                    labelSelectors:
                      - selectorLevel: Namespace
                        selectorValue: backup=no --all-namespaces
                  plan:
                    id: 1
                    name: CSPlan

  '/V5/Kubernetes/ApplicationGroup/{applicationGroupId}':

    get:
      summary: Get details of a Kubernetes application group
      x-terraform-resource: Kubernetes_Appgroup
      tags:
        - Kubernetes
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetApplicationGroupDetails'
      operationId: GetApplicationGroupDetails
      description: |-
        API to get details of a Kubernetes application group with applicationGroupId
      parameters:
        - name: applicationGroupId
          x-terraform-id: true
          in: path
          required: true
          schema:
            type: integer
            format: int32
          description: applicationGroupId is the ID of the Kubernetes application group

    put:
      summary: Update properties of a Kubernetes application group
      x-terraform-resource: Kubernetes_Appgroup
      tags:
        - Kubernetes
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      operationId: UpdateKubernetesAppGroupOp
      description: |-
        API to update properties of a Kubernetes application group
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateApplicationGroupRequest'
            examples:
              Update application group to rename and set new content and filter:
                value:
                  name: AppGroup01-renamed
                  content:
                    overwrite: true
                    applications:
                      - GUID: non-namespaced`Namespace`pod-2`65a3778c-410d-4cd5-ae64-42bf801a41ae
                        type: NAMESPACE
                      - GUID: default`Deployment`nginx-test`51a2378b-782r-4cd1-aa64-42bf823a62a3
                        type: APPLICATION
                  filters:
                    overwrite: true
                    skipStatelessApps: true
                    labelSelectors:
                      - selectorLevel: Namespace
                        selectorValue: backup=yes --all-namespaces
              Update application group to use different plan and set properties:
                value:
                  options:
                    onSnapFailureFallbackToLiveVolume: false
                    scheduleWorkerToConfigNamespace: true
                    workerResources:
                      cpuLimits: "0.6"
                      cpuRequests: "0.2"
                      memoryLimits: "13Gi"
                      memoryRequests: "12Mi"
                  plan:
                    id: 24
                    name: CSPlan-New
      parameters:
        - name: applicationGroupId
          x-terraform-id: true
          in: path
          required: true
          schema:
            type: integer
            format: int32
          description: applicationGroupId is the ID of the Kubernetes application group

    delete:
      summary: Delete a Kubernetes application group
      x-terraform-resource: Kubernetes_Appgroup
      tags:
        - Kubernetes
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      operationId: DeleteKubernetesAppGroup
      description: |-
        API to delete a Kubernetes application group with applicationGroupId
      parameters:
        - name: applicationGroupId
          x-terraform-id: true
          in: path
          required: true
          schema:
            type: integer
            format: int32
          description: applicationGroupId is the ID of the Kubernetes application group

  '/V5/Kubernetes/ApplicationGroup/{applicationGroupId}/Backup':

    post:
      summary: Run backup for an application group
      tags:
        - Kubernetes
      operationId: RunApplicationGroupBackup
      description: |-
        API to run backup for an application group
      parameters:

        - name: applicationGroupId
          in: path
          required: true
          schema:
            type: integer
            format: int32
          description: applicationGroupId is the ID of the Kubernetes application group

        - name: backupLevel
          in: query
          description: Backup level , Default :Incremental
          schema:
            type: string
            enum:
              - FULL
              - INCREMENTAL
              - DIFFERENTIAL
              - SYNTHETIC_FULL
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTaskRespforBackup'
        '404':
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'

  /V5/Kubernetes/ApplicationGroup/Preview:

    post:
      summary: Preview application group content for discovery of applications
      tags:
        - Kubernetes
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KubernetesApplicationGroupPreviewResp'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      operationId: PreviewApplicationGroup
      description: |-
        API to preview application content
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KubernetesApplicationGroupPreviewReq'
            examples:
              Preview example:
                value:
                  content:
                    applications:
                      - GUID: non-namespaced`Namespace`4140-test`5e2ad874-d9d2-43d2-9a0f-2e1f1d60d172
                        type: NAMESPACE
                    labelSelectors:
                      - selectorLevel: Application
                        selectorValue: backup=yes --all-namespaces
                  filters:
                    applications:
                      - GUID: 4140-test`Pod`nginx-storage`26566faf-07ec-4e9e-a414-5eb5bc3f1f56
                        type: APPLICATION
      parameters:
        - name: clusterId
          in: query
          required: true
          schema:
            type: integer
            format: int32
          description: clusterId of the Kubernetes client to do a Preview

  /V5/Kubernetes/Application:

    get:
      summary: Get all Kubernetes applications
      tags:
        - Kubernetes
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetApplicationsList'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      operationId: GetAllKubernetesApps
      description: |-
        API to get all Kubernetes applications

  '/V5/Kubernetes/Application/{appGUID}':

    get:
      summary: Get Kubernetes applications details
      tags:
        - Kubernetes
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KubernetesApplicationDetails'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      operationId: GetKubernetesAppDetails
      description: |-
        API to get details of a Kubernetes application
      parameters:

        - name: appGUID
          in: path
          required: true
          schema:
            type: string
            format: ''
          description: GUID of the Application to get details

  '/V5/Kubernetes/Application/{appGUID}/Backup':

    post:
      summary: Run backup for an application
      tags:
        - Kubernetes
      operationId: RunApplicationBackup
      description: |-
        API to run backup for an application
      parameters:

        - name: appGUID
          in: path
          required: true
          schema:
            type: string
            format: ''
          description: GUID of the Application to run backup for

        - name: backupLevel
          in: query
          description: Backup level , Default :Incremental
          schema:
            type: string
            enum:
              - FULL
              - INCREMENTAL
              - DIFFERENTIAL
              - SYNTHETIC_FULL
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTaskRespforBackup'
        '404':
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'

  '/V5/Kubernetes/ApplicationGroup/{applicationGroupId}/Browse/Namespace':

    get:
      summary: Browse backed up Namespaces of the application group
      tags:
        - Kubernetes
      operationId: DoNamespaceBrowse
      description: |-
        API to browse backed up namespaces for an application group
      parameters:
        - name: applicationGroupId
          in: path
          required: true
          schema:
            type: integer
            format: int32
          description: ID of the application group to browse for
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
          description: Page number for number of results in pagination
          example: 0
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
          description: Page limit for number of results in pagination
          example: 100
        - name: fromTime
          in: query
          required: false
          schema:
            type: integer
            format: int32
          description: Browse from a specific time (in epochs)
          example: 1693193428
        - name: toTime
          in: query
          required: false
          schema:
            type: integer
            format: int32
          description: Browse till a specific time (in epochs)
          example: 1693193901

      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KubernetesAppGroupNamespaceBrowseResp'
              examples:
                Example response:
                  value:
                    items:
                      - name: simple-depl
                        GUID: simple-depl`Namespace`simple-depl`85f12c05-ecfb-4045-9bf5-7a70816d3e3d
                        kind: Namespace
                        applicationSize: 0
                        modificationTime: 1692588994
                        path: "\\simple-depl`Namespace`simple-depl`85f12c05-ecfb-4045-9bf5-7a70816d3e3d"
                        backupJob:
                          jobId: 400561
                          time: 1692588994
        '404':
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'

  '/V5/Kubernetes/ApplicationGroup/{applicationGroupId}/Browse/Application':

    get:
      summary: Browse backed up Applications of the application group
      tags:
        - Kubernetes
      operationId: DoApplicationBrowse
      description: |-
        API to browse backed up applications for an application group
      parameters:
        - name: applicationGroupId
          in: path
          required: true
          schema:
            type: integer
            format: int32
          description: ID of the application group to browse for
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
          description: Page number for number of results in pagination
          example: 0
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
          description: Page limit for number of results in pagination
          example: 100
        - name: fromTime
          in: query
          required: false
          schema:
            type: integer
            format: int32
          description: Browse from a specific time (in epochs)
          example: 1693193428
        - name: toTime
          in: query
          required: false
          schema:
            type: integer
            format: int32
          description: Browse till a specific time (in epochs)
          example: 1693193901

      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KubernetesAppGroupApplicationBrowseResp'
              examples:
                Example response:
                  value:
                    items:
                      - name: my-deployment-same-app
                        nameSpace: simple-depl
                        GUID: simple-depl`Deployment`my-deployment-same-app`26aeacdb-96f3-4e93-9118-07c1345ea133
                        kind: Deployment
                        applicationSize: 1073741824
                        modificationTime: 1692589013
                        path: "\\simple-depl`Deployment`my-deployment-same-app`26aeacdb-96f3-4e93-9118-07c1345ea133"
                        backupJob:
                          jobId: 400562
                          time: 1692589013

        '404':
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'

  '/V5/Kubernetes/ApplicationGroup/{applicationGroupId}/Restore/Application':

    post:
      summary: Full Application Restore - Restore backed up Applications of the application group
      tags:
        - Kubernetes
      operationId: DoApplicationRestore
      description: |-
        API to run Full Application Restore for an application group
      parameters:
        - name: applicationGroupId
          in: path
          required: true
          schema:
            type: integer
            format: int32
          description: ID of the application group to restore from

      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KubernetesAppGroupApplicationRestore'
            examples:
              In-Place Restore of all Applications:
                value:
                  inPlace: true
              In-Place Restore of all Applications with modifier specified:
                value:
                  inPlace: true
                  modifier: 'apiVersion: v1\r\nkind: List\r\nitems:\r\n  - apiVersion: k8s.cv.io/v1\r\n    kind: RestoreModifier\r\n    metadata:\r\n      name: test-mod\r\n      namespace: cv-config\r\n    spec:\r\n      modifiers:\r\n        - action: Add\r\n          parameters: Exact\r\n          path: /new\r\n          selectorId: 9fb3a4a2-0f03-4dc0-93d4-4eabffe31b35\r\n          value: value\r\n      selectors:\r\n        - id: 9fb3a4a2-0f03-4dc0-93d4-4eabffe31b35\r\n          name: Pod\r\n\r\n'
              Out-of-place restore of specific application using different access node:
                value:
                  inPlace: false
                  destinationCluster:
                    id: 3
                    name: source-cluster
                  accessNode:
                    id: 4
                    name: bastionan01
                  applications:
                    - GUID: simple-depl`Deployment`my-deployment-same-app`26aeacdb-96f3-4e93-9118-07c1345ea133
              Cross-Cluster restore of specific application with rename and overwrite and different storage class:
                value:
                  inPlace: false
                  destinationCluster:
                    id: 5
                    name: destination-cluster
                  accessNode:
                    id: 4
                    name: bastionan01
                  applications:
                    - GUID: simple-depl`Deployment`my-deployment-same-app`26aeacdb-96f3-4e93-9118-07c1345ea133
                      name: my-deployment-renamed
                      nameSpace: simple-depl-rst
                      storageClass: azure-disk-csi
                  overwrite: true

      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTaskRespforBackup'
        '404':
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'

  '/V5/Kubernetes/ApplicationGroup/{applicationGroupId}/Restore/Namespace':

    post:
      summary: Namespace Level Restore - Restore backed up Namespaces of the application group
      tags:
        - Kubernetes
      operationId: DoNamespaceRestore
      description: |-
        API to run Namespace Level Restore for an application group
      parameters:
        - name: applicationGroupId
          in: path
          required: true
          schema:
            type: integer
            format: int32
          description: ID of the application group to restore from

      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KubernetesAppGroupNamespaceRestore'
            examples:
              In-Place Restore of all Namespaces:
                value:
                  inPlace: true
              In-Place Restore of all Namespaces with modifier specified and not restoring Applications:
                value:
                  inPlace: true
                  restoreApplications: false
                  modifier: 'apiVersion: v1\r\nkind: List\r\nitems:\r\n  - apiVersion: k8s.cv.io/v1\r\n    kind: RestoreModifier\r\n    metadata:\r\n      name: test-mod\r\n      namespace: cv-config\r\n    spec:\r\n      modifiers:\r\n        - action: Add\r\n          parameters: Exact\r\n          path: /new\r\n          selectorId: 9fb3a4a2-0f03-4dc0-93d4-4eabffe31b35\r\n          value: value\r\n      selectors:\r\n        - id: 9fb3a4a2-0f03-4dc0-93d4-4eabffe31b35\r\n          name: Pod\r\n\r\n'
              Out-of-place restore of specific namespace using different access node and restoring Applications:
                value:
                  inPlace: false
                  restoreApplications: true
                  destinationCluster:
                    id: 3
                    name: source-cluster
                  accessNode:
                    id: 4
                    name: bastionan01
                  namespaces:
                    - GUID: simple-depl`Namespace`simple-depl`85f12c05-ecfb-4045-9bf5-7a70816d3e3d
              Cross-Cluster restore of specific namespace with rename and overwrite:
                value:
                  inPlace: false
                  restoreApplications: true
                  destinationCluster:
                    id: 5
                    name: destination-cluster
                  namespaces:
                    - GUID: simple-depl`Deployment`my-deployment-same-app`26aeacdb-96f3-4e93-9118-07c1345ea133
                      name: simple-depl-rst
                  overwrite: true

      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTaskRespforBackup'
        '404':
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'

  '/V4/Plan/{planId}/BackupDestination/{backupDestionationId}/BackupCopy/Run':
    parameters:
      - schema:
          type: integer
          format: int32
        name: planId
        in: path
        required: true
      - schema:
          type: integer
          format: int32
        name: backupDestionationId
        in: path
        required: true
    post:
      summary: RunBackupCopyForPlan
      operationId: RunBackupCopy
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTaskRespforBackup'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      description: Run Backup copy job for a backupdestination
      tags:
        - Plan
  '/V4/Plan/{planId}/BackupDestination/{backupDestinationId}/Associations':
    get:
      summary: Get all the associated entities of backupdestination.
      operationId: GetBackupDestinationClientAssociations
      description: |
        Get all the associated server/server groups and included/excluded entities of backupdestination. It will also return summary of all the entities that will be auxcopied for backupdestination.
      parameters:
        - schema:
            type: integer
            format: int32
          name: planId
          in: path
          required: true
        - schema:
            type: integer
            format: int32
          name: backupDestinationId
          in: path
          required: true
        - schema:
            type: integer
            format: int32
          name: entityType
          in: query
          description: It is to further filter and get all the child entities of given entityType/entityId associated with backupdestination.
        - schema:
            type: integer
            format: int32
          name: entityId
          in: query
          description: It is to further filter and get all the child entities of given entityType/entityId associated with backupdestination.
      tags:
        - Plan
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupDestinationAssociationsResp'
        '404':
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
    put:
      summary: Update all the included/excluded entities of backupdestination.
      tags:
        - Plan
      operationId: UpdateBackupDestinationAssociations
      description:
        Update all the included/excluded entities of backupdestination.
      parameters:
        - schema:
            type: integer
            format: int32
          name: planId
          in: path
          required: true
        - schema:
            type: integer
            format: int32
          name: backupDestinationId
          in: path
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBackupDestinationAssociationsReq'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '404':
          description: Requested Details not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'

  '/V4/Plan/{planId}/BackupDestination/{backupDestinationId}/AuxCopy/Run':
    parameters:
      - schema:
          type: integer
          format: int32
        name: planId
        in: path
        required: true
        description: Id of the Plan
      - schema:
          type: integer
          format: int32
        name: backupDestinationId
        in: path
        required: true
        description: Id of Backup Destination.
    post:
      summary: Run aux copy for backup destination(s) of a plan
      operationId: RunAuxCopyForPlan
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTaskRespforBackup'
      description: Run aux copy job for backup destination(s) of a plan.
      tags:
        - Plan
      parameters:
        - schema:
            type: boolean
          in: query
          name: includeAllCopies
          description: Primary backupDestinationId can be passed in backupDestinationId Path param when includeAllCopies is set to true, this will trigger the aux copy on all supported backup destinations of a region
  /V4/Servers/Retire:
    put:
      summary: Retire Multiple Servers
      tags:
        - Servers
      operationId: RetireServers
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetireServersResponse'
        '500':
          description: Internal Server Error
      description: Retire multiple servers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RetireServersRequest'
  '/V4/mediaAgent/{mediaAgentId}/DDB/Disks':
    parameters:
      - schema:
          type: integer
          format: int32
        name: mediaAgentId
        in: path
        required: true
        description: Id of the MediaAgent
    get:
      summary: Get MediaAgent DDBDisks
      tags:
        - MediaAgent
        - HIDDEN
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MADDBDiskMgmtResp'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      operationId: GetMediaAgentDDBDisks
      description: Fetch the list of DDB disks hosted on the MediaAgent
    put:
      summary: Perform DDB disk management operations on MediaAgent
      operationId: MediaAgentDDBDiskMgmt
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MADDBDiskMgmtResp'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      description: Perform DDB disk management operations on MediaAgent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MADDBDiskMgmtReq'
        description: ''
      tags:
        - MediaAgent
        - HIDDEN
  '/V4/StoragePool/{storagePoolId}/MediaAgent':
    parameters:
      - schema:
          type: integer
          format: int32
        name: storagePoolId
        in: path
        required: true
        description: Id of the Storage Pool
    put:
      summary: 'Associate DDB or storage MediaAgent with the Storage Pool'
      operationId: AssociateMAWithStoragePool
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      description: API to manage MediaAgents associated with the Storage Pool
      tags:
        - Storage
        - HIDDEN
      parameters:
        - schema:
            type: integer
            format: int32
          in: query
          name: mediaAgentId
          required: true
          description: Id of the MediaAgent
        - schema:
            type: string
            format: int32
            enum:
              - ADD_DDB_ROLE
              - ADD_STORAGE_ROLE
              - ADD_DDB_STORAGE_ROLE
              - REMOVE_DDB_ROLE
              - REMOVE_STORAGE_ROLE
              - REMOVE_DDB_STORAGE_ROLE
          in: query
          name: action
          description: Action to performed on the MediaAgent
          required: true
  '/V4/ServerGroup/{serverGroupId}/Retire':
    parameters:
      - schema:
          type: integer
          format: int32
        name: serverGroupId
        in: path
        description: Id of the serverGroup in which servers need to be retired
        required: true
    put:
      summary: Retire Servers of a Server group
      operationId: RetireServerGroup
      tags:
        - Servers
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetireServerGroupResp'
        '404':
          description: Requested details not found
        '500':
          description: Internal Server Error
      description: Retire servers in given server group
  /V4/AnomalousAudits:
    get:
      summary: gets anomalous audits
      description: Get anomalous audits in the specified time
      operationId: GetAnomalousAudits
      tags:
        - AnomalousConditions
      parameters:
        - name: fromTime
          in: query
          required: false
          schema:
            type: integer
            format: int32
          description: Anomalous audits from a specific time (in epochs)
          example: 1693193428
        - name: toTime
          in: query
          required: false
          schema:
            type: integer
            format: int32
          description: Anomalous audits till a specific time (in epochs)
          example: 1693193901
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnomalousAuditsResp'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
  /V4/ServiceMesh:
    get:
      summary: Get Service Mesh details
      tags:
        - ServiceMesh
        - HIDDEN
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetServiceMeshDetailsResp'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      operationId: GetServiceMeshDetails
      description: Gets the Service mesh and it's related properties configured for this Commcell
    post:
      summary: Create Service Mesh
      tags:
        - ServiceMesh
        - HIDDEN
      operationId: CreateServiceMeshClient
      responses:
        '200':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdName'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      description: Create a Service mesh client representation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateServiceMeshReq'
        description: ''
    parameters: []
  '/V4/ServiceMesh/{clientId}':
    put:
      summary: Update properties of Service mesh client
      tags:
        - ServiceMesh
        - HIDDEN
      operationId: UpdateServiceMeshClientProperties
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      description: Update properties of a Service mesh client representation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateServiceMeshReq'
    delete:
      summary: Delete Service Mesh Client
      tags:
        - Service Mesh
        - HIDDEN
      operationId: DeleteServiceMeshClient
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      description: Delete Service Mesh client representation from the commcell
  /V4/Snaps/Subclients:
    get:
      summary: Get Subclients for Snap Engine
      tags:
        - SnapshotManagement
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSubclientForSnapEngine'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
            application/xml:
              schema:
                type: object
                properties: {}
      operationId: GetSubclientsForSnapEngine
      description: Get subclients configured with a particular snap engine
  /V4/AddedGlobalSettings:
    get:
      summary: Get Added Global Settings
      tags:
        - AdditionalSettings
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAddedGlobalSettings'
              examples: {}
      operationId: ListAddedGlobalSettings
      description: Get list of global settings used to modify system default behaviour
  /V4/LookupSettings:
    get:
      summary: Get all available settings
      tags:
        - AdditionalSettings
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAdditionalSettings'
      operationId: ListAvailableSettings
      description: List all available settings that can be added to entity or global
  '/V4/StoragePool/{storagePoolId}/Airgap':
    parameters:
      - schema:
          type: integer
          format: int32
        name: storagePoolId
        in: path
        required: true
        description: Id of the StoragePool
    put:
      summary: Enable Airgap on StoragePool
      operationId: EnableAirgapOnStoragePool
      tags:
        - Storage
        - HIDDEN
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      description: 'This API enables Airgap on StoragePool and all its associated MediaAgents. This action is irreversible, once enabled Airgap cannot be disabled on the StoragePool.'
  /V4/AddedEntitySettings:
    get:
      summary: List added entity settings
      tags:
        - AdditionalSettings
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAddedEntitySettings'
      operationId: ListAddedEntitySettings
      description: 'Returns a list of all entity settings added '
  /CloudApps/TestCloudConnection:
    post:
      summary: Verify Cloud Resource Connectivity
      tags:
        - CloudApps
      responses:
        '200':
          description: An 'errorCode' of 1 denotes a successful connection, while 0 indicates failure with details provided in 'errorMessage'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
                example: Request body is empty or format is invalid.
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '404':
          description: Requested details not found
        '500':
          description: Internal Server Error
      operationId: TestCloudConnection
      description: Verifies cloud resource connectivity from a list of backup gateways to given hostname and port
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestCloudConnectionReq'
      x-stoplight:
        id: pkvpr05cdb353
  /V4/CVFS/S3Bucket:
    post:
      description: Used to create CVFS S3 bucket and assigns READ-WRITE permission to the requesting user
      tags:
        - CVFS
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCVFSS3Bucket'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateCVFSS3BucketResp'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        '500':
          description: Internal Server Eror
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
      operationId: CreateCVFS-S3Bucket
      summary: Create CVFS S3 Bucket of given properties
  '/V4/CVFS/S3Bucket/{id}':
    parameters:
      - name: id
        in: path
        description: ID of the bucket
        required: true
        schema:
          type: integer
          format: int32
    put:
      description: Used to update CVFS S3 Bucket properties and User Access
      tags:
        - CVFS
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCVFSS3Bucket'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        '404':
          description: Requested bucket to update does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
      operationId: UpdateCVFS-S3Bucket
      summary: Update exsiting CVFS S3 Bucket properties and User Access
    delete:
      description: Used to delete an existing CVFS S3 Bucket
      tags:
        - CVFS
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        '404':
          description: Requested bucket to update does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
      operationId: DeleteCVFS-S3Bucket
      summary: Delete existing CVFS S3 Bucket
    get:
      summary: Fetch existing CVFS S3 Bucket details
      tags:
        - CVFS
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCVFSS3BucketResp'
        '404':
          description: Requested bucket does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
      operationId: GetCVFS-S3Bucket
      description: Fetches the details of the given CVFS bucket
  '/V4/CVFS/S3Bucket/{id}/Clone':
    parameters:
      - name: id
        in: path
        description: ID of the bucket
        required: true
        schema:
          type: integer
          format: int32
    post:
      description: Create the bucket clone of the given bucket id
      operationId: CreateS3BucketClone
      summary: Create the bucket clone
      tags:
        - CVFS
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCVFSS3BucketClone'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateCVFSS3BucketCloneResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        '500':
          description: Internal Server Eror
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
    get:
      description: Fetches the list of clones for the given bucket id
      operationId: GetListS3BucketClone
      summary: Fetch the list of clones
      tags:
        - CVFS
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCVFSS3BucketCloneResp'
        '404':
          description: No Clones Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        '500':
          description: Internal Server Eror
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
  '/V4/CVFS/S3Bucket/{id}/Clone/{cloneId}':
    parameters:
      - name: id
        in: path
        description: ID of the bucket
        required: true
        schema:
          type: integer
          format: int32
      - name: cloneId
        in: path
        description: ID of the cloned bucket
        required: true
        schema:
          type: integer
          format: int32
    get:
      description: Fetch the details of the clone of the given ID
      operationId: GetS3BucketCloneDetails
      summary: Fetch the CVFS S3 Clone Details
      tags:
        - CVFS
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCVFSS3BucketCloneDetailsResp'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        '500':
          description: Internal Server Eror
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
    put:
      description: Update the bucket clone properties
      operationId: UpdateS3BucketCloneExpiry
      summary: Update the bucket clone properties
      tags:
        - CVFS
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCVFSS3CloneReq'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        '500':
          description: Internal Server Eror
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
    delete:
      description: Delete the clone with the given ID before the expiry time
      operationId: DeleteS3BucketClone
      summary: Delete the S3 Clone
      tags:
        - CVFS
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        '500':
          description: Internal Server Eror
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
  /V4/User/S3AccessKey:
    get:
      description: Get the S3 Access Key for the logged in user on email
      operationId: GetS3AccessKey
      summary: Fetch the S3AccessKey for the logged in user
      tags:
        - CVFS
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        '500':
          description: Internal Server Eror
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
    put:
      description: rotates the S3AccessKey for the logged in user
      operationId: RotateS3AccessKey
      summary: Rotate the S3AccessKey for the logged in user
      tags:
        - CVFS
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        '500':
          description: Internal Server Eror
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
  '/V4/User/{id}/S3AccessKey':
    parameters:
      - name: id
        in: path
        description: ID of the user
        required: true
        schema:
          type: integer
          format: int32
    get:
      description: Get the S3 Access Key for the given user on their email
      operationId: GetUserS3AccessKey
      summary: Request the S3 Access Key for the given User Id
      tags:
        - CVFS
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        '500':
          description: Internal Server Eror
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
    put:
      description: Rotate the S3AccessKey for the given User Id
      operationId: RotateUserS3AccessKey
      summary: Rotate the S3AccessKey for the given User Id
      tags:
        - CVFS
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        '500':
          description: Internal Server Eror
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
  /V4/CyberResilience:
    post:
      summary: Configure Cyber Resilience
      operationId: ConfigureCyberResilience
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CyberResilienceGenericResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CyberResilienceGenericResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CyberResilienceGenericResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CyberResilienceGenericResponse'
      description: Configures Cyber Resilience in the environment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CyberResilienceConfigureRequest'
      tags:
        - CyberResilience
  /V4/CyberResilience/Credentials:
    get:
      summary: Get Cyber Resilience Credentials
      tags:
        - CyberResilience
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CyberResilienceCredentials'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CyberResilienceGenericResponse'
      operationId: GetCyberResilienceCredentials
      description: Retrieve the list of credentials for Cyber Resilience
      parameters:
        - schema:
            type: boolean
            default: false
          in: query
          name: retrieveConfiguredOnly
          description: 'If set to true, retrieve only the credentials that are configured'
    put:
      summary: Manage Cyber Resilience Credentials
      operationId: ManageCyberResilienceCredentials
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CyberResilienceGenericResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CyberResilienceGenericResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CyberResilienceGenericResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CyberResilienceGenericResponse'
      description: Manage Credentials configured for Cyber Resilience
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CyberResilienceManageCredentials'
      tags:
        - CyberResilience
  '/v4/hypervisor/{hypervisorId}/filter':
    parameters:
      - schema:
          type: string
        name: hypervisorId
        in: path
        required: true
    put:
      summary: Update hypervisor filters
      tags:
        - Hypervisor Operations
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      operationId: UpdateHypervisorFilter
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateHypervisorFilterReq'
      description: Update hypervisor filter details
    get:
      summary: Get hypervisor filters
      tags:
        - Hypervisor Operations
      operationId: GetHypervisorFilter
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetHypervisorFilterResp'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      description: Get hypervisor filters
      parameters:
        - schema:
            type: string
          in: query
          name: backupsetId
          description: if not specified the default backupset will be fetched
  '/V4/VaultTrackerAction/Operation':
    post:
      tags:
        - TapeStorage
      x-excludedfrom-saas: true
      description: Perform VaultTracker Operations
      summary: Operations for VaultTracker Actions
      operationId: VaultTrackerOperation
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VaultTrackerOperationReq'
  '/V4/Library/{libraryId}/Media':
    parameters:
      - schema:
          type: integer
          format: int32
        name: libraryId
        in: path
        required: true
        description: Id of Library
    get:
      tags:
        - TapeStorage
      x-excludedfrom-saas: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMediaListResp'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
      operationId: GetMediaListForLibrary
      parameters:
        - schema:
            $ref: '#/components/schemas/FilterMediaType'
          in: query
          name: filterMediaType
          required: true
          description: Filter media list to given FilterMediaType
        - schema:
            type: boolean
          in: query
          name: isExported
          required: true
          description: List "Media In Library" only if isExported is set to false otherwise list "Exported Media"
      description: Get the list of media for given library.
      summary: Get Media List for a Library
  '/V4/Library/{libraryId}/Slot':
    parameters:
      - schema:
          type: integer
          format: int32
        name: libraryId
        in: path
        required: true
        description: Id of Library
    get:
      tags:
        - TapeStorage
      x-excludedfrom-saas: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSlotListResp'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
      operationId: GetSlotListForLibrary
      parameters:
        - schema:
            $ref: '#/components/schemas/SlotTypes'
          in: query
          name: slotType
          required: true
          description: Filter slot list to given SlotTypes
      description: Get the list of slot for given library.
      summary: Get Slot List for a Library
  '/V4/VaultTrackerAction':
    get:
      tags:
        - TapeStorage
      x-excludedfrom-saas: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetVaultTrackerActionListResp'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
      operationId: GetVaultTackerActionList
      parameters:
        - schema:
            type: string
            default: lastHour
          in: query
          name: view
          required: false
          description: 'Time period selection for which to fetch actions. Accepted values [lastHour, last24Hours, lastWeek, lastMonth, last3Months, last6Months, lastYear, custom]. When custom is selected Actions are filtered based on values provided in other params.'
        - schema:
            type: integer
            format: int32
            default: 0
          in: query
          name: libraryId
          required: false
          description: Filter by libraryId
        - schema:
            type: integer
            format: int32
            default: 0
          in: query
          name: policyId
          required: false
          description: Filter by policyId
        - schema:
            type: integer
            format: int64
          in: query
          name: startTime
          required: false
          description: Start time of the time range.
        - schema:
            type: integer
            format: int64
          in: query
          name: endTime
          required: false
          description: End time of the time range.
      description: Get the list of vault tracker actions.
      summary: Get Vault Tracker Action List
  '/V4/VaultTracker/Media':
    get:
      tags:
        - TapeStorage
      x-excludedfrom-saas: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetVaultTrackerMediaDetailsResp'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
      operationId: GetVaultTrackerMediaDetails
      parameters:
        - schema:
            type: integer
            format: int32
            default: 0
          in: query
          name: actionId
          required: false
          description: List Media by actionId
        - schema:
            type: integer
            format: int32
            default: 0
          in: query
          name: policyId
          required: false
          description: List Media by policyId
        - schema:
            type: integer
            format: int32
            default: 0
          in: query
          name: containerId
          required: false
          description: List Media by containerId
        - schema:
            type: integer
            format: int32
            default: 0
          in: query
          name: locationId
          required: false
          description: List Media by locationId
      description: Get the details of vault tracker media.
      summary: Get Vault Tracker Media Details either by actionId or by policyId or by containerId or by locationId
  '/V4/StoragePool/{storagePoolId}/DDB/Verify':
    parameters:
      - schema:
          type: integer
          format: int32
        name: storagePoolId
        in: path
        required: true
        description: Id of the Storage Pool
    put:
      summary: DDB Verification operation on Storage pool
      operationId: DDBVerificationOnStoragePool
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArchiveCheckOperationResp'
      description: API to run DDB verification jobs on SIDB Stores associated storage pool
      tags:
        - Storage
      parameters:
        - schema:
            type: string
            enum:
              - QUICK_DDB_VERIFICATION
              - DDB_AND_DATA_VERIFICATION
          in: query
          name: DDBVerificationLevel
          description: Deduplication Database and Disk Data Verification Level
          required: true
  '/V4/StoragePool/{storagePoolId}/DDB/SpaceReclaim':
    parameters:
      - schema:
          type: integer
          format: int32
        name: storagePoolId
        in: path
        required: true
        description: Id of the Storage Pool
    put:
      summary: DDB Space Reclamation operation on Storage pool
      operationId: DDBSpaceReclaimOnStoragePool
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArchiveCheckOperationResp'
      description: API to run DDB Space Reclamation jobs on SIDB Stores associated storage pool
      tags:
        - Storage
      parameters:
        - schema:
            type: string
            enum:
              - DDB_DEFRAGMENTATION
          in: query
          name: DDBVerificationLevel
          description: Deduplication Database and Disk Data Verification Level
          required: true
  '/V4/Snaps/snapEngine/{snapEngineId}/Plan/{planId}/Subclients':
    parameters:
      - schema:
          type: integer
          format: int32
        name: planId
        in: path
        required: true
        description: plan Id
      - schema:
          type: integer
          format: int32
        name: snapEngineId
        in: path
        required: true
        description: Snap Engine Id
    get:
      summary: Get subclients for replication
      tags:
        - Snapshot Operations
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSubclientForSnapEngine'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      operationId: GetSubclientsForReplication
      description: Get subclients for requested snapEngineId for requested planId and copyId.
      parameters:
        - schema:
            type: integer
            format: int32
          in: query
          name: copyId
          description: Copy Id
  '/V4/Plan/{planId}/BackupDestination/{backupDestinationId}/SnapCatalog/Jobs':
    parameters:
      - schema:
          type: integer
          format: int32
        name: planId
        in: path
        required: true
        description: plan Id
      - schema:
          type: integer
          format: int32
        name: backupDestinationId
        in: path
        required: true
        description: Backup Destination Id
    put:
      summary: pick or unpick jobs for snapshot catalog
      operationId: PickUnpickJobsForCatalog
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      description: Send job details to pick or unpick jobs for snapshot catalog
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobsForSnapCatalog'
        description: Job details for unpicking jobs for snapshot catalog.
      tags:
        - Plan
  /V4/CyberResilience/Credentials/Sync:
    put:
      summary: Sync Cyber Resilience Credentials
      operationId: SyncCyberResilienceCredentials
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CyberResilienceGenericResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CyberResilienceGenericResponse'
      tags:
        - CyberResilience
      description: Sync the Credentials configured for Cyber Resilience with latest information
  '/V4/Plan/{planId}/BackupDestination/{backupDestionationId}/SnapCatalog/Run':
    parameters:
      - schema:
          type: integer
          format: int32
        name: planId
        in: path
        required: true
      - schema:
          type: integer
          format: int32
        name: backupDestionationId
        in: path
        required: true
    post:
      summary: RunSnapCatalogForPlan
      operationId: RunSnapCatalog
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTaskRespforBackup'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
      description: Run deferred snap catalog job for a backupdestination
      tags:
        - Plan
  /V4/CyberResilience/Credentials/Sync/Status:
    get:
      summary: Get Cyber Resilience Sync Status
      tags:
        - CyberResilience
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CyberResilienceSyncStatus'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CyberResilienceGenericResponse'
      operationId: GetCyberResilienceSyncStatus
      description: Retrieve the sync status for configured credentials
  /V4/CyberResilience/TCO:
    post:
      summary: Calculate Total Cost Of Ownership
      operationId: CalculateTotalCostOfOwnership
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TCOCalculateResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CyberResilienceGenericResponse'
      tags:
        - CyberResilience
      description: Calculate the Total Cost Of Ownership for AZURE or AWS in comparison to Commvault Cloud
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TCOCalculateRequest'
    parameters: []
  /VirtualLabs:
    get:
      summary: List of Virtual Labs
      tags:
        - VMProvisioning
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VMLabList'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
      operationId: getVirtualLabs
      description: Get List of Virtual Labs

  /VirtualLab/VirtualMachines:
    get:
      summary: List of VMs in Lab
      tags:
        - VMProvisioning
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VMList'
        '401':
          description: Unauthorized
        '404':
          description: Lab Not Found
        '500':
          description: Internal Server Error
      operationId: getLabVMs
      description: List of virtual machines created under lab
      parameters:
        - schema:
            type: number
          in: query
          name: id
          description: Lab Id
        - schema:
            type: string
          in: query
          name: name
          description: Lab Name
    parameters: []
  '/VMProvisioning/VirtualMachine/{vmGUID}':
    get:
      summary: VM Details By GUID
      tags:
        - VMProvisioning
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VMDetails'
        '401':
          description: Unauthorized
        '404':
          description: VM Not Found
        '500':
          description: Internal Server Error
      operationId: getVMDetailsByGUID
      description: Get Virtual Machine Details by GUID
    parameters:
      - schema:
          type: string
        name: vmGUID
        in: path
        required: true
        description: GUID of Virtual Machine
  /VMProvisioning/VirtualMachines/Action:
    parameters: []
    post:
      tags:
        - VMProvisioning
      operationId: postVMProvisioningVMAction
      summary: Perform Virtual Machine Operations
      description: 'Perform VM operations :- PowerOn, PowerOff, Delete, Reset, Edit Owners, Edit Creators'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VMActionReq'
        description: 'VMs list request body'
  /V4/MultiCommCell:
    get:
      tags:
        - MultiCommCell
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiCommCellInfoResp'
        '404':
          description: Requested details not found.
      description: Retrieve List of MultiCommCells
      operationId: GetMultiCommCellInfo
      summary: Retrieves a list of MultiCommCells names along with their associated id and GUID. This endpoint provides an overview of all communication cells within the system.
  '/VMProvisioning/VirtualMachine/{vmGUID}/Snapshots':
    parameters:
      - schema:
          type: string
        name: vmGUID
        in: path
        required: true
    get:
      tags:
        - VMProvisioning
      summary: Get Snapshots for Virtual Machine
      operationId: getvirtualmachinesnapshots
      description: Get snapshots for virtual machine
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VMSnapshotResp'
        '404':
          description: Virtual Machine Not Found
        '500':
          description: Internal Server Error
  /V4/Schedule/list:
    post:
      tags:
        - Schedule
      summary: Endpoint to get schedules based on filters
      operationId: getschedules
      description: API to get non plan schedules based on various filters
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskListRequest'
        description: Filter options for the result set
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskListResponse'
  /V4/SchedulePolicy/list:
    post:
      tags:
        - Schedule
      summary: Endpoint to get schedule policies
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskListResponse'
      operationId: GetSchedulePolicies
      description: API to fetch non plan schedule policies
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskListRequest'
  /V4/CommServ/HostName:
    put:
      summary: Change CommServ hostname
      operationId: ChangeCommServHostName
      description: Send new hostname for CommServ
      tags:
        - CommServ
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeCommServHostNameReq'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
  /V4/Servers/Domain:
    get:
      summary: Get domain for servers
      operationId: GetServerDomain
      description: Get list of servers and respective domains
      tags:
        - Servers
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetServerDomainResp'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
    put:
      summary: Change domain for servers
      operationId: ChangeServerDomain
      description: Change domain for list of servers
      tags:
        - Servers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeServerDomainReq'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResp'
components:
  schemas:
    IdName:
      type: object
      properties:
        id:
          type: integer
          format: int32
          x-terraform-set-key: true
        name:
          type: string
          nullable: true
    IdNameFullName:
      title: IdNameFullName
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        fullName:
          type: string
    IdNameCompany:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        company:
          $ref: '#/components/schemas/IdName'
    IdNameGUID:
      type: object
      properties:
        id:
          type: integer
          format: int32
        GUID:
          type: string
        name:
          type: string
    IdNameProvider:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        provider:
          $ref: '#/components/schemas/IdName'
    IdNameStatus:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        status:
          type: string
    IdNameDisplayName:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        displayName:
          type: string
          nullable: true
    IdNameDisplayNameCompany:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        displayName:
          type: string
          nullable: true
        company:
          $ref: '#/components/schemas/IdName'
    IdNameType:
      type: object
      properties:
        id:
          x-terraform-set-key: true
          type: integer
          format: int32
        name:
          type: string
        type:
          x-terraform-set-key: true
          type: string
    IdNameGUIDType:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        GUID:
          type: string
        type:
          type: string

    IdNameCount:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        count:
          type: integer
          format: int32
    IdNameValue:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        value:
          type: string
    NameGUID:
      type: object
      properties:
        GUID:
          type: string
        name:
          type: string
    EntityDetails:
      type: object
      properties:
        entities:
          type: array
          items:
            $ref: '#/components/schemas/IdName'
          nullable: true
    PlanIdNameType:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        subType:
          $ref: '#/components/schemas/SubTypes'
      title: ''
    DayOfTheWeek:
      enum:
        - SUNDAY
        - MONDAY
        - TUESDAY
        - WEDNESDAY
        - THURSDAY
        - FRIDAY
        - SATURDAY
      type: string
      format: ''
      description: Specific day of the week
    DayOfWeek:
      enum:
        - SUNDAY
        - MONDAY
        - TUESDAY
        - WEDNESDAY
        - THURSDAY
        - FRIDAY
        - SATURDAY
        - DAY
        - WEEKDAY
        - WEEKEND_DAYS
      type: string
      format: ''
    ListOpType:
      enum:
        - ADD
        - MODIFY
        - DELETE
        - NONE
        - OVERWRITE
      type: string
      format: ''
      description: Operation type for the list
    ListOperationType:
      enum:
        - NONE
        - OVERWRITE
        - ADD
        - DELETE
        - CLEAR
      type: string
      format: ''
      description: List operation type
    BasicListOpType:
      enum:
        - ADD
        - DELETE
      type: string
      format: ''
      description: Basic operation types
    DayAndTime:
      type: object
      properties:
        dayOfWeek:
          type: array
          items:
            $ref: '#/components/schemas/DayOfTheWeek'
          nullable: true
        startTime:
          type: integer
          x-terraform-omitempty: false
          description: Time in seconds since the beginning of the day
          format: int64
        endTime:
          type: integer
          description: Time in seconds since the beginning of the day
          format: int64
    WeekOfMonth:
      enum:
        - FIRST
        - SECOND
        - THIRD
        - FOURTH
        - LAST
        - EVERY
      type: string
      format: ''
    WeekOfTheMonth:
      enum:
        - FIRST
        - SECOND
        - THIRD
        - FOURTH
        - LAST
      type: string
      format: ''
      description: Specific week of a month
    MonthOfYear:
      enum:
        - JANUARY
        - FEBRUARY
        - MARCH
        - APRIL
        - MAY
        - JUNE
        - JULY
        - AUGUST
        - SEPTEMBER
        - OCTOBER
        - NOVEMBER
        - DECEMBER
      type: string
      format: ''
    PlanPattern:
      type: object
      description: 'If updating pattern, the value which needs to be retained also needs to be provided along with the updated value'
      properties:
        minuteFrequency:
          type: integer
          description: Frequency in minutes
          format: int32
          minimum: 1
        hourlyFrequency:
          type: integer
          description: 'Frequency in hours per day. Precedence is hourly, daily, weekly and monthly, in that order.'
          format: int32
          minimum: 1
        dailyFrequency:
          type: integer
          description: Frequency in days
          format: int32
          minimum: 1
        weeklyFrequency:
          type: integer
          format: int32
          description: Frequency in weeks. Only for incremental backup frequency.
          minimum: 1
        weeklyFrequencyDays:
          type: array
          description: Days of the week for weekly frequency
          items:
            $ref: '#/components/schemas/DayOfTheWeek'
        monthlyFrequency:
          type: integer
          format: int32
          description: Frequency in months. Only for incremental backup frequency.
          minimum: 1
        monthlyFrequencyWeekOfMonth:
          $ref: '#/components/schemas/WeekOfTheMonth'
        monthlyFrequencyDayOfWeek:
          $ref: '#/components/schemas/DayOfWeek'
        monthlyFrequencyDayOfMonth:
          type: integer
          minimum: 1
          maximum: 31
          format: int32
          description: Only available for incremental backup frequency
        yearlyFrequencyWeekOfMonth:
          $ref: '#/components/schemas/WeekOfTheMonth'
        yearlyFrequencyDayOfWeek:
          $ref: '#/components/schemas/DayOfWeek'
        yearlyFrequencyDayOfMonth:
          type: integer
          minimum: 1
          maximum: 31
          format: int32
          description: Only available for incremental backup frequency
        yearlyFrequencyMonthOfYear:
          $ref: '#/components/schemas/MonthOfYear'
        startTime:
          type: integer
          description: 'Time in seconds from the beginning of the day when the backup starts. This is a mandatory field for daily, weekly, monthly, yearly frequencies'
          format: int32
    ServerBackupPlanRPO:
      type: object
      description: Recovery Point Objective (RPO) is the maximum amount of time that data can be lost during a service disruption. Your RPO determines the frequency of your backup jobs.
      properties:
        backupFrequency:
          $ref: '#/components/schemas/PlanSchedules'
        backupWindow:
          type: array
          description: Backup window for incremental backup
          nullable: true
          items:
            $ref: '#/components/schemas/DayAndTime'
        fullBackupWindow:
          type: array
          description: Backup window for full backup
          nullable: true
          items:
            $ref: '#/components/schemas/DayAndTime'
    ServerPlanRPO:
      type: object
      description: Recovery Point Objective (RPO) is the maximum amount of time that data can be lost during a service disruption. Your RPO determines the frequency of your backup jobs.
      properties:
        backupFrequency:
          $ref: '#/components/schemas/PlanSchedules'
        backupWindow:
          type: array
          description: Backup window for incremental backup
          nullable: true
          items:
            $ref: '#/components/schemas/DayAndTime'
        fullBackupWindow:
          type: array
          description: Backup window for full backup
          nullable: true
          items:
            $ref: '#/components/schemas/DayAndTime'
        SLA:
          $ref: '#/components/schemas/SLAOptions'
    ServerPlanUpdateRPO:
      type: object
      description: Recovery Point Objective (RPO) is the maximum amount of time that data can be lost during a service disruption. Your RPO determines the frequency of your backup jobs.
      properties:
        backupFrequency:
          $ref: '#/components/schemas/PlanSchedules'
        backupWindow:
          type: array
          description: Backup window for incremental backup
          nullable: true
          items:
            $ref: '#/components/schemas/DayAndTime'
        fullBackupWindow:
          type: array
          description: Backup window for full backup
          nullable: true
          items:
            $ref: '#/components/schemas/DayAndTime'
        SLA:
          $ref: '#/components/schemas/SLAUpdateOptions'
    ServerPlanUpdateSchedules:
      type: object
      description: Modify the schedules for the backup jobs.
      properties:
        backupFrequency:
          $ref: '#/components/schemas/PlanSchedules'
    PlanSchedules:
      title: PlanSchedules
      type: object
      properties:
        schedules:
          type: array
          x-terraform-list: true
          x-terraform-sort: handler.SortPlanSchedules
          nullable: true
          items:
            $ref: '#/components/schemas/PlanSchedule'
        operationType:
          x-terraform-constant: OVERWRITE
          x-terraform-listdata: t_schedules
          $ref: '#/components/schemas/ListOpType'
    PlanContentDataReaders:
      type: object
      properties:
        useOptimal:
          type: boolean
          description: Set optimal number of data readers. if it is set to true, count will be ignored.
        count:
          minimum: 1
          type: integer
          format: int32
          description: Number of data readers.
    PlanContent:
      type: object
      properties:
        windowsIncludedPaths:
          x-terraform-statecopy: true
          type: array
          items:
            type: string
          description: Paths to include for Windows
          nullable: true
        windowsExcludedPaths:
          x-terraform-statecopy: true
          type: array
          items:
            type: string
          description: Paths to exclude for Windows
          nullable: true
        windowsFilterToExcludePaths:
          x-terraform-statecopy: true
          type: array
          items:
            type: string
          description: Paths that are exception to excluded paths for Windows
          nullable: true
        backupSystemState:
          type: boolean
          description: Do you want to back up the system state? Applicable only for Windows
        backupSystemStateOnlyWithFullBackup:
          type: boolean
          description: Do you want to back up system state only with full backup? Applicable only if the value of backupSystemState is true
          default: false
        useVSSForSystemState:
          type: boolean
          description: Do you want to back up system state with VSS? Applicable only if the value of backupSystemState is true
        windowsNumberOfDataReaders:
          $ref: '#/components/schemas/PlanContentDataReaders'
        macIncludedPaths:
          x-terraform-statecopy: true
          type: array
          items:
            type: string
          description: Paths to include for Mac
          nullable: true
        macExcludedPaths:
          x-terraform-statecopy: true
          type: array
          items:
            type: string
          description: Paths to exclude for Mac
          nullable: true
        macFilterToExcludePaths:
          x-terraform-statecopy: true
          type: array
          items:
            type: string
          description: Paths that are exception to excluded paths for Mac
          nullable: true
        unixNumberOfDataReaders:
          $ref: '#/components/schemas/PlanContentDataReaders'
        unixIncludedPaths:
          x-terraform-statecopy: true
          type: array
          items:
            type: string
          description: Paths to include for UNIX
          nullable: true
        unixExcludedPaths:
          x-terraform-statecopy: true
          type: array
          items:
            type: string
          description: Paths to exclude for UNIX
          nullable: true
        unixFilterToExcludePaths:
          x-terraform-statecopy: true
          type: array
          items:
            type: string
          description: Paths that are exception to excluded paths for Unix
          nullable: true
        macNumberOfDataReaders:
          $ref: '#/components/schemas/PlanContentDataReaders'
        forceUpdateProperties:
          type: boolean
          description: Do you want to sync properties on associated subclients even if properties are overriden at subclient level?
      description: This feature applies only to file system agents
    ServerPlanDatabaseOptions:
      type: object
      properties:
        logBackupRPOMins:
          type: integer
          description: Log backup RPO in minutes
          format: int32
        useDiskCacheForLogBackups:
          type: boolean
          description: Use disk cache for log backups
        commitFrequencyInHours:
          type: integer
          description: Commit frequency in hours
          format: int32
      description: This feature applies only to database agents
    ServerPlanDatabaseOptionsInfo:
      type: object
      description: This feature applies only to database agents
      properties:
        logBackupRPOMins:
          type: integer
          description: Log backup RPO in minutes
          format: int32
        runFullBackupEvery:
          type: integer
          description: Full backup frequency in days
          format: int32
        useDiskCacheForLogBackups:
          type: boolean
          description: Use disk cache for log backups
        commitFrequencyInHours:
          type: integer
          description: Commit frequency in hours
          format: int32
    ServerPlanSettings:
      title: ''
      type: object
      properties:
        fileSearch:
          $ref: '#/components/schemas/PlanFileSearch'
        enableAdvancedView:
          type: boolean
          description: Setting to suggest plan has some advanced settings present. Setting is OEM specific and not applicable for all cases.
        deviceStreams:
          type: integer
          format: int32
          default: 100
          description: For each region, the data to backup is divided into these many streams while writing to backup destination.
        upgradedFromStoragePolicy:
          type: boolean
          description: Setting to suggest plan was created from PolicyToPlan workflow. If true, editing RPO is not allowed.
    PlanFileSearch:
      title: ''
      type: object
      description: 'This feature applies to file servers and virtualization. Enabling this feature allows you to search for backed-up files using the global search bar, and creates resource pools with required infrastructure entities.'
      properties:
        enabled:
          type: boolean
          description: Flag for enabling indexing
        status:
          $ref: '#/components/schemas/IndexingStatusType'
        statusMessage:
          type: string
          description: 'Tells what is happening behind the scene, so that user can knows why indexing is not enabled or if its in progress'
          nullable: true
        errors:
          x-terraform-include: false
          type: array
          description: File search was enabled on plan but failed to process some of the storage pool(s) with these errors
          nullable: true
          items:
            $ref: '#/components/schemas/PlanFileSearchSetupError'
    PlanFileSearchSetupError:
      title: PlanFileSearchSetupError
      type: object
      properties:
        storage:
          $ref: '#/components/schemas/IdName'
        errorCode:
          type: integer
          format: int32
        errorMessage:
          type: string
          description: Tells about the error occured during file search setup for given storage pool
    ServerPlanInheritSettings:
      title: ServerPlanInheritSettings
      type: object
      properties:
        basePlan:
          $ref: '#/components/schemas/IdName'
        storagePool:
          $ref: '#/components/schemas/PlanOverridenOptions'
        RPO:
          $ref: '#/components/schemas/PlanOverridenOptions'
        backupContent:
          $ref: '#/components/schemas/PlanOverridenOptions'
    LaptopPlanInheritSettings:
      title: LaptopPlanInheritSettings
      type: object
      properties:
        basePlan:
          $ref: '#/components/schemas/IdName'
        storagePool:
          $ref: '#/components/schemas/PlanOverridenOptions'
        RPO:
          $ref: '#/components/schemas/PlanOverridenOptions'
        backupContent:
          $ref: '#/components/schemas/PlanOverridenOptions'
        retention:
          $ref: '#/components/schemas/PlanOverridenOptions'
    PlanOverridenOptions:
      title: PlanOverridenOptions
      type: object
      properties:
        overrideBase:
          $ref: '#/components/schemas/PlanOverrideOptions'
        overridden:
          type: boolean
          description: Flag telling if this setting is currently being overriden
    PlanOverrideInheritSetting:
      title: PlanOverrideInheritSetting
      type: object
      description: 'This feature applies to derived plans when inherit mode is optional.Provides user to set entity preference between parent and derived plan.'
      properties:
        backupDestination:
          type: boolean
          description: Flag to specify if parent or derived plan backupDestination should be used when inherit mode is optional. True - derived, False - Base.
        rpo:
          type: boolean
          description: Flag to specify if parent or derived plan rpo should be used when inherit mode is optional. True - derived, False - Base.
        backupContent:
          type: boolean
          description: Flag to specify if parent or derived plan backupContent should be used when inherit mode is optional. True - derived, False - Base.
    PlanFullBackupType:
      enum:
        - All_JOBS
        - ALL_FULLS
        - HOURLY_FULLS
        - DAILY_FULLS
        - WEEKLY_FULLS
        - MONTHLY_FULLS
        - QUARTERLY_FULLS
        - HALF_YEARLY_FULLS
        - YEARLY_FULLS
        - ADVANCED
      type: string
      format: ''
      description: All_JOBS means SYNCHRONOUS copy type, others are applicable for SELECTIVE copy Type only.
    PlanRetentionRule:
      type: object
      properties:
        isInfiniteRetention:
          type: boolean
          description: If this is set as true, no need to specify retentionPeriodDays.
        retentionPeriodDays:
          type: integer
          description: If this is set, no need to specify isInfiniteRetention as false.
          format: int32
        type:
          $ref: '#/components/schemas/PlanFullBackupType'
    ExtendedRetentionRules:
      title: ExtendedRetentionRules
      type: object
      properties:
        firstExtendedRetentionRule:
          $ref: '#/components/schemas/PlanRetentionRule'
        secondExtendedRetentionRule:
          $ref: '#/components/schemas/PlanRetentionRule'
        thirdExtendedRetentionRule:
          $ref: '#/components/schemas/PlanRetentionRule'
      description: 'If you want to update, specify the whole object. Extended retention rules should be bigger than retention period.'
    RetentionRuleTypes:
      type: string
      title: RententionRuleTypes
      enum:
        - RETENTION_PERIOD
        - SNAP_RECOVERY_POINTS
      description: Which type of retention rule should be used for the given backup destination
    CreatePlanBackupDestination:
      type: object
      properties:
        backupDestinationName:
          x-terraform-required: false
          type: string
          description: Backup destination details. Enter the name during creation.
          nullable: true
        storagePool:
          $ref: '#/components/schemas/IdName'
        storageTemplateTags:
          type: array
          description: It is used in Global config template plan creation. Needs in plan creation on global commcell
          items:
            $ref: '#/components/schemas/IdNameValue'
        storageType:
          $ref: '#/components/schemas/StorageType'
        netAppCloudTarget:
          type: boolean
          description: Only for snap copy. Enabling this changes SVM Mapping  to NetApp cloud targets only.
        isConfiguredForReplication:
          type: boolean
          description: Used if the copy is used for replication group
        isSnapCopy:
          type: boolean
          description: 'Is this a snap copy? If isMirrorCopy is not set, then default is Vault/Replica.'
        isMirrorCopy:
          type: boolean
          description: Is this a mirror copy? Only considered when isSnapCopy is true.
        region:
          $ref: '#/components/schemas/IdNameGUID'
        sourceCopy:
          $ref: '#/components/schemas/IdName'
        backupsToCopy:
          $ref: '#/components/schemas/PlanFullBackupType'
        fullBackupTypesToCopy:
          $ref: '#/components/schemas/PlanFullBackupTypeToCopy'
        backupStartTime:
          type: integer
          description: Backup start time in seconds. The time is provided in unix time format.
          format: int32
        optimizeForInstantClone:
          type: boolean
          description: Flag to specify if primary storage is copy data management enabled.
        overrideRetentionSettings:
          type: boolean
          description: Tells if this copy should use storage pool retention period days or the retention defined for this copy. Set as true to use retention defined on this copy.
        retentionRuleType:
          $ref: '#/components/schemas/RetentionRuleTypes'
        retentionPeriodDays:
          type: integer
          description: 'Retention period in days. -1 can be specified for infinite retention. If this and snapRecoveryPoints both are not specified, this takes  precedence.'
          format: int32
          default: 30
          minimum: 1
          maximum: 9999
        snapRecoveryPoints:
          type: integer
          format: int32
          description: Number of snap recovery points for snap copy for retention. Can be specified instead of retention period in Days for snap copy.
          minimum: 1
        useExtendedRetentionRules:
          type: boolean
          description: Use extended retention rules
        extendedRetentionRules:
          $ref: '#/components/schemas/ExtendedRetentionRules'
        mappings:
          type: array
          items:
            $ref: '#/components/schemas/SnapshotCopyMapping'
      oneOf:
        - required:
            - storagePool
        - required:
            - storageTemplateTags
      required:
        - backupDestinationName
    CreateBackupDestination:
      type: object
      properties:
        name:
          type: string
          description: Name of backup destination
        storagePool:
          $ref: '#/components/schemas/IdName'
        storageType:
          $ref: '#/components/schemas/StorageType'
        netAppCloudTarget:
          type: boolean
          description: Only for snap copy. Enabling this changes SVM Mapping  to NetApp cloud targets only.
        isSnapCopy:
          type: boolean
          description: 'Is this a snap copy? If isMirrorCopy is not set, then default is Vault/Replica.'
        isMirrorCopy:
          type: boolean
          description: Is this a mirror copy? Only considered when isSnapCopy is true.
        region:
          $ref: '#/components/schemas/IdName'
        sourceCopy:
          $ref: '#/components/schemas/IdName'
        backupsToCopy:
          $ref: '#/components/schemas/PlanFullBackupType'
        fullBackupTypesToCopy:
          $ref: '#/components/schemas/PlanFullBackupTypeToCopy'
        backupStartTime:
          type: integer
          description: Backup start time in seconds. The time is provided in unix time format.
          format: int32
        optimizeForInstantClone:
          type: boolean
          description: Flag to specify if primary storage is copy data management enabled.
        overrideRetentionSettings:
          type: boolean
          description: Tells if this copy should use storage pool retention period days or the retention defined for this copy. Set as true to use retention defined on this copy.
        retentionRuleType:
          $ref: '#/components/schemas/RetentionRuleTypes'
        retentionPeriodDays:
          type: integer
          description: 'Retention period in days. -1 can be specified for infinite retention. If this and snapRecoveryPoints both are not specified, this takes  precedence.'
          format: int32
          default: 30
          minimum: 1
          maximum: 9999
        snapRecoveryPoints:
          type: integer
          format: int32
          description: Number of snap recovery points for snap copy for retention. Can be specified instead of retention period in Days for snap copy.
          minimum: 1
        useExtendedRetentionRules:
          type: boolean
          description: Use extended retention rules
        extendedRetentionRules:
          $ref: '#/components/schemas/ExtendedRetentionRules'
        mappings:
          type: array
          items:
            $ref: '#/components/schemas/SnapshotCopyMapping'
      required:
        - planBackupDestination
        - storagePool
    UpdateBackupDestination:
      title: ''
      type: object
      description: 'Region can be modified only when the backup destination does not belong to a region already'
      properties:
        id:
          x-terraform-include: false
          type: integer
          format: int32
          description: Id of backup destination
        name:
          type: string
          description: Name of backup destination
        region:
          $ref: '#/components/schemas/IdName'
        sourceCopy:
          $ref: '#/components/schemas/IdName'
        backupsToCopy:
          $ref: '#/components/schemas/PlanFullBackupType'
        backupStartTime:
          type: integer
          format: int32
          description: Specify the Backup start time in seconds. The time is provided in unix time format.
        enableDataAging:
          type: boolean
          description: Tells if this copy has data aging enabled
        overrideRetentionSettings:
          type: boolean
          description: Tells if this copy should use storage pool retention period days or the retention defined for this copy. Set as true to use retention defined on this copy.
        retentionRuleType:
          $ref: '#/components/schemas/RetentionRuleTypes'
        retentionPeriodDays:
          type: integer
          description: Retention period in days. -1 can be specified for infinite retention.
          format: int32
          minimum: 1
          maximum: 9999
        snapRecoveryPoints:
          type: integer
          format: int32
          minimum: 1
          description: Number of snap recovery points for snap copy for retention. Can be specified instead of retention period in Days for snap copy.
        useExtendedRetentionRules:
          type: boolean
          description: Use extended retention rules. Must specify if updating extended retention rules.
        extendedRetentionRules:
          $ref: '#/components/schemas/ExtendedRetentionRules'
        mappings:
          type: array
          items:
            $ref: '#/components/schemas/SnapshotCopyMapping'
    BackupDestination:
      type: object
      description: 'This can be used to fetch info of a backup destination created seperately from plan'
      properties:
        id:
          type: integer
          format: int32
          description: Id of backup destination
        name:
          type: string
          description: Name of backup destination
        netAppCloudTarget:
          type: boolean
          description: Only for snap copy. Tells if the snap copy supports SVM Mapping to NetApp cloud targets only.
        isDefault:
          type: boolean
          description: Is this a default backup destination?
        isSnapCopy:
          type: boolean
          description: Is this a snap copy?
        isMirrorCopy:
          type: boolean
          description: Is this a mirror copy?
        copyType:
          $ref: '#/components/schemas/PlanCopyType'
        copyTypeName:
          $ref: '#/components/schemas/PlanCopyTypeName'
        copyPrecedence:
          type: integer
          format: int32
          description: Order of backup destinaion copy created in storage policy
        storagePool:
          $ref: '#/components/schemas/StoragePool'
        storageType:
          $ref: '#/components/schemas/StorageType'
        sourceCopy:
          $ref: '#/components/schemas/IdName'
        region:
          $ref: '#/components/schemas/IdNameDisplayName'
        backupsToCopy:
          $ref: '#/components/schemas/PlanFullBackupType'
        fullBackupTypesToCopy:
          $ref: '#/components/schemas/PlanFullBackupTypeToCopy'
        backupStartTime:
          type: integer
          description: Backup start time in number of seconds. The time is provided in unix time format.
          format: int32
        enableDataAging:
          type: boolean
          description: Tells if this copy has data aging enabled
        overrideRetentionSettings:
          type: boolean
          description: Tells if this copy should use storage pool retention period days or the retention defined for this copy. Set as true to use retention defined on this copy.
        retentionRuleType:
          $ref: '#/components/schemas/RetentionRuleTypes'
        retentionPeriodDays:
          type: integer
          description: Retention period in days
          format: int32
          minimum: 1
          maximum: 9999
        snapRecoveryPoints:
          type: integer
          format: int32
          description: Number of snap recovery points for snap copy for retention
        useExtendedRetentionRules:
          type: boolean
          description: Should extended retention rules be used
        extendedRetentionRules:
          $ref: '#/components/schemas/ExtendedRetentionRules'
        mappings:
          type: array
          items:
            $ref: '#/components/schemas/SnapshotCopyMapping'
    CreateBackupDestinations:
      required:
        - backupDestinations
      type: object
      properties:
        backupDestinations:
          x-terraform-flatten: true
          type: array
          items:
            $ref: '#/components/schemas/CreateBackupDestination'
          description: List of backup destinations to create
    BackupCopyFullBackupType:
      enum:
        - All_JOBS
        - ALL_FULLS
        - HOURLY_FULLS
        - DAILY_FULLS
        - WEEKLY_FULLS
        - MONTHLY_FULLS
        - QUARTERLY_FULLS
        - HALF_YEARLY_FULLS
        - YEARLY_FULLS
      type: string
      format: ''
      description: Backup type to copy for backup copy operation
      title: BackupCopyFullBackupType
    BackupCopyOptions:
      type: object
      description: Options for snap management with backup copy
      properties:
        backupTypeToCopy:
          $ref: '#/components/schemas/BackupCopyFullBackupType'
        backupFullToCopy:
          $ref: '#/components/schemas/PlanFullBackupTypeToCopy'
        startTime:
          type: integer
          description: 'Snapshots to be copied from a particular time in unix time format. By default, 0 means since the inception of the snap copy.'
          format: int32
          default: 0
          example: 1706110498
        enableAlert:
          type: boolean
          description: Flag to enable backup copy fallen behind alert
        alertInHours:
          type: integer
          description: Alert to throw when backup copy falls behind in hours
          format: int32
          default: 48
        action:
          type: string
          title: backupCopyFallenBehindAction
          enum:
            - BASED_ON_RETENTION
            - SKIP_IF_PENDING
            - WAIT_FOR_COMPLETION
          description: Which type of action should be followed if backup copy falls behind
        skipAfterThresholdDays:
          type: integer
          description: The allowable delay in days before a backup copy job is considered overdue
          format: int32
          default: 14
    CreatePlanSnapshotOptions:
      type: object
      description: This feature applies only to File System Agents
      properties:
        snapRecoveryPoints:
          x-terraform-include: false
          type: integer
          format: int32
          description: Number of snap recovery points for default snap copy for retention. Can be specified instead of retention period in Days for default snap copy.
          minimum: 1
        retentionPeriodDays:
          x-terraform-include: false
          type: integer
          description: 'Retention period in days. -1 can be specified for infinite retention. If this and snapRecoveryPoints both are not specified, this takes precedence.'
          format: int32
          default: 30
        enableBackupCopy:
          type: boolean
          description: Flag to enable backup copy
        backupCopyRPOMins:
          type: integer
          description: Backup copy RPO in minutes
          format: int32
          default: 240
        enableSnapCatalog:
          type: boolean
          description: Flag to enable deferred snapshot cataloging
        backupCopyOptions:
          $ref: '#/components/schemas/BackupCopyOptions'
    PlanSnapshotOptions:
      type: object
      description: This feature applies only to File System Agents
      title: ''
      properties:
        enableBackupCopy:
          type: boolean
          description: Flag to enable backup copy
        backupCopyRPOMins:
          type: integer
          description: Backup copy RPO in minutes
          format: int32
        backupCopyFrequency:
          $ref: '#/components/schemas/BackupFrequencyPattern'
        enableSnapCatalog:
          type: boolean
          description: Flag to enable deferred snapshot cataloging
        backupCopyOptions:
          $ref: '#/components/schemas/BackupCopyOptions'
        syncError:
          type: string
          description: Error message to indicate the cause of sync issue (if any) between CommServ DB and Command center with respect to snapshot options.
    PlanOverrideOptions:
      enum:
        - OPTIONAL
        - MUST
        - NOT_ALLOWED
      type: string
      format: ''
    PlanOverrideSettings:
      description: 'To allow the derived plans that use this plan as the base plan to override the settings, property allowPlanOverride must be true, and then select one of the options for Storage pool, RPO and backup Content.'
      type: object
      properties:
        backupContent:
          $ref: '#/components/schemas/PlanOverrideOptions'
        storagePool:
          $ref: '#/components/schemas/PlanOverrideOptions'
        RPO:
          $ref: '#/components/schemas/PlanOverrideOptions'
    WorkloadGroup:
      type: string
      title: WorkloadGroup
      enum:
        - FILE_SERVER
        - LAPTOP
        - HYPERVISOR
      description: Type of workload Group
    PlanWorkloads:
      title: PlanWorkloads
      type: object
      properties:
        workloadTypes:
          type: array
          items:
            $ref: '#/components/schemas/IdName'
        workloadGroupTypes:
          type: array
          items:
            $ref: '#/components/schemas/WorkloadGroup'
        solutions:
          type: array
          items:
            $ref: '#/components/schemas/IdName'
    CreateServerPlan:
      type: object
      properties:
        planName:
          x-terraform-setter: Plan.Name
          type: string
          description: Name of the new plan
        backupDestinations:
          type: array
          description: Backup destinations for the plan. Specify where you want to store your backup data.
          items:
            $ref: '#/components/schemas/CreatePlanBackupDestination'
        backupDestinationIds:
          type: array
          items:
            type: integer
            format: int32
          description: Primary Backup Destination Ids (which were created before plan creation). This is only considered when backupDestinations array object is not defined.
        rpo:
          x-terraform-include: false
          $ref: '#/components/schemas/ServerBackupPlanRPO'
        filesystemAddon:
          type: boolean
          description: flag to enable backup content association for applicable file system workload.
        backupContent:
          $ref: '#/components/schemas/PlanContent'
        snapshotOptions:
          $ref: '#/components/schemas/CreatePlanSnapshotOptions'
        databaseOptions:
          x-terraform-include: false
          $ref: '#/components/schemas/ServerPlanDatabaseOptions'
        workload:
          $ref: '#/components/schemas/PlanWorkloads'
        allowPlanOverride:
          type: boolean
          description: Flag to enable overriding of plan. Plan cannot be overriden by default.
        overrideRestrictions:
          $ref: '#/components/schemas/PlanOverrideSettings'
        parentPlan:
          $ref: '#/components/schemas/IdName'
        additionalProperties:
          x-terraform-include: false
          $ref: '#/components/schemas/PlanAdditionalProperties'
        settings:
          $ref: '#/components/schemas/ServerPlanSettings'
      required:
        - planName
    CreateGlobalServerPlan:
      type: object
      properties:
        plan:
          $ref: '#/components/schemas/CreateServerPlan'
        globalConfigInfo:
          $ref: '#/components/schemas/CreateGlobalConfigInfo'
      required:
        - planName
    CreateCDMPlan:
      type: object
      properties:
        planName:
          type: string
          description: Name of the new plan
        backupDestinations:
          type: array
          description: Copy destinations for the plan. Specify where you want to store your data.
          items:
            $ref: '#/components/schemas/CreatePlanBackupDestination'
        rpo:
          $ref: '#/components/schemas/ServerBackupPlanRPO'
        snapshotOptions:
          $ref: '#/components/schemas/CreatePlanSnapshotOptions'
        databaseOptions:
          $ref: '#/components/schemas/ServerPlanDatabaseOptions'
      required:
        - planName
        - backupDestinations
    CreateObjectStorePlan:
      type: object
      properties:
        planName:
          type: string
          description: Name of the new plan
        backupDestinations:
          type: array
          description: Copy destinations for the plan. Specify where you want to store your data.
          items:
            $ref: '#/components/schemas/ObjectStorePlanBackupDestination'
        rpo:
          $ref: '#/components/schemas/ObjectStoreBackupPlanRPO'
      required:
        - planName
        - backupDestinations
    UpdateObjectStorePlan:
      type: object
      properties:
        name:
          type: string
          description: New plan name to update
        backupDestinations:
          type: array
          description: Copy destinations for the plan. Specify where you want to store your data.
          items:
            $ref: '#/components/schemas/ObjectStorePlanUpdateBkpDest'
        backupDestinationOperationType:
          $ref: '#/components/schemas/BkpDestOperation'
        rpo:
          $ref: '#/components/schemas/ObjectStorePlanUpdateRPO'
    ObjectStorePlan:
      type: object
      properties:
        plan:
          $ref: '#/components/schemas/IdName'
        backupDestinationIds:
          type: array
          items:
            type: integer
            format: int32
          description: Primary Backup Destination Ids associated to this plan.
        backupDestinations:
          type: array
          description: Backup destinations for the plan
          nullable: true
          items:
            $ref: '#/components/schemas/GetObjectStorePlanBackupDestination'
        rpo:
          $ref: '#/components/schemas/ObjectStorePlanRPO'
        permissions:
          type: array
          items:
            $ref: '#/components/schemas/IdName'
    GenericResp:
      type: object
      properties:
        errorMessage:
          type: string
          nullable: true
        errorCode:
          type: integer
          format: int32
    GenericRespWithWarning:
      type: object
      properties:
        errorCode:
          type: integer
          format: int32
        errorMessage:
          type: string
          description: Tells about the error occured
        warningCode:
          type: integer
          format: int32
        warningMessage:
          type: string
          description: Tells about the warning occured

    vmgroupdeleteEntityResponse:
      type: object
      properties:
        subclientId:
          type: integer
          format: int32
          description: Vmgroup id of the deleted vm group
        subclientName:
          type: string
          description: Vmgroup name of the deleted vm group
        instanceName:
          type: string
          description: Instance name of the deleted vm group
        appName:
          type: string
          description: Agent name of the deleted vm group
        clientName:
          type: string
          description: client name of the deleted vm group
        backupsetName:
          type: string
          description: Backupset name of the deleted vm group

    vmgroupdeleteResponse:
      type: object
      properties:
        errorCode:
          type: integer
          format: int32
        entity:
          $ref: '#/components/schemas/vmgroupdeleteEntityResponse'

    PlanComponentError:
      type: object
      properties:
        component:
          type: string
          description: Plan Entity for which error occured
          nullable: true
        errorCode:
          type: integer
          format: int32
          description: Error Code for plan
        errorMessage:
          type: string
          description: Error message for plan
          nullable: true
    PlanResp:
      type: object
      properties:
        plan:
          x-terraform-id: id
          $ref: '#/components/schemas/IdNameGUID'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/PlanComponentError'
          nullable: true
    LaptopPlanResp:
      title: LaptopPlanResponse CustomerManaged
      type: object
      properties:
        plan:
          x-terraform-id: id
          $ref: '#/components/schemas/IdNameGUID'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/PlanComponentError'
          nullable: true
    LaptopPlanRespSaaS:
      title: LaptopPlanResponse SaaS
      type: object
      properties:
        data:
          $ref: '#/components/schemas/PlanNameAndID'
    PlanNameAndID:
      type: object
      properties:
        planName:
          type: string
          description: Plan Name
        planId:
          type: integer
          format: int32
          description: Plan ID
    PlanBackupDestination:
      type: object
      description: ''
      properties:
        planBackupDestination:
          $ref: '#/components/schemas/IdName'
        netAppCloudTarget:
          type: boolean
          description: Only for snap copy. Tells if the snap copy supports SVM Mapping to NetApp cloud targets only.
        isImmutableSnapCopy:
          type: boolean
          description: Only for snap copy. Tells if the snap copy has immutable option enabled.
        isDefault:
          type: boolean
          description: Is this a default backup destination?
        isCopyInMaintenanceMode:
          type: boolean
          description: Is this copy in Maintenance mode?
        isCopyPromotionRequestSubmitted:
          type: boolean
          description: Is copy promotion request submitted for this copy?
        isConfiguredForReplication:
          type: boolean
          description: Used if the copy is used for replication group
        isSnapCopy:
          type: boolean
          description: Is this a snap copy?
        isMirrorCopy:
          type: boolean
          description: Is this a mirror copy?
        isAirgapCopy:
          type: boolean
          description: Set to true if this copy uses Airgap storage
        isSourceBackupCopy:
          type: boolean
          description: Is this the source snap copy for backup copy operations?
        copyType:
          $ref: '#/components/schemas/PlanCopyType'
        copyTypeName:
          $ref: '#/components/schemas/PlanCopyTypeName'
        copyPrecedence:
          type: integer
          format: int32
          description: Order of backup destinaion copy created in storage policy
        storagePool:
          $ref: '#/components/schemas/StoragePool'
        storageType:
          $ref: '#/components/schemas/StorageType'
        sourceCopy:
          $ref: '#/components/schemas/IdName'
        region:
          x-terraform-ref: '#/components/schemas/IdName'
          $ref: '#/components/schemas/IdNameDisplayName'
        backupsToCopy:
          $ref: '#/components/schemas/PlanFullBackupType'
        fullBackupTypesToCopy:
          $ref: '#/components/schemas/PlanFullBackupTypeToCopy'
        backupStartTime:
          type: integer
          description: Backup start time in number of seconds. The time is provided in unix time format.
          format: int32
        enableDataAging:
          type: boolean
          description: Tells if this copy has data aging enabled
        overrideRetentionSettings:
          type: boolean
          description: Tells if this copy should use storage pool retention period days or the retention defined for this copy. Set as true to use retention defined on this copy.
        retentionRuleType:
          $ref: '#/components/schemas/RetentionRuleTypes'
        retentionPeriodDays:
          type: integer
          description: Retention period in days
          format: int32
          minimum: 1
          maximum: 9999
        snapRecoveryPoints:
          type: integer
          format: int32
          description: Number of snap recovery points for snap copy for retention
        useExtendedRetentionRules:
          type: boolean
          description: Should extended retention rules be used
        extendedRetentionRules:
          $ref: '#/components/schemas/ExtendedRetentionRules'
        mappings:
          type: array
          items:
            $ref: '#/components/schemas/SnapshotCopyMapping'
        storageTemplateTags:
          type: array
          description: It is used in Global config template plan creation. Needs in plan creation on global commcell
          items:
            $ref: '#/components/schemas/IdNameValue'
    UpdatePlanBackupDestination:
      title: ''
      type: object
      properties:
        newName:
          type: string
          description: New name for backup destination
        sourceCopy:
          $ref: '#/components/schemas/IdName'
        backupsToCopy:
          $ref: '#/components/schemas/PlanFullBackupType'
        backupStartTime:
          type: integer
          format: int32
          description: Specify the Backup start time in seconds. The time is provided in unix time format.
        enableDataAging:
          type: boolean
          description: Tells if this copy has data aging enabled
        overrideRetentionSettings:
          type: boolean
          description: Tells if this copy should use storage pool retention period days or the retention defined for this copy. Set as true to use retention defined on this copy.
        retentionRuleType:
          $ref: '#/components/schemas/RetentionRuleTypes'
        retentionPeriodDays:
          type: integer
          description: Retention period in days. -1 can be specified for infinite retention.
          format: int32
          minimum: 1
          maximum: 9999
        snapRecoveryPoints:
          type: integer
          format: int32
          minimum: 1
          description: Number of snap recovery points for snap copy for retention. Can be specified instead of retention period in Days for snap copy.
        useExtendedRetentionRules:
          type: boolean
          description: Use extended retention rules. Must specify if updating extended retention rules.
        extendedRetentionRules:
          $ref: '#/components/schemas/ExtendedRetentionRules'
        mappings:
          type: array
          items:
            $ref: '#/components/schemas/SnapshotCopyMapping'
    PlanBackupDestinationGeneralInfo:
      type: object
      description: ''
      properties:
        storage:
          $ref: '#/components/schemas/StoragePool'
        storageType:
          $ref: '#/components/schemas/StorageType'
        source:
          $ref: '#/components/schemas/IdName'
        netAppCloudTarget:
          type: boolean
          description: Only for snap copy. Tells if the snap copy supports SVM Mapping to NetApp cloud targets only.
        isImmutableSnapCopy:
          type: boolean
          description: Only for snap copy. Tells if the snap copy has immutable snap option enabled.
        isDefault:
          type: boolean
          description: Is this a default backup destination?
        isActive:
          type: boolean
          description: Is this an active backup destination?
        isCopyInMaintenanceMode:
          type: boolean
          description: Is this copy in Maintenance mode?
        isCopyPromotionRequestSubmitted:
          type: boolean
          description: Is copy promotion request submitted for this copy?
        complianceLock:
          type: boolean
          description: Is compliance lock enabled on backup destination?
        isSnapCopy:
          type: boolean
          description: Is this a snap copy?
        isMirrorCopy:
          type: boolean
          description: Is this a mirror copy?
        isAirgapCopy:
          type: boolean
          description: Set to true if this copy uses Airgap storage
        copyType:
          $ref: '#/components/schemas/PlanCopyType'
        snapCopyType:
          $ref: '#/components/schemas/PlanCopyTypeName'
        copyPrecedence:
          type: integer
          format: int32
          description: Order of backup destinaion copy created in storage policy
    PlanBackupDestinationGeneralInfoUpdate:
      type: object
      description: ''
      properties:
        source:
          $ref: '#/components/schemas/IdName'
        isActive:
          type: boolean
          description: Toggle to keep backup destination active
        complianceLock:
          type: boolean
          description: Toggle to enable compliance lock on backup destination. One time operation, once enabled cannot be disabled and if it is enabled retention on backup destination cannot be lowered.
        isImmutableSnapCopy:
          type: boolean
          description: Toggle to enable immutable snap for snap copy
    PlanBackupDestinationSnapOptions:
      type: object
      description: ''
      properties:
        isSourceBackupCopy:
          type: boolean
          description: Is this the source snap copy for backup copy operations?
    PlanFullBackupTypeToCopy:
      type: string
      title: PlanFullBackupTypeToCopy
      enum:
        - FIRST
        - LAST
      description: Which type of backup type should be copied for the given backup destination when backup type is not all jobs. Default is LAST while adding new backup destination.
    PlanBackupDestinationBackupTypeInfo:
      type: object
      description: ''
      properties:
        backupTypesToCopy:
          $ref: '#/components/schemas/PlanFullBackupType'
        backupTypesCopiedFrom:
          type: integer
          format: int32
          description: 'Tells what start date, backup types should be copied from. The date is provided in unix time format in number of seconds. -1 means initial backup date.'
        fullBackupTypesToCopy:
          $ref: '#/components/schemas/PlanFullBackupTypeToCopy'
    PlanBackupDestinationRetentionRuleInfo:
      type: object
      description: ''
      properties:
        enableDataAging:
          type: boolean
          description: Tells if this copy has data aging enabled
        overrideRetentionSettings:
          type: boolean
          description: Tells if this copy should use storage pool retention period days or the retention defined for this copy. Set as true to use retention defined on this copy.
        retentionRuleType:
          $ref: '#/components/schemas/RetentionRuleTypes'
        retentionPeriodDays:
          type: integer
          description: Retention period in days
          format: int32
          minimum: 1
          maximum: 9999
        snapRecoveryPoints:
          type: integer
          format: int32
          description: Number of snap recovery points for snap copy for retention
        useExtendedRetentionRules:
          type: boolean
          description: Should extended retention rules be used
        extendedRetentionRules:
          $ref: '#/components/schemas/ExtendedRetentionRules'
        fullBackupTypesToBeRetained:
          $ref: '#/components/schemas/PlanFullBackupTypeToCopy'
    PlanBackupDestinationCopyPromotionInfo:
      type: object
      description: ''
      properties:
        immediate:
          type: boolean
          description: Tells if the copy has to be promoted immediately.
        hours:
          type: integer
          format: int32
          description: Tells the number of hours to wait before failing/killing jobs for copy promotion
        waitForRunningJobs:
          type: boolean
          description: Tells if copy promotion needs to wait for running jobs
        waitForSynchronize:
          type: boolean
          description: Tells if copy promotion needs to wait for synchronization of copies.
        forceKill:
          type: boolean
          description: Tells if we need to force kill jobs and promote copy after waiting.
    PlanSourceCopy:
      title: PlanSourceCopy
      type: object
      description: ''
      properties:
        isDefault:
          type: boolean
          description: Is this a default backup destination?
        isActive:
          type: boolean
          description: Is this an active backup destination?
        isSnapCopy:
          type: boolean
          description: Is this a snap copy?
        isMirrorCopy:
          type: boolean
          description: Is this a mirror copy?
        copyType:
          $ref: '#/components/schemas/PlanCopyType'
        snapCopyType:
          $ref: '#/components/schemas/PlanCopyTypeName'
        copyPrecedence:
          type: integer
          format: int32
          description: Order of backup destinaion copy created in storage policy
        backupDestination:
          $ref: '#/components/schemas/IdName'
        arrayReplicaCopy:
          type: boolean
          description: Is this an array replica copy?
        defaultReplicaCopy:
          type: boolean
          description: Is this a default replica copy?
        isImmutableSnapCopy:
          type: boolean
          description: Only for snap copy. Tells if the snap copy has immutable option enabled.
        isSourceBackupCopy:
          type: boolean
          description: Is this the source snap copy for backup copy operations?
    AppValidationSourceCopy:
      title: AppValidationSourceCopy
      type: object
      description: Application validation source copy details
      properties:
        id:
          type: integer
          format: int32
          description: Id of the source copy
        name:
          type: string
          description: Name of the source copy
        isActive:
          type: boolean
          description: Is this an active backup destination?
        isSnapCopy:
          type: boolean
          description: Is this a snap copy?
        copyPrecedence:
          type: integer
          format: int32
          description: Order of backup destinaion copy created in storage policy
        backupDestination:
          $ref: '#/components/schemas/IdName'
    PlanSourceCopies:
      title: PlanSourceCopies
      type: object
      properties:
        copy:
          type: array
          description: List of backup destinations which can act as source copy for a new copy
          items:
            $ref: '#/components/schemas/PlanSourceCopy'
    SubclientAssociationFlags:
      type: object
      description: These flags are used to specify the type of association between the entity and the backupdestination.
      properties:
        disabled:
          type: boolean
          description: If set to true, the entity is disabled for current user.
        include:
          type: boolean
          description: If set to true, this entity and its child entities are included for auxcopy
        exclude:
          type: boolean
          description: If set to true, this entity and its child entities are excluded for auxcopy
    SubclientAssociation:
      description: |
        Parent entities must be specified for applications and lower entities. Hierarchy begins at the server or server group level(parentEntity1) and extends till backupset level when defining parent relationships for the associated entity.
        Example of parent hierarchy structure for subclient entity:
          1. Server group - Server - Application - Instance - Backupset
          2. Server - Application - Instance - Backupset
      title: SubclientAssociation
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: id of the associated entity
        name:
          type: string
          description: name of the associated entity
        flags:
          $ref: '#/components/schemas/SubclientAssociationFlags'
        type:
          type: string
          enum:
            - ALL_SERVERS
            - ALL_SERVER_GROUPS_ENTITY
            - SERVER_GROUP_ENTITY
            - SERVER_ENTITY
            - APPTYPE_ENTITY
            - INSTANCE_ENTITY
            - BACKUPSET_ENTITY
            - SUBCLIENT_ENTITY
        parentEntity1:
          $ref: '#/components/schemas/SubclientAssocParentEntity'
        parentEntity2:
          $ref: '#/components/schemas/SubclientAssocParentEntity'
        parentEntity3:
          $ref: '#/components/schemas/SubclientAssocParentEntity'
        parentEntity4:
          $ref: '#/components/schemas/SubclientAssocParentEntity'
        parentEntity5:
          $ref: '#/components/schemas/SubclientAssocParentEntity'
    SubclientAssocParentEntity:
      type: object
      description: parentEntity1 can start from SERVER_ENTITY or SERVER_GROUP_ENTITY and subsequentily ending up at parentEntity4 or parentEntity5 with Backupset.
      properties:
        id:
          type: integer
          format: int32
          description: id of the associated entity
        name:
          type: string
          description: name of the associated entity
        type:
          type: string
          enum:
            - SERVER_GROUP_ENTITY
            - SERVER_ENTITY
            - APPTYPE_ENTITY
            - INSTANCE_ENTITY
            - BACKUPSET_ENTITY
    BackupDestinationAssociationsResp:
      type: object
      properties:
        associations:
          description:  List all the entities of backupdestination.It includes all the server/server groups which can be picked for auxcopy, as well as all the included and excluded entities.
          type: array
          items:
            $ref: '#/components/schemas/SubclientAssociation'
        auxCopyAssociations:
          description:  Summary of all the entities of backupdestination that will be auxcopied.
          type: array
          items:
            $ref: '#/components/schemas/SubclientAssociation'
    UpdateBackupDestinationAssociationsReq:
      type: object
      properties:
        updateApplicableForFutureJobs:
          type: boolean
          description: If set to true, then only future jobs will honour this update.
        associations:
          description: List of selected/excluded entities to be associated with backup destination.
          type: array
          items:
            $ref: '#/components/schemas/SubclientAssociation'
    PlanBackupDestinationDetails:
      type: object
      description: ''
      properties:
        plan:
          $ref: '#/components/schemas/IdName'
        planBackupDestination:
          $ref: '#/components/schemas/IdName'
        configurable:
          type: boolean
          description: Flag to specify whether backup destination is configurable (True when it belongs to a base plan or a derived plan with overriden storage pool)
        region:
          $ref: '#/components/schemas/IdNameDisplayName'
        general:
          $ref: '#/components/schemas/PlanBackupDestinationGeneralInfo'
        backupType:
          $ref: '#/components/schemas/PlanBackupDestinationBackupTypeInfo'
        retentionRules:
          $ref: '#/components/schemas/PlanBackupDestinationRetentionRuleInfo'
        mappings:
          type: array
          items:
            $ref: '#/components/schemas/SnapshotCopyMapping'
        globalConfigInfo:
          $ref: '#/components/schemas/GlobalConfigInfo'
        snapOptions:
          $ref: '#/components/schemas/PlanBackupDestinationSnapOptions'
    UpdatePlanBackupDestinationDetails:
      title: ''
      type: object
      properties:
        newName:
          type: string
          description: New name for backup destination
        general:
          $ref: '#/components/schemas/PlanBackupDestinationGeneralInfoUpdate'
        backupType:
          $ref: '#/components/schemas/PlanBackupDestinationBackupTypeInfo'
        retentionRules:
          $ref: '#/components/schemas/PlanBackupDestinationRetentionRuleInfo'
        copyPromotionOptions:
          x-terraform-statecopy: true
          $ref: '#/components/schemas/PlanBackupDestinationCopyPromotionInfo'
        mappings:
          type: array
          items:
            $ref: '#/components/schemas/SnapshotCopyMapping'
        snapOptions:
          $ref: '#/components/schemas/PlanBackupDestinationSnapOptions'
    UpdateServerPlan:
      type: object
      properties:
        newName:
          x-terraform-mapping: planName
          type: string
          description: New plan name to update
          nullable: true
        backupContent:
          $ref: '#/components/schemas/PlanContent'
        filesystemAddon:
          type: boolean
          description: flag to enable backup content association for applicable file system workload.
        rpo:
          $ref: '#/components/schemas/ServerPlanUpdateRPO'
        databaseOptions:
          $ref: '#/components/schemas/ServerPlanDatabaseOptionsInfo'
        regionToConfigure:
          $ref: '#/components/schemas/IdName'
        backupDestinationIds:
          type: array
          items:
            type: integer
            format: int32
          description: Primary Backup Destination Ids (which were created before plan creation).
        snapshotOptions:
          $ref: '#/components/schemas/PlanSnapshotOptions'
        workload:
          $ref: '#/components/schemas/PlanWorkloads'
        allowPlanOverride:
          type: boolean
          description: 'Flag to enable overriding of plan. Once enabled, cannot be disabled.'
        overrideRestrictions:
          $ref: '#/components/schemas/PlanOverrideSettings'
        overrideInheritSettings:
          $ref: '#/components/schemas/PlanOverrideInheritSetting'
        settings:
          $ref: '#/components/schemas/ServerPlanSettings'
    PlanSchedule:
      title: PlanSchedule
      type: object
      description: Used to describe single plan schedule information
      properties:
        scheduleId:
          x-terraform-include: false
          type: integer
          description: 'Id of the schedule if available, required for modifying, deleting schedule'
          format: int32
        scheduleName:
          x-terraform-required: true
          type: string
          description: 'Name of the schedule, for modify'
        policyId:
          x-terraform-include: false
          type: integer
          description: Schedule policy Id to which the schedule belongs
          format: int32
        scheduleOperation:
          type: string
          x-terraform-include: false
          enum:
            - ADD
            - DELETE
            - MODIFY
          description: Operation being performed on schedule
          default: MODIFY
        vmOperationType:
          type: string
          enum:
            - PLANNED_FAILOVER
            - TEST_BOOT
          nullable: true
          description: Type of DR operation (only applicable for Failover groups)
        backupType:
          type: string
          enum:
            - FULL
            - INCREMENTAL
            - DIFFERENTIAL
            - SYNTHETICFULL
            - TRANSACTIONLOG
          description: Schedule Backup level
        forDatabasesOnly:
          type: boolean
          default: false
          description: Boolean to indicate if schedule is for database agents
        isRetentionBasedSyntheticFull:
          type: boolean
          default: false
          description: Boolean to indicate if synthetic full schedule is based on retention rules
        isAuxCopySchedule:
          type: boolean
          default: false
          description: Boolean to indicate if schedule is aux copy schedule.
        schedulePattern:
          $ref: '#/components/schemas/SchedulePattern'
        scheduleOption:
          $ref: '#/components/schemas/ScheduleOption'
        additionalInfo:
          type: string
          nullable: true
      required:
        - backupType
        - schedulePattern
    SchedulePattern:
      title: SchedulePattern
      type: object
      description: Used to describe when the schedule runs
      properties:
        scheduleFrequencyType:
          type: string
          enum:
            - MINUTES
            - DAILY
            - WEEKLY
            - MONTHLY
            - YEARLY
            - AUTOMATIC
          description: schedule frequency type
        frequency:
          type: integer
          format: int32
          minimum: 1
          description: 'Frequency of the schedule based on schedule frequency type eg. for Hours, value 2 is 2 hours, for Minutes, 30 is 30 minutes, for Daily, 2 is 2 days. for Monthly 2 is it repeats every 2 months'
        weeklyDays:
          type: array
          description: Days of the week for weekly frequency
          nullable: true
          items:
            $ref: '#/components/schemas/DayOfTheWeek'
        dayOfMonth:
          type: integer
          minimum: 1
          maximum: 31
          format: int32
          description: 'Day on which to run the schedule, applicable for monthly, yearly'
        weekOfMonth:
          $ref: '#/components/schemas/WeekOfTheMonth'
        dayOfWeek:
          $ref: '#/components/schemas/DayOfWeek'
        monthOfYear:
          $ref: '#/components/schemas/MonthOfYear'
        repeatIntervalInMinutes:
          type: integer
          format: int32
          minimum: 1
          description: 'How often in minutes in a day the schedule runs, applicable for daily, weekly, monthly and yearly frequency types.'
        repeatUntilTime:
          type: integer
          format: int32
          minimum: 0
          description: 'Until what time to repeat the schedule in a day, requires repeatIntervalInMinutes'
        timezone:
          $ref: '#/components/schemas/IdName'
        startTime:
          type: integer
          format: int32
          description: start time of schedule in seconds
          default: 75600
        startDate:
          type: integer
          format: int32
          description: start date of schedule in epoch format
        endDate:
          type: integer
          format: int32
          default: 0
          description: Schedule end date in epoch format
        noOfTimes:
          type: integer
          format: int32
          default: 0
          description: The number of times you want the schedule to run.
        exceptions:
          type: array
          description: 'Exceptions to when a schedule should not run, either in dates or week of month and days'
          items:
            $ref: '#/components/schemas/ScheduleRunException'
        daysBetweenSyntheticFulls:
          type: integer
          format: int32
          minimum: 6
          description: 'No of days between two synthetic full jobs'
        maxBackupIntervalInMins:
          type: integer
          format: int32
          default: 240
          description: The number of mins to force a backup on automatic schedule.
      required:
        - scheduleFrequencyType
    ScheduleOption:
      title: ScheduleOption
      type: object
      description: 'Specific options to be set on schedules'
      properties:
        useDiskCacheForLogBackups:
          type: boolean
          description: Used to enable disk caching feature on databases for automatic schedules on server plan
        commitFrequencyInHours:
          type: integer
          description: Commit frequency in hours for disk cache backups from automatic schedules
          format: int32
        daysBetweenAutoConvert:
          type: integer
          description: Number of days between auto conversion of backup level applicable for databases on incremental and differential schedules of server plan
          format: int32
        o365ItemSelectionOption:
          type: string
          enum:
            - SELECT_ALL
            - SELECT_NEVER_PROCESSED
            - SELECT_MEETING_SLA
            - SELECT_NOT_MEETING_SLA_PROCESSED_ATLEAST_ONCE
            - SELECT_FAILED_LAST_ATTEMPT
            - SELECT_PROCESSED_ATLEAST_ONCE
            - SELECT_NOT_MEETING_SLA
            - SELECT_MEETING_SLA_NOT_RECENTLY_BACKED_UP
          description: item backup option for O365 V2 backup jobs
        jobRunningTimeInMins:
          type: integer
          description: total job running time in minutes
          format: int32
        minBackupIntervalInMins:
          type: integer
          format: int32
          default: 15
          description: The min number of mins to check for file activity on automatic schedule.
        logFilesThreshold:
          type: integer
          format: int32
          default: 50
          description: The min number of archived log files before a backup job should start
        logsDiskUtilizationPercent:
          type: integer
          format: int32
          default: 80
          description: The min log destination disk threshold percentage
    ScheduleRunException:
      title: ScheduleRunException
      type: object
      description: 'Exception to when a schedule should not run, applicable for Daily weekly and monthly schedules'
      properties:
        onDates:
          type: array
          description: 'list of dates in a month. For ex: 1, 20'
          items:
            type: integer
            format: int32
            minimum: 1
            maximum: 31
        onWeekOfTheMonth:
          type: array
          uniqueItems: true
          description: 'On which week of month, for ex: FIRST, LAST'
          items:
            $ref: '#/components/schemas/WeekOfTheMonth'
        onDayOfTheWeek:
          type: array
          description: 'On which days, for ex: MONDAY, FRIDAY'
          items:
            $ref: '#/components/schemas/DayOfWeek'
    ServerPlan:
      type: object
      properties:
        plan:
          $ref: '#/components/schemas/IdName'
        backupContent:
          $ref: '#/components/schemas/PlanContent'
        rpo:
          $ref: '#/components/schemas/ServerPlanRPO'
        regionsConfigured:
          type: boolean
          description: Specifies if the destinations are associated to regions
        backupDestinations:
          type: array
          x-terraform-statecopy: true
          description: Backup destinations for the plan
          nullable: true
          items:
            $ref: '#/components/schemas/PlanBackupDestination'
        backupDestinationIds:
          type: array
          items:
            type: integer
            format: int32
          description: Primary Backup Destination Ids associated to this plan.
        databaseOptions:
          x-terraform-statecopy: true
          $ref: '#/components/schemas/ServerPlanDatabaseOptionsInfo'
        snapshotOptions:
          $ref: '#/components/schemas/PlanSnapshotOptions'
        settings:
          $ref: '#/components/schemas/ServerPlanSettings'
        associatedEntities:
          type: array
          items:
            $ref: '#/components/schemas/IdNameCount'
        allowPlanOverride:
          type: boolean
          description: Is deriving and overriding the plan allowed
        overrideRestrictions:
          $ref: '#/components/schemas/PlanOverrideSettings'
        inheritSettings:
          $ref: '#/components/schemas/ServerPlanInheritSettings'
        parentInheritSettings:
          $ref: '#/components/schemas/ServerPlanInheritSettings'
        permissions:
          type: array
          items:
            $ref: '#/components/schemas/IdName'
        additionalProperties:
          $ref: '#/components/schemas/PlanAdditionalProperties'
        workload:
          $ref: '#/components/schemas/PlanWorkloads'
        globalConfigInfo:
          $ref: '#/components/schemas/GlobalConfigInfo'
    PlanType:
      enum:
        - Server
        - Laptop
        - FSIBMiVTL
        - ExchangeJournal
        - ExchangeUser
        - Office365
        - DataClassification
        - Archiver
        - CDM
        - ObjectStore
        - DLO
        - Database
        - Snap
        - FSServer
        - VSAServer
        - Dynamics365
      type: string
      format: ''
    PlanStatus:
      enum:
        - ENABLED
        - DISABLED
        - INCOMPLETE
        - HIDDEN
        - BACKUP_DISABLED
      type: string
      format: ''
    PlanTargetApp:
      type: string
      description: Content indexing target app
      enum:
        - NOT_AVAILABLE
        - FILE_STORAGE_OPTIMIZATION
        - SENSITIVE_DATA_GOVERNANCE
        - CASE_MANAGER
        - CONTENT_INDEXING
        - THREAT_ANALYSIS
    SinglePlanSummary:
      type: object
      properties:
        planType:
          $ref: '#/components/schemas/PlanType'
        serverPlan:
          $ref: '#/components/schemas/ServerPlan'
        laptopPlan:
          $ref: '#/components/schemas/LaptopPlanDetails'
    PlanSummary:
      type: object
      properties:
        plan:
          $ref: '#/components/schemas/IdName'
        planType:
          $ref: '#/components/schemas/PlanType'
        parentPlan:
          $ref: '#/components/schemas/IdName'
        targetApp:
          type: array
          description: This tells the content indexing target apps for data classification plans
          nullable: true
          items:
            $ref: '#/components/schemas/PlanTargetApp'
        associatedEntities:
          type: integer
          description: Count of associated entities for the plan
          format: int32
          minimum: 0
        RPO:
          type: integer
          description: RPO in minutes for the plan
          format: int32
          minimum: 0
        numberOfCopies:
          type: integer
          description: Number of copies for the plan
          format: int32
          minimum: 0
        status:
          $ref: '#/components/schemas/PlanStatus'
        missingEntities:
          type: array
          nullable: true
          description: For plans in incomplete state contains list of entities missing from the plan
          items:
            $ref: '#/components/schemas/IdName'
        resourcePool:
          type: array
          description: This lists the various resource Pools of different app types associated with storage pools of plan
          nullable: true
          items:
            $ref: '#/components/schemas/IdName'
        tags:
          type: array
          description: Tags associated with this plan
          nullable: true
          items:
            $ref: '#/components/schemas/IdNameValue'
        company:
          $ref: '#/components/schemas/IdName'
        commcell:
          type: string
          description: Tells which commcell this plan belongs to.
          nullable: true
        derivable:
          type: boolean
          description: Tells if this plan can be used to derive from and create a new child plan
        globalConfigInfo:
          $ref: '#/components/schemas/GlobalConfigInfo'
    PlanSummaryListResp:
      type: object
      properties:
        plans:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/PlanSummary'
        plansCount:
          type: integer
          format: int32
          description: Number of plans returned
    PlanAddonStatus:
      type: string
      enum:
        - DISABLED
        - ENABLED
        - INCOMPLETE
    PlanAddons:
      type: object
      properties:
        database:
          type: boolean
          description: Database options should be shown with this plan
        fileSystem:
          type: boolean
          description: File system options should be shown with this plan
        snap:
          type: boolean
          description: Snap options should be shown with this plan
        snapStatus:
          $ref: '#/components/schemas/PlanAddonStatus'
        indexCopy:
          type: boolean
          description: Index copy options should be shown with this plan
    PlanAdditionalProperties:
      type: object
      properties:
        RPO:
          type: integer
          description: The least RPO in minutes for the plan
          format: int32
        addons:
          $ref: '#/components/schemas/PlanAddons'
        status:
          $ref: '#/components/schemas/PlanStatus'
          description: status if plan backups are enabled or disabled
    PlanBackupDestinations:
      type: object
      properties:
        backupdestinations:
          type: array
          items:
            $ref: '#/components/schemas/PlanBackupDestination'
          nullable: true
        regionsConfigured:
          type: boolean
          description: Specifies if the plan has region-based storage
    CreatePlanBackupDestinations:
      required:
        - destinations
      type: object
      properties:
        destinations:
          type: array
          items:
            $ref: '#/components/schemas/CreatePlanBackupDestination'
          description: List of backup destinations to create
          nullable: true
        snapshotOptions:
          $ref: '#/components/schemas/CreatePlanSnapshotOptions'
        region:
          $ref: '#/components/schemas/IdNameGUID'
    PlanBackupDestinationBasicResp:
      type: object
      properties:
        id:
          x-terraform-id: true
          type: integer
          format: int32
          description: Id of the backup destination affected or created
        name:
          type: string
          description: Name of the backup destination affected or created
          nullable: true
        isDefault:
          type: boolean
          description: Tells if this is the default (primary) backup destination
          nullable: true
    CreatePlanBackupDestinationResp:
      type: object
      properties:
        planBackupDestination:
          type: array
          items:
            $ref: '#/components/schemas/PlanBackupDestinationBasicResp'
          description: List of destinations effected or created
          nullable: true
        failedDestinations:
          type: array
          items:
            type: string
          description: List of destinations for which the operation failed
          nullable: true
        error:
          $ref: '#/components/schemas/GenericResp'
    PlanBackupDestinationResp:
      type: object
      properties:
        planBackupDestination:
          type: array
          items:
            $ref: '#/components/schemas/IdName'
          description: List of destinations effected or created
          nullable: true
        failedDestinations:
          type: array
          items:
            type: string
          description: List of destinations for which the operation failed
          nullable: true
        error:
          $ref: '#/components/schemas/GenericResp'
    CreateServerPlanRPO:
      required:
        - rpo
      type: object
      properties:
        rpo:
          $ref: '#/components/schemas/ServerBackupPlanRPO'
        databaseOptions:
          $ref: '#/components/schemas/ServerPlanDatabaseOptions'
    CreateServerPlanRPOResponse:
      type: object
      properties:
        rpo:
          $ref: '#/components/schemas/ServerBackupPlanRPO'
        error:
          $ref: '#/components/schemas/GenericResp'
    CreateServerPlanBackupContent:
      required:
        - rpo
      type: object
      properties:
        backupContent:
          $ref: '#/components/schemas/PlanContent'
    CreateServerPlanBackupContentResponse:
      type: object
      properties:
        backupContent:
          $ref: '#/components/schemas/PlanContent'
        error:
          $ref: '#/components/schemas/GenericResp'
    UpdateServerPlanBackupContent:
      type: object
      properties:
        backupContent:
          $ref: '#/components/schemas/PlanContent'
    UpdateServerPlanBackupContentResponse:
      type: object
      properties:
        backupContent:
          $ref: '#/components/schemas/PlanContent'
        error:
          $ref: '#/components/schemas/GenericResp'
    LaptopPlanDetails:
      title: ''
      type: object
      properties:
        plan:
          $ref: '#/components/schemas/IdName'
        general:
          $ref: '#/components/schemas/LaptopPlanGeneralInfo'
        allowedFeatures:
          $ref: '#/components/schemas/AllowedFeatures'
        rpo:
          $ref: '#/components/schemas/LaptopPlanRPO'
        backupContent:
          $ref: '#/components/schemas/LaptopPlanBackupContent'
        regionsConfigured:
          type: boolean
          description: Specifies if the destinations are associated to regions
        backupDestinations:
          type: array
          items:
            $ref: '#/components/schemas/PlanBackupDestination'
        retention:
          $ref: '#/components/schemas/LaptopPlanRetention'
        associatedUsersAndUserGroups:
          type: array
          description: ''
          items:
            $ref: '#/components/schemas/PlanUserOrGroups'
        alerts:
          type: array
          items:
            $ref: '#/components/schemas/IdName'
        allowPlanOverride:
          type: boolean
          description: Flag to enable overriding of plan
        overrideRestrictions:
          $ref: '#/components/schemas/LaptopPlanOverrideSettings'
        inheritSettings:
          $ref: '#/components/schemas/LaptopPlanInheritSettings'
        offlineLaptops:
          $ref: '#/components/schemas/AutoRetireDevices'
        networkResources:
          $ref: '#/components/schemas/LaptopPlanNetworkResources'
        permissions:
          type: array
          items:
            $ref: '#/components/schemas/IdName'
        additionalProperties:
          $ref: '#/components/schemas/PlanAdditionalProperties'
    LaptopPlanOverrideSettings:
      description: 'To allow the derived plans that use this plan as the base plan to override the settings, property allowPlanOverride must be true, and then select one of the options for Storage pool, RPO , Folders to backup, and Retention.'
      type: object
      properties:
        storagePool:
          $ref: '#/components/schemas/PlanOverrideOptions'
        RPO:
          $ref: '#/components/schemas/PlanOverrideOptions'
        backupContent:
          $ref: '#/components/schemas/PlanOverrideOptions'
        retention:
          $ref: '#/components/schemas/PlanOverrideOptions'
    LaptopPlanAllowedFeatures:
      type: object
      description: Create/modify allowed features of laptop plan
      properties:
        edgeDrive:
          type: boolean
          default: false
          description: Flag to enable Edge Drive
        edgeDriveSettings:
          $ref: '#/components/schemas/EdgeDriveSettingsPlan'
        DLP:
          type: boolean
          default: true
          description: Flag to enable Data loss protection
        archiving:
          type: boolean
          default: false
          description: Flag to enable archiving of laptop data
        archivingRules:
          $ref: '#/components/schemas/ArchivingRules'
    AllowedFeatures:
      type: object
      description: Get details about allowed features of a laptop plan
      properties:
        archiving:
          type: boolean
          description: Flag to enable archiving of laptop data
        archivingRules:
          $ref: '#/components/schemas/ArchivingRules'
        DLP:
          type: boolean
          description: Flag to enable Data loss protection
        edgeDrive:
          type: boolean
          description: Flag to enable Edge Drive
        edgeDriveSettings:
          $ref: '#/components/schemas/EdgeDriveSettings'
    LaptopPlanRPO:
      type: object
      properties:
        backupFrequency:
          description: Specify incremental backup frequency in minutes. Backup operation will start as per the time zone of the associated server.
          format: int32
          type: integer
        SLA:
          $ref: '#/components/schemas/SLAOptions'
    LaptopPlanUpdateRPO:
      type: object
      properties:
        backupFrequency:
          description: Specify incremental backup frequency in minutes. Backup operation will start as per the time zone of the associated server.
          format: int32
          type: integer
        SLA:
          $ref: '#/components/schemas/SLAUpdateOptions'
    LaptopPlanGeneralInfo:
      type: object
      properties:
        users:
          type: integer
          description: Number of users associated with this plan
          format: int32
          minimum: 0
        laptops:
          type: integer
          description: Number of laptops associated with this plan
          format: int32
          minimum: 0
        optimizedForCloudBackups:
          type: boolean
          description: 'This feature allows laptops to write backup directly to the cloud storage. It helps to optimize scale by reducing server dependency and extra data hops. Once the feature is enabled, the existing and the newly-added laptops use optimized backups.'
          default: false
        storageResourcePoolMap:
          type: array
          description: Optimization for cloud backups can only be used when resource pool are configured for atleast one storage.
          items:
            $ref: '#/components/schemas/StorageResourcePoolMap'
    StorageResourcePoolMap:
      type: object
      properties:
        storage:
          $ref: '#/components/schemas/IdName'
        resources:
          type: array
          description: List of resources mapped to the storage
          items:
            $ref: '#/components/schemas/ResourcePoolInfo'
    ResourcePoolInfo:
      type: object
      properties:
        appType:
          $ref: '#/components/schemas/SolutionTypes'
        resourcePool:
          $ref: '#/components/schemas/IdName'
    LaptopPlanUpdateGeneralInfo:
      type: object
      properties:
        optimizedForCloudBackups:
          type: boolean
          description: 'This feature allows laptops to write backup directly to the cloud storage. It helps to optimize scale by reducing server dependency and extra data hops. Once the feature is enabled, the existing and the newly-added laptops use optimized backups.'
    LaptopPlanNetworkResources:
      title: ''
      type: object
      properties:
        throttleSend:
          type: integer
          format: int32
          description: Maximum kilobits per second to throttle the emitting speed of data. Giving value as -1 means infinite throttle send speed i.e. no limit
          default: -1
        throttleReceive:
          type: integer
          format: int32
          description: Maximum kilobits per second to throttle the receiving speed of data. Giving value as -1 means infinite throttle send speed i.e. no limit
          default: -1
    LaptopPlanRetention:
      title: ''
      type: object
      properties:
        deletedItemRetention:
          type: integer
          format: int32
          description: Amount of days after deletion of files to keep the items. Giving value as -1 means to retain files indefinitely.
          default: 730
        fileVersions:
          $ref: '#/components/schemas/LaptopPlanRetentionFileVersions'
    SLAOptions:
      title: ''
      type: object
      description: 'A server meets SLA (Service Level Agreement) when all of its subclients have at least one successful backup during the number of days specified at the CommCell, Server Group or plan level.'
      properties:
        useSystemDefaultSLA:
          type: boolean
          description: Flag to set to use System Default Service Level Agreement
          nullable: true
        inheritedSLAPeriod:
          type: integer
          format: int32
          description: Inherited SLA Period in Days
          nullable: true
        inheritedFrom:
          type: string
          description: Tells us from where SLA Period was inherited
          enum:
            - COMMCELL
          nullable: true
        SLAPeriod:
          type: integer
          description: SLA Period in Days
          format: int32
          nullable: true
        excludeFromSLA:
          x-terraform-statecopy: true
          type: boolean
          description: Flag to set to exclude plan from SLA
          nullable: true
        enableAfterDelay:
          type: integer
          format: int32
          description: Time provided in Unix format. Give 0 to reset any existing delay.
          nullable: true
        exclusionReason:
          type: string
          description: Reason for exclusion from SLA
          nullable: true
        logSLAMinutes:
          type: integer
          description: Database log SLA period in Minutes
          format: int32
          nullable: true
    SLAUpdateOptions:
      title: ''
      type: object
      description: 'A server meets SLA (Service Level Agreement) when all of its subclients have at least one successful backup during the number of days specified at the CommCell, Server Group or plan level.'
      properties:
        useSystemDefaultSLA:
          type: boolean
          nullable: true
          description: Flag to set to use System Default Service Level Agreement
        SLAPeriod:
          type: integer
          nullable: true
          description: SLA Period in Days
          format: int32
        excludeFromSLA:
          x-terraform-statecopy: true
          type: boolean
          nullable: true
          description: Flag to set to exclude plan from SLA
        enableAfterDelay:
          type: integer
          format: int32
          nullable: true
          description: Time provided in Unix format. Give 0 to reset any existing delay.
        exclusionReason:
          type: string
          nullable: true
          description: Reason for exclusion from SLA
        logSLAMinutes:
          type: integer
          description: Database log SLA period in Minutes
          format: int32
          nullable: true
    PlanUserOrGroups:
      title: ''
      description: Users or User Groups associated with the plan
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: This gives Id of user or user group or external user group
        name:
          type: string
          description: This gives name of user or user group or external user group
        type:
          $ref: '#/components/schemas/UserOrGroupsType'
        sendInvite:
          type: boolean
          default: true
          description: 'If set to true, will send an invite email to the user or group. Default is true.'
    UserOrGroupsType:
      title: UserAndUserGroupsType
      type: string
      enum:
        - USER
        - USER_GROUP
        - EXTERNAL_USER_GROUP
      description: Tells what kind of user or user group it is
    LaptopPlanRetentionFileVersions:
      title: ''
      type: object
      description: 'Can retain file versions for one of following three cases: days versions custom versions (daily, weekly monthly) If not defined then, 5 versions are considered the default setting.'
      properties:
        days:
          type: integer
          format: int32
          description: Retain files for this many days. Year(s) or month(s) need to be converted to day(s)
        versions:
          type: integer
          format: int32
          description: Retain this many file versions. This is considered as default if no file retention rule is specified.
          default: 5
        dailyVersions:
          type: integer
          description: 'Custom version rule: Retain daily versions for this many day(s)'
          format: int32
        weeklyVersions:
          type: integer
          format: int32
          description: 'Custom version rule: Retain weekly versions for this many week(s)'
        monthlyVersions:
          type: integer
          format: int32
          description: 'Custom version rule: Retain monthly versions for this many month(s)'
    ArchivingRules:
      title: ''
      type: object
      description: These rules are enforced only when archiving is set to true
      properties:
        startCleaningIfLessThan:
          type: integer
          description: 'When free disk space falls below specified amount (in percentage), start cleaning up the disk'
          format: int32
          default: 50
        stopCleaningIfupto:
          type: integer
          format: int32
          description: 'When free disk space more than specified amount (in percentage), stop cleaning up the disk'
          default: 80
        fileAccessTimeOlderThan:
          type: integer
          format: int32
          description: 'To archive files based on the last accessed date of each file within the folder, specify the number of days'
          default: 90
        fileModifiedTimeOlderThan:
          type: integer
          format: int32
          description: 'To archive files based on the last modified date of each file within the folder, specify the number of days'
          default: 90
        fileCreatedTimeOlderThan:
          type: integer
          format: int32
          description: 'To archive files based on the time the files were created within the folder, specify the number of days'
          default: 0
        fileSizeGreaterThan:
          type: integer
          format: int32
          description: 'To archive files based on the size of the file, specify the minimum file size in KB. All files whose size ranges between the minimum and maximum values are archived.'
          default: 1024
        maximumFileSize:
          type: integer
          format: int32
          description: 'To archive files based on the size of the file, specify the maximum file size in KB. All files whose size ranges between the minimum and maximum values are archived.'
          default: 0
        archiveReadOnlyFiles:
          type: boolean
          default: false
          description: 'To archive files based on the Read-Only attribute, set to TRUE'
        afterArchiving:
          $ref: '#/components/schemas/ArchivingRulesFile'
    ArchivingRulesFile:
      type: string
      title: ''
      description: 'After an archive job, replace the file that meets the archiving rules with a stub or delete the file that meets the archiving rules'
      enum:
        - REPLACE_FILE_WITH_STUB
        - DELETE_THE_FILE
    LaptopPlan:
      title: LaptopPlan CustomerManaged
      type: object
      description: Create a new Laptop Plan
      properties:
        planName:
          type: string
        allowedFeatures:
          $ref: '#/components/schemas/LaptopPlanAllowedFeatures'
        backupContent:
          $ref: '#/components/schemas/LaptopPlanBackupContent'
        storageAndSchedule:
          $ref: '#/components/schemas/LaptopPlanStorageAndSchedule'
        retention:
          $ref: '#/components/schemas/LaptopPlanRetention'
        networkResources:
          $ref: '#/components/schemas/LaptopPlanNetworkResources'
        alerts:
          type: array
          items:
            $ref: '#/components/schemas/IdName'
        allowPlanOverride:
          type: boolean
          default: false
          description: Flag to enable overriding of plan. Plan cannot be overriden by default.
        overrideRestrictions:
          $ref: '#/components/schemas/LaptopPlanOverrideSettings'
        inviteUsersOrGroups:
          type: array
          description: The users and user groups who should install the end-user Endpoint package on their devices.
          items:
            $ref: '#/components/schemas/PlanUserOrGroups'
        parentPlan:
          $ref: '#/components/schemas/IdName'
      required:
        - planName
    LaptopPlanSaaS:
      title: LaptopPlan SaaS
      type: object
      properties:
        disableDLP:
          type: boolean
          description: 'Default: False (DLP will be enabled)'
          default: false
    LaptopPlanStorageAndSchedule:
      title: ''
      type: object
      description: ''
      properties:
        primaryStorage:
          $ref: '#/components/schemas/IdName'
        secondaryStorage:
          $ref: '#/components/schemas/IdName'
        backupFrequency:
          type: integer
          format: int32
          description: Recovery Point Objective (RPO) is the maximum amount of time that data can be lost during a service disruption. Your RPO determines the frequency of your backup jobs. Your RPO is met through automatic options. The time specified in minutes here is your RPO if none of the automatic options are met. Default is 480 minutes (8 hours).
          default: 480
      required:
        - primaryStorage
    EdgeDriveSettings:
      title: ''
      type: object
      properties:
        indexServer:
          $ref: '#/components/schemas/IdName'
        auditDriveOperations:
          type: boolean
          description: 'Enable auditing which logs the activities based on user interaction like creating, editing, moving, renaming, downloading or deleting files.'
        notificationsForShares:
          type: boolean
          description: Enables alert notification feature which allows the share user or share owner to subscribe for share notifications when any activities are performed on the Edge Drive or the Collaborative share. The user can receive the notifications on the Web Console or as an email notification.
        edgeDriveQuota:
          type: integer
          format: int32
          description: Maximum number of gigabytes that you can store in the Edge Drive. Value as -1 means no quota is set.
    EdgeDriveSettingsPlan:
      title: ''
      type: object
      properties:
        createNewIndexServer:
          type: boolean
          description: 'If set to false, uses existing edge index server and requires IndexServer IdName to be passed. If set to true, requires client IdName and indexCachePath to create a new Index Server.'
        indexServer:
          $ref: '#/components/schemas/IdName'
        client:
          $ref: '#/components/schemas/IdName'
        indexCachePath:
          type: string
        auditDriveOperations:
          type: boolean
          description: 'Enable auditing which logs the activities based on user interaction like creating, editing, moving, renaming, downloading or deleting files.'
          default: true
        notificationsForShares:
          type: boolean
          description: Enables alert notification feature which allows the share user or share owner to subscribe for share notifications when any activities are performed on the Edge Drive or the Collaborative share. The user can receive the notifications on the Web Console or as an email notification.
          default: true
        edgeDriveQuota:
          type: integer
          format: int32
          default: -1
          description: Maximum number of gigabytes that you can store in the Edge Drive. Giving value as -1 means no quota.
      required:
        - createNewIndexServer
    LaptopPlanBackupContent:
      title: ''
      type: object
      properties:
        windowsIncludedPaths:
          x-terraform-statecopy: true
          type: array
          description: Paths to include for Windows
          default:
            - Desktop
            - Documents
            - MigrationAssistant
          nullable: true
          items:
            type: string
        windowsExcludedPaths:
          x-terraform-statecopy: true
          type: array
          description: Paths to exclude for Windows
          default:
            - '<WKF,AppData>'
            - '<WKF,LocalAppData>'
            - Disk Images
            - Executable
            - Temporary Files (Windows)
            - 'C:\Program Files'
            - 'C:\Program Files (x86)'
            - 'C:\Windows'
          nullable: true
          items:
            type: string
        macIncludedPaths:
          x-terraform-statecopy: true
          type: array
          description: Paths to include for Mac
          default:
            - Desktop
            - Documents
            - MigrationAssistant
          nullable: true
          items:
            type: string
        macExcludedPaths:
          x-terraform-statecopy: true
          type: array
          description: Paths to exclude for Mac
          default:
            - Disk Images
            - Executable
            - Temporary Files (Mac)
            - /Library
            - '<WKF,Library>'
          nullable: true
          items:
            type: string
        unixIncludedPaths:
          x-terraform-statecopy: true
          type: array
          description: Paths to include for UNIX
          default:
            - Desktop
            - Documents
          nullable: true
          items:
            type: string
        unixExcludedPaths:
          x-terraform-statecopy: true
          type: array
          description: Paths to exclude for UNIX
          default:
            - Disk Images
            - Executable
            - Temporary Files (Linux)
          nullable: true
          items:
            type: string
        fileSystemQuota:
          type: integer
          format: int32
          default: -1
          description: Maximum number of gigabytes that you can store in the File System. Giving value as -1 means infinite file system quota.
    UpdateLaptopPlan:
      title: ''
      type: object
      properties:
        newName:
          type: string
          description: New plan name to update
        general:
          $ref: '#/components/schemas/LaptopPlanUpdateGeneralInfo'
        allowedFeatures:
          $ref: '#/components/schemas/LaptopPlanAllowedFeatures'
        rpo:
          $ref: '#/components/schemas/LaptopPlanUpdateRPO'
        backupContent:
          $ref: '#/components/schemas/LaptopPlanBackupContent'
        retention:
          $ref: '#/components/schemas/LaptopPlanRetention'
        regionToConfigure:
          $ref: '#/components/schemas/IdName'
        associatedUsersAndUserGroups:
          type: array
          items:
            $ref: '#/components/schemas/PlanUserOrGroups'
        alerts:
          type: array
          items:
            $ref: '#/components/schemas/IdName'
        allowPlanOverride:
          type: boolean
          description: Flag to enable overriding of plan
        overrideRestrictions:
          $ref: '#/components/schemas/LaptopPlanOverrideSettings'
        networkResources:
          $ref: '#/components/schemas/LaptopPlanNetworkResources'
        offlineLaptops:
          $ref: '#/components/schemas/AutoRetireDevices'
    AutoRetireDevices:
      title: ''
      type: object
      properties:
        retireAfterDays:
          type: integer
          description: The offline laptops are retired when the number of days are met. -1 means never.
          format: int32
          default: -1
        deleteAfterDays:
          type: integer
          description: The offline laptops are automatically deleted when the number of days are met. -1 means never.
          format: int32
          default: -1
    BackupFrequencyPattern:
      type: object
      description: Used to describe the frequency of backup
      properties:
        scheduleFrequencyType:
          type: string
          enum:
            - MINUTES
            - DAILY
            - WEEKLY
            - MONTHLY
            - YEARLY
          default: DAILY
          description: schedule frequency type
        frequency:
          type: integer
          format: int32
          minimum: 1
          default: 1
          description: 'Frequency of the schedule based on schedule frequency type eg. for Hours, value 2 is 2 hours, for Minutes, 30 is 30 minutes, for Daily, 2 is 2 days. for Monthly 2 is it repeats every 2 months'
        weeklyDays:
          type: array
          description: Days of the week for weekly frequency
          nullable: true
          items:
            $ref: '#/components/schemas/DayOfTheWeek'
        dayOfMonth:
          type: integer
          minimum: 1
          maximum: 31
          format: int32
          description: 'Day on which to run the schedule, applicable for monthly, yearly'
        weekOfMonth:
          $ref: '#/components/schemas/WeekOfTheMonth'
        dayOfWeek:
          $ref: '#/components/schemas/DayOfWeek'
        monthOfYear:
          $ref: '#/components/schemas/MonthOfYear'
        startTime:
          type: integer
          format: int32
          description: 'start time of schedule in seconds for daily, weekly, monthly, yearly frequency'
          default: 75600
    ContentIndexingFrequencyPattern:
      allOf:
        - $ref: '#/components/schemas/BackupFrequencyPattern'
        - type: object
          properties:
            startDate:
              type: integer
              format: int32
              description: start date of schedule in epoch format
            exceptions:
              type: array
              description: 'Exceptions to when a schedule should not run, either in dates or week of month and day'
              items:
                $ref: '#/components/schemas/ScheduleRunException'
    ArchivePlanRPO:
      type: object
      description: Recovery Point Objective (RPO) is the maximum amount of time that data can be lost during a service disruption. Your RPO determines the frequency of your backup jobs.
      properties:
        archiveFrequency:
          $ref: '#/components/schemas/BackupFrequencyPattern'
        archiveWindow:
          type: array
          description: Archive job will run only in the specified archive window
          nullable: true
          items:
            $ref: '#/components/schemas/DayAndTime'
    ArchivePlanUpdateRPO:
      type: object
      description: Recovery Point Objective (RPO) is the maximum amount of time that data can be lost during a service disruption. Your RPO determines the frequency of your backup jobs.
      properties:
        backupFrequency:
          $ref: '#/components/schemas/BackupFrequencyPattern'
        backupWindow:
          type: array
          description: Archive job will run only in the specified archive window
          nullable: true
          items:
            $ref: '#/components/schemas/DayAndTime'
        SLA:
          $ref: '#/components/schemas/SLAUpdateOptions'
    ArchivePlanRPODetails:
      type: object
      description: Recovery Point Objective (RPO) is the maximum amount of time that data can be lost during a service disruption. Your RPO determines the frequency of your backup jobs.
      properties:
        backupFrequency:
          $ref: '#/components/schemas/BackupFrequencyPattern'
        backupWindow:
          type: array
          description: Archive job will run only in the specified archive window
          nullable: true
          items:
            $ref: '#/components/schemas/DayAndTime'
        SLA:
          $ref: '#/components/schemas/SLAOptions'
    ArchivePlanArchivingRules:
      type: object
      description: Files which meet both time stamp and file size rules will be archived
      properties:
        fileTimestampMethod:
          $ref: '#/components/schemas/ArchivePlanArchivingTimestamp'
        fileTimestamp:
          type: integer
          format: int32
          description: 'To archive files based on the last accessed or modified date of each file within the folder, specify the number of days. Should be supplied with fileTimestampMethod.'
          default: 90
        fileSize:
          type: integer
          format: int32
          description: 'To archive files based on the size of the file, specify the minimum file size in KB.'
          default: 1
          minimum: 0
        afterArchiving:
          $ref: '#/components/schemas/ArchivingRulesFile'
    ArchivePlanArchivingTimestamp:
      type: string
      enum:
        - LAST_ACCESSED
        - LAST_MODIFIED
      default: LAST_MODIFIED
    ArchivePlanOverrideSettings:
      description: 'To allow the derived plans that use this plan as the base plan to override the settings, property allowPlanOverride must be true, and then select one of the options for Storage pool, RPO and Archiving rules.'
      type: object
      properties:
        storagePool:
          $ref: '#/components/schemas/PlanOverrideOptions'
        RPO:
          $ref: '#/components/schemas/PlanOverrideOptions'
        archivingRules:
          $ref: '#/components/schemas/PlanOverrideOptions'
    ArchivePlanInheritSettings:
      title: ArchivePlanInheritSettings
      type: object
      properties:
        basePlan:
          $ref: '#/components/schemas/IdName'
        storagePool:
          $ref: '#/components/schemas/PlanOverridenOptions'
        RPO:
          $ref: '#/components/schemas/PlanOverridenOptions'
        archivingRules:
          $ref: '#/components/schemas/PlanOverridenOptions'
    ArchivingServicePolicy:
      title: ArchivingServicePolicy
      type: object
      description: Create Archiving Service Policy Model for Archive Plan
      properties:
        policyId:
          type: string
          description: Archiving service policy id
        tags:
          type: string
          description: Tag ids
    ArchivePlan:
      type: object
      properties:
        planName:
          type: string
        backupDestinations:
          type: array
          items:
            $ref: '#/components/schemas/CreateArchivePlanBackupDestination'
        rpo:
          $ref: '#/components/schemas/ArchivePlanRPO'
        archivingRules:
          $ref: '#/components/schemas/ArchivePlanArchivingRules'
        allowPlanOverride:
          type: boolean
          default: false
          description: Flag to enable overriding of plan. Plan cannot be overriden by default.
        overrideRestrictions:
          $ref: '#/components/schemas/ArchivePlanOverrideSettings'
        parentPlan:
          $ref: '#/components/schemas/IdName'
      required:
        - planName
    UpdateArchivePlan:
      type: object
      properties:
        newName:
          type: string
          description: New plan name to update
          nullable: true
        archivingRules:
          $ref: '#/components/schemas/ArchivePlanArchivingRules'
        rpo:
          $ref: '#/components/schemas/ArchivePlanUpdateRPO'
        regionToConfigure:
          $ref: '#/components/schemas/IdName'
        allowPlanOverride:
          type: boolean
          description: 'Flag to enable overriding of plan. Once enabled, cannot be disabled.'
        overrideRestrictions:
          $ref: '#/components/schemas/ArchivePlanOverrideSettings'
    ArchivePlanDetails:
      type: object
      properties:
        plan:
          $ref: '#/components/schemas/IdName'
        archivingRules:
          $ref: '#/components/schemas/ArchivePlanArchivingRules'
        rpo:
          $ref: '#/components/schemas/ArchivePlanRPODetails'
        regionsConfigured:
          type: boolean
          description: Specifies if the destinations are associated to regions
        backupDestinations:
          type: array
          items:
            $ref: '#/components/schemas/ArchivePlanBackupDestination'
        allowPlanOverride:
          type: boolean
          description: Flag to enable overriding of plan
        overrideRestrictions:
          $ref: '#/components/schemas/ArchivePlanOverrideSettings'
        inheritSettings:
          $ref: '#/components/schemas/ArchivePlanInheritSettings'
        parentInheritSettings:
          $ref: '#/components/schemas/ArchivePlanInheritSettings'
        associatedEntities:
          type: array
          items:
            $ref: '#/components/schemas/IdNameCount'
        permissions:
          type: array
          items:
            $ref: '#/components/schemas/IdName'
        archivingServicePolicy:
          $ref: '#/components/schemas/ArchivingServicePolicy'
    CreateArchivePlanBackupDestination:
      type: object
      properties:
        backupDestinationName:
          type: string
          description: Backup destination details. Enter the name during creation.
        storagePool:
          $ref: '#/components/schemas/IdName'
        region:
          $ref: '#/components/schemas/IdName'
        sourceCopy:
          $ref: '#/components/schemas/IdName'
        retentionPeriodDays:
          type: integer
          description: Retention period in days. -1 can be specified for infinite retention.
          format: int32
          minimum: 1
          maximum: 9999
        overrideRetentionSettings:
          type: boolean
          description: Tells if this copy should use storage pool retention period days or the retention defined for this copy. Set as true to use retention defined on this copy.
      required:
        - backupDestinationName
        - storagePool
    ArchivePlanBackupDestination:
      type: object
      description: ''
      properties:
        planBackupDestination:
          $ref: '#/components/schemas/IdName'
        isDefault:
          type: boolean
          description: Is this a default backup destination?
        copyType:
          $ref: '#/components/schemas/PlanCopyType'
        copyTypeName:
          $ref: '#/components/schemas/PlanCopyTypeName'
        copyPrecedence:
          type: integer
          format: int32
          description: Order of copy created in storage policy
        storagePool:
          $ref: '#/components/schemas/StoragePool'
        storageType:
          $ref: '#/components/schemas/StorageType'
        sourceCopy:
          $ref: '#/components/schemas/IdName'
        region:
          $ref: '#/components/schemas/IdNameDisplayName'
        enableDataAging:
          type: boolean
          description: Tells if this copy has data aging enabled
        retentionPeriodDays:
          type: integer
          description: Retention period in days
          format: int32
          minimum: 1
          maximum: 9999
        overrideRetentionSettings:
          type: boolean
          description: Tells if this copy should use storage pool retention period days or the retention defined for this copy. Set as true to use retention defined on this copy.
    UpdateArchivePlanBackupDestination:
      title: ''
      type: object
      properties:
        newName:
          type: string
          description: New name for backup destination
        sourceCopy:
          $ref: '#/components/schemas/IdName'
        enableDataAging:
          type: boolean
          description: Tells if this copy has data aging enabled
        retentionPeriodDays:
          type: integer
          description: Retention period in days. -1 can be specified for infinite retention.
          format: int32
          minimum: 1
          maximum: 9999
        overrideRetentionSettings:
          type: boolean
          description: Tells if this copy should use storage pool retention period days or the retention defined for this copy. Set as true to use retention defined on this copy.
    ArchivePlanBackupDestinations:
      type: object
      properties:
        backupdestinations:
          type: array
          items:
            $ref: '#/components/schemas/ArchivePlanBackupDestination'
          nullable: true
        regionsConfigured:
          type: boolean
          description: Specifies if the plan has region-based storage
    CreateArchivePlanBackupDestinations:
      required:
        - destinations
      type: object
      properties:
        destinations:
          type: array
          items:
            $ref: '#/components/schemas/CreateArchivePlanBackupDestination'
          description: List of backup destinations to create
          nullable: true
        region:
          $ref: '#/components/schemas/IdName'
    UpdateUser:
      type: object
      properties:
        fullName:
          type: string
          description: Change name for existing user
        newName:
          x-terraform-mapping: name
          type: string
          description: Change user name for existing user. Username can be used for logging-in as an alternate to email-id if duplicate email-ids are present.
        email:
          type: string
          description: Change email-id for existing user. This email-id can be used for logging-in.
        userGroupOperation:
          type: string
          description: 'Allows adding to, overwriting and deleting existing user groups. default is adding to existing userGroups'
          enum:
            - ADD
            - DELETE
            - OVERWRITE
          default: ADD
          x-terraform-include: false
        userGroups:
          type: array
          x-terraform-include: false
          description: 'Provide a list of userGroups that the user should be a part of. Note that for external users, user groups cannot be modified.'
          items:
            $ref: '#/components/schemas/IdName'
        newPassword:
          x-terraform-mapping: password
          x-terraform-sensitive: true
          type: string
          description: Change existing password for user. validationPassword must also be provided when changing password. Password should be in provided in Base64 format.
        validationPassword:
          x-terraform-system: true
          type: string
          description: Provide the old password in Base64 format when updating the password. The new password has to be provided in the password tag.
        plan:
          x-terraform-computed: false
          $ref: '#/components/schemas/IdName'
        enabled:
          type: boolean
          description: enable or disable the user.
        userPrincipalName:
          type: string
          description: Change User Principal Name(UPN) for existing user. This User Principal Name can be used for logging-in.
        authenticationMethod:
          type: string
          description: Change the current authentication method of user. SAML user association can be removed using this.
      description: Used to update an existing user.
    UserListResp:
      type: object
      properties:
        numberOfUsers:
          type: integer
          format: int32
        users:
          type: array
          items:
            $ref: '#/components/schemas/UserSummary'
      description: Returns a list of existing users.
    GetServerGroupsResp:
      type: object
      properties:
        serverGroupCount:
          type: integer
          format: int32
          description: This returns the total number of server groups.
        serverGroups:
          type: array
          items:
            $ref: '#/components/schemas/serverGroupList'
      description: Returns a list of existing server groups which are present.
    CreateCommcellGroupReq:
      type: object
      properties:
        name:
          type: string
          description: Used to set the name of the commcell group.
        description:
          type: string
          description: Used to set the description of the commcell group.
        serviceCommcells:
          type: array
          items:
            $ref: '#/components/schemas/ServiceCommcellInfo'
      description: Request object for creating commcell group.
    UpdateCommcellGroupReq:
      type: object
      properties:
        name:
          type: string
          description: Used to rename commcell group.
        description:
          type: string
          description: Used to update the description of the commcell group.
        serviceCommcells:
          type: array
          items:
            $ref: '#/components/schemas/ServiceCommcellInfo'
        serviceCommcellsOperationType:
          $ref: '#/components/schemas/ListOperationType'
      description: Request object for updating commcell group.
    GetCommcellGroupsResp:
      type: object
      properties:
        CommcellGroups:
          type: array
          items:
            $ref: '#/components/schemas/CommcellGroupInfo'
      description: Returns a list of existing commcell groups which are present.
    CreateServerGroupPreviewResp:
      type: object
      description: List of servers affected by create server group operation
      properties:
        servers:
          type: array
          items:
            $ref: '#/components/schemas/IdName'
    CreateServerGroupResp:
      type: object
      properties:
        serverGroupInfo:
          $ref: '#/components/schemas/IdNameGUID'
    CreateCommcellGroupResp:
      type: object
      properties:
        commcellGroupInfo:
          $ref: '#/components/schemas/IdNameGUID'
      description: Returns id, name and guid of the commcell group created.
    CreateServerGroup:
      type: object
      properties:
        name:
          type: string
        serverGroupType:
          $ref: '#/components/schemas/ServerGroupType'
        description:
          type: string
        automaticAssociation:
          $ref: '#/components/schemas/AutomaticServerGroupAssociationDetails'
        virtualAssociation:
          $ref: '#/components/schemas/VirtualServerGroupAssociationDetails'
        manualAssociation:
          $ref: '#/components/schemas/ManualServerGroupAssociationDetails'
        globalConfigInfo:
          $ref: '#/components/schemas/CreateGlobalConfigInfo'
      description: Create a new server group, operation supported for three ServerGroupTypes MANUAL, AUTOMATIC, VIRTUAL_MACHINE
    UpdateServerGroup:
      type: object
      properties:
        serverGroup:
          $ref: '#/components/schemas/IdName'
        serverGroupType:
          $ref: '#/components/schemas/ServerGroupType'
        description:
          type: string
        automaticAssociation:
          $ref: '#/components/schemas/AutomaticServerGroupAssociationDetails'
        virtualAssociation:
          $ref: '#/components/schemas/VirtualServerGroupAssociationDetails'
        manualAssociation:
          $ref: '#/components/schemas/ManualServerGroupAssociationDetails'
      description: Update server group, operation supported for three ServerGroupTypes MANUAL, AUTOMATIC, VIRTUAL_MACHINE
    ServerGroupType:
      enum:
        - MANUAL
        - AUTOMATIC
        - VIRTUAL_MACHINE
      type: string
      format: ''
    ClientScopeType:
      enum:
        - COMMCELL
        - COMPANY
        - USER
        - USERGROUP
      type: string
      format: ''
    ClientScopeDetails:
      type: object
      properties:
        clientScopeType:
          $ref: '#/components/schemas/ClientScopeType'
        entityInfo:
          $ref: '#/components/schemas/IdName'
    associatedClientId:
      title: associatedClientId
      type: object
      properties:
        clientID:
          type: integer
          format: int32
    clientAssociationServerGroupContent:
      title: clientAssociationServerGroupContent
      type: object
      properties:
        associationRule:
          type: array
          items:
            $ref: '#/components/schemas/VirtualMachinecontent'
        associatedClient:
          $ref: '#/components/schemas/associatedClientId'
    VirtualServerGroupAssociationDetails:
      type: object
      properties:
        virtualInstance:
          $ref: '#/components/schemas/VSVendor'
        virtualServers:
          type: array
          items:
            $ref: '#/components/schemas/IdName'
        rules:
          $ref: '#/components/schemas/RuleGroupContent'
        clientAssociation:
          type: array
          items:
            $ref: '#/components/schemas/clientAssociationServerGroupContent'
    ServerRuleGroupOperation:
      enum:
        - AND
        - OR
        - NOT
      type: string
      format: ''
    ServerRuleGroups:
      type: object
      properties:
        match:
          $ref: '#/components/schemas/ServerRuleGroupOperation'
        ruleGroup:
          type: array
          description: List of rule groups
          items:
            $ref: '#/components/schemas/ServerRuleGroup'
    ServerRuleGroup:
      type: object
      properties:
        match:
          $ref: '#/components/schemas/ServerRuleGroupOperation'
        rules:
          type: array
          description: List of rules
          items:
            $ref: '#/components/schemas/ServerRule'
    ServerRule:
      type: object
      properties:
        ruleName:
          type: string
          enum:
            - APP_TYPE
            - CLIENT_GROUP
            - CLIENT_GROUPLIST
            - USES_LIBRARY
            - STORAGE_POLICY
            - STORAGE_POLICYLIST
            - BACKUP_ACTIVITY_ENABLED_FOR_CLIENT
            - CASE_MANAGER_CLIENTS
            - CLIENT_PROP
            - CLIENT_ACTS_AS_PROXY
            - CLIENT_ASSOCIATED_WITH_PLAN
            - CLIENT_BACKUP_ACTIVITY_ENABLED
            - CLIENT_BY_SCHEDULE_INTERVAL
            - CLIENT_CIDR_RANGE
            - CLIENTS_RELEASE16PLUS_SP_LEVEL_CONSTRAINT
            - CLIENT_DESCRIPTION
            - CLIENT_DISPLAY_NAME
            - CLIENT_EXCLUDED_FROM_SLA
            - CLIENTGROUP_NAME
            - CLIENT_CIDR_RANGE_IPV6
            - CLIENT_ISDELETEDVM
            - CLIENT_HAS_CONNECTIVITY_ISSUES
            - CLIENT_NAME
            - CLIENT_NEEDS_UPDATES
            - CLIENT_OFFLINE
            - CLIENT_ONLINE
            - CLIENT_ONLINE_IN_LAST_30_DAYS
            - CLIENT_ONLINE_IN_LAST_N_DAYS
            - CLIENT_USES_STORAGEPOLICY
            - CLIENT_VERSION
            - COMPARE_CLIENT_CS_VERSION
            - CLIENT_ASSOCIATED_ADUSERGROUP
            - IS_COMPANY_CLIENT
            - CLIENT_ASSOC_SCHDPOLICY
            - CLIENT_ASSOCIATED_TO_TOPOLOGY_WITH_REGION
            - VSA_BACKEDUP_CLIENT
            - CLIENT_INDEX_MAINFOLIST
            - CLIENT_OS_INFOLIST
            - CLIENT_BY_PERMISSION
            - CLIENT_BY_ROLE
            - VSA_DISCOVER_CLIENT
            - CLIENTGROUP_TAGLIST
            - CLIENT_MEETS_SLA
            - CLIENTS_OF_RESELLER
            - USERGROUPLIST
            - CLIENT_IDA_ASSOCIATED_ADUSERGROUP
            - CLIENT_WITH_ASSOCIATED_REGION
            - CLIENTS_WITH_ATTACHED_STORAGE
            - CLIENT_WITH_BACKUP_SCHEDULE
            - CLIENT_WITH_ENABLED_BACKUP_SCHEDULE
            - CLIENT_ENCRYPTION_STATE
            - CLIENT_FETSIZE_LE_10GB
            - CLIENT_IMPROPER_DECONF_SUBCLIENT
            - CLIENT_INDEXINGV1
            - CLIENT_INDEXINGV2
            - CLIENTINFRASTRUCTUREROLE_LIST
            - CLIENT_LICENSELIST
            - CLIENT_LONG_RUNNING_JOBS_N_DAYS
            - CLIENT_WITH_NO_ARCHIVE_DATA
            - CLIENTS_WITH_ONEPASS_ENABLED
            - CLIENT_WITH_ASSOCIATED_SP
            - CLIENT_WITH_SYNTHETICFULL_BACKUP
            - CLIENT_TAGLIST
            - IS_COMMCELL_CLIENT
            - COMPANY_CLIENT_ASSOCIATIONS
            - COMPANY_INSTALLED_CLIENT_ASSOCIATIONS
            - ANALYZER_SERVERS_CLIENT
            - DAYS_SINCE_CLIENT_CREATED
            - DAYS_SINCE_LAST_CLIENT_BKP
            - EXTERNAL_GROUP_CLIENT_OWNER
            - HAC_CLUSTER_CLIENT
            - HOST_NAME
            - MACLIENTS_WITH_STORAGEPOOLS
            - CLIENT_OWNER_INACTIVE_ADUSER
            - SOLR_SERVERS_CLIENT
            - LOCAL_GROUP_CLIENT_OWNER
            - MEDIAAGENT_HAS_LUCENE_INDEX_ROLELIST
            - MEDIAAGENT_HAS_LUCENE_INDEX_ROLES
            - MAS_FOR_CLIENTS_IN_GROUP
            - MAS_FOR_CLIENTS_IN_GROUPLIST
            - CLIENT_GATEWAY_FOR_INSTALLATION
            - OS_TYPE
            - OS_VERSION
            - PACKAGE_INSTALLED
            - PRODUCT_VERSION
            - PSEUDO_CLIENTS
            - RESTORE_ACTIVITY_ENABLED_FOR_CLIENT
            - SNAP_BACKUP_CLIENTS
            - CLIENT_CONSECUTIVE_BACKUP_FAILURES
            - SUBCLIENT_NAME
            - TIMEZONE
            - TIMEZONELIST
            - TIMEZONE_REGIONLIST
            - USER_CLIENT_OWNER
            - USER_CLIENT_ASSOCIATIONS
            - USER_DESCRIPTION_CONTAINS
            - USERGROUP_CLIENT_ASSOCIATIONS
            - USERGROUP_DESCRIPTION_CONTAINS
            - VM_NO_CONTENT
            - VMHYPER_IN_CLIENTGROUP
        ruleValue:
          type: string
          description: Primary value for the rule
        ruleSecValue:
          type: string
          description: 'Secondary value used for BETWEEN and NOT_BETWEEN matchCondition. For ruleName which have enum values (like OS_TYPE), this is used to store displayName.'
        matchCondition:
          $ref: '#/components/schemas/matchesWithEnum'
    matchesWithEnum:
      enum:
        - IS_TRUE
        - IS_FALSE
        - CONTAINS
        - DOES_NOT_CONTAIN
        - IS
        - IS_NOT
        - STARTS_WITH
        - ENDS_WITH
        - EQUAL_TO
        - NOT_EQUAL_TO
        - GREATER_THAN
        - LESS_THAN
        - GREATER_THAN_OR_EQUAL_TO
        - LESS_THAN_OR_EQUAL_TO
        - BETWEEN
        - NOT_IN
        - ANY_IN_SELECTION
        - NOT_IN_SELECTION
        - IN
        - NOT_BETWEEN
      type: string
      format: ''
    AutomaticServerGroupAssociationDetails:
      type: object
      properties:
        clientScope:
          $ref: '#/components/schemas/ClientScopeDetails'
        serverGroupRule:
          $ref: '#/components/schemas/ServerRuleGroups'
        confirmRuleChange:
          type: boolean
          description: Confirm that server group rule impacts server of a specific company smart client group only
    ManualServerGroupAssociationDetails:
      type: object
      properties:
        associatedservers:
          type: array
          description: List of associated servers
          items:
            $ref: '#/components/schemas/IdName'
    serverGroupList:
      type: object
      properties:
        name:
          type: string
          description: Name of server group.
        id:
          type: integer
          format: int32
          description: Id of server group.
        association:
          $ref: '#/components/schemas/ServerGroupAssociation'
        isSyncInProgress:
          type: boolean
          description: 'If true, server group is synchronizing associated servers.'
        isCompanySmartClientGroup:
          type: boolean
          description: 'If true, server group is a company smart client group.'
        company:
          $ref: '#/components/schemas/IdName'
        globalConfigInfo:
          $ref: '#/components/schemas/GlobalConfigInfo'
        tags:
          type: array
          description: Array of all the tags associated with server group
          items:
            $ref: '#/components/schemas/IdNameValue'
        commcell:
          $ref: '#/components/schemas/CommcellInfo'
    CommcellGroupInfo:
      type: object
      properties:
        CommcellGroup:
          $ref: '#/components/schemas/IdNameGUID'
        Company:
          $ref: '#/components/schemas/IdNameGUID'
        AssociationCount:
          type: integer
          format: int32
          description: 'Commcell association info.'
        GlobalConfigInfo:
          $ref: '#/components/schemas/GlobalConfigInfo'
        ServiceCommcells:
          type: array
          items:
            $ref: '#/components/schemas/ServiceCommcellInfo'
        description:
          type: string
          description: Description of the commcell group.
    ServiceCommcellInfo:
      type: object
      properties:
        Commcell:
          $ref: '#/components/schemas/IdNameGUID'
        Version:
          type: string
          description: Version of the service commcell.
        activeManagementStatus:
          enum:
            - DISABLED
            - INPROGRESS
            - ENABLED
            - FAILED
          type: string
          description: Returns active management status of the service commcell.
    ServerGroup:
      type: object
      properties:
        serverGroup:
          $ref: '#/components/schemas/IdName'
        description:
          type: string
        general:
          $ref: '#/components/schemas/generalInfoServerGroup'
        security:
          type: array
          items:
            $ref: '#/components/schemas/SecurityAssoc'
        activityControl:
          $ref: '#/components/schemas/activityControl'
        associatedServers:
          type: array
          items:
            $ref: '#/components/schemas/serverDetails'
        powerManagement:
          $ref: '#/components/schemas/IdName'
        fileExceptions:
          $ref: '#/components/schemas/fileExceptionsDetail'
        blackoutWindow:
          type: array
          items:
            $ref: '#/components/schemas/blackoutWindowDetails'
    doNotRunJobDetails:
      type: object
      properties:
        onDays:
          type: array
          items:
            $ref: '#/components/schemas/DayOfTheWeek'
        ofWeeks:
          type: array
          items:
            $ref: '#/components/schemas/WeekOfMonth'
        dayTimeStart:
          type: integer
          format: int32
          description: 'day time start in seconds, during which the operation will not run.'
        dayTimeEnd:
          type: integer
          format: int32
          description: 'day time end in seconds, during which the operation will not run.'
    backupOperationsList:
      type: object
      properties:
        full:
          type: boolean
          description: Full job is selected or not for blackout window
          nullable: true
        syntheticFull:
          type: boolean
          description: Synthetic Full job is selected or not for blackout window
          nullable: true
        transactionLog:
          type: boolean
          description: Transaction Log job is selected or not for blackout window
          nullable: true
        incrementalAndDifferential:
          type: boolean
          description: Incremental and Differential job is selected or not for blackout window
          nullable: true
    blackoutWindowDetails:
      type: object
      properties:
        name:
          type: string
          description: Name of the blackout window operation rule
        backupOperations:
          $ref: '#/components/schemas/backupOperationsList'
        doNotRunJob:
          type: array
          items:
            $ref: '#/components/schemas/doNotRunJobDetails'
        betweenDates:
          type: boolean
          description: 'Between these dates, do not run job'
        startDate:
          type: integer
          format: int32
          description: 'Start date in seconds, during which the operation will not run'
        endDate:
          type: integer
          format: int32
          description: 'End date in seconds, during which the operation will not run'
        doNotSubmitJob:
          type: boolean
          description: To skip a scheduled job
    fileExceptionsDetail:
      type: object
      properties:
        useGroupFilters:
          type: boolean
          description: To apply the filters to all the subclients in the server group.
        windowsFilters:
          type: array
          items:
            type: string
        unixFilters:
          type: array
          items:
            type: string
    serverDetails:
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: 'Id of server, which is part of server group.'
        name:
          type: string
          description: 'Name of server, which is part of server group.'
        agent:
          type: array
          items:
            $ref: '#/components/schemas/IdName'
        version:
          type: string
          description: Service pack version of server.
        os:
          type: string
          description: Operating system of server.
        updateStatus:
          type: string
          description: update status of server.
    activityControl:
      type: object
      properties:
        databackup:
          type: boolean
          description: Data Backup is enabled or not
        dataRestore:
          type: boolean
          description: Data Restore is enabled or not
        dataAging:
          type: boolean
          description: Data Aging is enabled or not
    generalInfoServerGroup:
      type: object
      properties:
        region:
          $ref: '#/components/schemas/IdName'
        enableDataEncryption:
          type: boolean
          description: Allow owners to enable data encryption
        autoDiscover:
          type: boolean
          description: 'if enabled then after every 24 hours, according to each server''s individual Commvault service schedule, the software discovers the applications on each server and installs a Commvault software package for each application that is found.'
    UserSummary:
      type: object
      properties:
        id:
          x-terraform-id: true
          type: integer
          format: int32
          description: User id
        name:
          type: string
          description: The user name of the user.
        GUID:
          type: string
          description: globally unique identifier
        email:
          type: string
          description: Email-id of the user. This email-id can be used for logging in the user.
        fullName:
          type: string
          description: full name of the user
        plan:
          $ref: '#/components/schemas/IdName'
        enabled:
          type: boolean
          description: Gives information on whether the user is enabled or disabled.
        lockInfo:
          $ref: '#/components/schemas/LockProperties'
        numberOfLaptops:
          type: integer
          format: int32
          description: Returns the number of laptops associated with the user
        company:
          $ref: '#/components/schemas/IdName'
        commcell:
          $ref: '#/components/schemas/CommcellInfo'
        userPrincipalName:
          type: string
          description: User Principal Name(UPN) of the user. This User Principal Name can be used for logging in the user.
      title: ''
    LockProperties:
      type: object
      properties:
        isLocked:
          type: boolean
          description: Returns if the user is locked or unlocked.
        startTime:
          type: integer
          format: int32
          description: 'If the user is locked, it returns user lock start time in unix time format.'
        endTime:
          type: integer
          format: int32
          description: 'If the user is locked, it returns user lock end time in unix time format.'
    CreateUsers:
      type: object
      description: Used to create single or multiple users.
      properties:
        users:
          type: array
          x-terraform-flatten: true
          items:
            $ref: '#/components/schemas/CreateUser'
      required:
        - users
    CreateUser:
      type: object
      properties:
        fullName:
          type: string
          description: Used to provide a name to the new user.
        name:
          type: string
          description: 'Used to provide the new user with a username. This username can be used for logging in the user instead of email-id when duplicate email-ids are present. For external user, it is necessary to provide the domain name along with the username (domainName\\username). To create a company user, the company id or name needs to be provided in the company entity.'
        externalProviderId:
          x-terraform-include: false
          type: integer
          format: int32
          description: Please provide this entity only when creating an AD user. Not needed for local and company users.
        email:
          type: string
          description: Used to provide an email-id to the new user. This email-id is used for logging in the user. Please note that email ids are compulsory for company and local users and optional for external users.
        company:
          x-terraform-computed: true
          $ref: '#/components/schemas/IdName'
        userGroups:
          x-terraform-include: false
          type: array
          description: Provide a list of userGroups that the user should be a part of. Either id or name or both can be provided.
          items:
            $ref: '#/components/schemas/IdName'
        useSystemGeneratePassword:
          type: boolean
          description: 'Choose to provide a system generated password to the user instead of providing your own password. An email will be sent to the user to reset the password. If it is set to true, password tag need not be provided. If it is set to false, password needs to be provided in the password tag in Base64 format.'
        password:
          x-terraform-sensitive: true
          type: string
          description: Used to provide a password to the user being created. This will be accepted when the useSystemGeneratePassword tag is false. The password has to be provided in Base64 format.
        inviteUser:
          type: boolean
          description: User will receive an email to install backup software package on their device if this is set to true.
        plan:
          x-terraform-computed: false
          $ref: '#/components/schemas/IdName'
      required:
        - email
    InfrastructureTypes:
      enum:
        - RENTED_STORAGE
        - OWN_STORAGE
        - RENTED_AND_OWN_STORAGE
      type: string
      format: ''
      description: 'These are different types of infrastructure provided for storage in companies. It can be rented from the provider, owned or can be a hybrid. Cannot move back to rented storage from owned storage and cannot move back to rented storage/owned storage from rented and owned storage.'
    CompanyStatus:
      type: object
      properties:
        deactivate:
          type: boolean
          description: Used to activate or deactivate the company. Not applicable for SaaS.
        options:
          $ref: '#/components/schemas/DeactivationOptions'
    DeactivationOptions:
      type: object
      properties:
        disableBackup:
          type: boolean
          description: Enable or disable backup. This option can only be set or unset for a deactivated company.
        disableRestore:
          type: boolean
          description: Enable or disable restore. This option can only be set or unset for a deactivated company.
        disableLogin:
          type: boolean
          description: Enable or disable login. This option can only be set or unset for a deactivated company.
    UpdateCompany:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/CompanyStatus'
        newName:
          type: string
          description: Used to change the name of a company
        general:
          $ref: '#/components/schemas/General'
        security:
          type: array
          items:
            $ref: '#/components/schemas/UpdateSecurityAssoc'
        emailSettings:
          $ref: '#/components/schemas/EmailSettings'
        sites:
          $ref: '#/components/schemas/Sites'
        tenantOperators:
          type: array
          items:
            $ref: '#/components/schemas/TenantOperator'
        plans:
          type: array
          description: Provide a list of data protection plans to use for the company. The plans that are provided are the plans that the tenant administrator can choose from.
          items:
            $ref: '#/components/schemas/IdName'
        defaultPlans:
          type: array
          description: Refers to default data protection plans to use for the company.
          items:
            $ref: '#/components/schemas/DefaultPlan'
        fileExceptions:
          $ref: '#/components/schemas/FileExceptions'
      description: Used to update the properties of an existing company
    DefaultPlan:
      type: object
      description: Refers to default data protection plans to use for the company. There can be a default plan for each subtype.
      properties:
        subtype:
          $ref: '#/components/schemas/SubTypes'
        id:
          type: integer
          format: int32
          description: 'Id of the default plan. Either id or name can be provided. If both id and name are provided, id is given first preference.'
        name:
          type: string
          description: 'Name of the default plan. Either id or name can be provided. If both id and name are provided, id is given first preference.'
    SubTypes:
      enum:
        - ANY
        - DLO
        - SERVER
        - LAPTOP
        - DATABASE
        - SNAP
        - FS_SERVER
        - VSA_SERVER
        - VSA_REPLICATION
        - EXCHANGE_USER
        - EXCHANGE_JOURNAL
        - DATA_CLASSIFICATION
        - E_DISCOVERY
        - OFFICE_365
        - ARCHIVER
        - FSIBMIVTL
        - DYNAMICS_365
        - CDM
        - ObjectStore
      type: string
      format: ''
    General:
      type: object
      properties:
        newAlias:
          type: string
          description: The company domain or NetBIOS name
        emailSuffix:
          type: string
          description: Supported domains for the company
        authcodeForInstallation:
          type: boolean
          description: Enable or disable authcode for installation.
        upnInsteadOfEmail:
          type: boolean
          description: Enable or disable the use of User Pricipal Name in place of an email address.
        twoFactorAuth:
          $ref: '#/components/schemas/TwoFactorAuth'
        resellerMode:
          type: boolean
          description: 'Enable reseller mode. A reseller is a user or user groups who can operate multiple tenant environments. The service provider can assign one or more resellers as the tenant operator for a company. The reseller can switch to any of their assigned tenant environment and operate on the company as a tenant user. Once enabled, the reseller mode cannot be disabled.'
        enableDataEncryption:
          type: boolean
          description: Enable or disable data encryption
        autoDiscoverApp:
          type: boolean
          description: 'Enable or Disable Auto Discover Applications.When Auto discover applications is enabled, each member server of this company is searched once every 24 hours to discover any applications that need to be backed up. For any newly-discovered and unprotected applications, the agent software is automatically installed on the server.'
        infrastructureType:
          $ref: '#/components/schemas/InfrastructureTypes'
        supportedSolutions:
          type: array
          items:
            $ref: '#/components/schemas/SupportedSolution'
        assignLaptopOwners:
          $ref: '#/components/schemas/OwnerAssignmentTypes'
        serviceCommcells:
          type: array
          description: Service commcells associated with the master commcell.
          items:
            $ref: '#/components/schemas/IdName'
    externalUserGroup:
      type: object
      description: External User Group Entity
      properties:
        id:
          type: integer
          format: int32
          description: User Group Id
        name:
          type: string
          description: External Group Name
        providerId:
          type: integer
          format: int32
          description: Provider id
        providerName:
          type: string
          description: Provider Name
    GetSpareGroupProperties:
      title: GetSpareGroupProperties
      type: object
      description: Response structure to get all spare group properties
      properties:
        name:
          type: string
          description: Name of the spare group
        typeId:
          type: integer
          format: int32
          description: Spare group type Id
        lowWaterMark:
          type: integer
          format: int32
          description: Low watermark value set for the spare group
        highWaterMark:
          type: integer
          format: int32
          description: High watermark value set for the spare group
        defaultMediaTypeId:
          type: integer
          format: int32
          description: Id of default media type selected for spare group
        defaultMediaTypeName:
          type: string
          description: Name of default media type selected for spare group
    SecurityAssoc:
      type: object
      description: A list of users or user groups each having a specific set of roles that determine the kind of operations they can perform on the entity.
      properties:
        user:
          $ref: '#/components/schemas/IdName'
        userGroup:
          $ref: '#/components/schemas/IdName'
        externalUserGroup:
          $ref: '#/components/schemas/externalUserGroup'
        isCreatorAssociation:
          type: boolean
        role:
          $ref: '#/components/schemas/IdName'
        permissionList:
          type: array
          items:
            $ref: '#/components/schemas/PermissionResp'
    UpdateSecurityAssoc:
      type: object
      x-terraform-ignore-child: name
      description: 'A list of users or user groups each having a specific set of roles that determine the kind of operations they can perform on the entity. Either id/name of the user/usergroup/roles can be provided. If both id and name are provided, id will be taken into consideration.'
      properties:
        user:
          $ref: '#/components/schemas/IdName'
        userGroup:
          $ref: '#/components/schemas/IdName'
        role:
          $ref: '#/components/schemas/IdName'
    PermissionResp:
      type: object
      description: 'List of permissions associated with the entity. Either categoryId and categoryName or permissionId and permissionName will be returned. If categoryId or categoryName is returned, all the corresponding permissions in the category are associated with the entity.'
      properties:
        permissionId:
          type: integer
          format: int32
        permissionName:
          type: string
        categoryId:
          type: integer
          format: int32
        categoryName:
          type: string
        type:
          enum:
            - ALL_CATEGORIES
            - CATEGORY_ENTITY
            - PERMISSION_ENTITY
          type: string
          description: Returns the type of association.
        exclude:
          type: boolean
          description: Flag to specify if this is included permission or excluded permission.
    OwnerAssignmentTypes:
      enum:
        - LOGGED_IN_ACTIVE_DIRECTORY_USERS
        - FIRST_LOGGED_IN_USER
        - LAPTOP_USER_GROUPS_AS_OWNERS
        - DO_NOT_ASSIGN
      type: string
      format: ''
      description: 'Used to assign owners to laptops automatically after installation. The owners can be all the logged in active directory users, the first user to login into the laptop after installation or the users belonging to the laptop''s local user group list. The option to assign automatically can also be disabled.'
    SupportedSolution:
      type: string
      description: This facilitates the selection of solutions for the company by it's provider.
      enum:
        - FILE_SERVER
        - VIRTUALIZATION
        - LAPTOP
        - DATABASES
        - EXCHANGE
        - ARCHIVING
        - CLOUD_APPS
        - SHAREPOINT
        - ACTIVATE
        - ACTIVE_DIRECTORY
        - OFFICE_365
        - BIGDATA_APPS
        - G_SUITE
        - SALESFORCE
        - REPLICATION
        - KUBERNETES
    TenantOperator:
      type: object
      description: 'These are users and groups who will be allowed to manage the company. Different roles can be assigned for each tenant operator for the company. Either id/name of the user/usergroup/roles can be provided. If both id and name are provided, id will be taken into consideration.'
      properties:
        user:
          $ref: '#/components/schemas/IdName'
        userGroup:
          $ref: '#/components/schemas/IdName'
        role:
          $ref: '#/components/schemas/IdName'
    EmailSettings:
      type: object
      properties:
        senderName:
          type: string
          description: Name of the sender sending the email
        senderEmail:
          type: string
          description: Email id of the sender
    Sites:
      type: object
      properties:
        primarySiteName:
          type: string
          description: Primary site name
        secondarySiteNames:
          type: array
          description: Secondary site names
          items:
            type: string
    FileExceptions:
      type: object
      properties:
        windows:
          type: string
          description: Window file paths to be excluded.Comma separated string.
        unix:
          type: string
          description: Unix file paths to be excluded.Comma separated string.
        useCompanyGlobalFilter:
          type: boolean
          description: 'Enable or disable the use of the file path filters on all subclients. By default, it is enabled when filters are added for either Windows or Unix or both.'
    CompanyListResponse:
      type: object
      description: List of existing companies
      properties:
        companies:
          type: array
          items:
            $ref: '#/components/schemas/CompanySummary'
        companyCount:
          type: integer
          format: int32
          description: Total number of companies
    CompanySummary:
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: Company Id
        name:
          type: string
          description: Company name
        GUID:
          type: string
          description: GUID of the company
        alias:
          type: string
          description: The company domain or NetBIOS name
        isReseller:
          type: boolean
          description: Enable reseller mode. A reseller is a user or user groups who can operate multiple tenant environments. The service provider can assign one or more resellers as the tenant operator for a company. The reseller can switch to any of their assigned tenant environment and operate on the company as a tenant user. Once enabled, the reseller mode cannot be disabled.
        primaryContacts:
          type: array
          items:
            $ref: '#/components/schemas/IdName'
        associatedEntitiesCount:
          type: integer
          format: int32
          description: Gives the number of entities associated with the company
        status:
          type: string
          description: Gives the company status
          enum:
            - UNKNOWN
            - ACTIVE
            - DEACTIVATED
            - DELETED
        commcell:
          $ref: '#/components/schemas/CommcellNameDisplayNameInfo'
        operators:
          type: array
          description: List of operators configured for the company
          items:
            $ref: '#/components/schemas/CompanyOperator'
    CompanyOperator:
      type: object
      description: Details of the company operator
      properties:
        fullName:
          type: string
          description: Full name of the operator
        userGroup:
          $ref: '#/components/schemas/IdName'
        user:
          $ref: '#/components/schemas/IdName'
        role:
          $ref: '#/components/schemas/IdName'
    Company:
      type: object
      properties:
        id:
          type: integer
          format: int32
        creationTime:
          type: integer
          format: int32
          description: The date and time of the creation of the company.
        general:
          $ref: '#/components/schemas/General'
        security:
          type: array
          items:
            $ref: '#/components/schemas/SecurityAssoc'
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/ContactResp'
        emailSettings:
          $ref: '#/components/schemas/EmailSettings'
        sites:
          $ref: '#/components/schemas/Sites'
        plans:
          type: array
          items:
            $ref: '#/components/schemas/IdName'
        operatorsOperationType:
          type: integer
          format: int32
        tenantOperators:
          type: array
          items:
            $ref: '#/components/schemas/TenantOperator'
        fileExceptions:
          $ref: '#/components/schemas/FileExceptions'
      description: Used to return details of a company whose companyId has been provided
    TwoFactorAuth:
      type: object
      properties:
        enable:
          type: boolean
          description: 'enable or disable two factor authentication. if enabled, all or userGroups value should be provided.'
        all:
          type: boolean
          description: 'enable two factor authentication for every entity. if set to false when Two factor authentication is enabled, provide userGroupId or userGroupName. If both are provided, userGroupId is taken'
        userGroups:
          type: array
          items:
            $ref: '#/components/schemas/IdName'
    ContactResp:
      type: object
      properties:
        email:
          type: string
        name:
          type: string
        id:
          type: string
        fullname:
          type: string
    CreateUserResp:
      type: object
      properties:
        users:
          type: array
          x-terraform-id: Id
          items:
            $ref: '#/components/schemas/IdNameGUID'
    TestK8sModifierReq:
      description: Request body for K8s Modifier Test Operation
      properties:
        resourceYAML:
          type: string
          description: Payload(Yaml) to test against the restore modifiers.
        restoreModifierListYAML:
          type: string
          description: YAML of Restore Modifier(s) to be tested.
    K8sRestoreModifierAPIReq:
      type: object
      description: Request body for K8s Modifier
      properties:
        modifierYAML:
          type: string
          description: Restore Modifier YAML
    K8sRestoreModifierAPIResp:
      type: object
      description: Response body for K8s Modifier
      properties:
        outputYAML:
          type: string
          description: Output YAML
        resp:
          $ref: '#/components/schemas/GenericResp'
    CreateCompany:
      type: object
      description: Used to create a new company
      properties:
        name:
          type: string
          description: name of the company to be created.
        email:
          type: string
          description: 'Email address for the tenant administrator. If provided, contactName for the tenant administrator also needs to be provided'
        contactName:
          type: string
          description: 'Name of the tenant administrator. If provided, email also needs to be provided.'
        plans:
          type: array
          description: Select data protection plans to use for the company. The plans that are selected are the plans that the tenant administrator can choose from.
          items:
            $ref: '#/components/schemas/IdName'
        alias:
          type: string
          description: The company domain or NetBIOS name
        emailSuffix:
          type: string
          description: Supported domains for the company
        serviceCommcells:
          type: array
          description: 'Used to add service commcells to the master commcell. Either id or name can be provided. If both are provided, id will be taken into consideration.'
          items:
            $ref: '#/components/schemas/IdName'
        sendWelcomeEmail:
          type: boolean
          description: send a welcome email on company creation to the tenant administrator.
        primaryDomain:
          type: string
          description: The primary domain name of the company being created. Can be added only if an external domain is already present.
      required:
        - name
        - alias
    User:
      type: object
      description: Returns the details of of the user whose userId has been provided
      properties:
        id:
          x-terraform-id: true
          type: integer
          format: int32
        name:
          type: string
        GUID:
          type: string
        fullName:
          type: string
        email:
          type: string
        enabled:
          type: boolean
        lockInfo:
          $ref: '#/components/schemas/LockProperties'
        description:
          type: string
          description: Returns the description of the user which was specified at the time of user creation or modification.
        serviceType:
          $ref: '#/components/schemas/ServiceTypes'
        lastLoggedIn:
          type: integer
          format: int64
          description: Returns the most recent time the user was logged in. It is provided in unix format.
        company:
          $ref: '#/components/schemas/IdName'
        plan:
          $ref: '#/components/schemas/IdName'
        authenticationMethod:
          type: string
          description: Specifies authentication method used by user. Default value is Commcell.
        authenticationMethodServer:
          $ref: '#/components/schemas/IdNameCompany'
        associatedUserGroups:
          type: array
          items:
            $ref: '#/components/schemas/IdNameProvider'
        userPrincipalName:
          type: string
    ServiceTypes:
      enum:
        - UNKNOWN
        - COMMSERVE
        - ACTIVE_DIRECTORY
        - DOMINO_DIRECTORTY_SERVICE
        - HOSTED_EXCHANGE
        - ORGANIZATIONS
        - DUMMY_DOMAIN
      type: string
      format: ''
      description: 'The values that are returned by serviceType are- 0(unknown),1(commserver users),2(Active directory users),3(domino directory service users),4(hosted exchange users),5(company users),12(dummy domain users)'
    AssocEntity:
      type: object
      description: Used to provide the entities associated.
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        type:
          type: string
          description: type of entities associated.
        role:
          $ref: '#/components/schemas/IdName'
        permissionList:
          $ref: '#/components/schemas/PermissionResp'
    Mode:
      enum:
        - EdgeMode
    AuthenticationServer:
      title: AuthenticationServer
      type: object
      properties:
        authenticationMethod:
          type: string
          enum:
            - SAML
            - AD
            - LOCAL
          description: Tells this authenticator belongs to which authentication method
        id:
          type: integer
          format: int32
          description: Identity server id
        name:
          type: string
          description: Identity server name
        type:
          type: string
          description: Identity server service type in Enum string
          enum:
            - SAML
            - ACTIVE_DIRECTORY
            - APPLE_DIRECTORY_SERVICE
            - ORACLE_DIRECTORY
            - OPEN_LDAP
            - LDAP_SERVER
            - OTHER
        samlType:
          type: string
          enum:
            - UNKNOWN
            - AZURE
            - ADFS
            - OKTA
          description: Name of the IdP. Available only if type is SAML.
        company:
          $ref: '#/components/schemas/IdName'
    UserAuthenticationMethods:
      title: UserAuthenticationMethods
      type: object
      properties:
        authenticationMethod:
          type: string
          description: Specifies authentication method used by user.
          enum:
            - SAML
            - AD
            - LOCAL
        authenticators:
          type: array
          items:
            $ref: '#/components/schemas/AuthenticationServer'
        error:
          $ref: '#/components/schemas/GenericResp'
    TFAMode:
      enum:
        - DISABLED
        - ENABLED_FOR_ALL
        - ENABLED_FOR_USER_GROUP_INCLUSION
      type: string
    LocalAuthenticationDetails:
      type: object
      description: Local authentication can be enabled for all users or specific user groups or completely disabled.
      properties:
        mode:
          $ref: '#/components/schemas/TFAMode'
        userGroups:
          type: array
          items:
            $ref: '#/components/schemas/IdName'
          nullable: true
    LocalAuthenticationDetailsResponse:
      type: object
      properties:
        localAuthenticationInfo:
          $ref: '#/components/schemas/LocalAuthenticationDetails'
        error:
          $ref: '#/components/schemas/GenericResp'
    HttpMethod:
      enum:
        - NONE
        - GET
        - POST
        - PUT
        - PATCH
        - DELETE
      type: string
    GlobalConfigCommcellInfo:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        guid:
          type: string
    GlobalConfigInfo:
      type: object
      description: Only applicable on Global CommCells
      properties:
        id:
          type: string
        name:
          type: string
        commcells:
          type: array
          items:
            $ref: '#/components/schemas/GlobalConfigCommcellInfo'
          description: List of Service CommCells where the global configuration is applied
        scope:
          type: string
          description: The entity level at which the config is applied.
        scopeFilterQuery:
          type: string
          description: CommCellEntityCache filter query string used for filtering the scope
        applyOnAllCommCells:
          type: boolean
          description: Decides whether the global configuration should be applied to all the Service commcells, including the newly created ones
        isMarkedForDeletion:
          type: boolean
          description: Indicates whether global configuration deletion has been started.
        status:
          type: string
    CreateGlobalConfigInfo:
      type: object
      description: Only applicable to Global CommCells. Not applicable for SaaS.
      properties:
        name:
          type: string
        commcells:
          type: array
          items:
            $ref: '#/components/schemas/GlobalConfigCommcellInfo'
          description: List of Service CommCells where the global configuration should be applied
        scope:
          type: string
          description: The entity level at which the config has to be applied.
        scopeFilterQuery:
          type: string
          description: CommCellEntityCache filter query string using for filtering the scope
        applyOnAllCommCells:
          type: boolean
          description: Decides whether the global configuration should be applied to all the Service commcells, including the newly created ones
        actionOnLocalEntity:
          type: string
          enum:
            - CREATE_NEW
            - TAKE_OVER
            - FAIL_IF_EXIST
          description: Action that will be taken on the local entity that has the same name as the global entity that needs to be created
    StorageListSummary:
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: id of the storage pool
        name:
          type: string
          description: storage pool name
        storagePoolType:
          type: string
          enum:
            - DEDUPLICATION
            - SECONDARY_COPY
            - NON_DEDUPLICATION
            - SCALE_OUT
        status:
          type: string
          description: mentions if the storage pool is enabled
        capacity:
          type: integer
          format: int32
          description: provides the capacity of the storage pool. Provided in megabytes
        freeSpace:
          type: integer
          format: int32
          description: provides the free space available on the storage pool. Provided in megabytes.
        libraryVendorType:
          type: integer
          format: int32
          description: Gives the storage vendor of the storage pool.
        storageType:
          type: string
          enum:
            - ALL
            - DISK
            - CLOUD
            - HYPERSCALE
            - TAPE
          description: Indicates the type of storage for a storage pool.
        company:
          $ref: '#/components/schemas/IdName'
        commcell:
          $ref: '#/components/schemas/IdName'
        sizeOnDisk:
          type: integer
          format: int64
          description: It indicates the amount of space consumed by storage pool.
        cloudStorageClass:
          $ref: '#/components/schemas/IdName'
          description: It indicates the storage class of cloud storage pool.
        region:
          $ref: '#/components/schemas/IdNameDisplayName'
          description: It indicates the region of the storage pool.
    DedupePath:
      type: object
      properties:
        path:
          type: string
        mediaAgent:
          $ref: '#/components/schemas/IdName'
    EncryptionTypes:
      enum:
        - BlowFish
        - AES
        - DES3
        - GOST
        - Serpent
        - Twofish
      type: string
      format: ''
      description: The different types of encryption keys that can be used for encrypting the data. The values are case sensitive
    Encryption:
      type: object
      description: Different ways in which data can be encrypted.
      properties:
        encrypt:
          type: boolean
        keyLength:
          type: integer
          format: int32
          description: 'Different keylengths are present for different kinds of ciphers. Blowfish,Twofish,AES and Serpent all accept both 128 and 256. DES3 accepts only 192. GOST accepts only 256. '
        cipher:
          $ref: '#/components/schemas/EncryptionTypes'
        keyProvider:
          $ref: '#/components/schemas/IdName'
    CloudStorage:
      title: CloudStorage
      description: ''
      type: object
      properties:
        name:
          type: string
          description: Name of the cloud storage library
        mediaAgent:
          $ref: '#/components/schemas/IdName'
      required:
        - name
        - cloudType
        - mediaAgent
    Alibaba:
      title: Alibaba Cloud Object Storage Service
      description: ''
      allOf:
        - $ref: '#/components/schemas/CloudStorage'
        - type: object
          properties:
            cloudType:
              type: string
              description: Name of cloud vendor
              enum:
                - Alibaba Cloud Object Storage Service
            serviceHost:
              type: string
              default: oss.aliyuncs.com
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
            credentials:
              $ref: '#/components/schemas/IdName'
            bucket:
              type: string
              description: Name of bucket
            storageClass:
              type: string
              enum:
                - Bucket's default
                - Standard
                - Standard - Infrequent access
                - Archive
                - Standard/Archive (Combined Storage Tiers)
                - Infrequent Access/Archive (Combined Storage Tiers)
              description: Appropriate storage class for your account
          required:
            - cloudType
            - credentials
            - bucket
            - storageClass
        - $ref: '#/components/schemas/DedupeStorageList'
    AlibabaBucket:
      title: Alibaba Cloud Object Storage Service
      description: ''
      allOf:
        - type: object
          properties:
            cloudType:
              type: string
              description: Name of cloud vendor
              enum:
                - Alibaba Cloud Object Storage Service
            mediaAgent:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              type: string
              default: oss.aliyuncs.com
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
            credentials:
              $ref: '#/components/schemas/IdName'
            bucket:
              type: string
              description: Name of bucket
            storageClass:
              type: string
              enum:
                - Bucket's default
                - Standard
                - Standard - Infrequent access
                - Archive
                - Standard/Archive (Combined Storage Tiers)
                - Infrequent Access/Archive (Combined Storage Tiers)
              description: Appropriate storage class for your account
          required:
            - cloudType
            - mediaAgent
            - credentials
            - bucket
            - storageClass
        - $ref: '#/components/schemas/CloudStorageProxy'
    AlibabaBucketContent:
      title: Alibaba Cloud Object Storage Service
      description: ''
      allOf:
        - type: object
          properties:
            cloudType:
              type: string
              description: Name of cloud vendor
              enum:
                - Alibaba Cloud Object Storage Service
            mediaAgent:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              type: string
              default: oss.aliyuncs.com
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
            credentials:
              $ref: '#/components/schemas/IdName'
            bucket:
              type: string
              description: Name of bucket
            storageClass:
              type: string
              enum:
                - Bucket's default
                - Standard
                - Standard - Infrequent access
                - Archive
                - Standard/Archive (Combined Storage Tiers)
                - Infrequent Access/Archive (Combined Storage Tiers)
              description: Appropriate storage class for your account
          required:
            - cloudType
            - mediaAgent
        - $ref: '#/components/schemas/CloudStorageProxy'
        - $ref: '#/components/schemas/CloudStorageAdvanced'
        - $ref: '#/components/schemas/ModifyCloudBucketConfiguration'
    AlibabaBucketContentResp:
      title: Alibaba Cloud Object Storage Service
      description: ''
      allOf:
        - $ref: '#/components/schemas/BucketsResp'
        - type: object
          properties:
            cloudType:
              type: string
              description: Name of cloud vendor
              enum:
                - Alibaba Cloud Object Storage Service
            mediaAgent:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              type: string
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
            credentials:
              $ref: '#/components/schemas/IdName'
            bucket:
              type: string
              description: Name of bucket
            storageClass:
              type: string
              enum:
                - Bucket's default
                - Standard
                - Standard - Infrequent access
                - Archive
                - Standard/Archive (Combined Storage Tiers)
                - Infrequent Access/Archive (Combined Storage Tiers)
              description: Appropriate storage class for your account
        - $ref: '#/components/schemas/CloudStorageProxy'
        - $ref: '#/components/schemas/CloudStorageAdvanced'
    AmazonS3:
      title: Amazon S3
      description: ''
      allOf:
        - $ref: '#/components/schemas/CloudStorage'
        - type: object
          properties:
            cloudType:
              x-terraform-always-update: true
              type: string
              x-terraform-constant: Amazon S3
              description: Name of cloud vendor
              enum:
                - Amazon S3
            serviceHost:
              type: string
              example: 's3.[region].amazonaws.com'
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
            authentication:
              type: string
              enum:
                - Access and secret keys
                - AWS IAM role policy
                - AWS STS assume role
                - AWS STS assume role with IAM role policy
              description: Authentication type for the cloud storage server
            arnRole:
              type: string
              description: Needed for AWS STS assume role and AWS STS assume role with IAM role policy
            credentials:
              $ref: '#/components/schemas/IdName'
            bucket:
              type: string
              description: Name of bucket
            storageClass:
              type: string
              enum:
                - Standard
                - Reduced Redundancy Storage
                - Standard - Infrequent access
                - One zone - Infrequent access
                - Intelligent tiering
                - S3 Glacier
                - Standard/Glacier (Combined Storage Tiers)
                - Standard-IA/Glacier (Combined Storage Tiers)
                - One Zone-IA/Glacier (Combined Storage Tiers)
                - Intelligent-Tiering/Glacier (Combined Storage Tiers)
                - S3 Glacier Deep Archive
                - Standard/Deep Archive (Combined Storage Tiers)
                - Standard-IA/Deep Archive (Combined Storage Tiers)
                - One Zone-IA/Deep Archive (Combined Storage Tiers)
                - Intelligent-Tiering/Deep Archive (Combined Storage Tiers)
              description: Appropriate storage class for your account
          required:
            - cloudType
            - serviceHost
            - authentication
            - bucket
            - storageClass
        - $ref: '#/components/schemas/DedupeStorageList'
    AmazonS3Bucket:
      title: Amazon S3
      description: ''
      allOf:
        - type: object
          properties:
            cloudType:
              x-terraform-always-update: true
              type: string
              x-terraform-constant: Amazon S3
              description: Name of cloud vendor
              enum:
                - Amazon S3
            mediaAgent:
              x-terraform-always-update: true
              $ref: '#/components/schemas/IdName'
            serviceHost:
              type: string
              example: 's3.[region].amazonaws.com'
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
            authentication:
              type: string
              enum:
                - Access and secret keys
                - AWS IAM role policy
                - AWS STS assume role
                - AWS STS assume role with IAM role policy
              description: Authentication type for the cloud storage server
            arnRole:
              type: string
              description: Needed for AWS STS assume role and AWS STS assume role with IAM role policy
            credentials:
              $ref: '#/components/schemas/IdName'
            bucket:
              type: string
              description: Name of bucket
            storageClass:
              type: string
              enum:
                - Standard
                - Reduced Redundancy Storage
                - Standard - Infrequent access
                - One zone - Infrequent access
                - Intelligent tiering
                - S3 Glacier
                - Standard/Glacier (Combined Storage Tiers)
                - Standard-IA/Glacier (Combined Storage Tiers)
                - One Zone-IA/Glacier (Combined Storage Tiers)
                - Intelligent-Tiering/Glacier (Combined Storage Tiers)
                - S3 Glacier Deep Archive
                - Standard/Deep Archive (Combined Storage Tiers)
                - Standard-IA/Deep Archive (Combined Storage Tiers)
                - One Zone-IA/Deep Archive (Combined Storage Tiers)
                - Intelligent-Tiering/Deep Archive (Combined Storage Tiers)
              description: Appropriate storage class for your account
          required:
            - cloudType
            - mediaAgent
            - serviceHost
            - authentication
            - bucket
            - storageClass
        - $ref: '#/components/schemas/CloudStorageProxy'
    AmazonS3BucketContent:
      title: Amazon S3
      description: ''
      allOf:
        - type: object
          properties:
            cloudType:
              x-terraform-always-update: true
              x-terraform-constant: Amazon S3
              type: string
              description: Name of cloud vendor
              enum:
                - Amazon S3
            mediaAgent:
              x-terraform-always-update: true
              $ref: '#/components/schemas/IdName'
            serviceHost:
              type: string
              example: 's3.[region].amazonaws.com'
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
            authentication:
              type: string
              enum:
                - Access and secret keys
                - AWS IAM role policy
                - AWS STS assume role
                - AWS STS assume role with IAM role policy
              description: Authentication type for the cloud storage server
            arnRole:
              type: string
              description: Needed for AWS STS assume role and AWS STS assume role with IAM role policy
            credentials:
              $ref: '#/components/schemas/IdName'
            bucket:
              type: string
              description: Name of bucket
            storageClass:
              type: string
              enum:
                - Standard
                - Reduced Redundancy Storage
                - Standard - Infrequent access
                - One zone - Infrequent access
                - Intelligent tiering
                - S3 Glacier
                - Standard/Glacier (Combined Storage Tiers)
                - Standard-IA/Glacier (Combined Storage Tiers)
                - One Zone-IA/Glacier (Combined Storage Tiers)
                - Intelligent-Tiering/Glacier (Combined Storage Tiers)
                - S3 Glacier Deep Archive
                - Standard/Deep Archive (Combined Storage Tiers)
                - Standard-IA/Deep Archive (Combined Storage Tiers)
                - One Zone-IA/Deep Archive (Combined Storage Tiers)
                - Intelligent-Tiering/Deep Archive (Combined Storage Tiers)
              description: Appropriate storage class for your account
          required:
            - cloudType
            - mediaAgent
        - $ref: '#/components/schemas/CloudStorageProxy'
        - $ref: '#/components/schemas/CloudStorageAdvanced'
        - $ref: '#/components/schemas/ModifyCloudBucketConfiguration'
    AmazonS3BucketContentResp:
      title: Amazon S3
      description: ''
      allOf:
        - $ref: '#/components/schemas/BucketsResp'
        - type: object
          properties:
            cloudType:
              type: string
              description: Name of cloud vendor
              enum:
                - Amazon S3
            mediaAgent:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              type: string
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
            authentication:
              type: string
              enum:
                - Access and secret keys
                - AWS IAM role policy
                - AWS STS assume role
                - AWS STS assume role with IAM role policy
              description: Authentication type for the cloud storage server
            arnRole:
              type: string
              description: Needed for AWS STS assume role and AWS STS assume role with IAM role policy
            credentials:
              $ref: '#/components/schemas/IdName'
            bucket:
              type: string
              description: Name of bucket
            storageClass:
              type: string
              enum:
                - Standard
                - Reduced Redundancy Storage
                - Standard - Infrequent access
                - One zone - Infrequent access
                - Intelligent tiering
                - S3 Glacier
                - Standard/Glacier (Combined Storage Tiers)
                - Standard-IA/Glacier (Combined Storage Tiers)
                - One Zone-IA/Glacier (Combined Storage Tiers)
                - Intelligent-Tiering/Glacier (Combined Storage Tiers)
                - S3 Glacier Deep Archive
                - Standard/Deep Archive (Combined Storage Tiers)
                - Standard-IA/Deep Archive (Combined Storage Tiers)
                - One Zone-IA/Deep Archive (Combined Storage Tiers)
                - Intelligent-Tiering/Deep Archive (Combined Storage Tiers)
              description: Appropriate storage class for your account
        - $ref: '#/components/schemas/CloudStorageProxy'
        - $ref: '#/components/schemas/CloudStorageAdvanced'
    Ceph:
      title: Ceph Object Gateway (S3-compatible)
      description: ''
      allOf:
        - $ref: '#/components/schemas/CloudStorage'
        - type: object
          properties:
            cloudType:
              type: string
              description: Name of cloud vendor
              enum:
                - Ceph Object Gateway (S3-compatible)
            serviceHost:
              type: string
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
            credentials:
              $ref: '#/components/schemas/IdName'
            bucket:
              type: string
              description: Name of bucket
          required:
            - cloudType
            - serviceHost
            - credentials
            - bucket
        - $ref: '#/components/schemas/DedupeStorageList'
    CephBucket:
      title: Ceph Object Gateway (S3-compatible)
      description: ''
      allOf:
        - type: object
          properties:
            cloudType:
              type: string
              description: Name of cloud vendor
              enum:
                - Ceph Object Gateway (S3-compatible)
            mediaAgent:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              type: string
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
            credentials:
              $ref: '#/components/schemas/IdName'
            bucket:
              type: string
              description: Name of bucket
          required:
            - cloudType
            - serviceHost
            - credentials
            - bucket
        - $ref: '#/components/schemas/CloudStorageProxy'
    CephBucketContent:
      title: Ceph Object Gateway (S3-compatible)
      description: ''
      allOf:
        - type: object
          properties:
            cloudType:
              type: string
              description: Name of cloud vendor
              enum:
                - Ceph Object Gateway (S3-compatible)
            mediaAgent:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              type: string
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
            credentials:
              $ref: '#/components/schemas/IdName'
            bucket:
              type: string
              description: Name of bucket
          required:
            - cloudType
            - mediaAgent
        - $ref: '#/components/schemas/CloudStorageProxy'
        - $ref: '#/components/schemas/CloudStorageAdvanced'
        - $ref: '#/components/schemas/ModifyCloudBucketConfiguration'
    CephBucketContentResp:
      title: Ceph Object Gateway (S3-compatible)
      description: ''
      allOf:
        - $ref: '#/components/schemas/BucketsResp'
        - type: object
          properties:
            cloudType:
              type: string
              description: Name of cloud vendor
              enum:
                - Ceph Object Gateway (S3-compatible)
            mediaAgent:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              type: string
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
            credentials:
              $ref: '#/components/schemas/IdName'
            bucket:
              type: string
              description: Name of bucket
        - $ref: '#/components/schemas/CloudStorageProxy'
        - $ref: '#/components/schemas/CloudStorageAdvanced'
    ChinaMobileOnest:
      title: China Mobile oNest
      description: ''
      allOf:
        - $ref: '#/components/schemas/CloudStorage'
        - type: object
          properties:
            cloudType:
              type: string
              description: Name of cloud vendor
              enum:
                - China Mobile oNest
            serviceHost:
              type: string
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
            credentials:
              $ref: '#/components/schemas/IdName'
            container:
              type: string
              description: Name of container
          required:
            - cloudType
            - serviceHost
            - credentials
            - container
        - $ref: '#/components/schemas/DedupeStorageList'
    ChinaMobileOnestBucket:
      title: China Mobile oNest
      description: ''
      allOf:
        - type: object
          properties:
            cloudType:
              type: string
              description: Name of cloud vendor
              enum:
                - China Mobile oNest
            mediaAgent:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              type: string
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
            credentials:
              $ref: '#/components/schemas/IdName'
            container:
              type: string
              description: Name of container
          required:
            - cloudType
            - serviceHost
            - credentials
            - container
        - $ref: '#/components/schemas/CloudStorageProxy'
    ChinaMobileOnestBucketContent:
      title: China Mobile oNest
      description: ''
      allOf:
        - type: object
          properties:
            cloudType:
              type: string
              description: Name of cloud vendor
              enum:
                - China Mobile oNest
            mediaAgent:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              type: string
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
            credentials:
              $ref: '#/components/schemas/IdName'
            container:
              type: string
              description: Name of container
          required:
            - cloudType
            - mediaAgent
        - $ref: '#/components/schemas/CloudStorageProxy'
        - $ref: '#/components/schemas/CloudStorageAdvanced'
        - $ref: '#/components/schemas/ModifyCloudBucketConfiguration'
    ChinaMobileOnestBucketContentResp:
      title: China Mobile oNest
      description: ''
      allOf:
        - $ref: '#/components/schemas/BucketsResp'
        - type: object
          properties:
            cloudType:
              type: string
              description: Name of cloud vendor
              enum:
                - China Mobile oNest
            mediaAgent:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              type: string
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
            credentials:
              $ref: '#/components/schemas/IdName'
            container:
              type: string
              description: Name of container
        - $ref: '#/components/schemas/CloudStorageProxy'
        - $ref: '#/components/schemas/CloudStorageAdvanced'
    CloudianHyperStore:
      title: Cloudian HyperStore
      description: ''
      allOf:
        - $ref: '#/components/schemas/CloudStorage'
        - type: object
          properties:
            cloudType:
              type: string
              description: Name of cloud vendor
              enum:
                - Cloudian HyperStore
            serviceHost:
              type: string
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
            credentials:
              $ref: '#/components/schemas/IdName'
            bucket:
              type: string
              description: Name of bucket
          required:
            - cloudType
            - serviceHost
            - credentials
            - bucket
        - $ref: '#/components/schemas/DedupeStorageList'
    CloudianHyperStoreBucket:
      title: Cloudian HyperStore
      description: ''
      allOf:
        - type: object
          properties:
            cloudType:
              type: string
              description: Name of cloud vendor
              enum:
                - Cloudian HyperStore
            mediaAgent:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              type: string
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
            credentials:
              $ref: '#/components/schemas/IdName'
            bucket:
              type: string
              description: Name of bucket
          required:
            - cloudType
            - serviceHost
            - credentials
            - bucket
        - $ref: '#/components/schemas/CloudStorageProxy'
    CloudianHyperStoreBucketContent:
      title: Cloudian HyperStore
      description: ''
      allOf:
        - type: object
          properties:
            cloudType:
              type: string
              description: Name of cloud vendor
              enum:
                - Cloudian HyperStore
            mediaAgent:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              type: string
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
            credentials:
              $ref: '#/components/schemas/IdName'
            bucket:
              type: string
              description: Name of bucket
          required:
            - cloudType
            - mediaAgent
        - $ref: '#/components/schemas/CloudStorageProxy'
        - $ref: '#/components/schemas/CloudStorageAdvanced'
        - $ref: '#/components/schemas/ModifyCloudBucketConfiguration'
    CloudianHyperStoreBucketContentResp:
      title: Cloudian HyperStore
      description: ''
      allOf:
        - $ref: '#/components/schemas/BucketsResp'
        - type: object
          properties:
            cloudType:
              type: string
              description: Name of cloud vendor
              enum:
                - Cloudian HyperStore
            mediaAgent:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              type: string
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
            credentials:
              $ref: '#/components/schemas/IdName'
            bucket:
              type: string
              description: Name of bucket
        - $ref: '#/components/schemas/CloudStorageProxy'
        - $ref: '#/components/schemas/CloudStorageAdvanced'
    DellEMC:
      title: Dell EMC ECS (S3-compatible)
      description: ''
      allOf:
        - $ref: '#/components/schemas/CloudStorage'
        - type: object
          properties:
            cloudType:
              type: string
              description: Name of cloud vendor
              enum:
                - Dell EMC ECS (S3-compatible)
            serviceHost:
              type: string
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
            credentials:
              $ref: '#/components/schemas/IdName'
            bucket:
              type: string
              description: Name of bucket
          required:
            - cloudType
            - serviceHost
            - credentials
            - bucket
        - $ref: '#/components/schemas/DedupeStorageList'
    DellEMCBucket:
      title: Dell EMC ECS (S3-compatible)
      description: ''
      allOf:
        - type: object
          properties:
            cloudType:
              type: string
              description: Name of cloud vendor
              enum:
                - Dell EMC ECS (S3-compatible)
            mediaAgent:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              type: string
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
            credentials:
              $ref: '#/components/schemas/IdName'
            bucket:
              type: string
              description: Name of bucket
          required:
            - cloudType
            - serviceHost
            - credentials
            - bucket
        - $ref: '#/components/schemas/CloudStorageProxy'
    DellEMCBucketContent:
      title: Dell EMC ECS (S3-compatible)
      description: ''
      allOf:
        - type: object
          properties:
            cloudType:
              type: string
              description: Name of cloud vendor
              enum:
                - Dell EMC ECS (S3-compatible)
            mediaAgent:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              type: string
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
            credentials:
              $ref: '#/components/schemas/IdName'
            bucket:
              type: string
              description: Name of bucket
          required:
            - cloudType
            - mediaAgent
        - $ref: '#/components/schemas/CloudStorageProxy'
        - $ref: '#/components/schemas/CloudStorageAdvanced'
        - $ref: '#/components/schemas/ModifyCloudBucketConfiguration'
    DellEMCBucketContentResp:
      title: Dell EMC ECS (S3-compatible)
      description: ''
      allOf:
        - $ref: '#/components/schemas/BucketsResp'
        - type: object
          properties:
            cloudType:
              type: string
              description: Name of cloud vendor
              enum:
                - Dell EMC ECS (S3-compatible)
            mediaAgent:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              type: string
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
            credentials:
              $ref: '#/components/schemas/IdName'
            bucket:
              type: string
              description: Name of bucket
        - $ref: '#/components/schemas/CloudStorageProxy'
        - $ref: '#/components/schemas/CloudStorageAdvanced'
    EMCAtmos:
      title: EMC Atmos
      description: ''
      allOf:
        - $ref: '#/components/schemas/CloudStorage'
        - type: object
          properties:
            cloudType:
              type: string
              description: Name of cloud vendor
              enum:
                - EMC Atmos
            serviceHost:
              type: string
              default: accesspoint.atmosonline.com
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
            credentials:
              $ref: '#/components/schemas/IdName'
            rootFolder:
              type: string
              description: Root folder for the account
          required:
            - cloudType
            - credentials
            - rootFolder
        - $ref: '#/components/schemas/DedupeStorageList'
    EMCAtmosBucket:
      title: EMC Atmos
      description: ''
      allOf:
        - type: object
          properties:
            cloudType:
              type: string
              description: Name of cloud vendor
              enum:
                - EMC Atmos
            mediaAgent:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              type: string
              default: accesspoint.atmosonline.com
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
            credentials:
              $ref: '#/components/schemas/IdName'
            rootFolder:
              type: string
              description: Root folder for the account
          required:
            - cloudType
            - credentials
            - rootFolder
        - $ref: '#/components/schemas/CloudStorageProxy'
    EMCAtmosBucketContent:
      title: EMC Atmos
      description: ''
      allOf:
        - type: object
          properties:
            cloudType:
              type: string
              description: Name of cloud vendor
              enum:
                - EMC Atmos
            mediaAgent:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              type: string
              default: accesspoint.atmosonline.com
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
            credentials:
              $ref: '#/components/schemas/IdName'
            rootFolder:
              type: string
              description: Root folder for the account
          required:
            - cloudType
            - mediaAgent
        - $ref: '#/components/schemas/CloudStorageProxy'
        - $ref: '#/components/schemas/CloudStorageAdvanced'
        - $ref: '#/components/schemas/ModifyCloudBucketConfiguration'
    EMCAtmosBucketContentResp:
      title: EMC Atmos
      description: ''
      allOf:
        - $ref: '#/components/schemas/BucketsResp'
        - type: object
          properties:
            cloudType:
              type: string
              description: Name of cloud vendor
              enum:
                - EMC Atmos
            mediaAgent:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              type: string
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
            credentials:
              $ref: '#/components/schemas/IdName'
            rootFolder:
              type: string
              description: Root folder for the account
        - $ref: '#/components/schemas/CloudStorageProxy'
        - $ref: '#/components/schemas/CloudStorageAdvanced'
    Fujitsu:
      title: Fujitsu Storage ETERNUS CD10000
      description: ''
      allOf:
        - $ref: '#/components/schemas/CloudStorage'
        - type: object
          properties:
            cloudType:
              type: string
              description: Name of cloud vendor
              enum:
                - Fujitsu Storage ETERNUS CD10000
            serviceHost:
              type: string
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
            credentials:
              $ref: '#/components/schemas/IdName'
            bucket:
              type: string
              description: Name of bucket
          required:
            - cloudType
            - serviceHost
            - credentials
            - bucket
        - $ref: '#/components/schemas/DedupeStorageList'
    FujitsuBucket:
      title: Fujitsu Storage ETERNUS CD10000
      description: ''
      allOf:
        - type: object
          properties:
            cloudType:
              type: string
              description: Name of cloud vendor
              enum:
                - Fujitsu Storage ETERNUS CD10000
            mediaAgent:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              type: string
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
            credentials:
              $ref: '#/components/schemas/IdName'
            bucket:
              type: string
              description: Name of bucket
          required:
            - cloudType
            - serviceHost
            - credentials
            - bucket
        - $ref: '#/components/schemas/CloudStorageProxy'
    FujitsuBucketContent:
      title: Fujitsu Storage ETERNUS CD10000
      description: ''
      allOf:
        - type: object
          properties:
            cloudType:
              type: string
              description: Name of cloud vendor
              enum:
                - Fujitsu Storage ETERNUS CD10000
            mediaAgent:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              type: string
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
            credentials:
              $ref: '#/components/schemas/IdName'
            bucket:
              type: string
              description: Name of bucket
          required:
            - cloudType
            - mediaAgent
        - $ref: '#/components/schemas/CloudStorageProxy'
        - $ref: '#/components/schemas/CloudStorageAdvanced'
        - $ref: '#/components/schemas/ModifyCloudBucketConfiguration'
    FujitsuBucketContentResp:
      title: Fujitsu Storage ETERNUS CD10000
      description: ''
      allOf:
        - $ref: '#/components/schemas/BucketsResp'
        - type: object
          properties:
            cloudType:
              type: string
              description: Name of cloud vendor
              enum:
                - Fujitsu Storage ETERNUS CD10000
            mediaAgent:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              type: string
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
            credentials:
              $ref: '#/components/schemas/IdName'
            bucket:
              type: string
              description: Name of bucket
        - $ref: '#/components/schemas/CloudStorageProxy'
        - $ref: '#/components/schemas/CloudStorageAdvanced'
    GoogleCloud:
      title: Google Cloud Storage
      description: ''
      allOf:
        - $ref: '#/components/schemas/CloudStorage'
        - type: object
          properties:
            cloudType:
              type: string
              description: Name of cloud vendor
              enum:
                - Google Cloud Storage
            serviceHost:
              type: string
              default: storage.googleapis.com
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
            credentials:
              $ref: '#/components/schemas/IdName'
            bucket:
              type: string
              description: Name of bucket
          required:
            - cloudType
            - credentials
            - bucket
        - $ref: '#/components/schemas/DedupeStorageList'
    GoogleCloudBucket:
      title: Google Cloud Storage
      description: ''
      allOf:
        - type: object
          properties:
            cloudType:
              type: string
              description: Name of cloud vendor
              enum:
                - Google Cloud Storage
            mediaAgent:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              type: string
              default: storage.googleapis.com
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
            credentials:
              $ref: '#/components/schemas/IdName'
            bucket:
              type: string
              description: Name of bucket
          required:
            - cloudType
            - credentials
            - bucket
        - $ref: '#/components/schemas/CloudStorageProxy'
    GoogleCloudBucketContent:
      title: Google Cloud Storage
      description: ''
      allOf:
        - type: object
          properties:
            cloudType:
              type: string
              description: Name of cloud vendor
              enum:
                - Google Cloud Storage
            mediaAgent:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              type: string
              default: storage.googleapis.com
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
            credentials:
              $ref: '#/components/schemas/IdName'
            bucket:
              type: string
              description: Name of bucket
          required:
            - cloudType
            - mediaAgent
        - $ref: '#/components/schemas/CloudStorageProxy'
        - $ref: '#/components/schemas/CloudStorageAdvanced'
        - $ref: '#/components/schemas/ModifyCloudBucketConfiguration'
    GoogleCloudBucketContentResp:
      title: Google Cloud Storage
      description: ''
      allOf:
        - $ref: '#/components/schemas/BucketsResp'
        - type: object
          properties:
            cloudType:
              type: string
              description: Name of cloud vendor
              enum:
                - Google Cloud Storage
            mediaAgent:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              type: string
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
            credentials:
              $ref: '#/components/schemas/IdName'
            bucket:
              type: string
              description: Name of bucket
        - $ref: '#/components/schemas/CloudStorageProxy'
        - $ref: '#/components/schemas/CloudStorageAdvanced'
    HDSContent:
      title: Hitachi Content Platform
      description: ''
      allOf:
        - $ref: '#/components/schemas/CloudStorage'
        - type: object
          properties:
            cloudType:
              type: string
              description: Name of cloud vendor
              enum:
                - Hitachi Content Platform
            serviceHost:
              type: string
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
            credentials:
              $ref: '#/components/schemas/IdName'
            StorageNamespace:
              type: string
              description: Namespace for the user account
          required:
            - cloudType
            - serviceHost
            - credentials
            - StorageNamespace
        - $ref: '#/components/schemas/DedupeStorageList'
    HDSContentBucket:
      title: Hitachi Content Platform
      description: ''
      allOf:
        - type: object
          properties:
            cloudType:
              type: string
              description: Name of cloud vendor
              enum:
                - Hitachi Content Platform
            mediaAgent:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              type: string
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
            credentials:
              $ref: '#/components/schemas/IdName'
            StorageNamespace:
              type: string
              description: Namespace for the user account
          required:
            - cloudType
            - serviceHost
            - credentials
            - StorageNamespace
        - $ref: '#/components/schemas/CloudStorageProxy'
    HDSContentBucketContent:
      title: Hitachi Content Platform
      description: ''
      allOf:
        - type: object
          properties:
            cloudType:
              type: string
              description: Name of cloud vendor
              enum:
                - Hitachi Content Platform
            mediaAgent:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              type: string
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
            credentials:
              $ref: '#/components/schemas/IdName'
            StorageNamespace:
              type: string
              description: Namespace for the user account
          required:
            - cloudType
            - mediaAgent
        - $ref: '#/components/schemas/CloudStorageProxy'
        - $ref: '#/components/schemas/CloudStorageAdvanced'
        - $ref: '#/components/schemas/ModifyCloudBucketConfiguration'
    HDSContentBucketContentResp:
      title: Hitachi Content Platform
      description: ''
      allOf:
        - $ref: '#/components/schemas/BucketsResp'
        - type: object
          properties:
            cloudType:
              type: string
              description: Name of cloud vendor
              enum:
                - Hitachi Content Platform
            mediaAgent:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              type: string
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
            credentials:
              $ref: '#/components/schemas/IdName'
            StorageNamespace:
              type: string
              description: Namespace for the user account
        - $ref: '#/components/schemas/CloudStorageProxy'
        - $ref: '#/components/schemas/CloudStorageAdvanced'
    HitachiContentCloud:
      title: Hitachi Content Platform for Cloud Scale
      description: ''
      allOf:
        - $ref: '#/components/schemas/CloudStorage'
        - type: object
          properties:
            cloudType:
              type: string
              description: Name of cloud vendor
              enum:
                - Hitachi Content Platform for Cloud Scale
            serviceHost:
              type: string
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
            credentials:
              $ref: '#/components/schemas/IdName'
            bucket:
              type: string
              description: Name of bucket
          required:
            - cloudType
            - serviceHost
            - credentials
            - bucket
        - $ref: '#/components/schemas/DedupeStorageList'
    HitachiContentCloudBucket:
      title: Hitachi Content Platform for Cloud Scale
      description: ''
      allOf:
        - type: object
          properties:
            cloudType:
              type: string
              description: Name of cloud vendor
              enum:
                - Hitachi Content Platform for Cloud Scale
            mediaAgent:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              type: string
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
            credentials:
              $ref: '#/components/schemas/IdName'
            bucket:
              type: string
              description: Name of bucket
          required:
            - cloudType
            - serviceHost
            - credentials
            - bucket
        - $ref: '#/components/schemas/CloudStorageProxy'
    HitachiContentCloudBucketContent:
      title: Hitachi Content Platform for Cloud Scale
      description: ''
      allOf:
        - type: object
          properties:
            cloudType:
              type: string
              description: Name of cloud vendor
              enum:
                - Hitachi Content Platform for Cloud Scale
            mediaAgent:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              type: string
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
            credentials:
              $ref: '#/components/schemas/IdName'
            bucket:
              type: string
              description: Name of bucket
          required:
            - cloudType
            - mediaAgent
        - $ref: '#/components/schemas/CloudStorageProxy'
        - $ref: '#/components/schemas/CloudStorageAdvanced'
        - $ref: '#/components/schemas/ModifyCloudBucketConfiguration'
    HitachiContentCloudBucketContentResp:
      title: Hitachi Content Platform for Cloud Scale
      description: ''
      allOf:
        - $ref: '#/components/schemas/BucketsResp'
        - type: object
          properties:
            cloudType:
              type: string
              description: Name of cloud vendor
              enum:
                - Hitachi Content Platform for Cloud Scale
            mediaAgent:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              type: string
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
            credentials:
              $ref: '#/components/schemas/IdName'
            bucket:
              type: string
              description: Name of bucket
          required:
            - cloudType
            - mediaAgent
        - $ref: '#/components/schemas/CloudStorageProxy'
        - $ref: '#/components/schemas/CloudStorageAdvanced'
    HPECatalyst:
      title: HPE Catalyst Storage
      description: ''
      allOf:
        - $ref: '#/components/schemas/CloudStorage'
        - type: object
          properties:
            cloudType:
              type: string
              enum:
                - HPE Catalyst Storage
            storeOnceHost:
              type: string
              description: IP address or COFC identifier in case of Fibre Channel associated with the HPE StoreOnce device
            store:
              type: string
              description: Name of the store that is created on the StoreOnce management console
            username:
              type: string
              description: Username used to access StoreOnce management console
            password:
              type: string
              description: Password used to access StoreOnce management console (Should be in Base64 format)
              format: password
          required:
            - cloudType
            - storeOnceHost
            - store
            - username
            - password
    HPECatalystBucketContent:
      title: HPE Catalyst Storage
      description: ''
      allOf:
        - type: object
          properties:
            cloudType:
              type: string
              description: Name of cloud vendor
              enum:
                - HPE Catalyst Storage
            mediaAgent:
              $ref: '#/components/schemas/IdName'
            storeOnceHost:
              type: string
              description: IP address or COFC identifier in case of Fibre Channel associated with the HPE StoreOnce device
            store:
              type: string
              description: Name of the store that is created on the StoreOnce management console
            username:
              type: string
              description: Username used to access StoreOnce management console
            password:
              type: string
              description: Password used to access StoreOnce management console (Should be in Base64 format)
              format: password
          required:
            - cloudType
            - mediaAgent
        - $ref: '#/components/schemas/CloudStorageAdvanced'
        - $ref: '#/components/schemas/ModifyCloudBucketConfiguration'
    HPECatalystBucketContentResp:
      title: HPE Catalyst Storage
      description: ''
      allOf:
        - $ref: '#/components/schemas/BucketsResp'
        - type: object
          properties:
            cloudType:
              type: string
              description: Name of cloud vendor
              enum:
                - HPE Catalyst Storage
            mediaAgent:
              $ref: '#/components/schemas/IdName'
            storeOnceHost:
              type: string
              description: IP address or COFC identifier in case of Fibre Channel associated with the HPE StoreOnce device
            store:
              type: string
              description: Name of the store that is created on the StoreOnce management console
            username:
              type: string
              description: Username used to access StoreOnce management console
            password:
              type: string
              description: Password used to access StoreOnce management console (Should be in Base64 format)
              format: password
        - $ref: '#/components/schemas/CloudStorageAdvanced'
    Huawei:
      title: Huawei Object Storage
      description: ''
      allOf:
        - $ref: '#/components/schemas/CloudStorage'
        - type: object
          properties:
            cloudType:
              type: string
              description: Name of cloud vendor
              enum:
                - Huawei Object Storage
            serviceHost:
              type: string
              default: obs.myhwclouds.com
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
            credentials:
              $ref: '#/components/schemas/IdName'
            bucket:
              type: string
              description: Name of bucket
            storageClass:
              type: string
              enum:
                - Standard
                - Cold
                - Standard - Infrequent access
              description: Appropriate storage class for your account
          required:
            - cloudType
            - credentials
            - bucket
            - storageClass
        - $ref: '#/components/schemas/DedupeStorageList'
    HuaweiBucket:
      title: Huawei Object Storage
      description: ''
      allOf:
        - type: object
          properties:
            cloudType:
              type: string
              description: Name of cloud vendor
              enum:
                - Huawei Object Storage
            mediaAgent:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              type: string
              default: obs.myhwclouds.com
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
            credentials:
              $ref: '#/components/schemas/IdName'
            bucket:
              type: string
              description: Name of bucket
            storageClass:
              type: string
              enum:
                - Standard
                - Cold
                - Standard - Infrequent access
              description: Appropriate storage class for your account
          required:
            - cloudType
            - credentials
            - bucket
            - storageClass
        - $ref: '#/components/schemas/CloudStorageProxy'
    HuaweiBucketContent:
      title: Huawei Object Storage
      description: ''
      allOf:
        - type: object
          properties:
            cloudType:
              type: string
              description: Name of cloud vendor
              enum:
                - Huawei Object Storage
            mediaAgent:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              type: string
              default: obs.myhwclouds.com
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
            credentials:
              $ref: '#/components/schemas/IdName'
            bucket:
              type: string
              description: Name of bucket
            storageClass:
              type: string
              enum:
                - Standard
                - Cold
                - Standard - Infrequent access
              description: Appropriate storage class for your account
          required:
            - cloudType
            - mediaAgent
        - $ref: '#/components/schemas/CloudStorageProxy'
        - $ref: '#/components/schemas/CloudStorageAdvanced'
        - $ref: '#/components/schemas/ModifyCloudBucketConfiguration'
    HuaweiBucketContentResp:
      title: Huawei Object Storage
      description: ''
      allOf:
        - $ref: '#/components/schemas/BucketsResp'
        - type: object
          properties:
            cloudType:
              type: string
              description: Name of cloud vendor
              enum:
                - Huawei Object Storage
            mediaAgent:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              type: string
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
            credentials:
              $ref: '#/components/schemas/IdName'
            bucket:
              type: string
              description: Name of bucket
            storageClass:
              type: string
              enum:
                - Standard
                - Cold
                - Standard - Infrequent access
              description: Appropriate storage class for your account
        - $ref: '#/components/schemas/CloudStorageProxy'
        - $ref: '#/components/schemas/CloudStorageAdvanced'
    IBM:
      title: IBM Cloud Object Storage (S3-compatible)
      description: ''
      allOf:
        - $ref: '#/components/schemas/CloudStorage'
        - type: object
          properties:
            cloudType:
              type: string
              description: Name of cloud vendor
              enum:
                - IBM Cloud Object Storage (S3-compatible)
            serviceHost:
              type: string
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
            credentials:
              $ref: '#/components/schemas/IdName'
            bucket:
              type: string
              description: Name of bucket
          required:
            - cloudType
            - serviceHost
            - credentials
            - bucket
        - $ref: '#/components/schemas/DedupeStorageList'
    IBMBucket:
      title: IBM Cloud Object Storage (S3-compatible)
      description: ''
      allOf:
        - type: object
          properties:
            cloudType:
              type: string
              description: Name of cloud vendor
              enum:
                - IBM Cloud Object Storage (S3-compatible)
            mediaAgent:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              type: string
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
            credentials:
              $ref: '#/components/schemas/IdName'
            bucket:
              type: string
              description: Name of bucket
          required:
            - cloudType
            - serviceHost
            - credentials
            - bucket
        - $ref: '#/components/schemas/CloudStorageProxy'
    IBMBucketContent:
      title: IBM Cloud Object Storage (S3-compatible)
      description: ''
      allOf:
        - type: object
          properties:
            cloudType:
              type: string
              description: Name of cloud vendor
              enum:
                - IBM Cloud Object Storage (S3-compatible)
            mediaAgent:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              type: string
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
            credentials:
              $ref: '#/components/schemas/IdName'
            bucket:
              type: string
              description: Name of bucket
          required:
            - cloudType
            - mediaAgent
        - $ref: '#/components/schemas/CloudStorageProxy'
        - $ref: '#/components/schemas/CloudStorageAdvanced'
        - $ref: '#/components/schemas/ModifyCloudBucketConfiguration'
    IBMBucketContentResp:
      title: IBM Cloud Object Storage (S3-compatible)
      description: ''
      allOf:
        - $ref: '#/components/schemas/BucketsResp'
        - type: object
          properties:
            cloudType:
              type: string
              description: Name of cloud vendor
              enum:
                - IBM Cloud Object Storage (S3-compatible)
            mediaAgent:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              type: string
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
            credentials:
              $ref: '#/components/schemas/IdName'
            bucket:
              type: string
              description: Name of bucket
        - $ref: '#/components/schemas/CloudStorageProxy'
        - $ref: '#/components/schemas/CloudStorageAdvanced'
    MicrosoftAzure:
      title: Microsoft Azure Storage
      description: ''
      allOf:
        - $ref: '#/components/schemas/CloudStorage'
        - type: object
          properties:
            cloudType:
              type: string
              description: Name of cloud vendor
              enum:
                - Microsoft Azure Storage
            serviceHost:
              type: string
              default: blob.core.windows.net
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
            authentication:
              type: string
              enum:
                - Access and secret keys
                - IAM VM role assignment
                - IAM AD application role assignment (Credential Manager)
              description: Authentication type for the cloud storage server. Only Access & Account Name and IAM AD require credentials.
            accountName:
              type: string
              description: Only for IAM VM and IAM AD
            credentials:
              $ref: '#/components/schemas/IdName'
            container:
              type: string
              description: Name of container
            storageClass:
              type: string
              enum:
                - Container's default
                - Hot
                - Cool
                - Archive
                - Hot/Archive (Combined Storage Tiers)
                - Cool/Archive (Combined Storage Tiers)
              description: Appropriate storage class for your account
          required:
            - cloudType
            - authentication
            - container
            - storageClass
        - $ref: '#/components/schemas/DedupeStorageList'
    MicrosoftAzureBucket:
      title: Microsoft Azure Storage
      description: ''
      allOf:
        - type: object
          properties:
            cloudType:
              x-terraform-always-update: true
              x-terraform-constant: Microsoft Azure Storage
              type: string
              description: Name of cloud vendor
              enum:
                - Microsoft Azure Storage
            mediaAgent:
              x-terraform-always-update: true
              $ref: '#/components/schemas/IdName'
            serviceHost:
              type: string
              default: blob.core.windows.net
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
            authentication:
              type: string
              enum:
                - Access and secret keys
                - IAM VM role assignment
                - IAM AD application role assignment (Credential Manager)
              description: Authentication type for the cloud storage server. Only Access & Account Name and IAM AD require credentials.
            accountName:
              type: string
              description: Only for IAM VM and IAM AD
            credentials:
              $ref: '#/components/schemas/IdName'
            container:
              type: string
              description: Name of container
            storageClass:
              type: string
              enum:
                - Container's default
                - Hot
                - Cool
                - Archive
                - Hot/Archive (Combined Storage Tiers)
                - Cool/Archive (Combined Storage Tiers)
              description: Appropriate storage class for your account
          required:
            - cloudType
            - mediaAgent
            - credentials
            - authentication
            - container
            - storageClass
        - $ref: '#/components/schemas/CloudStorageProxy'
    MicrosoftAzureBucketContent:
      title: Microsoft Azure Storage
      description: ''
      allOf:
        - type: object
          properties:
            cloudType:
              x-terraform-always-update: true
              x-terraform-constant: Microsoft Azure Storage
              type: string
              description: Name of cloud vendor
              enum:
                - Microsoft Azure Storage
            mediaAgent:
              x-terraform-always-update: true
              $ref: '#/components/schemas/IdName'
            serviceHost:
              type: string
              default: blob.core.windows.net
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
            authentication:
              type: string
              enum:
                - Access and secret keys
                - IAM VM role assignment
                - IAM AD application role assignment (Credential Manager)
              description: Authentication type for the cloud storage server. Only Access & Account Name and IAM AD require credentials.
            accountName:
              type: string
              description: Only for IAM VM and IAM AD
            credentials:
              $ref: '#/components/schemas/IdName'
            container:
              type: string
              description: Name of container
            storageClass:
              type: string
              enum:
                - Container's default
                - Hot
                - Cool
                - Archive
                - Hot/Archive (Combined Storage Tiers)
                - Cool/Archive (Combined Storage Tiers)
              description: Appropriate storage class for your account
          required:
            - cloudType
            - mediaAgent
        - $ref: '#/components/schemas/CloudStorageProxy'
        - $ref: '#/components/schemas/CloudStorageAdvanced'
        - $ref: '#/components/schemas/ModifyCloudBucketConfiguration'
    MicrosoftAzureBucketContentResp:
      title: Microsoft Azure Storage
      description: ''
      allOf:
        - $ref: '#/components/schemas/BucketsResp'
        - type: object
          properties:
            cloudType:
              type: string
              description: Name of cloud vendor
              enum:
                - Microsoft Azure Storage
            mediaAgent:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              type: string
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
            authentication:
              type: string
              enum:
                - Access and secret keys
                - IAM VM role assignment
                - IAM AD application role assignment (Credential Manager)
              description: Authentication type for the cloud storage server. Only Access & Account Name and IAM AD require credentials.
            accountName:
              type: string
              description: Only for IAM VM and IAM AD
            credentials:
              $ref: '#/components/schemas/IdName'
            container:
              type: string
              description: Name of container
            storageClass:
              type: string
              enum:
                - Container's default
                - Hot
                - Cool
                - Archive
                - Hot/Archive (Combined Storage Tiers)
                - Cool/Archive (Combined Storage Tiers)
              description: Appropriate storage class for your account
        - $ref: '#/components/schemas/CloudStorageProxy'
        - $ref: '#/components/schemas/CloudStorageAdvanced'
    NetApp:
      title: NetApp StorageGRID
      description: ''
      allOf:
        - $ref: '#/components/schemas/CloudStorage'
        - type: object
          properties:
            cloudType:
              type: string
              description: Name of cloud vendor
              enum:
                - NetApp StorageGRID
            serviceHost:
              type: string
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
            credentials:
              $ref: '#/components/schemas/IdName'
            bucket:
              type: string
              description: Name of bucket
          required:
            - cloudType
            - serviceHost
            - credentials
            - bucket
        - $ref: '#/components/schemas/DedupeStorageList'
    NetAppBucket:
      title: NetApp StorageGRID
      description: ''
      allOf:
        - type: object
          properties:
            cloudType:
              type: string
              description: Name of cloud vendor
              enum:
                - NetApp StorageGRID
            mediaAgent:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              type: string
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
            credentials:
              $ref: '#/components/schemas/IdName'
            bucket:
              type: string
              description: Name of bucket
          required:
            - cloudType
            - serviceHost
            - credentials
            - bucket
        - $ref: '#/components/schemas/CloudStorageProxy'
    NetAppBucketContent:
      title: NetApp StorageGRID
      description: ''
      allOf:
        - type: object
          properties:
            cloudType:
              type: string
              description: Name of cloud vendor
              enum:
                - NetApp StorageGRID
            mediaAgent:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              type: string
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
            credentials:
              $ref: '#/components/schemas/IdName'
            bucket:
              type: string
              description: Name of bucket
          required:
            - cloudType
            - mediaAgent
        - $ref: '#/components/schemas/CloudStorageProxy'
        - $ref: '#/components/schemas/CloudStorageAdvanced'
        - $ref: '#/components/schemas/ModifyCloudBucketConfiguration'
    NetAppBucketContentResp:
      title: NetApp StorageGRID
      description: ''
      allOf:
        - $ref: '#/components/schemas/BucketsResp'
        - type: object
          properties:
            cloudType:
              type: string
              description: Name of cloud vendor
              enum:
                - NetApp StorageGRID
            mediaAgent:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              type: string
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
            credentials:
              $ref: '#/components/schemas/IdName'
            bucket:
              type: string
              description: Name of bucket
        - $ref: '#/components/schemas/CloudStorageProxy'
        - $ref: '#/components/schemas/CloudStorageAdvanced'
    Nutanix:
      title: Nutanix Objects
      description: ''
      allOf:
        - $ref: '#/components/schemas/CloudStorage'
        - type: object
          properties:
            cloudType:
              type: string
              description: Name of cloud vendor
              enum:
                - Nutanix Objects
            serviceHost:
              type: string
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
            credentials:
              $ref: '#/components/schemas/IdName'
            bucket:
              type: string
              description: Name of bucket
          required:
            - cloudType
            - serviceHost
            - credentials
            - bucket
        - $ref: '#/components/schemas/DedupeStorageList'
    NutanixBucket:
      title: Nutanix Objects
      description: ''
      allOf:
        - type: object
          properties:
            cloudType:
              type: string
              description: Name of cloud vendor
              enum:
                - Nutanix Objects
            mediaAgent:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              type: string
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
            credentials:
              $ref: '#/components/schemas/IdName'
            bucket:
              type: string
              description: Name of bucket
          required:
            - cloudType
            - serviceHost
            - credentials
            - bucket
        - $ref: '#/components/schemas/CloudStorageProxy'
    NutanixBucketContent:
      title: Nutanix Objects
      description: ''
      allOf:
        - type: object
          properties:
            cloudType:
              type: string
              description: Name of cloud vendor
              enum:
                - Nutanix Objects
            mediaAgent:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              type: string
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
            credentials:
              $ref: '#/components/schemas/IdName'
            bucket:
              type: string
              description: Name of bucket
          required:
            - cloudType
            - mediaAgent
        - $ref: '#/components/schemas/CloudStorageProxy'
        - $ref: '#/components/schemas/CloudStorageAdvanced'
        - $ref: '#/components/schemas/ModifyCloudBucketConfiguration'
    NutanixBucketContentResp:
      title: Nutanix Objects
      description: ''
      allOf:
        - $ref: '#/components/schemas/BucketsResp'
        - type: object
          properties:
            cloudType:
              type: string
              description: Name of cloud vendor
              enum:
                - Nutanix Objects
            mediaAgent:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              type: string
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
            credentials:
              $ref: '#/components/schemas/IdName'
            bucket:
              type: string
              description: Name of bucket
        - $ref: '#/components/schemas/CloudStorageProxy'
        - $ref: '#/components/schemas/CloudStorageAdvanced'
    OpenStack:
      title: OpenStack Object Storage
      description: ''
      allOf:
        - $ref: '#/components/schemas/CloudStorage'
        - type: object
          properties:
            cloudType:
              type: string
              description: Name of cloud vendor
              enum:
                - OpenStack Object Storage
            serviceHost:
              type: string
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
            credentials:
              $ref: '#/components/schemas/IdName'
            container:
              type: string
              description: Name of container
          required:
            - cloudType
            - serviceHost
            - credentials
            - container
        - $ref: '#/components/schemas/DedupeStorageList'
    OpenStackBucket:
      title: OpenStack Object Storage
      description: ''
      allOf:
        - type: object
          properties:
            cloudType:
              type: string
              description: Name of cloud vendor
              enum:
                - OpenStack Object Storage
            mediaAgent:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              type: string
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
            credentials:
              $ref: '#/components/schemas/IdName'
            container:
              type: string
              description: Name of container
          required:
            - cloudType
            - serviceHost
            - credentials
            - container
        - $ref: '#/components/schemas/CloudStorageProxy'
    OpenStackBucketContent:
      title: OpenStack Object Storage
      description: ''
      allOf:
        - type: object
          properties:
            cloudType:
              type: string
              enum:
                - OpenStack Object Storage
            mediaAgent:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              type: string
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
            credentials:
              $ref: '#/components/schemas/IdName'
            container:
              type: string
              description: Name of container
          required:
            - cloudType
            - mediaAgent
        - $ref: '#/components/schemas/CloudStorageProxy'
        - $ref: '#/components/schemas/CloudStorageAdvanced'
        - $ref: '#/components/schemas/ModifyCloudBucketConfiguration'
    OpenStackBucketContentResp:
      title: OpenStack Object Storage
      description: ''
      allOf:
        - $ref: '#/components/schemas/BucketsResp'
        - type: object
          properties:
            cloudType:
              type: string
              enum:
                - OpenStack Object Storage
            mediaAgent:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              type: string
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
            credentials:
              $ref: '#/components/schemas/IdName'
            container:
              type: string
              description: Name of container
        - $ref: '#/components/schemas/CloudStorageProxy'
        - $ref: '#/components/schemas/CloudStorageAdvanced'
    OracleArchive:
      title: Oracle Cloud Infrastructure Archive Storage
      description: ''
      allOf:
        - $ref: '#/components/schemas/CloudStorage'
        - type: object
          properties:
            cloudType:
              type: string
              description: Name of cloud vendor
              enum:
                - Oracle Cloud Infrastructure Archive Storage
            serviceHost:
              type: string
              default: objectstorage.us-phoenix-1.oraclecloud.com
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
            credentials:
              $ref: '#/components/schemas/IdName'
            compartmentName:
              type: string
              description: OCI compartment name
            bucket:
              type: string
              description: Name of bucket
          required:
            - cloudType
            - credentials
            - bucket
        - $ref: '#/components/schemas/DedupeStorageList'
    OracleArchiveBucket:
      title: Oracle Cloud Infrastructure Archive Storage
      description: ''
      allOf:
        - type: object
          properties:
            cloudType:
              type: string
              description: Name of cloud vendor
              enum:
                - Oracle Cloud Infrastructure Archive Storage
            mediaAgent:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              type: string
              default: objectstorage.us-phoenix-1.oraclecloud.com
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
            credentials:
              $ref: '#/components/schemas/IdName'
            compartmentName:
              type: string
              description: OCI compartment name
            bucket:
              type: string
              description: Name of bucket
          required:
            - cloudType
            - credentials
            - compartmentName
            - bucket
        - $ref: '#/components/schemas/CloudStorageProxy'
    OracleArchiveBucketContent:
      title: Oracle Cloud Infrastructure Archive Storage
      description: ''
      allOf:
        - type: object
          properties:
            cloudType:
              type: string
              description: Name of cloud vendor
              enum:
                - Oracle Cloud Infrastructure Archive Storage
            mediaAgent:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              type: string
              default: objectstorage.us-phoenix-1.oraclecloud.com
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
            credentials:
              $ref: '#/components/schemas/IdName'
            compartmentName:
              type: string
              description: OCI compartment name
            bucket:
              type: string
              description: Name of bucket
          required:
            - cloudType
            - mediaAgent
        - $ref: '#/components/schemas/CloudStorageProxy'
        - $ref: '#/components/schemas/CloudStorageAdvanced'
        - $ref: '#/components/schemas/ModifyCloudBucketConfiguration'
    OracleArchiveBucketContentResp:
      title: Oracle Cloud Infrastructure Archive Storage
      description: ''
      allOf:
        - $ref: '#/components/schemas/BucketsResp'
        - type: object
          properties:
            cloudType:
              type: string
              description: Name of cloud vendor
              enum:
                - Oracle Cloud Infrastructure Archive Storage
            mediaAgent:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              type: string
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
            credentials:
              $ref: '#/components/schemas/IdName'
            compartmentName:
              type: string
              description: OCI compartment name
            bucket:
              type: string
              description: Name of bucket
        - $ref: '#/components/schemas/CloudStorageProxy'
        - $ref: '#/components/schemas/CloudStorageAdvanced'
    OracleObject:
      title: Oracle Cloud Infrastructure Object Storage
      description: ''
      allOf:
        - $ref: '#/components/schemas/CloudStorage'
        - type: object
          properties:
            cloudType:
              type: string
              description: Name of cloud vendor
              enum:
                - Oracle Cloud Infrastructure Object Storage
            serviceHost:
              type: string
              default: objectstorage.us-phoenix-1.oraclecloud.com
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
            credentials:
              $ref: '#/components/schemas/IdName'
            compartmentName:
              type: string
              description: OCI compartment name
            bucket:
              type: string
              description: Name of the bucket
            storageClass:
              type: string
              enum:
                - Infrequent access
                - Standard
                - Archive
              description: Appropriate storage class for your account
            useCombinedStorage:
              type: boolean
              description: Applicable for Archive storage class only
            combinedStorageClass:
              type: string
              enum:
                - Infrequent access
                - Standard
              description: Appropriate combined storage class for archive. Applicable only when useCombinedStorage is true.
          required:
            - cloudType
            - credentials
            - bucket
            - storageClass
        - $ref: '#/components/schemas/DedupeStorageList'
    OracleObjectBucket:
      title: Oracle Cloud Infrastructure Object Storage
      description: ''
      allOf:
        - type: object
          properties:
            cloudType:
              type: string
              description: Name of cloud vendor
              enum:
                - Oracle Cloud Infrastructure Object Storage
            mediaAgent:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              type: string
              default: objectstorage.us-phoenix-1.oraclecloud.com
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
            credentials:
              $ref: '#/components/schemas/IdName'
            compartmentName:
              type: string
              description: OCI compartment name
            bucket:
              type: string
              description: Name of the bucket
            storageClass:
              type: string
              enum:
                - Infrequent access
                - Standard
                - Archive
              description: Appropriate storage class for your account
            useCombinedStorage:
              type: boolean
              description: Applicable for Archive storage class only
            combinedStorageClass:
              type: string
              enum:
                - Infrequent access
                - Standard
              description: Appropriate combined storage class for archive. Applicable only when useCombinedStorage is true.
          required:
            - cloudType
            - credentials
            - bucket
            - storageClass
        - $ref: '#/components/schemas/CloudStorageProxy'
    OracleObjectBucketContent:
      title: Oracle Cloud Infrastructure Object Storage
      description: ''
      allOf:
        - type: object
          properties:
            cloudType:
              type: string
              description: Name of cloud vendor
              enum:
                - Oracle Cloud Infrastructure Object Storage
            mediaAgent:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              type: string
              default: objectstorage.us-phoenix-1.oraclecloud.com
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
            credentials:
              $ref: '#/components/schemas/IdName'
            compartmentName:
              type: string
              description: OCI compartment name
            bucket:
              type: string
              description: Name of the bucket
            storageClass:
              type: string
              enum:
                - Infrequent access
                - Standard
                - Archive
              description: Appropriate storage class for your account
            useCombinedStorage:
              type: boolean
              description: Applicable for Archive storage class only
            combinedStorageClass:
              type: string
              enum:
                - Infrequent access
                - Standard
              description: Appropriate combined storage class for archive. Applicable only when useCombinedStorage is true.
          required:
            - cloudType
            - mediaAgent
        - $ref: '#/components/schemas/CloudStorageProxy'
        - $ref: '#/components/schemas/CloudStorageAdvanced'
        - $ref: '#/components/schemas/ModifyCloudBucketConfiguration'
    OracleObjectBucketContentResp:
      title: Oracle Cloud Infrastructure Object Storage
      description: ''
      allOf:
        - $ref: '#/components/schemas/BucketsResp'
        - type: object
          properties:
            cloudType:
              type: string
              description: Name of cloud vendor
              enum:
                - Oracle Cloud Infrastructure Object Storage
            mediaAgent:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              type: string
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
            credentials:
              $ref: '#/components/schemas/IdName'
            compartmentName:
              type: string
              description: OCI compartment name
            bucket:
              type: string
              description: Name of the bucket
            storageClass:
              type: string
              enum:
                - Infrequent access
                - Standard
                - Archive
              description: Appropriate storage class for your account
            useCombinedStorage:
              type: boolean
              description: Applicable for Archive storage class only
            combinedStorageClass:
              type: string
              enum:
                - Infrequent access
                - Standard
              description: Appropriate combined storage class for archive. Applicable only when useCombinedStorage is true.
        - $ref: '#/components/schemas/CloudStorageProxy'
        - $ref: '#/components/schemas/CloudStorageAdvanced'
    Rackspace:
      title: Rackspace Cloud Files
      description: ''
      allOf:
        - $ref: '#/components/schemas/CloudStorage'
        - type: object
          properties:
            cloudType:
              type: string
              description: Name of cloud vendor
              enum:
                - Rackspace Cloud Files
            serviceHost:
              type: string
              default: api.mosso.com
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
            credentials:
              $ref: '#/components/schemas/IdName'
            container:
              type: string
              description: Name of container
          required:
            - cloudType
            - credentials
            - container
        - $ref: '#/components/schemas/DedupeStorageList'
    RackspaceBucket:
      title: Rackspace Cloud Files
      description: ''
      allOf:
        - type: object
          properties:
            cloudType:
              type: string
              description: Name of cloud vendor
              enum:
                - Rackspace Cloud Files
            mediaAgent:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              type: string
              default: api.mosso.com
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
            credentials:
              $ref: '#/components/schemas/IdName'
            container:
              type: string
              description: Name of container
          required:
            - cloudType
            - credentials
            - container
        - $ref: '#/components/schemas/CloudStorageProxy'
    RackspaceBucketContent:
      title: Rackspace Cloud Files
      description: ''
      allOf:
        - type: object
          properties:
            cloudType:
              type: string
              description: Name of cloud vendor
              enum:
                - Rackspace Cloud Files
            mediaAgent:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              type: string
              default: api.mosso.com
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
            credentials:
              $ref: '#/components/schemas/IdName'
            container:
              type: string
              description: Name of container
          required:
            - cloudType
            - mediaAgent
        - $ref: '#/components/schemas/CloudStorageProxy'
        - $ref: '#/components/schemas/CloudStorageAdvanced'
        - $ref: '#/components/schemas/ModifyCloudBucketConfiguration'
    RackspaceBucketContentResp:
      title: Rackspace Cloud Files
      description: ''
      allOf:
        - $ref: '#/components/schemas/BucketsResp'
        - type: object
          properties:
            cloudType:
              type: string
              description: Name of cloud vendor
              enum:
                - Rackspace Cloud Files
            mediaAgent:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              type: string
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
            credentials:
              $ref: '#/components/schemas/IdName'
            container:
              type: string
              description: Name of container
        - $ref: '#/components/schemas/CloudStorageProxy'
        - $ref: '#/components/schemas/CloudStorageAdvanced'
    CCLVaultV2:
      title: CCL Vault v2
      description: ''
      allOf:
        - $ref: '#/components/schemas/CloudStorage'
        - type: object
          properties:
            cloudType:
              type: string
              description: Name of cloud vendor
              enum:
                - CCL Vault v2
            serviceHost:
              type: string
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
              default: s3-nzl.vault.net.nz
            credentials:
              $ref: '#/components/schemas/IdName'
            bucket:
              type: string
              description: Name of bucket
          required:
            - cloudType
            - serviceHost
            - credentials
            - bucket
        - $ref: '#/components/schemas/DedupeStorageList'
    CCLVaultV2Bucket:
      title: CCL Vault v2
      description: ''
      allOf:
        - type: object
          properties:
            cloudType:
              type: string
              description: Name of cloud vendor
              enum:
                - CCL Vault v2
            mediaAgent:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              type: string
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
              default: s3-nzl.vault.net.nz
            credentials:
              $ref: '#/components/schemas/IdName'
            bucket:
              type: string
              description: Name of bucket
          required:
            - cloudType
            - serviceHost
            - credentials
            - bucket
        - $ref: '#/components/schemas/CloudStorageProxy'
    CCLVaultV2BucketContent:
      title: CCL Vault v2
      description: ''
      allOf:
        - type: object
          properties:
            cloudType:
              type: string
              description: Name of cloud vendor
              enum:
                - CCL Vault v2
            mediaAgent:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              type: string
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
              default: s3-nzl.vault.net.nz
            credentials:
              $ref: '#/components/schemas/IdName'
            bucket:
              type: string
              description: Name of bucket
          required:
            - cloudType
            - mediaAgent
        - $ref: '#/components/schemas/CloudStorageProxy'
        - $ref: '#/components/schemas/CloudStorageAdvanced'
        - $ref: '#/components/schemas/ModifyCloudBucketConfiguration'
    CCLVaultV2BucketContentResp:
      title: CCL Vault v2
      description: ''
      allOf:
        - $ref: '#/components/schemas/BucketsResp'
        - type: object
          properties:
            cloudType:
              type: string
              description: Name of cloud vendor
              enum:
                - CCL Vault v2
            mediaAgent:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              type: string
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
            credentials:
              $ref: '#/components/schemas/IdName'
            bucket:
              type: string
              description: Name of bucket
        - $ref: '#/components/schemas/CloudStorageProxy'
        - $ref: '#/components/schemas/CloudStorageAdvanced'
    S3Compatible:
      title: S3 Compatible Storage
      description: ''
      allOf:
        - $ref: '#/components/schemas/CloudStorage'
        - type: object
          properties:
            cloudType:
              type: string
              description: Name of cloud vendor
              enum:
                - S3 Compatible Storage
            serviceHost:
              type: string
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
            credentials:
              $ref: '#/components/schemas/IdName'
            bucket:
              type: string
              description: Name of bucket
          required:
            - cloudType
            - serviceHost
            - credentials
            - bucket
        - $ref: '#/components/schemas/DedupeStorageList'
    S3CompatibleBucket:
      title: S3 Compatible Storage
      description: ''
      allOf:
        - type: object
          properties:
            cloudType:
              type: string
              description: Name of cloud vendor
              enum:
                - S3 Compatible Storage
            mediaAgent:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              type: string
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
            credentials:
              $ref: '#/components/schemas/IdName'
            bucket:
              type: string
              description: Name of bucket
          required:
            - cloudType
            - serviceHost
            - credentials
            - bucket
        - $ref: '#/components/schemas/CloudStorageProxy'
    S3CompatibleBucketContent:
      title: S3 Compatible Storage
      description: ''
      allOf:
        - type: object
          properties:
            cloudType:
              type: string
              description: Name of cloud vendor
              enum:
                - S3 Compatible Storage
            mediaAgent:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              type: string
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
            credentials:
              $ref: '#/components/schemas/IdName'
            bucket:
              type: string
              description: Name of bucket
          required:
            - cloudType
            - mediaAgent
        - $ref: '#/components/schemas/CloudStorageProxy'
        - $ref: '#/components/schemas/CloudStorageAdvanced'
        - $ref: '#/components/schemas/ModifyCloudBucketConfiguration'
    S3CompatibleBucketContentResp:
      title: S3 Compatible Storage
      description: ''
      allOf:
        - $ref: '#/components/schemas/BucketsResp'
        - type: object
          properties:
            cloudType:
              type: string
              description: Name of cloud vendor
              enum:
                - S3 Compatible Storage
            mediaAgent:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              type: string
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
            credentials:
              $ref: '#/components/schemas/IdName'
            bucket:
              type: string
              description: Name of bucket
        - $ref: '#/components/schemas/CloudStorageProxy'
        - $ref: '#/components/schemas/CloudStorageAdvanced'
    ScalityRing:
      title: Scality RING
      description: ''
      allOf:
        - $ref: '#/components/schemas/CloudStorage'
        - type: object
          properties:
            cloudType:
              type: string
              description: Name of cloud vendor
              enum:
                - Scality RING
            serviceHost:
              type: string
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
            credentials:
              $ref: '#/components/schemas/IdName'
            bucket:
              type: string
              description: Name of bucket
          required:
            - cloudType
            - serviceHost
            - credentials
            - bucket
        - $ref: '#/components/schemas/DedupeStorageList'
    ScalityRingBucket:
      title: Scality RING
      description: ''
      allOf:
        - type: object
          properties:
            cloudType:
              type: string
              description: Name of cloud vendor
              enum:
                - Scality RING
            mediaAgent:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              type: string
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
            credentials:
              $ref: '#/components/schemas/IdName'
            bucket:
              type: string
              description: Name of bucket
          required:
            - cloudType
            - serviceHost
            - credentials
            - bucket
        - $ref: '#/components/schemas/CloudStorageProxy'
    ScalityRingBucketContent:
      title: Scality RING
      description: ''
      allOf:
        - type: object
          properties:
            cloudType:
              type: string
              description: Name of cloud vendor
              enum:
                - Scality RING
            mediaAgent:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              type: string
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
            credentials:
              $ref: '#/components/schemas/IdName'
            bucket:
              type: string
              description: Name of bucket
          required:
            - cloudType
            - mediaAgent
        - $ref: '#/components/schemas/CloudStorageProxy'
        - $ref: '#/components/schemas/CloudStorageAdvanced'
        - $ref: '#/components/schemas/ModifyCloudBucketConfiguration'
    ScalityRingBucketContentResp:
      title: Scality RING
      description: ''
      allOf:
        - $ref: '#/components/schemas/BucketsResp'
        - type: object
          properties:
            cloudType:
              type: string
              description: Name of cloud vendor
              enum:
                - Scality RING
            mediaAgent:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              type: string
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
            credentials:
              $ref: '#/components/schemas/IdName'
            bucket:
              type: string
              description: Name of bucket
        - $ref: '#/components/schemas/CloudStorageProxy'
        - $ref: '#/components/schemas/CloudStorageAdvanced'
    WasabiHot:
      title: Wasabi Hot Cloud Storage
      description: ''
      allOf:
        - $ref: '#/components/schemas/CloudStorage'
        - type: object
          properties:
            cloudType:
              type: string
              description: Name of cloud vendor
              enum:
                - Wasabi Hot Cloud Storage
            serviceHost:
              type: string
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
            credentials:
              $ref: '#/components/schemas/IdName'
            bucket:
              type: string
              description: Name of bucket
          required:
            - cloudType
            - serviceHost
            - credentials
            - bucket
        - $ref: '#/components/schemas/DedupeStorageList'
    WasabiHotBucket:
      title: Wasabi Hot Cloud Storage
      description: ''
      allOf:
        - type: object
          properties:
            cloudType:
              type: string
              description: Name of cloud vendor
              enum:
                - Wasabi Hot Cloud Storage
            mediaAgent:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              type: string
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
            credentials:
              $ref: '#/components/schemas/IdName'
            bucket:
              type: string
              description: Name of bucket
          required:
            - cloudType
            - serviceHost
            - credentials
            - bucket
        - $ref: '#/components/schemas/CloudStorageProxy'
    WasabiHotBucketContent:
      title: Wasabi Hot Cloud Storage
      description: ''
      allOf:
        - type: object
          properties:
            cloudType:
              type: string
              description: Name of cloud vendor
              enum:
                - Wasabi Hot Cloud Storage
            mediaAgent:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              type: string
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
            credentials:
              $ref: '#/components/schemas/IdName'
            bucket:
              type: string
              description: Name of bucket
          required:
            - cloudType
            - mediaAgent
        - $ref: '#/components/schemas/CloudStorageProxy'
        - $ref: '#/components/schemas/CloudStorageAdvanced'
        - $ref: '#/components/schemas/ModifyCloudBucketConfiguration'
    WasabiHotBucketContentResp:
      title: Wasabi Hot Cloud Storage
      description: ''
      allOf:
        - $ref: '#/components/schemas/BucketsResp'
        - type: object
          properties:
            cloudType:
              type: string
              description: Name of cloud vendor
              enum:
                - Wasabi Hot Cloud Storage
            mediaAgent:
              $ref: '#/components/schemas/IdName'
            serviceHost:
              type: string
              description: IP address or fully qualified domain name or URL for the cloud library based on cloud vendor
            credentials:
              $ref: '#/components/schemas/IdName'
            bucket:
              type: string
              description: Name of bucket
        - $ref: '#/components/schemas/CloudStorageProxy'
        - $ref: '#/components/schemas/CloudStorageAdvanced'
    CloudStorageDetails:
      title: Cloud Storage Details
      description: ''
      allOf:
        - $ref: '#/components/schemas/IdName'
        - type: object
          properties:
            general:
              $ref: '#/components/schemas/CloudStorageGeneralInfo'
            bucket:
              type: array
              items:
                $ref: '#/components/schemas/IdNameStatus'
            encryption:
              $ref: '#/components/schemas/Encryption'
            security:
              type: array
              items:
                $ref: '#/components/schemas/SecurityAssoc'
            cacheConfigurations:
              $ref: '#/components/schemas/CacheConfigurations'
            associatedPlans:
              type: array
              items:
                $ref: '#/components/schemas/IdName'
    CacheConfigurations:
      title: CacheConfigurations
      type: object
      properties:
        enable:
          type: boolean
          description: Tells if cache configuration is enabled for this storage
        metadataCache:
          type: array
          items:
            $ref: '#/components/schemas/MetadataCache'
    MetadataCache:
      title: metadataCache
      type: object
      properties:
        mediaAgent:
          $ref: '#/components/schemas/IdName'
        path:
          type: string
          description: Path of cache
    CreateMetadataCacheConfigurations:
      title: CreateMetadataCacheConfigurations
      type: object
      description: 'If adding a network access path, Please add credentials or saved credentials. If both are provided, credentials will be taken into consideration.'
      properties:
        mediaAgent:
          $ref: '#/components/schemas/IdName'
        credentials:
          $ref: '#/components/schemas/UserNamePassword'
        savedCredentials:
          $ref: '#/components/schemas/IdName'
        path:
          type: string
          description: Metadata cache will be stored on this path
      required:
        - mediaAgent
        - path
    UpdateMetadataCacheConfiguration:
      title: UpdateMetadataCacheConfiguration
      type: object
      description: 'If updating to a network access path, Please add credentials or saved credentials. If both are provided, credentials will be taken into consideration.'
      properties:
        credentials:
          $ref: '#/components/schemas/UserNamePassword'
        savedCredentials:
          $ref: '#/components/schemas/IdName'
        path:
          type: string
          description: Metadata cache will be stored on this path
      required:
        - path
    MetadataCacheConfiguration:
      title: MetadataCacheConfiguration
      type: object
      properties:
        mediaAgent:
          $ref: '#/components/schemas/IdName'
        credentials:
          $ref: '#/components/schemas/UserNamePassword'
        savedCredentials:
          $ref: '#/components/schemas/IdName'
        path:
          type: string
          description: Metadata cache will be stored on this path
        metadataCache:
          type: array
          items:
            $ref: '#/components/schemas/MetadataCache'
    ModifyCloudBucketConfiguration:
      title: ModifyCloudBucketConfiguration
      description: Change the configuration of the bucket
      type: object
      properties:
        configuration:
          $ref: '#/components/schemas/CloudBucketConfiguration'
    CloudBucketConfiguration:
      title: CloudBucketConfiguration
      type: object
      properties:
        enable:
          type: boolean
          description: 'When true, means mount path is enabled'
        disableBackupLocationForFutureBackups:
          type: boolean
          description: 'When true, prevents new data writes to backup location by changing number of writers to zero'
        prepareForRetirement:
          type: boolean
          description: 'When true, the deduplicated blocks in the mount path will not be referenced when there are multiple mount paths in the library.'
        storageAcceleratorCredentials:
          $ref: '#/components/schemas/IdName'
    UpdateCloudStorage:
      type: object
      properties:
        newName:
          x-terraform-mapping: name
          type: string
          description: change the name of the cloud storage
        encryption:
          $ref: '#/components/schemas/Encryption'
        security:
          type: array
          items:
            $ref: '#/components/schemas/UpdateSecurityAssoc'
    CloudStorageResp:
      title: CloudStorageResp
      x-terraform-id: Id
      allOf:
        - $ref: '#/components/schemas/IdName'
        - $ref: '#/components/schemas/GenericResp'
    CloudStorageGeneralInfo:
      title: CloudStorageGeneralInfo
      type: object
      properties:
        type:
          type: string
          description: Type of the cloud storage server
        vendorType:
          type: string
          description: Cloud server type
        totalCapacity:
          type: integer
          format: int32
          description: Total capacity of this cloud storage
        freeSpace:
          type: integer
          format: int32
          description: Free space available on this cloud storage
        sizeOnDisk:
          type: integer
          format: int32
          description: Amount of space consumed
        deduplicationSavings:
          type: string
          description: Specifies the savings in percentage that occurred due to deduplication. Only available for dedupe cloud storage pools
    CloudAccessPathsResp:
      title: CloudAccessPathsResp
      type: object
      properties:
        accessPathId:
          type: integer
          format: int32
          description: Id of cloud access path
        mediaAgent:
          $ref: '#/components/schemas/IdNameDisplayName'
        bucket:
          type: string
          description: Name of the bucket
        username:
          type: string
          description: Username used to connect to cloud Storage
        access:
          $ref: '#/components/schemas/AccessType'
        accessible:
          type: string
          description: Accessibility status of cloud storage
    BucketsResp:
      title: BucketResp
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: Id of the bucket
        name:
          type: string
          description: MediaAgent display name along with name of the bucket
        configuration:
          $ref: '#/components/schemas/CloudBucketConfiguration'
        cloudAccessPaths:
          type: array
          items:
            $ref: '#/components/schemas/CloudAccessPathsResp'
    CloudStorageProxy:
      title: CloudStorageProxy
      type: object
      properties:
        proxyAddress:
          type: string
          description: If the MediaAgent accesses the mount path using a proxy then proxy server address needs to be provided. If you want to remove proxy information, pass empty string in proxyAddress.
        port:
          type: integer
          format: int32
          description: Port for proxy configuration
        username:
          type: string
          description: Username for proxy configuration
        password:
          type: string
          format: password
          description: Password for proxy configuration (Should be in Base64 format)
    CloudStorageAdvanced:
      title: CloudStorageAdvanced
      type: object
      properties:
        access:
          $ref: '#/components/schemas/AccessType'
        enable:
          type: boolean
          description: Enable/Disable access of bucket to a media Agent
    DedupeStorageList:
      description: A list of dedupe locations can be provided for the storage pool being created. This provides an efficient way to save/store data by eliminating duplicate blocks of data during backups
      title: Dedupe Storage List
      type: object
      properties:
        useDeduplication:
          type: boolean
          description: Enables or disables deduplication on the storage
          default: false
        deduplicationDBLocation:
          type: array
          description: A list of dedupe locations can be provided for the storage pool being created. This provides an efficient way to save/store data by eliminating duplicate blocks of data during backups
          items:
            $ref: '#/components/schemas/DedupePath'
    DeleteMultipleUsers:
      type: object
      description: Used to delete multiple users and carry out property transfership of deleted users
      properties:
        users:
          type: array
          items:
            $ref: '#/components/schemas/DeleteUsers'
    DeleteUsers:
      type: object
      properties:
        skipOwnerTransfer:
          type: boolean
        newUser:
          $ref: '#/components/schemas/IdName'
        newUserGroup:
          $ref: '#/components/schemas/IdName'
        user:
          $ref: '#/components/schemas/IdName'
    DeleteMultipleUserGroups:
      type: object
      properties:
        userGroups:
          type: array
          description: 'List of userGroups that have to be deleted. Either name or id can be provided. If name and id are both provided, id will be taken into consideration.'
          items:
            $ref: '#/components/schemas/DeleteUserGroups'
    DeleteUserGroups:
      type: object
      properties:
        skipOwnerTransfer:
          type: boolean
        newUser:
          $ref: '#/components/schemas/IdName'
        newUserGroup:
          $ref: '#/components/schemas/IdName'
        userGroup:
          $ref: '#/components/schemas/IdName'
    UserGroupListResponse:
      type: object
      properties:
        userGroups:
          type: array
          items:
            $ref: '#/components/schemas/UserGroupSummary'
      description: Used to get a list of existing user-groups.
    UserGroupSummary:
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: User group id
        name:
          type: string
          description: user group name
        GUID:
          type: string
          description: globally unique identifier for user group
        serviceType:
          $ref: '#/components/schemas/ServiceTypes'
        description:
          type: string
        plan:
          $ref: '#/components/schemas/IdName'
        provider:
          $ref: '#/components/schemas/IdName'
        enabled:
          type: boolean
          description: returns if the user group is enabled or disabled
        allowMultipleCompanyMembers:
          type: boolean
          description: This property denotes that addition of users/groups from child companies is allowed. Only applicable for commcell and reseller company group.
        company:
          $ref: '#/components/schemas/IdName'
        commcell:
          $ref: '#/components/schemas/CommcellInfo'
        users:
          type: array
          items:
            $ref: '#/components/schemas/IdName'
        globalConfigInfo:
          $ref: '#/components/schemas/GlobalConfigInfo'
    CreateUserGroup:
      type: object
      properties:
        name:
          type: string
          description: 'To create an active directory usergroup, the domain name should be mentioned along with the usergroup name (domainName\\usergroupName) and localUserGroup value must be given.'
        description:
          type: string
        enforceFSQuota:
          type: boolean
          description: Used to determine if a backup data limit will be set for the user group being created
        quotaLimitInGB:
          type: integer
          format: int32
          description: 'if enforceFSQuota is set to true, the quota limit can be set in GBs'
        localUserGroups:
          type: array
          x-terraform-include: false
          description: This option is for AD user groups being created. Local user groups can be added to the active directory user groups.
          items:
            $ref: '#/components/schemas/IdName'
        globalConfigInfo:
          $ref: '#/components/schemas/CreateGlobalConfigInfo'
      required:
        - name
    UserGroup:
      type: object
      properties:
        id:
          x-terraform-id: true
          type: string
        name:
          type: string
        GUID:
          type: string
        description:
          type: string
        enabled:
          type: boolean
          description: Returns if the user group is enabled or disabled
        enforceFSQuota:
          type: boolean
        quotaLimitInGB:
          type: integer
          format: int32
        serviceType:
          $ref: '#/components/schemas/ServiceTypes'
        email:
          type: string
          description: Returns if there is a email ID associated with the usergroup.
        enableTwoFactorAuthentication:
          $ref: '#/components/schemas/TFAOptions'
        enableLocalAuthentication:
          $ref: '#/components/schemas/TFAOptions'
        associatedExternalGroups:
          type: array
          items:
            $ref: '#/components/schemas/IdName'
        laptopAdmins:
          type: boolean
          description: 'When set to true, users in this group cannot activate or be set as server owner'
        associatedLocalGroups:
          type: array
          items:
            $ref: '#/components/schemas/IdName'
        plan:
          $ref: '#/components/schemas/IdName'
        company:
          $ref: '#/components/schemas/IdName'
        users:
          type: array
          description: Returns list of users that are associated with this userGroup
          items:
            $ref: '#/components/schemas/IdName'
        associatedEntities:
          type: array
          items:
            $ref: '#/components/schemas/AssocEntity'
        eligibleToAllowMultipleCompanyMembers:
          type: boolean
          readOnly: true
          description: Read only property. Denotes if the group is eligible for allowMultipleCompanyMembers
        allowMultipleCompanyMembers:
          type: boolean
          default: false
          description: This property denotes that addition of users/groups from child companies is allowed. Only applicable for commcell and reseller company group.
        doNotInheritRestrictConsoleTypes:
          type: boolean
          description: RestrictConsoleTypes are inherited from the parent or not.
        restrictedConsoleTypes:
          x-terraform-mapping: restrictConsoleTypes
          x-terraform-function: handler.GetConsoleTypes
          type: array
          items:
            $ref: '#/components/schemas/RestrictedConsoleTypes'
        azureGUID:
          type: string
          description: Azure Object ID used to link this user group to Azure AD group and manage group membership of the user during SAML login
        showAzureGuidOption:
          type: boolean
          description: Read only property. Denotes if the group is eligible to have Azure Object ID property
          readOnly: true
        globalConfigInfo:
          $ref: '#/components/schemas/GlobalConfigInfo'
    UpdateUserGroup:
      type: object
      properties:
        newName:
          x-terraform-mapping: name
          type: string
          description: gives a new name to the user group.
        newDescription:
          x-terraform-mapping: description
          type: string
          description: gives a new description to the user group.
        laptopPlan:
          x-terraform-include: false
          $ref: '#/components/schemas/IdName'
        planOperationType:
          $ref: '#/components/schemas/Operations'
        enabled:
          type: boolean
          description: allows the enabling/disabling of the user group.
        enforceFSQuota:
          type: boolean
          description: determines if a data limit will be set for the user group.
        quotaLimitInGB:
          type: integer
          format: int32
          description: 'if enforceFSquota is enabled, the quota limit can be provided in GBs'
        enableTwoFactorAuthentication:
          $ref: '#/components/schemas/TFAOptions'
        enableLocalAuthentication:
          $ref: '#/components/schemas/TFAOptions'
        associatedExternalGroups:
          x-terraform-computed: false
          type: array
          items:
            $ref: '#/components/schemas/IdName'
        externalUserGroupsOperationType:
          type: string
          description: 'Allows adding, deleting or overwriting associated external user groups of a user group. Default is adding associated external user groups'
          enum:
            - ADD
            - DELETE
            - OVERWRITE
          default: ADD
          x-terraform-constant: OVERWRITE
          x-terraform-haschange: associatedExternalGroups
        laptopAdmins:
          type: boolean
          description: 'When set to true, users in this group cannot activate or be set as server owner'
        associatedLocalGroups:
          type: array
          x-terraform-include: false
          items:
            $ref: '#/components/schemas/IdName'
        localUserGroupsOperationType:
          type: string
          description: 'Allows adding, deleting or overwriting associated local user groups of a user group. Default is adding associated local user groups'
          enum:
            - ADD
            - DELETE
            - OVERWRITE
          default: ADD
          x-terraform-include: false
        users:
          type: array
          x-terraform-computed: true
          items:
            $ref: '#/components/schemas/IdName'
        userOperationType:
          x-terraform-constant: OVERWRITE
          x-terraform-haschange: users
          $ref: '#/components/schemas/Operations'
        allowMultipleCompanyMembers:
          type: boolean
          default: false
          description: This property can be used to allow addition of users/groups from child companies. Only applicable for commcell and reseller company group.
        doNotInheritRestrictConsoleTypes:
          type: boolean
          description: Option to not inherit the RestrictConsoleTypes from the parent. By default the value is false, parent RestrictConsoleTypes will be inherited.
        consoleTypeOperationType:
          type: string
          enum:
            - ADD
            - DELETE
            - OVERWRITE
          x-terraform-constant: OVERWRITE
          x-terraform-haschange: restrictConsoleTypes
        restrictConsoleTypes:
          x-terraform-computed: false
          $ref: '#/components/schemas/RestrictConsoleTypes'
        azureGUID:
          type: string
          description: Azure Object ID used to link this user group to Azure AD group and manage group membership of the user during SAML login
    Operations:
      enum:
        - ADD
        - DELETE
      type: string
      description: determines if an existing user has to be added to the user group or removed from the user group
    StorageListResponse:
      type: object
      properties:
        diskStorage:
          type: array
          items:
            $ref: '#/components/schemas/StorageListSummary'
    DiskStorage:
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: Id of the Disk Storage Pool
        name:
          type: string
          description: Name of the Disk Storage Pool
        general:
          $ref: '#/components/schemas/DiskStorageGeneralInfo'
        backupLocations:
          type: array
          description: Gives backup location/mount path details for the storage pool.
          items:
            $ref: '#/components/schemas/IdNameStatus'
        encryption:
          x-terraform-mapping: dataEncryption
          $ref: '#/components/schemas/Encryption'
        security:
          type: array
          items:
            $ref: '#/components/schemas/SecurityAssoc'
        associatedPlanList:
          type: array
          description: Provides the list of plans associated with the storage pool.
          items:
            $ref: '#/components/schemas/IdName'
    DiskStorageGeneralInfo:
      type: object
      properties:
        capacity:
          type: integer
          format: int32
          description: specifies the capacity of the storage pool
        freeSpace:
          type: integer
          format: int32
          description: specifies the available space on the storage pool
        sizeOnDisk:
          type: integer
          format: int32
          description: Size on disk refers to the actual amount of space being taken by the storage pool on the disk.
        dedupeSavingsPercent:
          type: integer
          format: int32
          description: specifies the savings that occurred due to deduplication. Only available for dedupe storage pools.
    CreateDiskStorage:
      type: object
      properties:
        name:
          type: string
          description: Name of the Disk Storage to be created.
        storage:
          type: array
          x-terraform-list: true
          description: A list of backup locations can be provided for the storage pool being created.
          items:
            $ref: '#/components/schemas/Path'
        enableDeduplication:
          type: boolean
          description: enables or disables deduplication
        deduplicationDBStorage:
          type: array
          description: A list of dedupe locations can be provided for the storage pool being created. This provides an efficient way to save/store data by eliminating duplicate blocks of data during backups.
          items:
            $ref: '#/components/schemas/DedupePath'
      required:
        - name
        - storage
        - enableDeduplication
    Path:
      type: object
      description: 'If adding a network access path, Please add credentials or saved credentials. If both are provided, credentials will be taken into consideration.'
      properties:
        backupLocation:
          type: string
        mediaAgent:
          $ref: '#/components/schemas/IdName'
        credentials:
          $ref: '#/components/schemas/UserNamePassword'
        savedCredentials:
          $ref: '#/components/schemas/IdName'
      required:
        - path
        - mediaAgent
    UserNamePassword:
      type: object
      properties:
        name:
          type: string
          description: username to access the network path
        password:
          x-terraform-sensitive: true
          type: string
          description: password to access the network path
    UpdateDiskStorage:
      type: object
      properties:
        newName:
          x-terraform-mapping: name
          type: string
          description: change the name of the storage pool
        dataEncryption:
          $ref: '#/components/schemas/Encryption'
        security:
          type: array
          items:
            $ref: '#/components/schemas/UpdateSecurityAssoc'
    BackupLocationDetails:
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: Id of the backup location
        name:
          type: string
          description: Name of the backup location
        backupLocation:
          type: string
          description: backup location path
        mediaAgent:
          $ref: '#/components/schemas/IdName'
        configuration:
          $ref: '#/components/schemas/DiskStorageConfiguration'
        totalCapacity:
          type: integer
          format: int32
          description: total capacity of the backup location
        freeSpace:
          type: integer
          format: int32
          description: total free space on the backup location
        diskAccessPaths:
          type: array
          description: access paths available on the backup location
          items:
            $ref: '#/components/schemas/AccessPathDetails'
        enabled:
          type: boolean
        access:
          $ref: '#/components/schemas/AccessType'
        credentials:
          $ref: '#/components/schemas/CredentialUserName'
        savedCredentials:
          $ref: '#/components/schemas/IdName'
    CredentialUserName:
      type: object
      properties:
        name:
          type: string
          description: Name of the backup location
    AccessPathDetails:
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: Gives the disk access path id.
        mediaAgent:
          $ref: '#/components/schemas/IdName'
        path:
          type: string
          description: Gives the disk access path.
        userName:
          type: string
        access:
          $ref: '#/components/schemas/AccessType'
        accessible:
          type: boolean
          description: states if the access path is accessible
    UpdateBackupLocation:
      type: object
      description: 'While adding network access path, please add credentials or saved credentials. If both are provided, credentials will be selected.'
      properties:
        mediaAgent:
          x-terraform-always-update: true
          $ref: '#/components/schemas/IdName'
        access:
          $ref: '#/components/schemas/AccessType'
        credentials:
          $ref: '#/components/schemas/UserNamePassword'
        savedCredentials:
          $ref: '#/components/schemas/IdName'
        configuration:
          $ref: '#/components/schemas/DiskStorageConfiguration'
        backupLocation:
          type: string
          description: Can be used to change the disk access path.
        enabled:
          type: boolean
      required:
        - mediaAgent
    DiskStorageConfiguration:
      type: object
      description: 'While adding network access path, please add credentials or saved credentials. If both are provided, credentials will be selected.'
      properties:
        enableBackupLocation:
          type: boolean
          description: Used to enable or disable backup location
        disableBackupLocationforFutureBackups:
          type: boolean
          description: Used to determine if backup location has to be disabled or enabled for future backups
        prepareForRetirement:
          type: boolean
          description: Used to determine if the backup location has to be prepared for retirement
    UpdateDiskAccessPath:
      type: object
      description: 'While adding network access path, please add credentials or saved credentials. If both are provided, credentials will be selected.'
      properties:
        access:
          $ref: '#/components/schemas/AccessType'
        enabled:
          type: boolean
    CreateBackupLocation:
      type: object
      description: 'If adding a network access path, Please add credentials or saved credentials. If both are provided, credentials will be taken into consideration.'
      properties:
        mediaAgent:
          x-terraform-always-update: true
          $ref: '#/components/schemas/IdName'
        backupLocation:
          type: string
          description: The mount path on the media agent where the data is to be backed up.
        credentials:
          $ref: '#/components/schemas/UserNamePassword'
        savedCredentials:
          $ref: '#/components/schemas/IdName'
      required:
        - mediaAgent
        - backupLocation
    AddDiskAccessPath:
      type: object
      description: Used to add a new access path to a backup location
      properties:
        mediaAgents:
          type: array
          x-terraform-mapping: mediaAgent
          x-terraform-list: true
          description: Can add a list of media agents to be added as the disk access path.
          items:
            $ref: '#/components/schemas/IdName'
      required:
        - mediaAgents
    AccessType:
      enum:
        - READ_AND_WRITE
        - READ
      type: string
      format: ''
      description: The access type for the access path can be either read (writing to path not allowed) or read and write (writing to path allowed).
    StorageAssociatedCopies:
      type: object
      description: ''
      properties:
        copies:
          type: array
          description: List of copies associated with given storage pool
          nullable: true
          items:
            $ref: '#/components/schemas/StorageAssociatedCopy'
    MediaAgentList:
      type: object
      description: List of Media agents that can be added
      properties:
        mediaAgents:
          type: array
          items:
          $ref: '#/components/schemas/IdNameDisplayName'
    StorageAssociatedCopy:
      type: object
      description: ''
      properties:
        copy:
          $ref: '#/components/schemas/IdName'
        plan:
          $ref: '#/components/schemas/IdName'
        planType:
          $ref: '#/components/schemas/PlanType'
        storagePolicy:
          $ref: '#/components/schemas/IdName'
        isSnapCopy:
          type: boolean
          description: Is this a snap copy?
        copyType:
          $ref: '#/components/schemas/PlanCopyType'
        backupsToCopy:
          $ref: '#/components/schemas/PlanFullBackupType'
        retentionPeriodDays:
          type: integer
          format: int32
          description: Retention period in days
        useExtendedRetentionRules:
          type: boolean
          description: Tells if extended retention rules are used
        extendedRetentionRules:
          $ref: '#/components/schemas/ExtendedRetentionRules'
    LocalStorage:
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: Id of the Local Storage Pool
        name:
          type: string
          description: Name of the Local Storage Pool
        general:
          $ref: '#/components/schemas/LocalStorageGeneralInfo'
        backupLocations:
          type: array
          description: Gives backup location/mount path details for the storage pool.
          items:
            $ref: '#/components/schemas/IdNameStatus'
        encryption:
          $ref: '#/components/schemas/Encryption'
        security:
          $ref: '#/components/schemas/SecurityAssoc'
        associatedPlanList:
          type: array
          description: Provides the list of plans associated with the storage pool.
          items:
            $ref: '#/components/schemas/IdName'
    LocalStorageGeneralInfo:
      type: object
      properties:
        capacity:
          type: integer
          format: int32
          description: specifies the capacity of the storage pool
        freeSpace:
          type: integer
          format: int32
          description: specifies the available space on the storage pool
        sizeOnDisk:
          type: integer
          format: int32
          description: Amount of space consumed.
        dedupeSavingsPercent:
          type: integer
          format: int32
          description: specifies the savings that occurred due to deduplication. Only available for dedupe storage pools.
    CreateLocalStorage:
      type: object
      properties:
        name:
          type: string
          description: Name of the Local Storage to be created.
        storage:
          type: array
          description: A list of backup locations can be provided for the storage pool being created.
          items:
            $ref: '#/components/schemas/Path'
        enableDeduplication:
          type: boolean
          description: enables or disables deduplication
        deduplicationDBStorage:
          type: array
          description: A list of dedupe locations can be provided for the storage pool being created. This provides an efficient way to save/store data by eliminating duplicate blocks of data during backups.
          items:
            $ref: '#/components/schemas/DedupePath'
      required:
        - name
        - storage
        - enableDeduplication
    UpdateLocalStorage:
      type: object
      properties:
        name:
          type: string
          description: change the name of the storage pool
        dataEncryption:
          $ref: '#/components/schemas/Encryption'
        security:
          type: array
          items:
            $ref: '#/components/schemas/UpdateSecurityAssoc'
    AddLocalAccessPath:
      type: object
      description: Used to add a new access path to a backup location
      properties:
        mediaAgents:
          type: array
          description: Can add a list of media agents to be added as the local storage access path.
          items:
            $ref: '#/components/schemas/IdName'
      required:
        - mediaAgents
    UpdateLocalAccessPath:
      type: object
      description: Used to update access path
      properties:
        mediaAgents:
          $ref: '#/components/schemas/IdName'
        access:
          $ref: '#/components/schemas/AccessType'
        credentials:
          $ref: '#/components/schemas/UserNamePassword'
        savedCredentials:
          $ref: '#/components/schemas/IdName'
        path:
          type: string
          description: Can be used to change the disk access path.
        enabled:
          type: boolean
      required:
        - mediaAgents
    TFAOptions:
      enum:
        - 'ON'
        - 'OFF'
        - DISABLED_AT_COMPANY
      type: string
      description: Allows two-factor authentication to be enabled for the specific types of usergroups. it can be turned on or off based on user preferences. There will be usergroups that will not have this option.
    HyperScaleStorageDetails:
      title: HyperScaleStorageDetails
      allOf:
        - $ref: '#/components/schemas/IdName'
        - type: object
          properties:
            general:
              $ref: '#/components/schemas/HyperScaleStorageGeneralInfo'
            nodes:
              type: array
              description: List of disks with the Linux MediaAgent
              items:
                $ref: '#/components/schemas/IdNameStatus'
            encryption:
              $ref: '#/components/schemas/Encryption'
            security:
              type: array
              description: List of users or user groups each having a specific set of roles that determine the kind of operations they can perform on hyperscale storage
              items:
                $ref: '#/components/schemas/SecurityAssoc'
            associatedPlans:
              type: array
              description: List of plans associated with this HyperScale storage
              items:
                $ref: '#/components/schemas/IdName'
    HyperScaleStorageGeneralInfo:
      title: HyperScaleStorageGeneralInfo
      type: object
      properties:
        libraryName:
          type: string
          description: Library Name of HyperScale Storage
        devicePath:
          type: string
          description: The path of the disk storage area in which the data will be stored.
        totalCapacity:
          type: integer
          format: int32
          description: The total storage capacity of the selected HyperScale Storage Pool
        totalFreeSpace:
          type: integer
          format: int32
          description: The total free space available in the HyperScale storage pool
        sizeOndisk:
          type: integer
          format: int32
          description: The total amount of data stored on the disk after deduplication and compression
        resiliency:
          type: string
          description: Resiliency or redundancy of this HyperScale storage
        deduplicationSavings:
          type: string
          description: Specifies the savings in percentage that occurred due to deduplication.
        status:
          type: string
          description: The status of the hyperscale storage pool - whether the storage pool is online or offline
    HyperScaleNodeDetails:
      title: HyperScaleNodeDetails
      type: object
      properties:
        node:
          $ref: '#/components/schemas/IdName'
        diskInformation:
          $ref: '#/components/schemas/HyperScaleDiskInfo'
        serverInformation:
          $ref: '#/components/schemas/HyperScaleServerInfo'
        disks:
          type: array
          items:
            $ref: '#/components/schemas/HyperScaleNodeDisk'
    HyperScaleNodeDisk:
      title: HyperScaleNodeDisk
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: Id of disk
        mountpath:
          type: string
          description: The physical path of the mount path in the file system
        serialNumber:
          type: string
          description: The serial number associated with the mount path
        capacity:
          type: integer
          format: int32
          description: The total capacity of the mount path
        diskStatus:
          type: string
          description: The status of the mount path
    HyperScaleServerInfo:
      title: HyperScaleServerInfo
      type: object
      properties:
        cpu:
          type: string
          description: The CPU related information
        fan:
          type: string
          description: The status of the fan
        powerSupply:
          type: string
          description: The status of the power supply
        cacheDrive:
          type: string
          description: The status of the cache drive
        nicStatus:
          type: string
          description: The status of the NIC cards in the mount path
        cpuUsage:
          type: string
          description: The CPU performance
        memoryUsage:
          type: string
          description: The amount of physical memory currently used
    HyperScaleDiskInfo:
      title: HyperScaleDiskInfo
      type: object
      properties:
        vendor:
          type: string
          description: The name of the vendor
        product:
          type: string
          description: The name of the product
        fileSystem:
          type: string
          description: The file system on the node
        status:
          type: string
          description: The status of the node - whether the node is online or offline and is healthy
    HyperScaleStorage:
      title: HyperScaleStorage
      type: object
      properties:
        name:
          type: string
          description: Name of HyperScale Storage
        nodes:
          type: array
          description: List of Nodes (MediaAgents) of the HyperScale Storage
          items:
            $ref: '#/components/schemas/IdName'
      required:
        - name
        - nodes
    UpdateHyperScaleStorage:
      title: UpdateHyperScaleStorage
      type: object
      properties:
        newName:
          type: string
          description: change the name of the HyperScale storage
        encryption:
          $ref: '#/components/schemas/Encryption'
        security:
          type: array
          description: ''
          items:
            $ref: '#/components/schemas/UpdateSecurityAssoc'
    HyperScaleStorageResp:
      title: HyperScaleStorageResp
      allOf:
        - $ref: '#/components/schemas/IdName'
        - type: object
          properties:
            copyId:
              type: integer
              format: int32
              description: Id of Storage Policy Copy
        - $ref: '#/components/schemas/GenericResp'
    RoleListResponse:
      type: object
      properties:
        roles:
          type: array
          description: List of all the existing roles
          items:
            $ref: '#/components/schemas/RoleSummary'
      description: List of roles
    RoleSummary:
      type: object
      description: Returns information on the roles.
      properties:
        id:
          type: integer
          format: int32
          description: id of the role.
        name:
          type: string
          description: name of the role.
        status:
          $ref: '#/components/schemas/RoleStatus'
        company:
          $ref: '#/components/schemas/IdName'
        commcell:
          $ref: '#/components/schemas/CommcellInfo'
        globalConfigInfo:
          $ref: '#/components/schemas/GlobalConfigInfo'
    Role:
      type: object
      title: ''
      properties:
        id:
          type: integer
          format: int32
          description: id of the role.
        name:
          type: string
          description: name of the role.
        permissions:
          type: array
          description: List of permissions associated with the role.
          items:
            $ref: '#/components/schemas/PermissionCategoryType'
        visibleToAll:
          type: boolean
          description: Returns if the role is visible to all.
        status:
          $ref: '#/components/schemas/RoleStatus'
        security:
          type: array
          description: Used to return the security association for the role
          items:
            $ref: '#/components/schemas/SecurityAssoc'
        globalConfigInfo:
          $ref: '#/components/schemas/GlobalConfigInfo'
      description: Used to return role details
    CreateRole:
      type: object
      properties:
        name:
          type: string
          description: Name of the new role
        permissionList:
          type: array
          description: Used to provide the list of permissions associated with the role.
          items:
            $ref: '#/components/schemas/Permissions'
        enabled:
          type: boolean
          description: 'Used to determine if the role is enabled or disabled. If not provided, role will be enabled by default.'
        visibleToAll:
          type: boolean
          description: 'Determines if the role is visible to everyone. if not provided, it will be set to false by default.'
        globalConfigInfo:
          $ref: '#/components/schemas/CreateGlobalConfigInfo'
      required:
        - name
        - permissionList
      description: Create a new role.
    UpdateRole:
      type: object
      properties:
        newName:
          x-terraform-mapping: name
          type: string
          description: new name of the role
        permissionList:
          type: array
          description: Used to update the list of permissions associated with the role.
          items:
            $ref: '#/components/schemas/Permissions'
        permissionOperationType:
          x-terraform-constant: OVERWRITE
          type: string
          description: Type of operation to be performed on the permissionList. Default is OVERWRITE.
          enum:
            - ADD
            - DELETE
            - OVERWRITE
        enabled:
          type: boolean
          description: Used to determine if the role is enabled or disabled.
        visibleToAll:
          type: boolean
          description: Determines if the role is visible to everyone.
        security:
          type: array
          description: Used to update the security association for the role
          items:
            $ref: '#/components/schemas/UpdateSecurityAssoc'
      title: ''
    Permissions:
      type: object
      x-terraform-ignore-child: name
      properties:
        permission:
          $ref: '#/components/schemas/IdName'
        category:
          $ref: '#/components/schemas/IdName'
      description: 'The id or name of the permission can be provided in order to associate it to the role. It can be provided with or without category id or name. If only category id or name is provided, entire list of permissions associated with this category can be associated to the role.'
    PermissionCategoryType:
      type: object
      properties:
        permission:
          $ref: '#/components/schemas/IdName'
        category:
          $ref: '#/components/schemas/IdName'
        type:
          type: string
          description: Type of permission assigned to the role.
      description: 'The id or name of the permission can be provided in order to associate it to the role. It can be provided with or without category id or name. If only category id or name is provided, entire list of permissions associated with this category can be associated to the role.'

    RoleStatus:
      type: string
      description: Specifies whether the role has been enabled or disabled.
      enum:
        - ENABLED
        - DISABLED
    PermissionListResp:
      type: object
      properties:
        permissions:
          type: array
          items:
            $ref: '#/components/schemas/CategoryListResp'
    CategoryListResp:
      type: object
      properties:
        category:
          $ref: '#/components/schemas/IdName'
        permissions:
          type: array
          description: Returns list of permissions associated with the category
          items:
            $ref: '#/components/schemas/IdName'
        categoryList:
          type: array
          description: 'Returns a list of categories and their permissions associated with the main category. eg: roles category is belongs to User Management category.'
          items:
            $ref: '#/components/schemas/CategoryList'
    CategoryList:
      type: object
      properties:
        category:
          $ref: '#/components/schemas/IdName'
        permissions:
          type: array
          items:
            $ref: '#/components/schemas/IdName'
    TapeListResp:
      type: object
      properties:
        tapeStorage:
          type: array
          description:  List of tapes
          items:
            $ref: '#/components/schemas/TapeSummary'
    LocationListResp:
      type: object
      properties:
        locations:
          type: array
          description:  List of locations
          items:
            $ref: '#/components/schemas/LocationsDetails'
    LocationsDetails:
      title: LocationsDetails
      type: object
      description: Details of locations
      properties:
        id:
          type: integer
          format: int32
          description: id of the location
        name:
          type: string
          description: name of the location
        isTransit:
          type: boolean
          description:  Tells if this is a transit location
    TapeMediaDetails:
      type: object
      properties:
        totalMedia:
          type: integer
          format: int32
          description:  number of media.
        spareMedia:
          type: integer
          format: int32
          description:  number of spare media.
        cleaningMedia:
          type: integer
          format: int32
          description: number of cleaned media.
        agedMedia:
          type: integer
          format: int32
          description: number of aged media.
        assignedMedia:
          type: integer
          format: int32
          description:  number of assigned media.
        vaultTrackerPolicies:
          type: array
          description:  list of VaultTrackPolicies.
          items:
            $ref: '#/components/schemas/VaultTrackerPolicies'
    TapeMediaOperationsReq:
      title: TapeMediaOperationsReq
      type: object
      description: Request body to perform tape media operations
      properties:
        mediaTypeId:
          type: integer
          format: int32
          default: 0
          description: 'MediaType list must be fetched from GET V4/Storage/Tape/{libraryId}/MediaType'
        spareGroupId:
          type: integer
          format: int32
          default: 0
          description: 'SpareGroup list must be fetched from GET V4/Storage/Tape/{libraryId}/MediaType'
        destSpareGroupId:
          type: integer
          format: int32
          default: 0
          description: 'In case of MOVE_MEDIA, this field should be set to specify the destination spare group'
        slotList:
          type: array
          items:
            type: integer
            format: int32
        operationType:
          $ref: '#/components/schemas/TapeMediaOperationType'
        mediaList:
          type: array
          description: 'List of Media Ids for which operation needs to performed. NOTE : In case of QUICK_ERASE_SELECTED_MEDIA and FULL_ERASE_SELECTED_MEDIA single mediaId should be sent.'
          items:
            type: integer
            format: int32
        UpdateBarcodeOpType:
          $ref: '#/components/schemas/UpdateBarcodeOpType'
        barcode:
          type: string
          description: 'In case of REPLACE_BARCODE, media barcode is replaced with barcode sent. In other cases of UpdateBarcodeOpType, barcode sent is added or removed according to the type specified. For instance, in case of ADD_SUFFIX, the barcode sent will be appended to the end of barcodes of all the medias sent in request.'
    TapeMediaOperationType:
      type: string
      title: TapeMediaOperationType
      description: Tape media operation type value
      enum:
        - DISCOVER_MEDIA
        - MARK_MEDIA_GOOD
        - MARK_MEDIA_BAD
        - MARK_MEDIA_FULL
        - MARK_MEDIA_ERASABLE
        - MARK_MEDIA_APPENDABLE
        - MARK_MEDIA_REUSABLE
        - PREVENT_MEDIA_REUSE
        - ALLOW_MEDIA_REUSE
        - QUICK_ERASE_SELECTED_MEDIA
        - FULL_ERASE_SELECTED_MEDIA
        - DELETE_MEDIA
        - DELETE_CONTENTS
        - UPDATE_BARCODE
        - MOVE_MEDIA
    UpdateBarcodeOpType:
      type: string
      title: UpdateBarcodeOpType
      enum:
        - REPLACE_BARCODE
        - ADD_SUFFIX
        - ADD_PREFIX
        - REMOVE_SUFFIX
        - REMOVE_PREFIX
      description: 'Type of Barcode update being performed. NOTE : If Barcode update is being performed for more than one media, REPLACE_BARCODE is not supported as it will result in duplicate barcodes.'
    DiscoverMediaInfoResp:
      title: DiscoverMediaInfoResp
      type: object
      description: Response structure to fetch details for performing Discover media operation
      properties:
        mediaTypesList:
          type: array
          items:
            $ref: '#/components/schemas/MediaTypeDetails'
        spareGroupsList:
          type: array
          items:
            $ref: '#/components/schemas/SpareGroupDetails'
    packageName:
      description: Name of the package
      enum:
        - CVS3Service
    MediaAgentDetailsForPlan:
      title: MediaAgentDetailsForPlan
      type: object
      description: Media agent details associated to a Plan
      properties:
        id:
          type: integer
          description: Id of the Media agent
          format: int32
        name:
          type: string
          description: Name of the Media agent
        isPackageInstalled:
          type: boolean
          description: Indicates if packageName sent in query parameter is installed on the Media agent
        regionName:
          type: string
          description: Name of the region where Media agent belongs to within the Plan
    AssociatedMAsForPlanResp:
      title: AssociatedMAsForPlanResp
      type: object
      properties:
        mediaAgentsList:
          type: array
          items:
            $ref: '#/components/schemas/MediaAgentDetailsForPlan'
      description: Response structure to fetch list of associated media agents for a plan
    SpareGroupDetails:
      title: SpareGroupDetails
      type: object
      description: Details of a particular Spare Group
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        typeId:
          type: integer
          format: int32
    MediaTypeDetails:
      title: MediaTypeDetails
      type: object
      description: Details of a particular Media Type
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        spareGroupTypeId:
          type: integer
          format: int32
    GetSpareGroupListResp:
      title: GetSpareGroupListResp
      type: object
      description: Spare Group details for a Storage
      properties:
        spareGroupDetailsList:
          type: array
          items:
            $ref: '#/components/schemas/SpareGroupDetails'
    VaultTrackerPolicies:
      allOf:
        - $ref: '#/components/schemas/IdName'
        - type: object
          properties:
            online:
              type: string
              description:  Tells if VaultTrackerPolicies is enabled or not.
            destination:
              $ref: '#/components/schemas/destinationLocation'
    destinationLocation:
      type: object
      properties:
        location:
          $ref: '#/components/schemas/location'
        library:
          $ref: '#/components/schemas/library'
        shelf:
          $ref: '#/components/schemas/shelfDetails'
    library:
      allOf:
        - $ref: '#/components/schemas/IdName'
        - type: object
          properties:
            type:
              type: integer
              format: int32
              description:  library type.
    shelfDetails:
      allOf:
        - $ref: '#/components/schemas/IdName'
        - type: object
          properties:
            type:
              type: integer
              format: int32
              description:  shelf type.
    location:
      allOf:
        - $ref: '#/components/schemas/IdName'
        - type: object
          properties:
            type:
              type: integer
              format: int32
              description:  location type.
    TapeDetails:
      allOf:
        - $ref: '#/components/schemas/IdName'
        - type: object
          properties:
            manufacturer:
              type: string
              description:  library manufacturer.
            model:
              type: string
              description:  library model.
            firmwareRevision:
              type: string
              description:  library firmware revision.
            barcodeReader:
              type: boolean
              description:  library bar code.
            serialNumber:
              type: string
              description:  library serial number.
            libraryType:
              type: integer
              format: int32
              description: library type.
            status:
              type: object
              properties:
              $ref: '#/components/schemas/Status'
            drives:
              type: array
              description: list of drives.
              items:
                $ref: '#/components/schemas/DriveSummary'
            storage:
              type: array
              description: Returns list of stroage.
              items:
                $ref: '#/components/schemas/StroagePoolList'
    Status:
      type: object
      properties:
        enable:
          type: boolean
          description: Tells if library is enabled or not
        maintenanceMode:
          type: boolean
          description:  library maintenance mode.
        offlineReason:
          type: string
          description:  library offline reason.

    DriveSummary:
      allOf:
        - $ref: '#/components/schemas/IdName'
        - type: object
          properties:
            type:
              type: string
              description:  drive type.
            online:
              type: string
              description:  status of a drive.
            status:
              type: string
              description:  access of a drive.
            barCode:
              type: string
              description:  barCode of a drive.
            mountStatus:
              type: string
              enum:
                - MEDIA_MOUNTED
                - MEDIA_IS_BEING_MOUNTED
                - MEDIA_IS_BEING_UNMOUNTED
                - MEDIA_IS_UNUSABLE
              description:  mountStatus of a drive.
            activeMediaAgent:
              type: string
              description: media Agent of the drive.
            driveAttributes:
              type: integer
              format: int32
              description:  if  the drive attribute is 1 then the drive is cleanable.

    StroagePoolList:
      allOf:
        - $ref: '#/components/schemas/IdName'
        - type: object
          properties:
            online:
              type: string
              description:  stoagePool status.
            type:
              type: string
              description:  stoagePool type.

    TapeSummary:
      type: object
      description: Returns the list of tapes.
      title: ''
      properties:
        id:
          type: integer
          format: int32
          description: Returns tape id.
        name:
          type: string
          description: Returns tape name.
        storageType:
          type: string
          enum:
            - INVALID
            - TAPE
            - OPTICAL
            - MAGNETIC
            - STANDALONE_TAPE
            - STANDALONE_OPTICAL
            - DECONFIGURED_LIBRARY
            - EXTERNAL_PNP_LIBRARY
          description: The type of tapeStorage
        status:
          type: string
          description: returns status of the tape ie if it is online or offline.
        manufacturer:
          type: string
          description: Returns the manufacturer of the tape.
        model:
          type: string
          description: Returns the tape model.
        company:
          $ref: '#/components/schemas/IdName'
        commcell:
          $ref: '#/components/schemas/IdName'
    DrivePoolDetailsResp:
      allOf:
        - $ref: '#/components/schemas/IdName'
        - type: object
          properties:
            manufacturer:
              type: string
              description:  drive manufacturer.
            model:
              type: string
              description:  drive model.
            firmwareRevision:
              type: string
              description:  drive firmwareRevision.
            serialNumber:
              type: string
              description:  drive serial Number.
            hoursUsedSinceLastClean:
              type: integer
              format: int32
              description:  drive hours used from last clean.
            status:
              type: object
              properties:
              $ref: '#/components/schemas/DriveStatus'
    DriveStatus:
      type: object
      properties:
        enable:
          type: boolean
          description:  drive is enabled or not.
        maintenanceMode:
          type: boolean
          description:   drive maintenance mode
        markForReadOnly:
          type: boolean
          description:  drive mark for read only.
        offlineReason:
          type: string
          description:  drive offline reason.
    DistributedSystemsListResp:
      type: object
      description: Used to return a list of distributed systems.
      title: ''
      properties:
        distributedSystems:
          type: array
          description: This returns the distributed systems list.
          items:
            $ref: '#/components/schemas/DistributedSystemSummary'
    DistributedSystemSummary:
      type: object
      description: This returns the distributed system summary.
      title: ''
      properties:
        id:
          type: integer
          format: int32
          description: This gives the id of the distributed system.
        name:
          type: string
          description: This give the name of the distributed system.
        components:
          type: array
          description: Provides a list of components of a distributed system.
          items:
            $ref: '#/components/schemas/DistributedSystemComponent'
    DistributedSystemComponent:
      type: object
      properties:
        applicationId:
          type: integer
          format: int32
          description: Application id of the distributed system component
    BigDataAppListResp:
      type: object
      description: Used to return a list of big data apps.
      title: ''
      properties:
        bigDataAppCount:
          type: integer
          format: int32
          description: This returns the total number of big data apps.
        bigDataApps:
          type: array
          description: This returns the big data app list.
          items:
            $ref: '#/components/schemas/BigDataAppSummary'
    BigDataAppSummary:
      type: object
      description: This returns the big data app summary.
      title: ''
      properties:
        id:
          type: integer
          format: int32
          description: This gives the id of the big data app.
        name:
          type: string
          description: This give the name of the big data app.
        displayName:
          type: string
          description: This gives the name of the big data app as it shown on the admin console or GUI.
        GUID:
          type: string
          description: This returns the Globally Unique Identifier of the big data app.
        configured:
          type: boolean
          description: This returns if the big data app is configured or deconfigured.
        applicationId:
          type: integer
          format: int32
          description: This gives the application id of the big data app.
        clusterType:
          type: string
          description: 'This returns the clusterType of the big data app'
        lastBackup:
          $ref: '#/components/schemas/LastBackupJobInfo'
        applicationSize:
          type: integer
          format: int32
          description: Provides the application size of the big data app. It is provided in bytes.
        plan:
          $ref: '#/components/schemas/IdName'
        instance:
          $ref: '#/components/schemas/IdName'
        SLA:
          $ref: '#/components/schemas/SLADetails'
        company:
          $ref: '#/components/schemas/IdName'
    FileServerListResp:
      type: object
      description: Used to return a list of file servers.
      title: ''
      properties:
        fileServerCount:
          type: integer
          format: int32
          description: This returns the total number of file servers.
        fileServers:
          type: array
          description: This returns the file server list.
          items:
            $ref: '#/components/schemas/FileServerSummary'
    FileServerSummary:
      type: object
      description: This returns the file server summary.
      title: ''
      properties:
        id:
          type: integer
          format: int32
          description: This gives the id of the file server.
        name:
          type: string
          description: This give the name of the file server.
        displayName:
          type: string
          description: This gives the name of the file server as it shown on the admin console or GUI.
        GUID:
          type: string
          description: This returns the Globally Unique Identifier of the file server.
        configured:
          type: boolean
          description: This returns if the file server is configured or deconfigured.
        type:
          type: string
          description: 'This returns the type of the file server. Example: Windows, Qumulo'
        commcellName:
          type: string
          nullable: true
          description: This returns the CommCell the file server is connected to.
        lastBackup:
          $ref: '#/components/schemas/LastBackupJobInfoWithLastSuccessfulBackup'
        applicationSize:
          type: integer
          format: int32
          description: Provides the application size of the file server. It is provided in bytes.
        plan:
          $ref: '#/components/schemas/IdName'
        SLA:
          $ref: '#/components/schemas/SLADetailsWithReasonEntity'
        status:
          $ref: '#/components/schemas/FileServerStatus'
        company:
          $ref: '#/components/schemas/IdName'
        tags:
          type: array
          description: Tags associated to file server
          items:
            $ref: '#/components/schemas/IdNameValue'
    SLADetails:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/SLAStatus'
        reasonList:
          type: array
          description: Provides a reason on why the SLA might not be met.
          items:
            $ref: '#/components/schemas/ReasonDetails'
    SLADetailsWithReasonEntity:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/SLAStatus'
        reason:
          type: string
          description: Provides a reason on why the SLA might not be met.
        reasonList:
          type: array
          description: Provides a reason on why the SLA might not be met.
          items:
            $ref: '#/components/schemas/ReasonDetails'
      title: ''
    ReasonDetails:
      type: object
      properties:
        mightMissReason:
          type: string
          description: Gives the reason as to why the SLA might not be met.
        subclient:
          $ref: '#/components/schemas/IdName'
    FileServerStatus:
      enum:
        - OFFLINE
        - ONLINE
        - UNKNOWN
        - NOT_APPLICABLE
      type: string
      format: ''
      description: Gives the status of the file server.
    SLAStatus:
      type: string
      enum:
        - MET_SLA
        - MISSED_SLA
        - EXCLUDED_SLA
        - YET_TO_BE_PROTECTED
        - MIGHT_MISS_SLA
        - UNKNOWN
      description: Provides the SLA status.
    LastBackupJobInfo:
      type: object
      properties:
        jobId:
          type: integer
          format: int32
          description: Returns the job id of the last backup job performed.
        status:
          $ref: '#/components/schemas/JobStatus'
        time:
          type: integer
          format: int64
          description: Shows the time when the last back up job was carried out. The time is provided in unix time format.
        failureReason:
          type: string
          description: 'Gives the reason for the last backup job failing, if the last backup job fails.'
    LastBackupJobInfoWithLastSuccessfulBackup:
      type: object
      properties:
        jobId:
          type: integer
          format: int32
          description: Returns the job id of the last backup job performed.
        status:
          $ref: '#/components/schemas/JobStatus'
        time:
          type: integer
          format: int64
          description: Shows the time when the last back up job was carried out. The time is provided in unix time format.
        failureReason:
          type: string
          description: 'Gives the reason for the last backup job failing, if the last backup job fails.'
        lastSuccessfulBackup:
          type: integer
          format: int32
    JobStatus:
      enum:
        - NEVER_BACKED_UP
        - COMPLETED
        - FAILED
        - COMPLETED_WITH_ERRORS
        - KILLED
        - SUSPENDED
        - INTERRUPTED
        - ANY_STATUS
        - SKIPPED
        - FAILED_TO_START
        - SYNCHRONIZED
        - NOT_SYNCHRONIZED
        - NOT_ATTEMPTED
        - STARTED
        - COMPLETED_WITH_WARNINGS
        - SYSTEM_FAILED
        - COMMITTED
      type: string
      format: ''
      description: Status of the last backup job performed.
    ServerGroupAssociation:
      enum:
        - AUTOMATIC
        - VM
        - MANUAL
      type: string
      description: Type of server group association.
    InstanceListResp:
      type: object
      properties:
        instances:
          type: array
          items:
            $ref: '#/components/schemas/InstanceSummary'
      description: Gives the list of instances.
    InstanceSummary:
      type: object
      description: Gives the summary of each instance.
      title: ''
      properties:
        id:
          type: integer
          format: int32
          description: Gives the id of the instance.
        name:
          type: string
          description: Gives the name of the instance.
        server:
          type: string
          description: Gives the server to which the instance belongs to.
        client:
          $ref: '#/components/schemas/IdName'
        vendor:
          $ref: '#/components/schemas/Vendors'
        databaseEngine:
          $ref: '#/components/schemas/DatabaseEngine'
        status:
          $ref: '#/components/schemas/InstanceStatus'
        notReadyReason:
          type: string
          description: 'If the instance isn''t ready, this provides the reason as to why the instance isn''t ready.'
        lastBackup:
          $ref: '#/components/schemas/LastBackupJobInfo'
        applicationSize:
          type: integer
          format: int32
          description: Gives the application size of the instance. It is returned in bytes.
        plan:
          $ref: '#/components/schemas/IdName'
        SLAStatus:
          type: string
          enum:
            - MET_SLA
            - MISSED_SLA
            - EXCLUDED_SLA
            - YET_TO_BE_PROTECTED
            - MIGHT_MISS_SLA
            - UNKNOWN
        company:
          $ref: '#/components/schemas/IdName'
        commcell:
          $ref: '#/components/schemas/CommcellInfo'
    Vendors:
      enum:
        - NOT_APPLICABLE
        - AMAZON
        - MICROSOFT_AZURE
        - GOOGLE_CLOUD
        - ALIBABA_CLOUD
      type: string
      description: The cloud vendor for the instance.
    InstanceStatus:
      enum:
        - READY
        - NOT_READY
      type: string
      description: 'The status of the instance. If the instance isn''t ready, the reason is also provided.'
    InstantClonesListResp:
      type: object
      properties:
        instantClones:
          type: array
          items:
            $ref: '#/components/schemas/InstantClonesSummary'
    InstantClonesSummary:
      type: object
      description: Source Client - The server where the database was backed up from. Source instance - The backed up database instance. Mounted host - The server where the DB snapshot has been mounted to bring up the clone. Target instance - The DB instance name which was clone target.
      properties:
        cloneJobId:
          type: integer
          format: int32
          description: Job id for clone operation
        sqlRecoveryId:
          type: integer
          format: int32
          description: Id of sql recovery point for SQL Agent
        sourceClient:
          $ref: '#/components/schemas/IdName'
        sourceInstance:
          $ref: '#/components/schemas/IdName'
        mountedHost:
          $ref: '#/components/schemas/IdName'
        targetInstance:
          $ref: '#/components/schemas/IdName'
        databaseAsOfTime:
          type: integer
          format: int32
          description: The Point in time up to which the database has been recovered using the backups. The time is provided in unix time format.
        creationTime:
          type: integer
          format: int32
          description: The time when the database clone was created. The time is provided in unix time format.
        expirationDate:
          type: integer
          format: int32
          description: The time till which the clone is kept active and will get cleaned up automatically after that. The time is provided in unix time format.
        status:
          type: string
          description: Status of instant clone
          enum:
            - CREATED
            - DELETING
            - EXPIRED
        commcell:
          $ref: '#/components/schemas/CommcellInfo'
    DatabaseListResp:
      type: object
      properties:
        databases:
          type: array
          description: List of databases
          items:
            $ref: '#/components/schemas/DatabaseSummary'
    DatabaseSummary:
      type: object
      description: Returns the database summary.
      properties:
        applicationId:
          type: integer
          format: int32
          description: Application Id of database
        name:
          type: string
          description: This gives the name of the database.
        instance:
          $ref: '#/components/schemas/IdName'
        server:
          $ref: '#/components/schemas/IdName'
        vendor:
          $ref: '#/components/schemas/Vendors'
        databaseEngine:
          $ref: '#/components/schemas/DatabaseEngine'
        recoveryModel:
          type: string
          description: 'SQL recovery model is a database configuration option that determines the type of backup that one could perform, and provides the ability to restore the data or recover it from a failure.'
          enum:
            - FULL
            - SIMPLE
        SLAStatus:
          type: string
          description: SLA status for last backup of database
          enum:
            - MET
            - MISSED
            - EXCLUDED
        lastBackupSize:
          type: integer
          format: int32
          description: Size of last backup of database in bytes
        lastBackupTime:
          type: integer
          format: int32
          description: Time of last backup of database. It is given in UNIX time.
        plan:
          $ref: '#/components/schemas/IdName'
        company:
          $ref: '#/components/schemas/IdName'
        commcell:
          $ref: '#/components/schemas/CommcellInfo'
    VirtualMachineListResp:
      type: object
      properties:
        virtualMachines:
          type: array
          items:
            $ref: '#/components/schemas/VirtualMachineSummary'
        virtualMachinesCount:
          type: integer
          format: int32
    ApplicationListResp:
      type: object
      properties:
        applications:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationSummary'
        applicationsCount:
          type: integer
          format: int32
    VirtualMachineSummary:
      type: object
      description: Gives the summary of the virtual machines.
      properties:
        name:
          type: string
          description: The display name of the VM.
        vendor:
          type: string
          description: The hypervisor where the VM is located.
          enum:
            - NONE
            - VMW
            - MICROSOFT
            - XEN_SERVER
            - AMAZON
            - AZURE
            - REDHAT
            - AZURE_V2
            - SCVMM
            - NUTANIX
            - ORACLE_VM
            - DOCKER
            - OPENSTACK
            - ORACLE_CLOUD
            - FUSIONCOMPUTE
            - VCLOUD
            - GOOGLE_CLOUD
            - AZURE_STACK
            - ALIBABA_CLOUD
            - ORACLE_CLOUD_INFRASTRUCTURE
            - KUBERNETES
            - REDHAT_OPENSHIFT
            - MONGODB_ATLAS
            - PROXMOX
            - KUBERNETES_AKS
            - AZURE_STACK_HCI
        hypervisor:
          $ref: '#/components/schemas/IdName'
        vmGroup:
          $ref: '#/components/schemas/IdName'
        os:
          type: string
          description: The operating system version for the VM or instance.
        host:
          type: string
          description: The host name for the computer where the source virtual machine or instance resides.
        vmSize:
          type: integer
          description: The total space allocated(in bytes) for the virtual machine.
          format: int32
        status:
          type: string
          description: 'The status of the backup for the VM, instance, or  container.'
          enum:
            - PROTECTED
            - NOT_PROTECTED
            - PENDING
            - BACKED_UP_WITH_ERROR
            - DISCOVERED
        UUID:
          type: string
          description: The globally unique identifier for the VM client.
        commcellName:
          type: string
          description: Name of the commcell the VM belongs
        lastBackup:
          $ref: '#/components/schemas/lastBackup'
        applicationSize:
          type: integer
          description: The amount of data being protected for the VM client(in bytes)
          format: int32
        plan:
          $ref: '#/components/schemas/PlanIdNameType'
        SLA:
          $ref: '#/components/schemas/VMSla'
        company:
          $ref: '#/components/schemas/IdName'
        tags:
          type: array
          items:
            $ref: '#/components/schemas/IdNameValue'
        commcell:
          $ref: '#/components/schemas/CommcellInfo'
    ApplicationSummary:
      type: object
      description: Gives the summary of the virtual machines.
      properties:
        name:
          type: string
          description: The display name of the VM.
        vendor:
          type: string
          description: The hypervisor where the VM is located.
          enum:
            - KUBERNETES
        cluster:
          $ref: '#/components/schemas/IdName'
        applicationGroup:
          $ref: '#/components/schemas/IdName'
        os:
          type: string
          description: The operating system version for the VM or instance.
        host:
          type: string
          description: The host name for the computer where the source virtual machine or instance resides.
        applicationSize:
          type: integer
          description: The total space allocated(in bytes) for the virtual machine.
          format: int32
        status:
          type: string
          description: 'The status of the backup for the VM, instance, or  container.'
          enum:
            - PROTECTED
            - NOT_PROTECTED
            - PENDING
            - BACKED_UP_WITH_ERROR
            - DISCOVERED
        UUID:
          type: string
          description: The globally unique identifier for the VM client.
        commcellName:
          type: string
          description: Name of the commcell the VM belongs
        lastBackup:
          $ref: '#/components/schemas/lastBackup'
        K8applicationSize:
          type: integer
          description: The amount of data being protected for the VM client(in bytes)
          format: int32
        plan:
          $ref: '#/components/schemas/IdName'
        SLA:
          $ref: '#/components/schemas/VMSla'
        company:
          $ref: '#/components/schemas/IdName'
    vmEntitySummary:
      title: vmEntitySummary
      type: object
      description: Summary of VMEntity in Virtual Machine summary
      properties:
        instance:
          $ref: '#/components/schemas/IdName'
        backupset:
          $ref: '#/components/schemas/IdName'
        vmGroup:
          $ref: '#/components/schemas/IdName'
    lastBackup:
      title: lastBackup
      type: object
      description: last backup job details for the client
      properties:
        time:
          type: integer
          format: int32
          description: UNIX time for the last backup job run
        jobId:
          type: integer
          format: int32
          description: Job id of the last backup job
        status:
          $ref: '#/components/schemas/JobStatus'
        lastSuccessfulBackupTime:
          type: integer
          format: int32
          description: UNIX time for the last successful backup job run
        failureReason:
          type: string
          description: Failure reason for the last backup job
    VMSla:
      title: VMSLA
      type: object
      properties:
        status:
          $ref: '#/components/schemas/SLAStatus'
        reason:
          type: string
          description: The reason for the current SLA status of the VM client
    DatabaseEngine:
      type: string
      description: 'Name of database engine which is the underlying software component that a database management system uses to create, read, update and delete data from the database.'
      enum:
        - AURORA_MYSQL
        - DB2
        - DB2_MULTINODE
        - DOCUMENT_DB
        - DYNAMO_DB
        - INFORMIX
        - MARIA_DB
        - MYSQL
        - ORACLE
        - ORACLE_RAC
        - POSTGRESQL
        - RDS
        - REDSHIFT
        - SAP_FOR_ORACLE
        - SAP_HANA
        - SQL_SERVER
        - SYBASE
    ReplicationType:
      type: string
      description: The field specifies the type of replication that is to be performed
      default: Periodic
      enum:
        - Periodic
        - Continuous
    DestinationVendor:
      type: string
      description: Vendor used as destination for replication.
      enum:
        - Amazon
        - Azure
        - HyperV
        - VMware
    CreateReplicationGroup:
      type: object
      description: SourceHypervisor is the hypervisor that has the VM's to be backed up. This should be already configured. Recovery target contains the replication options that will be applied to the selected VM's. This should be already configured. ID is mandatory for sourceHypervisor and recovery target. Provide both the id and the name for the storage and the vms.
      properties:
        name:
          type: string
          description: The name of the replication group being created
        sourceHypervisor:
          $ref: '#/components/schemas/IdName'
        vms:
          type: array
          description: A list of name and GUID of all the virtual machines that have to be replicated
          items:
            $ref: '#/components/schemas/NameGUID'
        frequencyInMinutes:
          type: integer
          format: int32
          description: The field denotes the frequency of replication.
          default: 240
        recoveryTarget:
          $ref: '#/components/schemas/IdName'
        storage:
          type: array
          description: 'The primary and an optional secondary storage that will be used for storing the source VM data for replication. The secondary storage if provided, will be the default source for replication.'
          items:
            $ref: '#/components/schemas/StorageCopyCreate'
      required:
        - name
        - sourceHypervisor
        - vms
        - recoveryTarget
        - storage
    CreateReplicationGroupAmazon:
      allOf:
        - $ref: '#/components/schemas/CreateReplicationGroup'
        - type: object
          description: Create a replication group with Amazon as the destination vendor. SourceHypervisor is the hypervisor that has the VM's to be backed up. Recovery target contains the replication options that will be applied to the selected VM's. ID is mandatory for sourceHypervisor and recovery target. Provide both the id and the name for the storage and the vms.
          properties:
            destVendor:
              type: string
              enum:
                - Amazon
            advancedOptions:
              $ref: '#/components/schemas/ReplicationGroupAdvOptionsAmazon'
            overrideReplicationOptions:
              type: array
              description: 'The replication options per instance, if provided, will override the replication options from the target. For the instances not in this list, the options are applied from the target.'
              items:
                $ref: '#/components/schemas/OverrideReplicationOptionsAmazonCreate'
          required:
            - destVendor
      description: Create a Virtualization replication group with the destination as Amazon vendor.
    CreateReplicationGroupAzure:
      allOf:
        - $ref: '#/components/schemas/CreateReplicationGroup'
        - type: object
          description: Create a replication group with Azure as the destination vendor. SourceHypervisor is the hypervisor that has the VM's to be backed up. Recovery target contains the replication options that will be applied to the selected VM's. ID is mandatory for sourceHypervisor and recovery target. Provide both the id and the name for the storage and the vms.
          properties:
            destVendor:
              type: string
              enum:
                - Azure
            advancedOptions:
              $ref: '#/components/schemas/ReplicationGroupAdvOptionsAzure'
            overrideReplicationOptions:
              type: array
              description: 'The replication options per instance, if provided, will override the replication options from the target. For the instances not in this list, the options are applied from the target.'
              items:
                $ref: '#/components/schemas/OverrideReplicationOptionsAzureCreate'
          required:
            - destVendor
      description: Create a Virtualization replication group with the destination as Azure vendor.
    CreateReplicationGroupHyperV:
      allOf:
        - $ref: '#/components/schemas/CreateReplicationGroup'
        - type: object
          description: Create a replication group with HyperV as the destination vendor. SourceHypervisor is the hypervisor that has the VM's to be backed up. Recovery target contains the replication options that will be applied to the selected VM's. ID is mandatory for sourceHypervisor and recovery target. Provide both the id and the name for the storage and the vms.
          properties:
            destVendor:
              type: string
              enum:
                - HyperV
            advancedOptions:
              $ref: '#/components/schemas/ReplicationGroupAdvOptionsHyperV'
            overrideReplicationOptions:
              type: array
              description: 'The replication options per instance, if provided, will override the replication options from the target. For the instances not in this list, the options are applied from the target.'
              items:
                $ref: '#/components/schemas/OverrideReplicationOptionsHyperVCreate'
          required:
            - destVendor
      description: Create a Virtualization replication group with the destination as HyperV vendor
    CreateReplicationGroupVMWare:
      allOf:
        - $ref: '#/components/schemas/CreateReplicationGroup'
        - type: object
          description: Create a replication group with VMWare as the destination vendor. SourceHypervisor is the hypervisor that has the VM's to be backed up. Recovery target contains the replication options that will be applied to the selected VM's. ID is mandatory for sourceHypervisor and recovery target. Provide both the id and the name for the storage and the vms.
          properties:
            destVendor:
              type: string
              enum:
                - VMware
            replicationType:
              $ref: '#/components/schemas/ReplicationType'
            advancedOptions:
              $ref: '#/components/schemas/ReplicationGroupAdvOptionsVMWareCreate'
            snapEngine:
              $ref: '#/components/schemas/IdName'
            recoveryOptions:
              $ref: '#/components/schemas/RecoveryOptionsCreate'
            overrideReplicationOptions:
              type: array
              description: 'The replication options per instance, if provided, will override the replication options from the target. For the instances not in this list, the options are applied from the target.'
              items:
                $ref: '#/components/schemas/OverrideReplicationOptionsVMWareCreate'
          required:
            - destVendor
      description: Create a Virtualization replication group with the destination as VMWare vendor. Snapengine and advanced options are applicable only for Periodic replication type. Recovery options is applicable only for Continuous replication type. Only one storage is applicable Continuous replication type.
      x-examples:
        VMWare Periodic:
          name: string
          sourceHypervisor:
            id: 0
            name: string
          vms:
            - GUID: string
              name: string
          frequencyInMinutes: 240
          recoveryTarget:
            id: 0
            name: string
          storage:
            - storagePool:
                id: 0
                name: string
              isDedupe: true
          destVendor: VMware
          replicationType: Periodic
          advancedOptions:
            validateDestinationVM: true
            diskProvisioning: ORIGINAL
            transportMode: AUTO
            unconditionalOverwrite: false
            SnapshotsToRetain: 0
          snapEngine:
            id: 0
            name: string
          overrideReplicationOptions:
            - sourceVM:
                GUID: string
                name: string
              vmDisplayName: string
              destinationHost: string
              datastore: string
              resourcePool: string
              vmFolder: string
              networkSettings:
                - source: string
                  destination: string
              ipAddressSettings:
                - sourceIP: string
                  sourceSubnetMask: string
                  sourceDefaultGateway: string
                  useDhcp: false
                  destinationIP: string
                  destinationSubnetMask: string
                  destinationdefaultGateway: string
                  destinationPreferredDNS: string
                  destinationAlternateDNS: string
                  destinationPreferredWINS: string
                  destinationAlternateWINS: string
                  hostname: string
        VMWare Continuous:
          name: string
          sourceHypervisor:
            id: 0
            name: string
          vms:
            - GUID: string
              name: string
          recoveryTarget:
            id: 0
            name: string
          storage:
            - storagePool:
                id: 0
                name: string
              isDedupe: true
          destVendor: VMware
          replicationType: Continuous
          recoveryOptions:
            recoveryType: POINT_IN_TIME_RECOVERY
            recoveryPointStore:
              id: 0
              name: string
            recoveryPointInterval:
              crashConsistentRpInterval: 300
              applicationConsistentRpInterval: 0
            recoveryPointRetention:
              retainRecoveryPointsFor: 604800
              mergeRecoveryPoints: true
              mergeRecoveryPointsOlderThan: 172800
              recoveryPointIntervalAtEndofRetention: 21600
              rpStoreOfflineFor: 0
              pruneAndMergeDuringOffPeak: false
          overrideReplicationOptions:
            - sourceVM:
                GUID: string
                name: string
              vmDisplayName: string
              destinationHost: string
              datastore: string
              resourcePool: string
              vmFolder: string
              networkSettings:
                - source: string
                  destination: string
              ipAddressSettings:
                - sourceIP: string
                  sourceSubnetMask: string
                  sourceDefaultGateway: string
                  useDhcp: false
                  destinationIP: string
                  destinationSubnetMask: string
                  destinationdefaultGateway: string
                  destinationPreferredDNS: string
                  destinationAlternateDNS: string
                  destinationPreferredWINS: string
                  destinationAlternateWINS: string
                  hostname: string
    ReplicationGroupAdvOptionsVMWareCreate:
      title: ReplicationGroupAdvOptionsVMwareCreate
      type: object
      description: Advanced options for VMWare replication group
      properties:
        validateDestinationVM:
          type: boolean
          description: Validates that the destination VM is bootable by powering it on and then powering off
          default: true
        diskProvisioning:
          type: string
          description: The disk provisioning type for the destination VM.
          enum:
            - ORIGINAL
            - THICK LAZY ZERO
            - THIN
            - THICK EAGER ZERO
          default: ORIGINAL
        transportMode:
          type: string
          description: The transport mode based on environment.
          enum:
            - AUTO
            - SAN
            - HOT_ADD
            - NAS
            - NBD_SSL
            - NBD
          default: AUTO
        unconditionalOverwrite:
          type: boolean
          description: This will replace the instance at the destination if the instance with the same name already exists.
          default: false
        SnapshotsToRetain:
          type: integer
          format: int32
          description: Number of snapshots to retain on destination VM. This is only applicable if snap engine is provided
          default: 0
    ReplicationGroupAdvOptionsVMWare:
      title: ReplicationGroupAdvOptionsVMware
      type: object
      description: Advanced options for VMWare replication group
      properties:
        validateDestinationVM:
          type: boolean
          description: Validates that the destination VM is bootable by powering it on and then powering off
          default: true
        diskProvisioning:
          type: string
          description: Select the disk provisioning type for the destination VM. The values are case sensitive.
          enum:
            - Auto
            - Thick
            - Thin
            - ThickEagerZero
          default: Auto
        transportMode:
          type: string
          description: Choose transport mode based on environment. Values are case sensitive
          enum:
            - Auto
            - SAN
            - Hot_Add
            - NAS
            - NBD_SSL
            - NBD
          default: Auto
        unconditionalOverwrite:
          type: boolean
          description: Replace an existing virtual machine with the same name in the target location
          default: false
        SnapshotsToRetain:
          type: integer
          format: int32
          description: Number of snapshots to retain on destination VM
          default: 0
    ReplicationGroupAdvOptionsAmazon:
      title: ReplicationGroupAdvOptionsAmazon
      type: object
      description: Advanced options for Amazon replication group
      properties:
        validateDestinationVM:
          type: boolean
          description: Validates that the destination VM is bootable by powering it on and then powering off
          default: true
        unconditionalOverwrite:
          type: boolean
          description: This will replace the instance at the destination if the instance with the same name already exists.
          default: false
    ReplicationGroupAdvOptionsHyperV:
      title: ReplicationGroupAdvOptionsHyperV
      type: object
      description: Advanced options for HyperV replication group
      properties:
        validateDestinationVM:
          type: boolean
          description: Validates that the destination VM is bootable by powering it on and then powering off
          default: true
        unconditionalOverwrite:
          type: boolean
          description: This will replace the instance at the destination if the instance with the same name already exists.
          default: false
    ReplicationGroupAdvOptionsAzure:
      title: ReplicationGroupAdvOptionsAzure
      type: object
      description: Advanced options for Azure replication group
      properties:
        unconditionalOverwrite:
          type: boolean
          description: This will replace the instance at the destination if the instance with the same name already exists.
          default: false
        deployVmOnlyDuringfailover:
          type: boolean
          description: Select this option to deploy a VM only when a failover operation is requested
          default: true
    OverrideReplicationOptionsVMWareCreate:
      title: OverrideReplicationOptionsVMWare
      type: object
      description: Per VM Replication options for VMware. Provide both the name and the guid of the source VM.
      properties:
        sourceVM:
          $ref: '#/components/schemas/NameGUID'
        vmDisplayName:
          type: string
          description: Enter the display name for the destination VM
        destinationHost:
          type: string
          description: Name of host where the destination VM will reside
        datastore:
          type: string
          description: The datastore to be used for virtual machine disks
        resourcePool:
          type: string
          description: The resource pool that will be used on the destination VM
        vmFolder:
          type: string
          description: 'If the destination VM has to reside inside a folder, specify the name here'
        networkSettings:
          type: array
          description: Mapping between a source network and a destination network
          items:
            $ref: '#/components/schemas/NetworkSetting'
        ipAddressSettings:
          type: array
          description: A mapping of IP between the source and the destination VM with an option to configure either a dynamic or a static IP.
          items:
            $ref: '#/components/schemas/IpAddressSettingVMWareCreate'
      required:
        - sourceVM
        - vmDisplayName
        - destinationHost
        - datastore
        - resourcePool
    OverrideReplicationOptionsAmazonCreate:
      title: OverrideReplicationOptionsAmazon
      type: object
      description: Replication options for Amazon. sourceVM should contain the name and the guid of the machine that has to be overriden
      properties:
        sourceVM:
          $ref: '#/components/schemas/NameGUID'
        instanceName:
          type: string
          description: Display name for the destination instance
        regionName:
          type: string
          description: The name of the AWS region where the destination instance will reside
        availabilityZone:
          type: string
          description: The name of AWS zone where the destination instance will reside
        volumeType:
          type: string
          description: ID of the volume type that will be used on the destination instance. Default value is Auto
        encryptionKey:
          type: string
          description: The ID of the encryption key that will be used to encrypt the data of the desination instance. Default value is Auto
        network:
          $ref: '#/components/schemas/NetworkVPCSubnet'
        securityGroups:
          type: array
          description: The security group to be applied to the destination instance that acts as a virtual firewall. Default value is Auto
          items:
            $ref: '#/components/schemas/SecurityGroup'
        instanceType:
          type: string
          description: The available CPU cores and memory to be used on the destination instance. Default value is Auto
        guestCredentials:
          $ref: '#/components/schemas/GuestCredentialsCreate'
      required:
        - sourceVM
        - instanceName
        - regionName
        - availabilityZone
    OverrideReplicationOptionsAzureCreate:
      title: OverrideReplicationOptionsAzure
      type: object
      description: Replication options for Azure. Provide both of the name and the guid of the source VM and provide the id and the name of the security group
      properties:
        sourceVM:
          $ref: '#/components/schemas/NameGUID'
        vmDisplayName:
          type: string
          description: Display name of destination VM
        resourceGroup:
          type: string
          description: The resource group to be used for the destination VM
        region:
          type: string
          description: The name of the region where the destination VM will reside
        storageAccount:
          type: string
          description: The name of the storage account to be used on the destination VM
        vmSizeId:
          type: string
          description: The id of the vm size to be applied to the destination VM. Default value is Auto
        diskTypeId:
          type: string
          description: The id of the disk type to be used for the destination VM. Default value is Auto
        virtualNetwork:
          type: array
          description: The network to be used on the destination VM. Default value is Auto
          items:
            $ref: '#/components/schemas/NetworkSubnet'
        securityGroup:
          $ref: '#/components/schemas/SecurityGroup'
        createPublicIP:
          type: boolean
          description: Creates a public IP on the network
        restoreAsManagedVM:
          type: boolean
          description: Creates the destination as a managed VM
        privateIPaddress:
          type: string
          description: Private IP address of the network
        publicIPaddress:
          type: string
          description: Public IP address of the network
        publicIPaddressID:
          type: string
          description: Public IP address id of the network
      required:
        - sourceVM
        - vmDisplayName
        - resourceGroup
        - region
        - storageAccount
    OverrideReplicationOptionsHyperVCreate:
      title: OverrideReplicationOptionsHyperV
      type: object
      description: Replication options for HyperV. Provide both the name and the guid of the source VM.
      properties:
        sourceVM:
          $ref: '#/components/schemas/NameGUID'
        vmDisplayName:
          type: string
          description: Display name for the destination VM
        registerVMWithFailoverCluster:
          type: boolean
          description: Register replicated virtual machines to the failover cluster for the destination client.
        networkName:
          type: string
          description: The name of the network of destination VM
      required:
        - sourceVM
        - vmDisplayName
        - networkName
    StorageCopyCreate:
      title: StorageCopy
      type: object
      description: 'Copy to be configured for a replication group. The first copy from the list is regarded as the Primary copy. Secondary copy, if provided, is used for replication. Provide both the id and the name of the storage pool'
      properties:
        storagePool:
          $ref: '#/components/schemas/IdName'
        isDedupe:
          type: boolean
          description: Denotes if this is a deduplication copy
      required:
        - storagePool
        - isDedupe
    ReplicationGroupList:
      title: ReplicationGroupList
      type: object
      description: List of replication groups. Source contains the replication source details. Destination contains the target of the replication
      properties:
        id:
          type: integer
          format: int32
          description: id of the replication group. Either taskId or id is available in the list
        taskId:
          type: integer
          description: taskid of the replication group. Either taskId or id is available in the list
          format: int32
        name:
          type: string
          description: Replication group name
        source:
          $ref: '#/components/schemas/IdName'
        destination:
          $ref: '#/components/schemas/IdName'
        type:
          type: string
          description: The application type of replication group
          enum:
            - VIRTUAL_MACHINE
            - VM_HOT_SITE
            - VM_WARM_SITE
            - ORACLE
            - FILE_SYSTEM
            - BIG_DATA
            - SQL_SERVER
            - OBJECT_STORAGE
            - SAP_HANA
            - NOT_APPLICABLE
        replicationGroupType:
          type: string
          description: Replication group type
          enum:
            - PERIODIC
            - CONTINOUS
            - LIVE_SYNC
            - LIVE_SYNC_DIRECT
            - LIVE_SYNC_IO
            - NOT_APPLICABLE
        state:
          type: string
          description: State of replication group
          enum:
            - ENABLED
            - DISABLED
            - NOT_APPLICABLE
    ReplicationGroupListResp:
      title: ReplicationGroupListResp
      description: Used to get list of existing replication groups
      type: object
      properties:
        replicationGroups:
          type: array
          description: List of all replication groups
          items:
            $ref: '#/components/schemas/ReplicationGroupList'
    ReplicationGroupSummary:
      title: ReplicationGroupSummary
      type: object
      description: Summary of replication group
      properties:
        source:
          type: string
          description: Source hypervisor
        recoveryTarget:
          type: string
          description: Can be used to identify destination for full VM restore
        destinationVendor:
          $ref: '#/components/schemas/DestinationVendor'
        replicationType:
          $ref: '#/components/schemas/ReplicationType'
        state:
          type: string
          description: State of replication group. Values are case sensitive
          enum:
            - Enabled
            - Disabled
            - N/A
    Rpo:
      title: Rpo
      type: object
      description: Frequency of replication
      properties:
        replicationFrequency:
          type: integer
          format: int32
          description: Max amount of time for which data can be lost during a service disruption. Determines frequency of backup jobs in minutes
          default: 240
    StorageCopy:
      title: StorageCopy
      type: object
      description: Copy configured for a replication group
      properties:
        name:
          type: string
          description: 'Storage name. Primary, secondary '
        storagePool:
          $ref: '#/components/schemas/IdName'
        retention:
          type: integer
          format: int32
          description: How long the data is retained. Mentioned in days
    RecoveryOptionsCreate:
      title: RecoveryOptions
      type: object
      description: 'Recovery options for a continuous replication group. recoveryPointStore is an intermediate storage for recovery points. Provide both the id and the name of the recoveryPointStore. Either crash consistent or application consistent RP interval is mandatory. '
      properties:
        recoveryType:
          type: string
          description: Type of recovery.
          enum:
            - LATEST_RECOVERY
            - POINT_IN_TIME_RECOVERY
          default: POINT_IN_TIME_RECOVERY
        recoveryPointStore:
          $ref: '#/components/schemas/IdName'
        recoveryPointInterval:
          $ref: '#/components/schemas/RecoveryPointIntervalCreate'
        recoveryPointRetention:
          $ref: '#/components/schemas/RecoveryPointRetentionCreate'
      required:
        - recoveryType
        - recoveryPointStore
    RecoveryOptions:
      title: RecoveryOptions
      type: object
      description: Recovery options to be specified for a continuous replication group
      properties:
        recoveryType:
          type: string
          description: Type of recovery. Values are case sensitive
          enum:
            - LIVE
            - SNAPSHOT
            - GRANULAR
            - GRANULARV2
        recoveryPointStore:
          type: string
          description: Select the Recovery Point Store on the destination site where journal entries for each recovery point are stored
        crashConsistentRpInterval:
          type: integer
          format: int32
          description: Option to create crash-consistent recovery points
        mergeRecoveryPointsOlderThan:
          type: integer
          format: int32
          description: Option to combine older recovery points into larger recovery points
        retainRecoveryPointsFor:
          type: integer
          format: int32
          description: Option to specify how long journal entries for a recovery point should be retained
        recoveryPointInterval:
          type: integer
          format: int32
          description: Option to specify the time interval between the oldest recovery points in the RP Store
        pruneAndMergeRecoveryPoints:
          type: boolean
          description: Specify whether to transfer updates for the oldest recovery points to destination computer during off-peak hours.
    ReplicationGroupStorageList:
      title: ReplicationGroupStorageList
      type: object
      description: List of storage configured for a replication group
      properties:
        copies:
          type: array
          description: List of all storages which are configured for that replication group
          items:
            $ref: '#/components/schemas/StorageCopy'
        copyForReplication:
          type: string
          description: Main storage which is used for replication
    ReplicationConfigurationVMware:
      title: ReplicationConfigurationVMware
      type: object
      properties:
        sourceVM:
          type: string
          description: The source VM
        destinationVM:
          type: string
          description: The replicated VM
        destinationHost:
          type: string
          description: Destination hypervisor
        datastore:
          type: string
          description: Select a datastore to be used for virtual machine disks
        overrideReplicationOptions:
          $ref: '#/components/schemas/OverrideReplicationOptionsVMWare'
      description: Replication configuration for VMware
    OverrideReplicationOptionsVMWare:
      title: OverrideReplicationOptionsVMWare
      type: object
      description: Replication options for VMware
      properties:
        vmDisplayName:
          type: string
          description: Enter the display name for the destination VM
        destinationHost:
          type: string
          description: Host for the destination VM
        datastore:
          type: string
          description: Select a datastore to be used for virtual machine disks
        resourcePool:
          type: string
          description: Select a resource pool for the destination VM
        vmFolder:
          type: string
          description: VM folder replication
        networkSettings:
          type: array
          description: Mapping between a source network and a destination network
          items:
            $ref: '#/components/schemas/NetworkSetting'
        ipAddressSettings:
          type: array
          description: Customize IP address settings
          items:
            $ref: '#/components/schemas/IpAddressSetting'
    NetworkSetting:
      title: NetworkSetting
      type: object
      description: The schema for mapping source network with destination network
      properties:
        source:
          type: string
          description: Source network name
        sourceId:
          type: string
          description: Source network ID
        destination:
          type: string
          description: Destination network name
    IpAddressSetting:
      title: IpAddressSetting
      type: object
      properties:
        sourceIp:
          type: string
          description: Source IP
        subnetMask:
          type: string
          description: Subnet mask
        defaultGateway:
          type: string
          description: Default gateway
        useDhcp:
          type: boolean
          description: Use DHCP
        hostName:
          type: string
          description: Hostname
        destinationIp:
          type: string
          description: Destination IP
        SubnetMaskNoDhcp:
          type: string
          description: Subnet mask when dhcp is not selected
        defaultGatewayNoDhcp:
          type: string
          description: Defaault gateway when dhcp is not selected
    IpAddressSettingVMWareCreate:
      title: IpAddressSetting
      type: object
      description: A mapping of IP between the source and the destination VM with an option to configure either a dynamic or a static IP.
      properties:
        sourceIP:
          type: string
          description: The full IP address or an IP address pattern of the source VM.
        sourceSubnetMask:
          type: string
          description: The subnet mask of the source VM.
        sourceDefaultGateway:
          type: string
          description: The default gateway of the source VM.
        useDhcp:
          type: boolean
          description: Automatically assigns available IP addresses to be used with the specified destination network.
          default: false
        destinationIP:
          type: string
          description: The full IP address or an IP address pattern for the destination VM. Provide only if DHCP is not enabled.
        destinationSubnetMask:
          type: string
          description: The subnet mask for the destination VM.  Provide only if DHCP is not enabled.
        destinationDefaultGateway:
          type: string
          description: The default gateway for the destination VM.  Provide only if DHCP is not enabled.
        destinationPreferredDNS:
          type: string
          description: The preferred DNS server for the destination VM.  Provide only if DHCP is not enabled
        destinationAlternateDNS:
          type: string
          description: The alternate DNS server for the destination VM.  Provide only if DHCP is not enabled
        destinationPreferredWINS:
          type: string
          description: The preferred WINS server for the destination VM.  Provide only if DHCP is not enabled
        destinationAlternateWINS:
          type: string
          description: The alternate WINS server for the destination VM.  Provide only if DHCP is not enabled
    GuestCredentialsCreate:
      title: Guest credentials
      type: object
      description: Faster performance can be achieved during replication by using the VSA access node running on the Amazon instance. Applicable only if the source VM is Windows and the source hypervisor is not Amazon vendor.
      properties:
        computerName:
          type: string
          description: The name of the computer
        userName:
          type: string
          description: The user to be used to access the computer
        password:
          type: string
          description: The password of the user in Base64 format
    ReplicationGroup:
      title: ReplicationGroup
      type: object
      description: Used to return details of a replication group whose replicationGroupId has been provided
      properties:
        id:
          type: integer
          description: Replication group id
          format: int32
        name:
          type: string
          description: Replication group name
        summary:
          $ref: '#/components/schemas/ReplicationGroupSummary'
        rpo:
          $ref: '#/components/schemas/Rpo'
        storage:
          $ref: '#/components/schemas/ReplicationGroupStorageList'
    ReplicationConfigurationHyperV:
      title: ReplicationConfigurationHyperV
      type: object
      description: Replication configuration for HyperV
      properties:
        sourceVM:
          type: string
          description: Source VM
        destinationVM:
          type: string
          description: Destination VM
        hypervHost:
          type: string
          description: Hypervisor
        destinationVolume:
          type: string
          description: Destination volume for hyperV
        overrideReplicationOptions:
          $ref: '#/components/schemas/OverrideReplicationOptionsHyperV'
    OverrideReplicationOptionsHyperV:
      title: OverrideReplicationOptionsHyperV
      type: object
      description: Replication options for HyperV
      properties:
        vmDisplayName:
          type: string
          description: Display name for the destination VM
        registerVMWithFailoverCluster:
          type: string
          description: Register replicated virtual machines to the failover cluster for the destination client.
        networkAdapter:
          type: array
          description: Select a network interface from the Network adapter list
          items:
            $ref: '#/components/schemas/NetworkName'
    NetworkName:
      title: NetworkName
      type: object
      description: Select a network interface from the Network adapter list.
      properties:
        networkName:
          type: string
          description: Name of network
    ReplicationConfigurationAmazon:
      title: ReplicationConfigurationAmazon
      type: object
      description: Replication configuration for Amazon
      properties:
        sourceVM:
          type: string
          description: Source instance
        destinationVM:
          type: string
          description: Destination instance
        availabilityZone:
          type: string
          description: Destination zone
        instanceType:
          type: string
          description: Provides the available CPU cores and memory for the instance.
        overrideReplicationOptions:
          $ref: '#/components/schemas/OverrideReplicationOptionsAmazon'
    OverrideReplicationOptionsAmazon:
      title: OverrideReplicationOptionsAmazon
      type: object
      description: Replication options for Amazon
      properties:
        guestCreds:
          $ref: '#/components/schemas/GuestCredentialsCreate'
        instanceName:
          type: string
          description: Display name for the destination instance
        availabilityZone:
          type: string
          description: Destination zone
        volumeType:
          type: string
          description: Type of volume used for replication
        encryptionKey:
          type: string
          description: Encryption key if used
        network:
          $ref: '#/components/schemas/AmazonNetwork'
        testFailoverNetwork:
          $ref: '#/components/schemas/AmazonNetwork'
        autoSelectSecurityGroup:
          type: array
          description: Select a security group for the destination instances
          items:
            $ref: '#/components/schemas/SecurityGroup'
        instanceType:
          type: string
          description: Provides the available CPU cores and memory for the instance.
        computerName:
          type: string
          description: Enable required drivers to be installed on the Amazon guest instance
        userName:
          type: string
          description: Enable required drivers to be installed on the Amazon guest instance
    AmazonNetwork:
      title: AmazonNetwork
      type: object
      description: Network interface for the destination instances
      properties:
        displayName:
          type: string
          description: Network display name
        name:
          type: string
          description: Name of network
        subnetId:
          type: string
          description: subnet id of network
        networkId:
          type: string
          description: VPC Id of the network
        privateIPaddress:
          type: string
          description: Private IP address of the network
    Network:
      title: Network
      type: object
      description: Network interface for the destination instances
      properties:
        networkDisplayName:
          type: string
          description: Network display name
        networkName:
          type: string
          description: Name of network
        subnetId:
          type: string
          description: subnet id of network
        privateIPaddress:
          type: string
          description: Private IP address of the network
    NetworkVPCSubnet:
      title: Network
      type: object
      description: Network info
      properties:
        vpc:
          type: string
          description: The ID of the VPC
        subnetId:
          type: string
          description: The ID of the subnet
        name:
          type: string
          description: The name of the network
        privateIPaddress:
          type: string
          description: The private IP address of the network
    NetworkSubnet:
      title: Network
      type: object
      description: Network info
      properties:
        subnetId:
          type: string
          description: The ID of the subnet
        network:
          type: string
          description: The name of the network
    ReplicationConfigurationAzure:
      title: ReplicationConfigurationAzure
      type: object
      description: Replication configuration for Azure
      properties:
        sourceVM:
          type: string
          description: Source VM
        destinationVM:
          type: string
          description: Destination VM
        resourceGroup:
          type: string
          description: Resource group in which the converted virtual machine should be created.
        storageAccount:
          type: string
          description: Azure Standard or Premium general-purpose storage account.
        vmSize:
          type: string
          description: VM size
        createPublicIP:
          type: boolean
          description: Create a public IP.
        restoreAsManagedVm:
          type: boolean
          description: Restore the VM as a managed disk for the destination VMs.
        overrideReplicationOptions:
          $ref: '#/components/schemas/OverrideReplicationOptionsAzure'
        diskType:
          type: string
          description: Type of the disk
        sourceVMGuid:
          type: string
          description: GUID of the source VM
        region:
          type: string
          description: region of the VM
        testFailoverVmSize:
          type: string
          description: Vm size to be used during the test failover operation
    OverrideReplicationOptionsAzure:
      title: OverrideReplicationOptionsAzure
      type: object
      description: Replication options for Azure
      properties:
        availabilityZone:
          type: string
          description: VM availability zone
        securityGroup:
          $ref: '#/components/schemas/SecurityGroup'
        testFailoverVirtualNetwork:
          $ref: '#/components/schemas/AzureNetwork'
        virtualNetwork:
          $ref: '#/components/schemas/AzureNetwork'
    SecurityGroup:
      title: SecurityGroup
      type: object
      properties:
        id:
          type: string
          description: Security group id
        name:
          type: string
          description: security group name
      description: The id and the name of the security group
    VMwareReplicationGroup:
      title: VMwareReplicationGroup
      description: Replication group details pertaining to VMware
      allOf:
        - $ref: '#/components/schemas/ReplicationGroup'
        - type: object
          properties:
            advancedOption:
              $ref: '#/components/schemas/ReplicationGroupAdvOptionsVMWare'
            replicationConfiguration:
              type: array
              description: replication configuration for VMware replication group
              items:
                $ref: '#/components/schemas/ReplicationConfigurationVMware'
            vendor:
              type: string
              enum:
                - VMware
              description: Vendor type of this replication group. Values in enum are case sensitive
          required:
            - vendor
    AzureReplicationGroup:
      title: AzureReplicationGroup
      allOf:
        - $ref: '#/components/schemas/ReplicationGroup'
        - type: object
          properties:
            advancedOption:
              $ref: '#/components/schemas/ReplicationGroupAdvOptionsAzure'
            replicationConfiguration:
              type: array
              items:
                $ref: '#/components/schemas/ReplicationConfigurationAzure'
            vendor:
              type: string
              enum:
                - Azure
              description: Vendor type of this replication group. Values in enum are case sensitive
          required:
            - vendor
      description: Replication group details pertaining to Azure
    AmazonReplicationGroup:
      title: AmazonReplicationGroup
      allOf:
        - $ref: '#/components/schemas/ReplicationGroup'
        - type: object
          properties:
            advancedOption:
              $ref: '#/components/schemas/ReplicationGroupAdvOptionsAmazon'
            replicationConfiguration:
              type: array
              description: Replication configuration for an Amazon replication group
              items:
                $ref: '#/components/schemas/ReplicationConfigurationAmazon'
            vendor:
              type: string
              description: Vendor type of this replication group. Values in enum are case sensitive
              enum:
                - Amazon
          required:
            - vendor
      description: Replication group details pertaining to Amazon
    OCIReplicationGroup:
      title: OCIReplicationGroup
      allOf:
        - $ref: '#/components/schemas/ReplicationGroup'
        - type: object
          properties:
            advancedOption:
              $ref: '#/components/schemas/ReplicationGroupAdvOptionsOCI'
            replicationConfiguration:
              type: array
              items:
                $ref: '#/components/schemas/ReplicationConfigurationOCI'
            vendor:
              type: string
              enum:
                - OCI
              description: Vendor type of this replication group. Values in enum are case sensitive
          required:
            - vendor
      description: Replication group details pertaining to GCP
    ReplicationGroupAdvOptionsOCI:
      allOf:
        - $ref: '#/components/schemas/ReplicationGroupAdvancedOptions'
        - type: object
          properties:
            unconditionalOverwrite:
              type: boolean
              description: This will replace the instance at the destination if the instance with the same name already exists.
    ReplicationConfigurationOCI:
      title: ReplicationConfigurationOCI
      type: object
      description: Model to store configuration per VM for OCI vendor
      properties:
        sourceVM:
          type: string
          description: Source VM instance name
        sourceVMGuid:
          type: string
          description: Source VM instance guid
        destinationVM:
          type: string
          description: Destination VM instance name
        availabilityDomain:
          type: string
          description: Destination VM instance availability domain
        stagingBucket:
          type: string
          description: Staged bucket name for restore operation
        region:
          type: string
          description: Instance region
        createPublicIP:
          type: boolean
          description: Public/External IP of the destination VM instance
        shape:
          type: string
          description: Destination VM instance shape
        overrideReplicationOptions:
          $ref: '#/components/schemas/OverrideReplicationOptionsOCI'
        compartment:
          $ref: '#/components/schemas/NameValue'
    OverrideReplicationOptionsOCI:
      title: OverrideReplicationOptionsOCI
      type: object
      description: Extended instance configuration options
      properties:
        network:
          $ref: '#/components/schemas/Network'
    HyperVReplicationGroup:
      title: HyperVReplicationGroup
      allOf:
        - $ref: '#/components/schemas/ReplicationGroup'
        - type: object
          properties:
            advancedOption:
              $ref: '#/components/schemas/ReplicationGroupAdvOptionsHyperV'
            replicationConfiguration:
              type: array
              description: Replication configuration for a hyperv replication group
              items:
                $ref: '#/components/schemas/ReplicationConfigurationHyperV'
            vendor:
              type: string
              enum:
                - HyperV
              description: Vendor type of this replication group. Values in enum are case sensitive
          required:
            - vendor
      description: Replication group details pertaining to hyperV
    ContinuousReplicationGroup:
      title: ContinuousReplicationGroup
      type: object
      description: Replication group details pertaining to a continuous replication group
      properties:
        summary:
          $ref: '#/components/schemas/ReplicationGroupSummary'
        recoveryOptions:
          $ref: '#/components/schemas/RecoveryOptions'
        replicationConfiguration:
          type: array
          description: replication configuration of a continuous group
          items:
            $ref: '#/components/schemas/ReplicationConfigurationVMware'
      required:
        - recoveryOptions
    RecoveryPointIntervalCreate:
      title: RecoveryPointInterval
      type: object
      description: Recovery point interval inputs for continuous replication group. Provide atleast one of crash consistent and application consistent interval.
      properties:
        crashConsistentRpInterval:
          type: integer
          format: int32
          description: Minimum time interval(in seconds) between VM recovery points. Applicable only for Point in time recovery.
          default: 300
        applicationConsistentRpInterval:
          type: integer
          format: int32
          description: Time(in seconds) after which the source VMs are quiesced to create application-consistent recovery points for destination VMs. Applicable only for Point in time recovery.
          default: 0
    RecoveryPointRetentionCreate:
      title: RecoveryPointRetention
      type: object
      description: Recovery point retention inputs for continuous replication group.
      properties:
        retainRecoveryPointsFor:
          type: integer
          format: int32
          description: The lengh of time(in seconds) to a retain the recovery point entries. Applicable only for Point in time recovery.
          default: 604800
          minimum: 1
        mergeRecoveryPoints:
          type: boolean
          description: Merge the recovery points beyond the time provided in mergeRecoveryPointsOlderThan
          default: true
        mergeRecoveryPointsOlderThan:
          type: integer
          format: int32
          description: 'Applicable only if mergeRecoveryPoints is set to true. Beyond this period(in seconds), older recovery points will be merged into progressively coarser intervals going back in time. Applicable only for Point in time recovery. The value cannot exceed the value of retainRecoveryPointsFor.'
          default: 172800
          minimum: 1
        recoveryPointIntervalAtEndofRetention:
          type: integer
          format: int32
          description: Applicable only if mergeRecoveryPoints is set to true.  Time interval(in seconds) between the older recovery points. Applicable only if mergeRecoveryPointsOlderThan and Point in time recovery is selected. The value cannot exceed the value of retainRecoveryPointsFor or 86400 seconds(1 day).
          default: 21600
          minimum: 1
          maximum: 86400
        rpStoreOfflineFor:
          type: integer
          format: int32
          description: Time(in seconds) after which the recovery type is switched to 'Latest recovery' if RP store is offline. Applicable only for Point in time recovery.
          default: 0
          minimum: 0
        pruneAndMergeDuringOffPeak:
          type: boolean
          description: Transfers the updates of the oldest recovery points to destination VM only during off-peak hours. The peak interval time should be configured in the RP store.  Applicable only for Point in time recovery.
          default: false
      required:
        - retainRecoveryPointsFor
    DROperation:
      type: string
      description: The names of DR operations
      enum:
        - PlannedFailover
        - UnplannedFailover
        - Failback
        - RevertFailover
        - UndoFailover
        - TestBoot
        - PITFailover
        - ReverseReplication
        - CleanupDestinationVM
        - TestFailover
        - UndoTestFailover
    TestFailoverVMState:
      type: string
      description: Power state of the clone VM
      enum:
        - STOPPED
        - RUNNING
        - SUSPENDED
        - UNKNOWN
        - ARCHIVED
        - EXPIRED
        - UNAVAILABLE
        - CREATING
        - CLONING
        - CREATING_SNAPSHOT
        - REVERTING_SNAPSHOT
        - DELETING_SNAPSHOT
        - STARTING
        - STOPPING
        - SUSPENDING
        - RESTARTING
        - RECOVERING
        - RETRIEVING
    TestFailoverVirtualMachines:
      title: TestFailoverVirtualMachines
      type: object
      description: Test failover virtual machine details
      properties:
        name:
          type: string
          description: The name of the clone VM
        state:
          $ref: '#/components/schemas/TestFailoverVMState'
        ipAddress:
          type: string
          description: The IP address of the clone VM
        operatingSystem:
          type: string
          description: Name of operating system of VM
        creator:
          $ref: '#/components/schemas/IdNameGUID'
        expirationTime:
          type: integer
          format: int32
          description: Expiration timestamp of cloned VM in unix time (epoch) format
    FailoverGroupHypervisorType:
      type: string
      nullable: true
      description: The type of entity is used
      enum:
        - CLIENT_GROUP
        - CLIENT
    FailoverGroupHypervisor:
      type: object
      description: The hypervisor client/client group information for failover groups
      properties:
        id:
          type: integer
          format: int32
          description: The Id of client/client group
        name:
          type: string
          nullable: true
          description: The name of the hypervisor client/client group
        type:
          $ref: '#/components/schemas/FailoverGroupHypervisorType'
        vendor:
          $ref: '#/components/schemas/VSVendor'
    FailoverGroupSource:
      type: string
      description: Failover group type
      enum:
        - ARRAY_REPLICATION_TEST_FAILOVER
        - ARRAY_REPLICATION_FAILOVER
        - REPLICATION
        - BACKUP
    FailoverGroupOperationType:
      type: string
      description: Failover group operation type
      nullable: true
      enum:
        - LIVE_MOUNT
        - LIVE_SYNC
        - RESTORE
        - LIVE_RECOVERY
        - FAILOVER
        - VIRTUAL_LAB
        - ORACLE_EBS_APP
        - GENERIC_ENTERPRISE_APP
        - TEST_FAILOVER
    AutomaticFailoverMonitoringStatus:
      type: string
      description: Automatic failover monitoring status
      enum:
        - DISABLED
        - FAILED
        - ENABLED
        - PAUSED
        - STARTING
        - NOT_CONFIGURED
    AutomaticFailoverStatus:
      type: string
      description: Automatic failover configuration status
      enum:
        - OFFLINE
        - ONLINE
    FailoverGroupAutomaticFailover:
      type: object
      description: The failover group automatic failover information of access nodes and monitoring status
      nullable: true
      properties:
        machines:
          type: array
          items:
            $ref: '#/components/schemas/IdName'
        monitoringStatus:
          $ref: '#/components/schemas/AutomaticFailoverMonitoringStatus'
        outageDelayTimeInMinutes:
          type: integer
          format: int32
          minimum: 0
          description: Delay time before declaring outage (in minutes)
        status:
          $ref: '#/components/schemas/AutomaticFailoverStatus'
    ESXServerMapping:
      type: object
      description: An entity to represent one-one ESX server mapping rule
      properties:
        sourceServer:
          type: string
          description: The name of source ESX server
        destinationServer:
          type: string
          description: The name of destination ESX server
        networkSettings:
          type: array
          description: The list of all source network interface to destination network interface mapping
          items:
            $ref: '#/components/schemas/NetworkSetting'
    OSType:
      type: string
      description: OS types
      enum:
        - WINDOWS
        - UNIX
    DROperationScriptPathType:
      type: string
      description: The type of path being used for DR operation script
      enum:
        - UNC
        - LOCAL
    DROperationScript:
      type: object
      description: DR operation scripting information
      properties:
        path:
          type: string
          description: The path of the script to be executed. Can be local path on VM or UNC path accessible by access node
        type:
          $ref: '#/components/schemas/DROperationScriptPathType'
        scriptCredentials:
          $ref: '#/components/schemas/guestCredentialInfo'
        guestCredentials:
          $ref: '#/components/schemas/guestCredentialInfo'
        guid:
          type: string
          description: Unique script identifier string
        scriptContent:
          type: string
          description: Content of the script to be executed
        scriptName:
          type: string
          description: Name of the script
        reset:
          type: boolean
          description: On set to true, resets the script to empty
        osType:
          $ref: '#/components/schemas/OSType'
    FailoverGroupReplicationPair:
      type: object
      description: A replication pair for failover group
      properties:
        id:
          type: integer
          format: int32
          description: The ID of the replication pair
        sourceId:
          type: integer
          format: int32
          description: The id of the source machine
        sourceName:
          type: string
          description: The name of the source machine
        destinationId:
          type: integer
          format: int32
          description: The id of the destination machine
        destinationName:
          type: string
          description: The name of the destination machine
        GUID:
          type: string
          description: The GUID of the source of replication pair
        priority:
          type: integer
          format: int32
          description: The priority of the replication pair for DR operation in failover group. The lower values signify higher priority
        copyPrecedence:
          type: integer
          format: int32
          nullable: true
          minimum: 0
          description: The copy precedence of replication pair
        preFailoverScript:
          $ref: '#/components/schemas/DROperationScript'
        postFailoverScript:
          $ref: '#/components/schemas/DROperationScript'
        preFailbackScript:
          $ref: '#/components/schemas/DROperationScript'
        postFailbackScript:
          $ref: '#/components/schemas/DROperationScript'
    FailoverGroupArrayReplicationPair:
      type: object
      description: An array replication pair for failover group
      properties:
        id:
          type: integer
          format: int32
          description: The ID of the array replication pair
        sourceId:
          type: integer
          format: int32
          description: The id of the source machine
        sourceName:
          type: string
          description: The name of the source machine
        destinationId:
          type: integer
          format: int32
          description: The id of the destination machine
        destinationName:
          type: string
          description: The name of the destination machine
        GUID:
          type: string
          description: The GUID of the source of array replication pair
        priority:
          type: integer
          format: int32
          description: The priority of the array replication pair for DR operation in failover group. The lower values signify higher priority
        ipSettings:
          type: array
          description: The settings for IP address mapping
          items:
            $ref: '#/components/schemas/IpAddressSettingVMWareCreate'
        hostname:
          type: string
          description: The hostname specified for the destination machine
    FailoverGroupSummary:
      title: FailoverGroupSummary
      type: object
      description: Failover groups summary
      properties:
        id:
          type: integer
          format: int32
          description: Failover group ID
        name:
          type: string
          description: Failover group name
        source:
          $ref: '#/components/schemas/FailoverGroupSource'
        numberOfVirtualMachines:
          type: integer
          format: int32
          description: The number of VM pairs of failover groups
    FailoverGroupsList:
      title: FailoverGroupsList
      type: object
      description: The list of all failover groups
      properties:
        failoverGroups:
          type: array
          items:
            $ref: '#/components/schemas/FailoverGroupSummary'
    FailoverGroupDetails:
      title: FailoverGroupDetails
      type: object
      description: Failover group details
      properties:
        id:
          type: integer
          description: Failover group Id
          format: int32
        name:
          type: string
          description: Failover group name
        sourceHypervisor:
          $ref: '#/components/schemas/FailoverGroupHypervisor'
        destinationHypervisor:
          $ref: '#/components/schemas/FailoverGroupHypervisor'
        source:
          $ref: '#/components/schemas/FailoverGroupSource'
        isApprovalRequired:
          type: boolean
          description: Whether a user approval is required for DR operations
        usersToNotify:
          type: array
          description: Users to notify/for approval of DR operations
          items:
            $ref: '#/components/schemas/IdNameDisplayNameCompany'
        operationType:
          $ref: '#/components/schemas/FailoverGroupOperationType'
        subclient:
          $ref: '#/components/schemas/IdName'
        storagePolicy:
          $ref: '#/components/schemas/IdName'
        copy:
          $ref: '#/components/schemas/IdName'
        priorityIntervalInMinutes:
          type: integer
          format: int32
          description: The interval between DR operations of different priorities
          minimum: 1
        continueDROnFailure:
          type: boolean
          description: Whether to continue to next priority on DR job failure
        recoveryTarget:
          $ref: '#/components/schemas/IdName'
        automaticFailover:
          $ref: '#/components/schemas/FailoverGroupAutomaticFailover'
        plannedFailoverSchedules:
          type: array
          description: The list of all planned failover schedules
          items:
            $ref: '#/components/schemas/PlanSchedule'
        testBootSchedules:
          type: array
          description: The list of all test boot schedules
          items:
            $ref: '#/components/schemas/PlanSchedule'
        esxServerMappings:
          type: array
          nullable: true
          description: The list of all ESX server mappings
          items:
            $ref: '#/components/schemas/ESXServerMapping'
        replicationPairs:
          type: array
          nullable: true
          description: List of all replication pairs that are part of the failover group
          items:
            $ref: '#/components/schemas/FailoverGroupReplicationPair'
        arrayReplicationPairs:
          type: array
          nullable: true
          description: List of all array replication pairs for failover group
          items:
            $ref: '#/components/schemas/FailoverGroupArrayReplicationPair'
        script:
          $ref: '#/components/schemas/ReplicationGroupScript'
    FailoverGroupEligibleMachineList:
      title: FailoverGroupEligibleMachineList
      type: object
      description: The list of all machines that are eligible to be added to failover group
      properties:
        replicationPairs:
          type: array
          nullable: true
          description: The list of all replication pairs eligible to be added to failover group with replication source
          items:
            $ref: '#/components/schemas/FailoverGroupReplicationPair'
        arrayReplicationPairs:
          type: array
          nullable: true
          description: List of all array replication pairs for failover group that are eligible to be added
          items:
            $ref: '#/components/schemas/FailoverGroupArrayReplicationPair'
    ModifyFailoverGroupRequest:
      title: ModifyFailoverGroup
      type: object
      description: Modify failover group request
      properties:
        name:
          type: string
          description: Failover Group name
        isApprovalRequired:
          type: boolean
          description: Whether a user approval is required for DR operations
        usersToNotify:
          type: array
          description: Users to notify/for approval of DR operations
          items:
            $ref: '#/components/schemas/IdNameDisplayNameCompany'
        priorityIntervalInMinutes:
          type: integer
          format: int32
          description: The interval between DR operations of different priorities
          minimum: 1
        esxServerMappings:
          type: array
          nullable: true
          description: The list of all ESX server mappings
          items:
            $ref: '#/components/schemas/ESXServerMapping'
        continueDROnFailure:
          type: boolean
          description: Whether to continue to next priority on DR job failure
        recoveryTarget:
          $ref: '#/components/schemas/IdName'
        replicationPairs:
          type: array
          nullable: true
          description: List of all replication pairs that are part of the failover group
          items:
            $ref: '#/components/schemas/FailoverGroupReplicationPair'
        arrayReplicationPairs:
          type: array
          nullable: true
          description: List of all array replication pairs for failover group
          items:
            $ref: '#/components/schemas/FailoverGroupArrayReplicationPair'
        script:
          $ref: '#/components/schemas/ReplicationGroupScript'
    GCPInstanceList:
      title: GCPInstanceList
      type: object
      properties:
        error:
          $ref: '#/components/schemas/GenericResp'
        instances:
          type: array
          items:
            $ref: '#/components/schemas/GCPInstances'
    GCPDatabaseList:
      title: GCPDatabaseList
      type: object
      properties:
        error:
          $ref: '#/components/schemas/GenericResp'
        databases:
          type: array
          items:
            $ref: '#/components/schemas/GCPDatabases'
    GCPInstances:
      title: ''
      type: object
      properties:
        projectName:
          type: string
          description: google cloud project the instance belongs to
        instanceName:
          type: string
          description: the google spanner instance name
        displayName:
          type: string
          description: 'Returns the name to be displayed on UI in the format: instanceName [projectName]'
    GCPDatabases:
      title: ''
      type: object
      properties:
        name:
          type: string
          description: the google spanner database name
    VirtualMachinecontent:
      title: VirtualMachinecontent
      type: object
      properties:
        name:
          x-terraform-set-key: true
          type: string
          description: name of the VM to be added as content
        GUID:
          x-terraform-set-key: true
          type: string
          description: GUID of the VM to be added as content
        type:
          x-terraform-set-key: true
          $ref: '#/components/schemas/VMContentType'
        guestCredentialAssocId:
          type: integer
          format: int32
          description: Credential association ID given to link entity with credential id.
        guestCredentials:
          $ref: '#/components/schemas/VMGuestCredentials'
        existingCredential:
          $ref: '#/components/schemas/VMExistingCredential'
    MatchRuleContent:
      type: string
      title: MatchRule
      description: Enum which specifies the whether to match all rules or any of the rules
      enum:
        - ALL
        - ANY
    RuleContent:
      title: RuleContent
      type: object
      properties:
        name:
          x-terraform-set-key: true
          type: string
          description: name of the VM to be added as content
        type:
          x-terraform-set-key: true
          $ref: '#/components/schemas/VMContentType'
        value:
          type: string
          description: value for the few type of VM Content like powerstate
        condition:
          x-terraform-set-key: true
          $ref: '#/components/schemas/RuleOperationType'
        GUID:
          type: string
          description: GUID of the entity to be added as content
        displayName:
          type: string
          description: The display name of the entity to be added
    RuleGroupContent:
      title: RuleContent
      type: object
      properties:
        matchRule:
          $ref: '#/components/schemas/MatchRuleContent'
        rules:
          type: array
          items:
            $ref: '#/components/schemas/RuleContent'
    RuleOperationType:
      title: RuleOperationType
      type: string
      description: Operation type for VM rules/filters
      enum:
        - CONTAINS
        - DOES_NOT_CONTAIN
        - DOES_NOT_EQUAL
        - ENDS_WITH
        - EQUALS
        - STARTS_WITH
    vmContent:
      title: RuleContent
      type: object
      properties:
        overwrite:
          type: boolean
          description: True if content in vmgroup has to be overwritten, by default it will append the content
          default: false
        virtualMachines:
          x-terraform-include: false
          type: array
          items:
            $ref: '#/components/schemas/VirtualMachinecontent'
        ruleGroups:
          x-terraform-computed: false
          type: array
          items:
            $ref: '#/components/schemas/RuleGroupContent'
    vmFilter:
      title: vmFiltersummary
      type: object
      properties:
        overwrite:
          type: boolean
          description: True if content in vmgroup has to be overwritten, by default it will append the content
          default: false
        type:
          $ref: '#/components/schemas/VMContentType'
        op:
          $ref: '#/components/schemas/RuleOperationType'
        name:
          type: string
          description: The string to be filtered against
        GUID:
          type: string
          description: GUID of the VM to be filtered
        customAttributeName:
          type: string
          description: Attribute name to check if filter type is VMCustomAttribute
        description:
          type: string
          description: Description for filter rule given by user
    CreatevmGroupReq:
      title: CreatevmGroupReq
      type: object
      description: ''
      properties:
        name:
          type: string
          description: 'subclient name '
        Hypervisor:
          x-terraform-setter: CommonProperties.Hypervisor
          $ref: '#/components/schemas/IdName'
        content:
          $ref: '#/components/schemas/vmContent'
        plan:
          x-terraform-setter: Summary.Plan
          x-terraform-computed: true
          $ref: '#/components/schemas/IdName'
        storage:
          $ref: '#/components/schemas/IdName'
        enableIntellisnap:
          x-terraform-include: false
          type: boolean
          description: True if Intellisnap has to be  enabled
          default: false
        Meditech:
          $ref: '#/components/schemas/meditechPropResp'
      required:
        - name
        - Hypervisor
        - plan
        - content
    UpdatevmGroupReq:
      title: UpdatevmGroupReq
      type: object
      description: ''
      properties:
        newName:
          x-terraform-mapping: name
          type: string
          description: 'subclient name '
        content:
          $ref: '#/components/schemas/vmContent'
        plan:
          x-terraform-computed: true
          $ref: '#/components/schemas/IdName'
        storage:
          $ref: '#/components/schemas/IdName'
        filters:
          $ref: '#/components/schemas/vmContent'
        diskFilters:
          $ref: '#/components/schemas/vmDiskFilterProp'
        securityAssociations:
          type: array
          items:
            $ref: '#/components/schemas/SecurityAssoc'
        settings:
          x-terraform-computed: false
          $ref: '#/components/schemas/vmGroupSettings'
        snapshotManagement:
          $ref: '#/components/schemas/snapCopyInfo'
        activityControl:
          $ref: '#/components/schemas/ActivityControlOptions'
        applicationValidation:
          $ref: '#/components/schemas/vmAppValidation'
        enableFileIndexing:
          type: boolean
          description: True if file indexing needs to be enabled
          default: false
        timeZone:
          $ref: '#/components/schemas/IdName'
        accessNode:
          type: array
          items:
            $ref: '#/components/schemas/accessNodeModel'
        meditechSystems:
          $ref: '#/components/schemas/meditechPropResp'
    KubernetesCloudStorage:
      type: object
      description: 'Used to store the cloud storage info of the Kubernetes cluster'
      properties:
        region:
          $ref: '#/components/schemas/IdName'
        storagePool:
          $ref: '#/components/schemas/IdName'
    CreateKubernetesCluster:
      allOf:
        - $ref: '#/components/schemas/CreateHypervisorGroupReq'
        - type: object
          properties:
            hypervisorType:
              type: string
              enum:
                - KUBERNETES
            endpointurl:
              type: string
              description: Endpoint url to connect
            serviceName:
              type: string
              description: Service Name to connect in case authentication mode is service account
            secretKey:
              type: string
              description: SecretKey to connect in case authentication mode is service account
            userName:
              type: string
              description: Username to connect in case authentication mode is Username and password
            password:
              type: string
              description: Username to connect in case authentication mode is Username and password
            k8ServiceType:
              type: string
              enum:
                - ONPREM
                - AZURE
                - AMAZON
            cloudStorage:
              $ref: '#/components/schemas/KubernetesCloudStorage'
      required:
        - hypervisorType
        - endpointurl
    VSVendor:
      enum:
        - NONE
        - VMW
        - MICROSOFT
        - XEN_SERVER
        - AMAZON
        - AZURE
        - REDHAT
        - AZURE_V2
        - SCVMM
        - NUTANIX
        - ORACLE_VM
        - DOCKER
        - OPENSTACK
        - ORACLE_CLOUD
        - FUSIONCOMPUTE
        - VCLOUD
        - GOOGLE_CLOUD
        - AZURE_STACK
        - ALIBABA_CLOUD
        - ORACLE_CLOUD_INFRASTRUCTURE
        - KUBERNETES
        - REDHAT_OPENSHIFT
        - MONGODB_ATLAS
        - PROXMOX
        - KUBERNETES_AKS
        - AZURE_STACK_HCI
      type: string
      format: ''
    VMContentFilter:
      type: string
      enum:
        - RESOURCE_POOL
        - DATACENTER
        - FOLDER
        - CLUSTER
        - DATASTORE
        - VM
        - TAG
        - TAG_CATEGORY
    VMContentType:
      enum:
        - NONE
        - SERVER
        - RES_POOL
        - VAPP
        - DATACENTER
        - FOLDER
        - CLUSTER
        - DATASTORE
        - DATASTORE_CLUSTER
        - VM
        - VM_NAME
        - VM_GUEST_OS
        - VM_GUEST_HOST_NAME
        - CLUSTER_SHARED_VOLUMES
        - LOCAL_DISK
        - CLUSTER_DISK
        - UNPROTECTED_VMS
        - ROOT
        - FILE_SERVER
        - SMB_SHARE
        - TYPES_FOLDER
        - VM_FOLDER
        - SERVER_FOLDER
        - TEMPLATE_FOLDER
        - STORAGE_REPOSITORY_FOLDER
        - VAPPFOLDER
        - DATACENTER_FOLDER
        - CLUSTER_FOLDER
        - VM_POWER_STATE
        - VM_NOTES
        - VM_CUSTOM_ATTRIBUTE
        - NETWORK
        - USER
        - VM_TEMPLATE
        - TAG
        - TAG_CATEGORY
        - SUBCLIENT
        - CLIENT_GROUP
        - PROTECTION_DOMAIN
        - CONSISTENCY_GROUP
        - INSTANCE_SIZE
        - ORGANIZATION
        - IMAGES
        - STORAGE_POLICY
        - DATABASE
        - TABLE
        - PROJECT
        - SELECTOR
        - MANAGED_BY
        - REPLICATION_MODE
        - METADATATAG
        - CATALOG
        - VAPPTEMPLATE
        - VOLUME
      type: string
      format: ''
    vmBackupInfo:
      type: object
      properties:
        vmPendingCount:
          type: integer
          format: int32
          description: VMs pending for Backup
        vmProtectedCount:
          type: integer
          format: int32
          description: Protected vm Count
        vmNotProtectedCount:
          type: integer
          format: int32
          description: VM Missed to protect count
        vmNeverBackedUpCount:
          type: integer
          format: int32
          description: vm never Backed up count
        vmBackedUpWithErrorCount:
          type: integer
          format: int32
          description: VM Backed up with error count
        vmTotalCount:
          type: integer
          format: int32
          description: ' Total vm Count'
    snapCopyInfo:
      type: object
      properties:
        enableHardwareSnapshot:
          type: boolean
          description: True if hardware snapshot is enabled
          default: false
        snapEngine:
          $ref: '#/components/schemas/IdName'
        snapMountESXHost:
          type: string
          description: Name of ESX Host
        isIndependentDisksEnabled:
          type: boolean
          description: True if independent disk option is enabled
        isRawDeviceMapsEnabled:
          type: boolean
          description: True if raw device maps option is enabled
        useSeparateProxyForSnapToTape:
          type: boolean
          description: True if separate proxy client is used for snap to tape
        snapMountProxy:
          $ref: '#/components/schemas/IdName'
        vmApplicationUserName:
          type: string
          description: Virtual machine application user name
        backupCopyInterface:
          $ref: '#/components/schemas/backupCopyInterface'
    backupCopyInterface:
      type: string
      enum:
        - FILE_SYSTEM
        - RMAN
        - VOLUME_COPY
    vmBackupType:
      type: string
      enum:
        - APPLICATION_AWARE
        - FILE_SYSTEM_AND_APPLICATION_CONSISTENT
        - CRASH_CONSISTENT
        - APP_BASED_BACKUP
        - INHERITED
    transportMode:
      type: string
      description: transport mode based on environment. Values are case sensitive
      enum:
        - AUTO
        - SAN
        - HOT_ADD
        - NAS
        - NBD_SSL
        - NBD
      default: AUTO
    resourceTag:
      title: resourceTag
      type: object
      description: represents tag name and tag value of a resource
      properties:
        name:
          type: string
          description: represents name of the tag
        value:
          type: string
          description: represents value of the tag
    vmGroupSettings:
      type: object
      properties:
        useChangedBlockTrackingOnVM:
          type: boolean
          description: True if Changed Block Tracking is enabled
          default: true
        customSnapshotResourceGroup:
          type: string
          description: Custom snapshot resource group name for Azure
        customSnapshotTags:
          description: represents custom tags to be set on snapshots
          type: array
          items:
            $ref: '#/components/schemas/resourceTag'
        regionalSnapshot:
          type: boolean
          description: True when snapshot storage location is regional
          default: true
        autoDetectVMOwner:
          type: boolean
          description: True if auto detect VM Owner enabled
        allowEmptySubclient:
          type: boolean
          description: True if empty subclient is allowed
        noOfReaders:
          type: integer
          format: int32
          description: Number of readers for backup
          default: 5
        isVMGroupDiskFiltersIncluded:
          type: boolean
          description: Is VM group disk filters included in VM instance disk filters
        vmBackupType:
          $ref: '#/components/schemas/vmBackupType'
        isApplicationAware:
          type: boolean
          description: Is the VM App Aware
        guestCredentials:
          $ref: '#/components/schemas/guestCredentialInfo'
        useVMCheckpointSetting:
          type: boolean
          description: True if use VM CheckPoint setting is enabled
          default: false
        transportMode:
          $ref: '#/components/schemas/transportMode'
        datastoreFreespaceCheck:
          type: boolean
          description: True if Datastore Free space check is enabled
          default: true
        datastoreFreespaceRequired:
          type: integer
          format: int32
          description: precentage of datastore free space check value
          default: 10
        collectFileDetailsforGranularRecovery:
          type: boolean
          description: True if metadata collection is enabled. Only applicable for Indexing v1
          default: false
        collectFileDetailsFromSnapshotCopy:
          type: boolean
          description: True if metadata collection is enabled for intellisnap jobs. Only applicable for Indexing v1
          default: false
        jobStartTime:
          type: integer
          format: int32
          description: Start Time for the VM Group Job
        crossAccount:
          $ref: '#/components/schemas/AmazonCrossAccount'
        quiesceGuestFileSystemAndApplications:
          type: boolean
          description: True if VM backup type is File system and application consistent
        useBackupsetDiskFilters:
          type: boolean
          description: True if use of backupset disk filters is allowed
    AmazonCrossAccount:
      title: AmazonCrossAccount
      type: object
      properties:
        shareOnly:
          type: boolean
          description: True if replicate and copy or sharing of amazon snapshot to different amazon account in same or different geographic location is enabled
        fullCopy:
          type: boolean
          description: True if full copy of amazon snapshot to different amazon account is enabled
        destinationAccount:
          $ref: '#/components/schemas/IdName'
    VMGroupCommonProperties:
      type: object
      properties:
        isIndexingV2:
          type: boolean
          description: True if Indexing version is 2
        isDeletedHypervisor:
          type: boolean
          description: True if the hypervisor is deleted
        isETCDSubclient:
          type: boolean
          description: True if this is a ETCD Subclient
        showFullBackupLevel:
          type: boolean
          description: True if we need to show full backup level
        indexingInfo:
          $ref: '#/components/schemas/indexingInfo'
        isHypervisorDeconfigured:
          type: boolean
          description: true if the hypervisor has been deconfigured
        hypervisorType:
          $ref: '#/components/schemas/VSVendor'
        hypervisor:
          x-terraform-ref: '#/components/schemas/IdName'
          $ref: '#/components/schemas/hypervisorvmGroupCommonProp'
        instance:
          $ref: '#/components/schemas/IdName'
        backupset:
          $ref: '#/components/schemas/IdName'
        iDataAgent:
          $ref: '#/components/schemas/IdName'
        dataBackupStoragePolicy:
          $ref: '#/components/schemas/IdName'
    hypervisorvmGroupCommonProp:
      title: hypervisorvmGroupCommonProp
      type: object
      description: Common properties of hypervisor in  vmgroup
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          description: Name of the hypervisor client
        activityControl:
          $ref: '#/components/schemas/ActivityControlOptions'
    ValidationScheduleObject:
      title: ValidationScheduleObject
      type: object
      description: Schedule for application validation for VM Group
      properties:
        id:
          type: integer
          format: int32
        taskId:
          type: integer
          format: int32
          description: Job Id for the application validation task. 0 if schedule is disabled
        description:
          type: string
          description: Description for validation schedule
        isScheduleEnabled:
          type: boolean
          description: True if application validation schedule is enabled
    vmAppValidation:
      title: vmAppValidation
      type: object
      properties:
        validateVMBackups:
          type: boolean
          description: True if VM Backup validation is enabled
        recoveryTarget:
          $ref: '#/components/schemas/IdName'
        schedule:
          $ref: '#/components/schemas/ValidationScheduleObject'
        useSourceVmESXToMount:
          type: boolean
          description: Use Source VM ESX To Mount
        keepValidatedVMsRunning:
          type: boolean
          description: If true then validated VMs will be available until expiration time set on the recovery target
        maximumNoOfThreads:
          type: integer
          format: int32
          description: Number of backup Validation Threads
        customValidationScript:
          $ref: '#/components/schemas/appValidationScript'
        guestCredentials:
          $ref: '#/components/schemas/guestCredentialInfo'
        copy:
          $ref: '#/components/schemas/AppValidationSourceCopy'
    guestCredentialInfo:
      title: guestCredentialInfo
      type: object
      properties:
        savedCredentials:
          x-terraform-id: id
          $ref: '#/components/schemas/IdName'
        credentials:
          $ref: '#/components/schemas/UserNamePassword'
    meditechPropResp:
      title: meditechPropResp
      type: object
      properties:
        systemName:
          type: string
          description: Meditech system name
        listenerIP:
          type: string
          description: Meditech Listener IP of FQDN name
        listenerPort:
          type: integer
          format: int32
          description: Meditech Listener Port
        MBFtimeout:
          type: integer
          format: int32
          description: MBF timeout (in seconds)
          default: 60
        userAccount:
          $ref: '#/components/schemas/UserNamePassword'
    appValidationScript:
      title: appValidationScript
      type: object
      description: Custom validation script to be used during VM backup validation
      properties:
        windows:
          $ref: '#/components/schemas/ValidationScript'
        unix:
          $ref: '#/components/schemas/ValidationScript'
    ValidationScript:
      title: ValidationScript
      type: object
      properties:
        path:
          type: string
          description: Path for the validation script
        arguments:
          type: string
          description: Arguments for the script
        isDisabled:
          type: boolean
          description: Is the script disabled
          default: false
        isLocal:
          type: boolean
          description: 'True if the script is local'
        UNCCredentials:
          $ref: '#/components/schemas/UserNamePassword'
        UNCSavedCredentials:
          $ref: '#/components/schemas/IdName'
    vmGroupDetailsSummary:
      title: vmGroupDetailsSummary
      type: object
      properties:
        hypervisorName:
          type: string
        lastBackupTime:
          type: integer
          format: int32
          description: Last Backup time of the VMGroup
        lastBackupSize:
          type: integer
          format: int64
          description: Last Backup Job Size
        nextBackupTime:
          type: integer
          format: int32
          description: Next Backup Job start time
        isDefaultVMGroup:
          type: boolean
          description: True if subclient is default subclient
          default: false
        backupActivityStatus:
          type: string
          description: Current backup activity status
        plan:
          x-terraform-ref: '#/components/schemas/IdName'
          $ref: '#/components/schemas/PlanIdNameType'
        region:
          $ref: '#/components/schemas/RegionInfo'
        replicationGroup:
          $ref: '#/components/schemas/IdName'
        timeZone:
          $ref: '#/components/schemas/IdName'
    GetVMGroupResp:
      title: GetVMGroupResp
      type: object
      description: ''
      properties:
        id:
          x-terraform-id: true
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        status:
          type: integer
          format: int32
          description: subclient entity status
        vmBackupInfo:
          $ref: '#/components/schemas/vmBackupInfo'
        summary:
          $ref: '#/components/schemas/vmGroupDetailsSummary'
        content:
          type: array
          items:
            $ref: '#/components/schemas/vmContent'
        filters:
          type: array
          items:
            $ref: '#/components/schemas/vmContent'
        diskFilters:
          type: array
          items:
            $ref: '#/components/schemas/vmDiskFilterProp'
        lastBackup:
          $ref: '#/components/schemas/LastBackupJobInfo'
        securityAssociations:
          type: array
          items:
            $ref: '#/components/schemas/SecurityAssoc'
        settings:
          $ref: '#/components/schemas/vmGroupSettings'
        snapshotManagement:
          $ref: '#/components/schemas/snapCopyInfo'
        activityControl:
          $ref: '#/components/schemas/ActivityControlOptions'
        applicationValidation:
          $ref: '#/components/schemas/vmAppValidation'
        accessNodeList:
          $ref: '#/components/schemas/accessNodeListModel'
        commonProperties:
          $ref: '#/components/schemas/VMGroupCommonProperties'
        meditechSystems:
          $ref: '#/components/schemas/meditechPropResp'
    GetVMGroupProperties:
      title: GetVMGroupProperties
      type: object
      description: 'This is used to store VM group details cache'
      properties:
        filterQueryCount:
          type: integer
          format: int32
          description: total count
        vmGroups:
          type: array
          items:
            $ref: '#/components/schemas/GetVMGroupResp'
    CreateVMGroupResp:
      type: object
      properties:
        subclientId:
          x-terraform-id: true
          type: integer
          format: int32
        warningCode:
          type: integer
          format: int32
          default: 0
        errorCode:
          type: integer
          format: int32
          default: 0
        errorMessage:
          type: string
          description: Response message
        warningMessage:
          type: string
          description: Response message
          default: ''
    ApplicationGroupResp:
      type: object
      properties:
        applicationGroup:
          $ref: '#/components/schemas/IdName'
        warningCode:
          type: integer
          format: int32
          default: 0
        errorCode:
          type: integer
          format: int32
          default: 0
        errorMessage:
          type: string
          description: Response message
        warningMessage:
          type: string
          description: Response message
          default: ''
    VMGroupSummary:
      title: ''
      type: object
      description: ''
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        status:
          $ref: '#/components/schemas/VMSLASTATUS'
        HypervisorType:
          $ref: '#/components/schemas/VSVendor'
        vmGroup:
          $ref: '#/components/schemas/IdName'
        hypervisor:
          $ref: '#/components/schemas/IdNameDisplayName'
        instance:
          $ref: '#/components/schemas/IdName'
        plan:
          $ref: '#/components/schemas/PlanIdNameType'
        lastBackup:
          $ref: '#/components/schemas/LastBackupJobInfo'
        company:
          $ref: '#/components/schemas/companyInfo'
        replicationGroup:
          $ref: '#/components/schemas/IdName'
        isDefaultVMGroup:
          type: boolean
          description: True if subclient is default subclient
          default: false
        storagePolicyRetentionExtension:
          type: boolean
          description: True if extend storage policy Retention was set in VMGroup for deleted files
          default: false
        indexingStatus:
          $ref: '#/components/schemas/IndexingStatusType'
        SnapBackupEnabled:
          type: boolean
          description: ' true if snap backup enabled'
          default: false
        tags:
          type: array
          items:
            $ref: '#/components/schemas/IdNameValue'
    ApplicationGroupListResp:
      type: object
      properties:
        applicationGroupCount:
          type: integer
          format: int32
        applicationGroups:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationGroupSummary'
    ApplicationGroupSummary:
      title: ''
      type: object
      description: ''
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        status:
          $ref: '#/components/schemas/VMSLASTATUS'
        clusterType:
          $ref: '#/components/schemas/VSVendor'
        applicationGroup:
          $ref: '#/components/schemas/IdName'
        cluster:
          $ref: '#/components/schemas/IdNameDisplayName'
        instance:
          $ref: '#/components/schemas/IdName'
        plan:
          $ref: '#/components/schemas/IdName'
        lastBackup:
          $ref: '#/components/schemas/LastBackupJobInfo'
        company:
          $ref: '#/components/schemas/companyInfo'
        isDefaultApplicationGroup:
          type: boolean
          description: True if subclient is default subclient
          default: false
        storagePolicyRetentionExtension:
          type: boolean
          description: True if extend storage policy Retention was set in VMGroup for deleted files
          default: false
        indexingStatus:
          $ref: '#/components/schemas/IndexingStatusType'
        snapBackupEnabled:
          type: boolean
          description: ' true if snap backup enabled'
          default: false
    companyInfo:
      title: companyInfo
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: Id of company
        name:
          type: string
          description: Name of company
        multiCommcellId:
          type: integer
          format: int32
          description: Multi Commcell Id of company
    DeviceTypeEnum:
      type: string
      description: Device type of the storage.
      enum:
        - DEFAULT
        - MAGNETIC
        - AMAZON_S3
        - MICROSOFT_AZURE_STORAGE
        - NIRVANIX_MFS
        - RACKSPACE_CLOUD_FILES
        - IRON_MOUNTAIN_ARCHIVE
        - EMC_ATMOS
        - ATT_SYNAPTIC
        - CV_OBJECT_SERVER
        - HITACHI_CONTENT_PLATFORM
        - MEZEO_CS
        - OPENSTACK_OBJECT_STORAGE
        - AMPLIDATA
        - CHINA_MOBILE_ONEST
        - HDFS
        - VERIZON_CLOUD
        - GOOGLE_CLOUD_STORAGE
        - VMWARE_CLOUD
        - ORACLE_STORAGE_CLOUD_SERVICE
        - ORACLE_STORAGE_CLOUD_ARCHIVE_SERVICE
        - ALIBABA_CLOUD_OBJECT_STORAGE_SERVICE
        - HUAWEI_OBJECT_STORAGE
        - ORACLE_CLOUD_INFRASTRUCTURE_OBJECT_STORAGE_S3
        - ORACLE_CLOUD_INFRASTRUCTURE_OBJECT_STORAGE
        - TELEFONICA_OPEN_CLOUD_OBJECT_STORAGE
        - ORACLE_CLOUD_INFRASTRUCTURE_ARCHIVE_STORAGE
        - INSPUR_CLOUD
        - IBM_CLOUD
        - AZURE_DATA_LAKE_STORE
        - KINGSOFT_KS3
        - MICROSOFT_ONEDRIVE
        - IRON_MOUNTAIN_CLOUD
        - MICROSOFT_FILE_SHARE
        - AZURE_DATA_LAKE_STORE_GEN2
        - MICROSOFT_AZURE_COMPATIBLE
        - S3_COMPATIBLE_STORAGE
        - CARINGO_CASTOR
        - DELL_DX_OBJECTSTORAGE
        - AMAZON_GLACIER
        - DDN_WOS
        - GENERIC_HARDWARE_DEDUPE_DEVICE
        - BOOST_HARDWARE_DEDUPE_DEVICE
        - HPE_CATALYST_STORAGE
        - ISILON_ONEFS
        - LOCAL_FILE
        - LOCAL_FILE_WITH_PROP_S3
        - LOCAL_FILE_WITH_PROP_AZURE
        - CEPH_OBJECT_GATEWAY_S3
        - CLOUDIAN_HYPERSTORE
        - DELL_EMC_ECS_S3
        - FUJITSU_STORAGE_ETERNUS
        - HITACHI_CLOUD_PLATOFORM_CLOUD_SCALE
        - IBM_CLOUD_OBJECT_STORAGE_S3
        - NETAPP_STORAGEGRID
        - CCL_VAULT_V2
        - SCALITY_RING
        - WASABI_HOT_CLOUD_STORAGE
        - NUTANIX_OBJECTS
        - NETAPP_ONTAP_S3
        - HITACHI_CLOUD_SCALE
        - PURE_STORAGE_FLASHBLADE
        - VAST_DATA
        - METALLIC_RECOVERY_RESERVE
        - METALLIC_RECOVERY_RESERVE_AZURE_HOT
        - METALLIC_RECOVERY_RESERVE_AZURE_COOL
        - METALLIC_RECOVERY_RESERVE_OCI_STANDARD
        - METALLIC_RECOVERY_RESERVE_OCI_INFREQUENT_ACCESS
        - METALLIC_BUNDLED_STORAGE_O365
        - METALLIC_BUNDLED_STORAGE_ENDPOINT
        - METALLIC_BUNDLED_STORAGE__SALESFORCE
        - METALLIC_BUNDLED_STORAGE_D365
        - METALLIC_BUNDLED_STORAGE_AZURE_AD
        - METALLIC_BUNDLED_STORAGE_AZURE_MAAS
        - MICROSOFT_AZURE_MANAGEMENT
        - MICROSOFT_AZURE_MANAGEMENT_BLOB
        - MICROSOFT_AZURE_MANAGEMENT_FILE
    DeviceType:
      title: DeviceType
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: Device Type Id of the storage.
        name:
          $ref: '#/components/schemas/DeviceTypeEnum'
    StoragePool:
      title: StoragePool
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: Id of Storage Pool
        name:
          type: string
          description: Name of Storage Pool
        type:
          $ref: '#/components/schemas/StoragePoolType'
        retentionPeriodDays:
          type: integer
          format: int32
          description: Retention period of pool in days
        wormStoragePoolFlag:
          type: integer
          format: int32
          description: Bit flag indicating WORM configuration of storage pool. 0 means no lock, 1 means compliance lock, 2 means worm storage lock, 4 means Object worm lock and 8 means bucket worm lock.
        deviceType:
          $ref: '#/components/schemas/DeviceType'
        storageClass:
          type: string
          enum:
            - DEFAULT
            - AWS_STANDARD
            - AWS_REDUNDANCY
            - AWS_SIA
            - AWS_ONEZONE_IA
            - AWS_IT
            - AWS_GLACIER
            - AWS_GLACIER_STANDARD
            - AWS_GLACIER_SIA
            - AWS_GLACIER_OZIA
            - AWS_GLACIER_IT
            - AWS_DEEP_ARCHIVE
            - AWS_DA_STANDARD
            - AWS_DA_SIA
            - AWS_DA_OZIA
            - AWS_DA_IT
            - AWS_GLACIER_IR
            - AWS_GLACIER_IR_STANDARD
            - AWS_GLACIER_IR_SIA
            - AWS_GLACIER_IR_OZIA
            - AWS_GLACIER_IR_IT
            - AZURE_DEFAULT
            - AZURE_HOT
            - AZURE_COOL
            - AZURE_ARCHIVE
            - AZURE_HOT_ARCHIVE
            - AZURE_COOL_ARCHIVE
            - AZURE_COLD
            - AZURE_HOT_COLD
            - AZURE_COOL_COLD
            - GOOGLE_STANDARD
            - GOOGLE_DR_AVAILABILITY
            - GOOGLE_NEARLINE
            - GOOGLE_COLDLINE
            - GOOGLE_ARCHIVE
            - GOOGLE_DEFAULT
            - ALI_DEFAULT
            - ALI_STANDARD
            - ALI_IA
            - ALI_ARCHIVE
            - ALI_ARCHIVE_STANDARD
            - ALI_ARCHIVE_IA
            - K3S_STANDARD
            - K3S_IA
            - ORACLE_STANDARD
            - ORACLE_IA
            - ORACLE_ARCHIVE
            - ORACLE_STANDARD_ARCHIVE
            - ORACLE_IA_ARCHIVE
          description: Storage class of the Storage Pool
        isArchiveStorage:
          type: boolean
          description: Flag indicating whether the storage tier is archive.
        region:
          $ref: '#/components/schemas/IdNameDisplayName'
    StoragePoolType:
      type: string
      title: ''
      description: Type of Storage Pool
      enum:
        - DEDUPLICATION
        - SECONDARY_COPY
        - NON_DEDUPLICATION
        - SCALE_OUT
    StorageType:
      type: string
      title: StorageType
      enum:
        - ALL
        - DISK
        - CLOUD
        - HYPERSCALE
        - TAPE
    SnapshotCopyMapping:
      title: ''
      type: object
      properties:
        vendor:
          $ref: '#/components/schemas/SnapshotCopyMappingVendors'
        source:
          $ref: '#/components/schemas/IdName'
        target:
          $ref: '#/components/schemas/IdName'
        sourceVendor:
          $ref: '#/components/schemas/IdName'
        targetVendor:
          $ref: '#/components/schemas/IdName'
        subclients:
          type: array
          items:
            $ref: '#/components/schemas/IdName'
        mappingType:
          $ref: '#/components/schemas/MappingType'

    MappingType:
      title: ''
      description: Mapping type for pure storage replicaton
      type: string
      enum:
        - DEFAULT_MAPPING
        - SUBCLIENT_MAPPING
    SnapshotCopyMappingVendors:
      title: ''
      description: Snapshot vendors available for Snap Copy mappings
      type: string
      enum:
        - NETAPP
        - AMAZON
        - PURE
        - AZURE
    ReplicationSubclientFilter:
      title: ''
      description: Get subclient for replications mapping association
      type: string
      properties:
        planId:
          type: integer
          format: int32
        copyId:
          type: integer
          format: int32
        snapEngineId:
          type: integer
          format: int32
    PlanCopyTypeName:
      title: ''
      type: string
      enum:
        - DEFAULT_MIRROR
        - DEFAULT_VAULT_REPLICA
        - MIRROR
        - VAULT_REPLICA
        - SNAPSHOT_PRIMARY
    PlanCopyType:
      title: ''
      type: string
      enum:
        - SYNCHRONOUS
        - SELECTIVE
        - PRIMARY
    JobsForSnapCatalog:
      type: object
      properties:
        jobs:
          type: array
          items:
            $ref: '#/components/schemas/JobDetailsForSnapCatalog'
        operationType:
          type: string
          enum:
            - UNPICK
            - PICK
    JobDetailsForSnapCatalog:
      type: object
      properties:
        jobId:
          type: integer
          format: int32
          description: Job Id to pick or unpick
        commcellId:
          type: integer
          format: int32
          description: CommCell Id on which job will be picked or unpicked
    UpdatePassKey:
      title: UpdatePassKey
      type: object
      description: 'Model to create, edit or disable passkey'
      properties:
        currentPassKey:
          type: string
          description: The current passkey for restricting backup restores.
        newPassKey:
          type: string
          description: The new passkey for restricting backup restores.
        confirmPassKey:
          type: string
          description: Confirm the new passkey for restricting backup restores.
        operationType:
          type: string
          enum:
            - CREATE
            - DISABLE
            - EDIT
          description: The type of passkey operation
    UpdateAuthRestore:
      title: UpdateAuthRestore
      type: object
      properties:
        passKey:
          type: string
          description: The existing passkey for restricting backup restores.
        authOpType:
          type: boolean
          description: The type of authorize for restore operation
        expirationTime:
          type: integer
          format: int32
          description: 'The duration(in unix time) for which a user can continue browsing and restoring backup data without being prompted to enter the passkey, again.'
    VirtualMachineDetails:
      title: VirtualMachineDetails
      type: object
      properties:
        displayName:
          type: string
          description: The display name of the virtual machine
        summary:
          $ref: '#/components/schemas/VMDetailSummary'
        applicationValidationResults:
          $ref: '#/components/schemas/VMApplicationValidationResults'
        passkey:
          $ref: '#/components/schemas/VMPasskey'
        security:
          $ref: '#/components/schemas/VMSecurity'
        activityControl:
          type: array
          items:
            $ref: '#/components/schemas/ActivityControlOptionsProp'
        tags:
          type: array
          items:
            $ref: '#/components/schemas/IdNameValue'
    VMDetailSummary:
      title: VMDetailSummary
      type: object
      description: The Virtual Machine detail summary. Hypervisor is the software that creates and runs virtual machines(VMs).
      properties:
        hypervisor:
          $ref: '#/components/schemas/IdName'
        vmGroup:
          $ref: '#/components/schemas/IdName'
        host:
          type: string
          description: The host name for the computer where the source virtual machine or instance resides.
        os:
          type: string
          description: The operating system version for the VM or instance.
        vendor:
          $ref: '#/components/schemas/VSVendor'
        vmSize:
          type: integer
          format: int32
          description: The total space allocated(in bytes) for the virtual machine.
        applicationSize:
          type: integer
          format: int32
          description: The amount of data being protected for the VM client(in bytes)
        plan:
          $ref: '#/components/schemas/IdName'
        latestRecoveryPoint:
          type: integer
          format: int32
          description: The latest recovery time for the vm(in unix)
        oldestRecoveryPoint:
          type: integer
          format: int32
          description: The oldest recovery time for the vm(in unix)
        status:
          type: string
          description: 'The status of the backup for the VM, instance, or  container.'
          enum:
            - PROTECTED
            - NOT_PROTECTED
            - PENDING
            - BACKED_UP_WITH_ERROR
            - DISCOVERED
        SLA:
          $ref: '#/components/schemas/VMSla'
        company:
          $ref: '#/components/schemas/IdName'
    VMPasskey:
      title: VMPasskey
      type: object
      properties:
        authType:
          type: string
          description: The authentication type set for browse and restore
          enum:
            - USE_LOGIN
            - USE_PASSKEY
        expirationTime:
          type: integer
          format: int32
          description: 'The duration(in unix time) for which a user can continue browsing and restoring backup data without being prompted to enter the passkey, again.'
        passKeyRequiredForRestore:
          type: boolean
          description: To tell if passkey is required for browse and restore
        enableAuthorizeForRestore:
          type: boolean
          description: To tell if user is authorized for restore
    VMSecurity:
      title: VMSecurity
      type: object
      properties:
        associations:
          type: array
          items:
            $ref: '#/components/schemas/VMSecurityAssoc'
        permissions:
          type: array
          items:
            $ref: '#/components/schemas/PermissionResp'
        owners:
          type: array
          items:
            $ref: '#/components/schemas/SecurityOwnersAssoc'
      description: ''
    SecurityOwnersAssoc:
      title: ''
      type: object
      properties:
        userId:
          type: integer
          format: int32
        userName:
          type: string
        userGroupId:
          type: integer
          format: int32
        userGroupName:
          type: string
      description: A list of users or user groups which have permissions on the entity
    VMSecurityAssoc:
      title: ''
      type: object
      properties:
        user:
          $ref: '#/components/schemas/IdNameCompany'
        useGroup:
          $ref: '#/components/schemas/IdNameCompany'
        role:
          $ref: '#/components/schemas/IdName'
      description: A list of users or user groups each having a specific set of roles that determine the kind of operations they can perform on the entity.
    UpdateVMProperties:
      title: UpdateVMProperties
      type: object
      properties:
        plan:
          $ref: '#/components/schemas/IdName'
        security:
          $ref: '#/components/schemas/VMSecurity'
        requirePasskeyForRestore:
          $ref: '#/components/schemas/UpdatePassKey'
        authKeyRestore:
          $ref: '#/components/schemas/UpdateAuthRestore'
    MediaAgentListResponse:
      type: object
      properties:
        mediaAgents:
          type: array
          items:
            $ref: '#/components/schemas/MediaAgentSummary'
      title: ''
    MediaAgentSummary:
      type: object
      description: ''
      properties:
        id:
          type: integer
          format: int32
          description: Id of the media agent.
        name:
          type: string
          description: Name of the media agent.
        displayName:
          type: string
          description: Display name of the media agent.
        status:
          type: string
          description: Current status of the media agent.
          enum:
            - ONLINE
            - OFFLINE
            - MAINTENANCE
        isUnlicensedMA:
          type: boolean
          description: Used to determine if the MA is licensed or not.
        offlineReason:
          type: string
          description: Provides a reason for the media agent being offline. Only given when the media agent is offline.
        offlineReasonValue:
          type: integer
          format: int32
          description: A flag for offline reason. Only given when the media agent is offline.
        operatingSystem:
          $ref: '#/components/schemas/IdNameType'
        version:
          type: string
          description: The service pack of the media agent.
        releaseId:
          type: integer
          format: int32
          description: Release version of the media agent.
        description:
          type: string
          description: Description of the media agent.
        company:
          $ref: '#/components/schemas/IdName'
    MediaAgentGeneralSummary:
      type: object
      description: ''
      properties:
        id:
          type: integer
          format: int32
          description: Id of the media agent.
        name:
          type: string
          description: Name of the media agent.
        displayName:
          type: string
          description: Display name of the media agent.
        status:
          type: string
          description: Current status of the media agent.
          enum:
            - ONLINE
            - OFFLINE
            - MAINTENANCE
        offlineReason:
          type: string
          description: Provides a reason for the media agent being offline. Only given when the media agent is offline.
        operatingSystem:
          type: string
          description: Name of the operating system of the media agent.
        version:
          type: string
          description: The service pack of the media agent.
        description:
          type: string
          description: Description of the media agent.
    MediaAgentForDDBListResponse:
      type: object
      properties:
        mediaAgents:
          type: array
          items:
            $ref: '#/components/schemas/MediaAgentForDDBSummary'
      title: ''
    MediaAgentForDDBSummary:
      type: object
      description: ''
      properties:
        id:
          type: integer
          format: int32
          description: Id of the media agent.
        name:
          type: string
          description: Name of the media agent.
        displayName:
          type: string
          description: Display name of the media agent.
        releaseId:
          type: integer
          format: int32
          description: Release version of the media agent.
        SIMOSId:
          type: integer
          format: int32
          description: Operating System Id of the media agent.
        isDDBSubclientConfigured:
          type: boolean
          description: Used to determine if a DDB subclient has been configured for this media agent.
        OSType:
          type: string
          description: Media Agent operating system type.
        isConfigured:
          type: boolean
          description: Used to determine if the Media Agent is configured or not.
        DDBDisks:
          type: array
          description: List of DDB disks hosted on this MediaAgent
          items:
            $ref: '#/components/schemas/DDBDiskInfo'
    MediaAgent:
      type: object
      properties:
        general:
          $ref: '#/components/schemas/MediaAgentGeneralSummary'
        indexCache:
          $ref: '#/components/schemas/IndexCache'
        control:
          $ref: '#/components/schemas/MediaAgentControl'
        security:
          type: array
          items:
            $ref: '#/components/schemas/SecurityAssoc'
    IndexCache:
      type: object
      properties:
        path:
          type: string
          description: Path where the index cache is maintained.
        logsCache:
          $ref: '#/components/schemas/MediaAgentLogsCache'
    MediaAgentLogsCache:
      type: object
      properties:
        enabled:
          type: boolean
          description: 'This tag determines if the logs cache has been enabled or not. '
        path:
          type: string
          description: 'If the logs cache is enabled, this tag gives the path to store the logs cache.'
    MediaAgentControl:
      type: object
      properties:
        enabled:
          type: boolean
          description: Determines if the media agent is currently enabled or disabled.
        optimizeForConcurrentLANBackups:
          type: boolean
          description: 'Allows optimization for concurrent LAN backups. If set to true, default value for parallel data transfer operations will be 100. If set to false, default value of parallel data transfer operations will be set to 25.'
        maintenanceMode:
          type: boolean
          description: 'Specifies whether the MediaAgent is available for data protection, data recovery and auxiliary copy operations.'
        ransomwareProtection:
          type: boolean
          description: 'If set to true, ransomware protection against the media agent is enabled. If set to false, ransomware protection against media agent is disabled.'
        parallelDataTransferOperations:
          type: integer
          format: int32
          description: 'Specifies the number of parallel data operations that can take place. '
    UpdateMediaAgent:
      type: object
      properties:
        description:
          type: string
          description: Provides the media agent with a new description.
        control:
          $ref: '#/components/schemas/MediaAgentControl'
        indexCache:
          $ref: '#/components/schemas/IndexCache'
        security:
          $ref: '#/components/schemas/UpdateSecurityAssoc'
    CreateHypervisorGroupReq:
      type: object
      description: Create a hypervisor group
      properties:
        name:
          type: string
          description: The name of the hypervisor group being created
        skipCredentialValidation:
          type: boolean
          description: if credential validation has to be skipped.
          default: false
        accessNodes:
          #x-terraform-setter: AccessNodeList.AccessNode
          type: array
          items:
            $ref: '#/components/schemas/accessNodeModel'
        credentials:
          $ref: '#/components/schemas/IdName'
        etcdProtection:
          $ref: '#/components/schemas/EtcdProtectionItem'
          description: Create an application group etcd (system generated) with pre-defined content
        planEntity:
          x-terraform-include: false
          $ref: '#/components/schemas/IdName'
      required:
        - name
        - hypervisorType
    UpdateHypervisorGroupReq:
      type: object
      description: Update a hypervisor group
      properties:
        accessNodes:
          type: array
          items:
            $ref: '#/components/schemas/accessNodeModel'
        fbrUnixMediaAgent:
          $ref: '#/components/schemas/IdName'
        activityControl:
          $ref: '#/components/schemas/ActivityControlOptions'
        security:
          $ref: '#/components/schemas/VMHypervisorSecurityProp'
        newName:
          x-terraform-mapping: displayName
          type: string
          description: The name of the hypervisor that has to be changed
        settings:
          $ref: '#/components/schemas/hypervisorSettings'
        credentials:
          $ref: '#/components/schemas/IdName'
        skipCredentialValidation:
          type: boolean
          description: if credential validation has to be skipped.
          default: false
      required:
        - hypervisorType
    CreateHypervisorGroupVMWare:
      title: VMWare
      allOf:
        - $ref: '#/components/schemas/CreateHypervisorGroupReq'
        - type: object
          description: Create a hypervisor group with VMWare as the destination vendor
          properties:
            hypervisorType:
              type: string
              x-terraform-constant: VMW
              enum:
                - VMW
            vcenterHostName:
              type: string
              description: Vcenter hostname
            userName:
              type: string
              description: Vcenter username
            password:
              type: string
              description: Vcenter password
          required:
            - hypervisorType
            - vcenterHostName
            - userName
            - password
    CreateHypervisorGroupHyperV:
      title: HyperV
      allOf:
        - $ref: '#/components/schemas/CreateHypervisorGroupReq'
        - type: object
          description: Create a hypervisor group with HyperV as the destination vendor
          properties:
            hypervisorType:
              type: string
              x-terraform-constant: Hyper-V
              enum:
                - Hyper-V
            serverName:
              type: string
              description: 'Hyper-V hostname '
            userName:
              type: string
              description: 'Hyper-V userName '
            password:
              type: string
              description: 'Hyper-V password '
          required:
            - hypervisorType
            - serverName
            - userName
            - password
    CreateHypervisorGroupNutanix:
      title: Nutanix
      allOf:
        - $ref: '#/components/schemas/CreateHypervisorGroupReq'
        - type: object
          description: Create a hypervisor group with Nutanix as the destination vendor
          properties:
            hypervisorType:
              type: string
              enum:
                - NUTANIX
            hostName:
              type: string
              description: 'Nutanix hostname '
            userName:
              type: string
              description: 'Nutanix userName '
            password:
              type: string
              description: 'Nutanix password '
          required:
            - hypervisorType
            - hostName
            - userName
            - password
    CreateHypervisorGroupProxmox:
      title: Proxmox
      allOf:
        - $ref: '#/components/schemas/CreateHypervisorGroupReq'
        - type: object
          description: Create a hypervisor group with Proxmox as the destination vendor
          properties:
            hypervisorType:
              type: string
              enum:
                - PROXMOX
            hostName:
              type: string
              description: 'Proxmox hostname '
            userName:
              type: string
              description: 'proxmox userName '
            password:
              type: string
              description: 'proxmox password '
          required:
            - hypervisorType
            - hostName
            - userName
            - password
    CreateHypervisorGroupAmazon:
      title: Amazon
      allOf:
        - $ref: '#/components/schemas/CreateHypervisorGroupReq'
        - type: object
          description: Create a hypervisor group with Amazon as the destination vendor
          properties:
            hypervisorType:
              type: string
              x-terraform-constant: AMAZON
              enum:
                - Amazon
            accessKey:
              type: string
              description: Access Key of Amazon login
            RoleARN:
              type: string
              description: Role ARN for STS assume role with IAM policy
            secretKey:
              type: string
              description: secret Key of Amazon login
            Region:
              type: string
              description: AWS region if Iam role is used
            useIamRole:
              type: boolean
              description: if Iam Role is used
            enableAWSAdminAccount:
              type: boolean
            useServiceAccount:
              type: string
              description: Clientname to be used as Admin Account
            useHostedInfrastructure:
              type: boolean
              description: Use Metallic hosted infrastructure
          required:
            - hypervisorType
            - accessKey
            - secretKey
            - regionEndPoints
            - useIamRole
    CreateHypervisorGroupAzure:
      title: Azure
      allOf:
        - $ref: '#/components/schemas/CreateHypervisorGroupReq'
        - type: object
          description: Create a hypervisor group with Azure as the destination vendor
          properties:
            hypervisorType:
              type: string
              x-terraform-constant: AZURE_V2
              enum:
                - AZURE_V2
            useManagedIdentity:
              type: boolean
              description: "set to true, if you want to use System Managed identitiy of Access node for Authentication"
              default: false
            subscriptionId:
              type: string
              description: 'Subscription ID of Azure'
            workloadRegion:
              $ref: '#/components/schemas/IdName'
          required:
            - hypervisorType
            - subscriptionId
    CreateHypervisorGroupAzureStack:
      title: AzureStack
      allOf:
        - $ref: '#/components/schemas/CreateHypervisorGroupReq'
        - type: object
          description: Create a hypervisor group with Azure as the destination vendor
          properties:
            hypervisorType:
              type: string
              enum:
                - AZURE_STACK
            resourceManagerURL:
              type: string
              description: resource Manager URL for Azure Stack
            tenantId:
              type: string
              description: Tenant id of Azure login Application
            subscriptionId:
              type: string
              description: 'subscription id of Azure '
            ApplicationId:
              type: string
              description: Application id of Azure login Application
            ApplicationPassword:
              type: string
              description: Application Password of Azure login Application
          required:
            - hypervisorType
            - tenantId
            - serverName
            - subscriptionId
            - ApplicationId
            - ApplicationPassword
    CreateHypervisorGroupGoogleCloud:
      title: GoogleCloud
      allOf:
        - $ref: '#/components/schemas/CreateHypervisorGroupReq'
        - type: object
          description: Create a hypervisor group with Google Cloud as the destination vendor
          properties:
            hypervisorType:
              type: string
              x-terraform-constant: GOOGLE_CLOUD
              enum:
                - GOOGLE_CLOUD
            serviceAccountId:
              type: string
              description: service account id of google cloud
            userName:
              type: string
              description: username of GCP login Application
          required:
            - hypervisorType
            - serviceAccountId
            - userName
    CreateHypervisorGroupXen:
      title: Xen
      allOf:
        - $ref: '#/components/schemas/CreateHypervisorGroupReq'
        - type: object
          description: Create a hypervisor group with Google Cloud as the destination vendor
          properties:
            hypervisorType:
              type: string
              x-terraform-constant: XEN_SERVER
              enum:
                - XEN_SERVER
            serverName:
              type: string
              description: 'Xen hostname '
            userName:
              type: string
              description: 'Xen userName '
            password:
              type: string
              description: 'Xen password '
          required:
            - hypervisorType
            - serverName
            - userName
            - password
    CreateHypervisorGroupRhev:
      title: Rhev
      allOf:
        - $ref: '#/components/schemas/CreateHypervisorGroupReq'
        - type: object
          description: Create a hypervisor group with Rhev  as the destination vendor
          properties:
            hypervisorType:
              type: string
              x-terraform-constant: REDHAT
              enum:
                - REDHAT
            RhevMManager:
              type: string
              description: 'Rhev Manager '
            userName:
              type: string
              description: 'Rhev userName '
            password:
              type: string
              description: 'Rhev password '
          required:
            - hypervisorType
            - RhevMManager
            - userName
            - password
    CreateHypervisorGroupDocker:
      title: Docker
      allOf:
        - $ref: '#/components/schemas/CreateHypervisorGroupReq'
        - type: object
          description: Create a hypervisor group with Docker as the destination vendor
          properties:
            hypervisorType:
              type: string
              x-terraform-constant: DOCKER
              enum:
                - DOCKER
            serverName:
              type: string
              description: 'Docker hostname '
            userName:
              type: string
              description: 'Docker userName '
            password:
              type: string
              description: 'Docker password '
          required:
            - hypervisorType
            - serverName
            - userName
            - password
    CreateHypervisorGroupOpenstack:
      title: OpenStack
      allOf:
        - $ref: '#/components/schemas/CreateHypervisorGroupReq'
        - type: object
          description: Create a hypervisor group with OpenStack as the destination vendor
          properties:
            hypervisorType:
              type: string
              x-terraform-constant: OPENSTACK
              enum:
                - OPENSTACK
            keynoteAddress:
              type: string
              description: 'OpenStack KeyNote address '
            userName:
              type: string
              description: 'OpenStack userName '
            password:
              type: string
              description: 'OpenStack password '
            openstackDomain:
              type: string
              description: 'OpenStack Domain Name '
          required:
            - hypervisorType
            - keynoteAddress
            - userName
            - password
    CreateHypervisorGroupOracleCloud:
      title: OracleCloud
      allOf:
        - $ref: '#/components/schemas/CreateHypervisorGroupReq'
        - type: object
          description: Create a hypervisor group with oracleCloud as the destination vendor
          properties:
            hypervisorType:
              type: string
              x-terraform-constant: ORACLE_CLOUD_INFRASTRUCTURE
              enum:
                - ORACLE_CLOUD_INFRASTRUCTURE
            tenancyOCId:
              type: string
              description: OCID for the tenant.
            userOCId:
              type: string
              description: OCID for the admin user for the hypervisor
            fingerPrint:
              type: string
              description: Finger print for the private key
            privateKeyFileName:
              type: string
              description: File Name for the private key
            privateKeyPassword:
              type: string
              description: password for the private key.This is the passphrase that was used to encrypt the private key.
            regionName:
              type: string
              description: home region for the tenant
          required:
            - tenancyOCId
            - userOCId
            - fingerPrint
            - privateKeyFileName
            - regionName
    CreateHypervisorGroupAliCloud:
      title: AliCloud
      allOf:
        - $ref: '#/components/schemas/CreateHypervisorGroupReq'
        - type: object
          description: Create a hypervisor group with Ali Baba as the destination vendor
          properties:
            hypervisorType:
              type: string
              x-terraform-constant: ALIBABA_CLOUD
              enum:
                - ALIBABA_CLOUD
            accessKey:
              type: string
              description: Access key of alibaba cloud
            secretKey:
              type: string
              description: secret key of alibaba cloud
          required:
            - hypervisorType
            - accessKey
            - secretKey
    CreateHypervisorGroupOracleVM:
      title: OracleVM
      allOf:
        - $ref: '#/components/schemas/CreateHypervisorGroupReq'
        - type: object
          description: Create a hypervisor group with Oracle VM as the destination vendor
          properties:
            hypervisorType:
              type: string
              x-terraform-constant: ORACLE_VM
              enum:
                - ORACLE_VM
            oracleVMManager:
              type: string
              description: oracle VM Manager
            userName:
              type: string
              description: Username of the oracle VM info
            password:
              type: string
              description: password of the oracle VM info
          required:
            - hypervisorType
            - oracleVMManager
            - userName
            - password
    RedHatOpenShiftGluster:
      title: RedHatOpenShift
      type: object
      properties:
        hostName:
          type: string
          description: 'Gluster Host Hostname '
        authType:
          type: integer
          format: int32
          description: 'Gluster Host authtype '
        credentials:
          $ref: '#/components/schemas/UserNamePassword'
      required:
        - hostName
    CreateHypervisorGroupRedHatOpenShift:
      title: VCloud
      allOf:
        - $ref: '#/components/schemas/CreateHypervisorGroupReq'
        - type: object
          description: Create a hypervisor group with openShift as the destination vendor
          properties:
            hypervisorType:
              type: string
              x-terraform-constant: REDHAT_OPENSHIFT
              enum:
                - REDHAT_OPENSHIFT
            serverName:
              type: string
              description: 'redHatOpenShift hostname '
            userName:
              type: string
              description: 'redHatOpenShift userName '
            password:
              type: string
              description: 'redHatOpenShift password '
            glusterHostCredentials:
              $ref: '#/components/schemas/RedHatOpenShiftGluster'
          required:
            - hypervisorType
            - glusterHostCredentials
            - userName
            - password
            - hostName
    CreateHypervisorGroupVCloud:
      title: VCloud
      allOf:
        - $ref: '#/components/schemas/CreateHypervisorGroupReq'
        - type: object
          description: Create a hypervisor group with VMware Cloud Director as the destination vendor
          properties:
            hypervisorType:
              type: string
              enum:
                - VCLOUD
            vOrganizationName:
              type: string
              description: Organization name of VMware Cloud Director
            vOrganizationGuid:
              type: string
              description: Organization Guid of VMware Cloud Director
            vCloudDirector:
              type: string
              description: VMware Cloud Director Name
            hostName:
              type: string
              description: VMware Cloud Director hostname or organization guid if org client
            userName:
              type: string
              description: VMware Cloud Director username
            password:
              type: string
              description: VMware Cloud Director password
            createOrgAccount:
              type: boolean
              description: True if organization account to be used
              default: false
            autoCompany:
              type: string
              description: indicates the mode for company association
              enum:
                - AUTO_CREATE_NEW
                - USE_EXISTING
                - DO_NOT_AUTO_CREATE
            companyId:
              type: integer
              format: int32
              description: company id is required if use existing mode is selected for org client
            companyName:
              type: string
              description: company name is required for org client
          required:
            - hypervisorType
            - hostname
    CreateHypervisorGroupAzureStackHCI:
      title: AzureStackHCI
      allOf:
        - $ref: '#/components/schemas/CreateHypervisorGroupReq'
        - type: object
          description: Create a hypervisor group with Azure Stack HCI as the destination vendor
          properties:
            hypervisorType:
              type: string
              x-terraform-constant: AZURE_STACK_HCI
              enum:
                - AZURE_STACK_HCI
            clusterName:
              type: string
              description: 'Azure Stack HCI cluster name '
            userName:
              type: string
              description: 'Azure Stack HCI userName '
            password:
              type: string
              description: 'Azure Stack HCI password '
          required:
            - hypervisorType
            - clusterName
            - userName
            - password
    UpdateHypervisorGroupVMWare:
      title: VMWare
      allOf:
        - $ref: '#/components/schemas/UpdateHypervisorGroupReq'
        - type: object
          description: Update a hypervisor group with VMWare as the destination vendor
          properties:
            hypervisorType:
              type: string
              enum:
                - VMW
            vcenterHostName:
              type: string
              description: Vcenter hostname
            userName:
              type: string
              description: Vcenter username
            password:
              type: string
              description: Vcenter password
    UpdateHypervisorGroupHyperV:
      title: HyperV
      allOf:
        - $ref: '#/components/schemas/UpdateHypervisorGroupReq'
        - type: object
          description: Update a hypervisor group with VMWare as the destination vendor
          properties:
            hypervisorType:
              type: string
              enum:
                - Hyper-V
            serverName:
              type: string
              description: 'Hyper-V hostname '
            userName:
              type: string
              description: 'Hyper-V userName '
            password:
              type: string
              description: 'Hyper-V password '
    UpdateHypervisorGroupAmazon:
      title: Amazon
      allOf:
        - $ref: '#/components/schemas/UpdateHypervisorGroupReq'
        - type: object
          description: Update a hypervisor group with Amazon as the destination vendor
          properties:
            hypervisorType:
              type: string
              enum:
                - Amazon
            accessKey:
              type: string
              description: Access Key of Amazon login
            RoleARN:
              type: string
              description: Role ARN for STS assume role with IAM policy
            secretKey:
              type: string
              description: secret Key of Amazon login
            Region:
              type: string
              description: AWS region if Iam role is used
            useIamRole:
              type: boolean
              description: if Iam Role is used
            useServiceAccount:
              type: string
              description: Clientname to be used as Admin Account
            useHostedInfrastructure:
              type: boolean
              description: Use Metallic hosted infrastructure
    UpdateHypervisorGroupAzure:
      title: Azure
      allOf:
        - $ref: '#/components/schemas/UpdateHypervisorGroupReq'
        - type: object
          description: Update a hypervisor group with Azure as the destination vendor
          properties:
            hypervisorType:
              type: string
              enum:
                - Azure_V2
            tenantId:
              type: string
              description: Tenant id of Azure login Application
            serverName:
              type: string
              description: Client Name to Update
            subscriptionId:
              type: string
              description: 'subscription id of Azure '
            userName:
              type: string
              description: Application id of Azure login Application
            password:
              type: string
              description: Application Password of Azure login Application
            useManagedIdentity:
              type: boolean
              description: Use managed identities for Azure authentication
    UpdateHypervisorGroupAzureStack:
      title: AzureStack
      allOf:
        - $ref: '#/components/schemas/UpdateHypervisorGroupReq'
        - type: object
          description: Update a hypervisor group with Azure Stack as the destination vendor
          properties:
            hypervisorType:
              type: string
              enum:
                - AZURE_STACK
            tenantId:
              type: string
              description: Tenant id of Azure Stack login Application
            serverName:
              type: string
              description: Client Name to Update
            subscriptionId:
              type: string
              description: 'subscription id of Azure Stack'
            ApplicationId:
              type: string
              description: Application id of Azure login Application
            ApplicationPassword:
              type: string
              description: Application Password of Azure login Application
            resourceManagerURL:
              type: string
              description: Resource manager URL for Azure Stack client
            useManagedIdentity:
              type: boolean
              description: Use managed identities for Azure stack authentication
    UpdateHypervisorGroupGoogleCloud:
      title: GoogleCloud
      allOf:
        - $ref: '#/components/schemas/UpdateHypervisorGroupReq'
        - type: object
          description: Update a hypervisor group with Google Cloud as the destination vendor
          properties:
            hypervisorType:
              type: string
              enum:
                - GOOGLE_CLOUD
            serviceAccountId:
              type: string
              description: service account id of google cloud
            userName:
              type: string
              description: username of GCP login Application
            password:
              type: string
              description: Base64 encrypted Service Account ID
    UpdateHypervisorGroupXen:
      title: Xen
      allOf:
        - $ref: '#/components/schemas/UpdateHypervisorGroupReq'
        - type: object
          description: Update a hypervisor group with Google Cloud as the destination vendor
          properties:
            hypervisorType:
              type: string
              enum:
                - XEN_SERVER
            serverName:
              type: string
              description: 'Xen hostname '
            userName:
              type: string
              description: 'Xen userName '
            password:
              type: string
              description: 'Xen password '
    UpdateHypervisorGroupRhev:
      title: Rhev
      allOf:
        - $ref: '#/components/schemas/UpdateHypervisorGroupReq'
        - type: object
          description: Update a hypervisor group with Rhev  as the destination vendor
          properties:
            hypervisorType:
              type: string
              enum:
                - REDHAT
            RhevMManager:
              type: string
              description: 'Rhev Manager '
            userName:
              type: string
              description: 'Rhev userName '
            password:
              type: string
              description: 'Rhev password '
    UpdateHypervisorGroupDocker:
      title: Docker
      allOf:
        - $ref: '#/components/schemas/UpdateHypervisorGroupReq'
        - type: object
          description: Update a hypervisor group with Docker as the destination vendor
          properties:
            hypervisorType:
              type: string
              enum:
                - DOCKER
            serverName:
              type: string
              description: 'Docker hostname '
            userName:
              type: string
              description: 'Docker userName '
            password:
              type: string
              description: 'Docker password '
    UpdateHypervisorGroupOpenstack:
      title: OpenStack
      allOf:
        - $ref: '#/components/schemas/UpdateHypervisorGroupReq'
        - type: object
          description: Update a hypervisor group with OpenStack as the destination vendor
          properties:
            hypervisorType:
              type: string
              enum:
                - OPENSTACK
            keynoteAddress:
              type: string
              description: 'OpenStack KeyNote address '
            userName:
              type: string
              description: 'OpenStack userName '
            password:
              type: string
              description: 'OpenStack password '
            openstackDomain:
              type: string
              description: 'OpenStack Domain Name '
    UpdateHypervisorGroupOracleCloud:
      title: OracleCloud
      allOf:
        - $ref: '#/components/schemas/UpdateHypervisorGroupReq'
        - type: object
          description: Update a hypervisor group with oracleCloud as the destination vendor
          properties:
            hypervisorType:
              type: string
              enum:
                - ORACLE_CLOUD_INFRASTRUCTURE
            tenancyOCId:
              type: string
              description: OCID for the tenant.
            userOCId:
              type: string
              description: OCID for the admin user for the hypervisor
            fingerPrint:
              type: string
              description: Finger print for the private key
            privateKeyFileName:
              type: string
              description: File Name for the private key
            privateKeyPassword:
              type: string
              description: password for the private key.This is the passphrase that was used to encrypt the private key.
            regionName:
              type: string
              description: home region for the tenant
    UpdateHypervisorGroupAliCloud:
      title: AliCLoud
      allOf:
        - $ref: '#/components/schemas/UpdateHypervisorGroupReq'
        - type: object
          description: Update a hypervisor group with Ali Baba as the destination vendor
          properties:
            hypervisorType:
              type: string
              enum:
                - ALIBABA_CLOUD
            accessKey:
              type: string
              description: Access key of alibaba cloud
            secretKey:
              type: string
              description: secret key of alibaba cloud
            hostURL:
              type: string
              description: host URL of alibaba cloud
    UpdateHypervisorGroupOracleVM:
      title: OracleVM
      allOf:
        - $ref: '#/components/schemas/UpdateHypervisorGroupReq'
        - type: object
          description: Update a hypervisor group with Oracle VM as the destination vendor
          properties:
            hypervisorType:
              type: string
              enum:
                - ORACLE_VM
            oracleVMManager:
              type: string
              description: oracle VM Manager
            userName:
              type: string
              description: Username of the oracle VM info
            password:
              type: string
              description: password of the oracle VM info
    UpdateHypervisorGroupRedHatOpenShift:
      title: RedHatOpenShift
      allOf:
        - $ref: '#/components/schemas/UpdateHypervisorGroupReq'
        - type: object
          description: Update a hypervisor group with openShift as the destination vendor
          properties:
            hypervisorType:
              type: string
              enum:
                - REDHAT_OPENSHIFT
            serverName:
              type: string
              description: 'redHatOpenShift hostname '
            userName:
              type: string
              description: 'redHatOpenShift userName '
            password:
              type: string
              description: 'redHatOpenShift password '
            glusterHostCredentials:
              $ref: '#/components/schemas/RedHatOpenShiftGluster'
    UpdateHypervisorGroupVCloud:
      title: VCloud
      allOf:
        - $ref: '#/components/schemas/UpdateHypervisorGroupReq'
        - type: object
          description: Update a hypervisor group with VMware Cloud Director as the destination vendor
          properties:
            hypervisorType:
              type: string
              enum:
                - VCLOUD
            vOrganizationName:
              type: string
              description: Organization name of VCloud Director
            vOrganizationGuid:
              type: string
              description: Organization Guid of VCloud Director
            hostName:
              type: string
              description: VCloud Director Name
            vcenterHostName:
              type: string
              description: Vcenter hostname
            vcenterUserName:
              type: string
              description: Vcenter username
            vcenterPassword:
              type: string
              description: Vcenter password
            createOrgAccount:
              type: boolean
              description: True if organization account to be used
              default: false
            userName:
              type: string
              description: vCloud username
            password:
              type: string
              description: VCloud base 64 encoded password
          required:
            - hypervisorType
    UpdateHypervisorGroupNutanix:
      title: Nutanix
      allOf:
        - $ref: '#/components/schemas/UpdateHypervisorGroupReq'
        - type: object
          description: Update a hypervisor group with Nutanix as the destination vendor
          properties:
            hypervisorType:
              type: string
              enum:
                - NUTANIX
            hostName:
              type: string
              description: 'Nutanix hostname '
            userName:
              type: string
              description: 'Nutanix userName '
            password:
              type: string
              description: 'Nutanix password '
    UpdateHypervisorGroupAzureStackHCI:
      title: AzureStackHCI
      allOf:
        - $ref: '#/components/schemas/UpdateHypervisorGroupReq'
        - type: object
          description: Update a hypervisor group with Azure Stack HCI as the destination vendor
          properties:
            hypervisorType:
              type: string
              enum:
                - AZURE_STACK_HCI
            clusterName:
              type: string
              description: 'Azure Stack HCI cluster name '
            userName:
              type: string
              description: 'Azure Stack HCI userName '
            password:
              type: string
              description: 'Azure Stack HCI password '
    VMHypervisorSecurityProp:
      type: object
      properties:
        clientOwners:
          type: string
          description: Client owners for the Hypervisor
        associatedUserGroups:
          type: array
          items:
            $ref: '#/components/schemas/IdName'
    hypervisorGeneralProperties:
      type: object
      title: hypervisorGeneralProperties
      properties:
        vendor:
          $ref: '#/components/schemas/VSVendor'
        vmBackupInfo:
          $ref: '#/components/schemas/vmBackupInfo'
        version:
          type: string
          description: Hypervisor OS version
    hypervisorAccountDetails:
      type: object
      title: hypervisorAccountDetails
      properties:
        hostName:
          type: string
          description: Host Name
    hypervisorMonitoringPolicy:
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: Metrics Moitoring PolicyId
        name:
          type: string
          nullable: true
          description: Metrics Moitoring Policy Name
        isEnabled:
          type: boolean
          description: True if Metrics Monioring policy is enabled
    hypervisorSettings:
      type: object
      title: hypervisorSettings
      properties:
        regionInfo:
          $ref: '#/components/schemas/RegionInfo'
        timeZone:
          $ref: '#/components/schemas/IdName'
        metricsMonitoringPolicy:
          $ref: '#/components/schemas/hypervisorMonitoringPolicy'
        customAttributes:
          type: array
          description: Array of all the customAttributes associated with hypervisor.
          items:
            $ref: '#/components/schemas/hypervisorCustomAttribute'
        guestCredentials:
          x-terraform-statecopy: true
          $ref: '#/components/schemas/UserNamePassword'
        applicationCredentials:
          x-terraform-statecopy: true
          $ref: '#/components/schemas/UserNamePassword'
        mountAccessNode:
          $ref: '#/components/schemas/IdName'
    hypervisorCustomAttribute:
      type: object
      properties:
        type:
          type: integer
          format: int32
          description: client custom attribute type .
            Ex- 3 - For client
            8- For clientGroup
        value:
          type: string
          nullable: true
          description: client/Client Group custom attribute value
    HypervisorPropertiesResp:
      type: object
      properties:
        id:
          type: integer
          format: int32
          x-terraform-id: true
        name:
          type: string
          nullable: true
          description: Hypervisor Name
        displayName:
          type: string
          description: Display Name
        instance:
          $ref: '#/components/schemas/IdName'
        general:
          $ref: '#/components/schemas/hypervisorGeneralProperties'
        accountDetails:
          $ref: '#/components/schemas/hypervisorAccountDetails'
        activityControl:
          $ref: '#/components/schemas/ActivityControlOptions'
        settings:
          $ref: '#/components/schemas/hypervisorSettings'
        accessNodeList:
          x-terraform-function: handler.GetAccessNodes
          x-terraform-mapping: accessNodes
          $ref: '#/components/schemas/accessNodeListModel'
        hypervisorCommonProperties:
          $ref: '#/components/schemas/hypervisorCommonProps'
        manageSnapshot:
          $ref: '#/components/schemas/IdName'
    accessNodeListModel:
      type: object
      title: accessNodeListModel
      properties:
        accessNodeMessage:
          type: string
          nullable: true
        resourcePoolName:
          type: string
          nullable: true
        accessNode:
          type: array
          items:
            $ref: '#/components/schemas/accessNodeModel'
    accessNodeModel:
      type: object
      title: accessNodeModel
      properties:
        id:
          x-terraform-set-key: true
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        displayName:
          type: string
          nullable: True
          description: Display name of the access node
        type:
          x-terraform-set-key: true
          type: integer
          format: int32
          description: 'Type of access node , Ex: 3 - access Node , 28 - Access Node Groups'
    hypervisorCommonProps:
      type: object
      title: hypervisorCommonProps
      properties:
        isIndexingV2:
          type: boolean
          description: True if Indexing version is 2
        company:
          $ref: '#/components/schemas/IdName'
        isDeconfigured:
          type: boolean
          description: True if the hypervisor is deconfigured
        retirePhase:
          $ref: '#/components/schemas/RetireClientPhase'
        isSnapBackupEnabled:
          type: boolean
          description: True if the hypervisor is snap backup enabled
        isRegionBasedBackup:
          type: boolean
          description: True if region based backup is enabled
    RetireClientPhase:
      type: string
      title: RetireClientPhase
      enum:
        - UNKNOWN
        - RETIRE_IN_PROGRESS
        - DECONFIGURED
    ActivityControlOptions:
      type: object
      properties:
        enableBackup:
          type: boolean
          description: true if Backup is enabled
        enableRestore:
          type: boolean
          description: true if Restore is enabled
        backupActivityControlOptions:
          $ref: '#/components/schemas/ActivityControlOptionsProp'
        restoreActivityControlOptions:
          $ref: '#/components/schemas/ActivityControlOptionsProp'
    backupActivityControlOptionsProp:
      type: object
      properties:
        enableAfterDelay:
          type: boolean
          description: True if the activity will be enabled after a delay time interval
        delayTime:
          type: string
          description: Delayed by n Hrs
        timeZone:
          $ref: '#/components/schemas/IdName'
    ActivityControlOptionsProp:
      type: object
      properties:
        activityType:
          type: string
          description: denotes the activity type being considered
          enum:
            - BACKUP
            - RESTORE
            - ONLINECI
            - ARCHIVEPRUNE
        enableAfterADelay:
          type: boolean
          description: True if the activity will be enabled after a delay time interval
        enableActivityType:
          type: boolean
          description: True if the activity type is enabled
        delayTime:
          $ref: '#/components/schemas/ActivityControlTileDelayTime'
    HypervisorListResp:
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: This gives the id of the Hypervisor.
        name:
          type: string
          description: This give the name of the Hypervisor.
        displayName:
          type: string
          description: This gives the name of the Hypervisor as it shown on the admin console or GUI.
        hostName:
          type: string
          description: This give the host name of the Hypervisor.
        HypervisorType:
          $ref: '#/components/schemas/VSVendor'
        status:
          $ref: '#/components/schemas/RetireClientPhase'
        version:
          type: string
          description: VMware Vcenter Version
        instance:
          $ref: '#/components/schemas/IdName'
        clientActivityControl:
          $ref: '#/components/schemas/ActivityControlOptionsProp'
        tags:
          type: array
          description: Array of all the tags associated with hypervisor.
          items:
            $ref: '#/components/schemas/IdNameValue'
        commcell:
          $ref: '#/components/schemas/CommcellInfo'
        manageSnapshot:
          $ref: '#/components/schemas/IdName'
        isManagedIdentity:
          type: boolean
          description: True if hypervisor is configured using Azure Managed Service Identity.
        useHostedInfrastructure:
          type: boolean
          description: Use Metallic hosted infrastructure
          default: false
    ClusterListResp:
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: This gives the id of the cluster.
        name:
          type: string
          description: This give the name of the cluster.
        displayName:
          type: string
          description: This gives the name of the cluster as it shown on the admin console or GUI.
        hostName:
          type: string
          description: This give the host name of the cluster.
        clusterType:
          $ref: '#/components/schemas/VSVendor'
        status:
          type: string
          description: status of the cluster
        instance:
          $ref: '#/components/schemas/IdName'
        clientActivityControl:
          $ref: '#/components/schemas/ActivityControlOptionsProp'
    ListHypervisors:
      title: ListHypervisors
      type: object
      description: ''
      properties:
        HypervisorCount:
          type: integer
          format: int32
        Hypervisors:
          type: array
          items:
            $ref: '#/components/schemas/HypervisorListResp'
    ListClusters:
      title: ListClusters
      type: object
      description: ''
      properties:
        clusterCount:
          type: integer
          format: int32
        clusters:
          type: array
          items:
            $ref: '#/components/schemas/ClusterListResp'
    CreateETCDSubclientResp:
      type: object
      properties:
        subclientId:
          type: integer
          format: int32
        errorCode:
          type: integer
          format: int32
          default: 0
        errorMessage:
          type: string
          description: Response message
          default: ''
    CreateClusterResp:
      type: object
      properties:
        clusterId:
          type: integer
          format: int32
        warningCode:
          type: integer
          format: int32
          default: 0
        errorCode:
          type: integer
          format: int32
          default: 0
        clusterName:
          type: string
          description: Name of the cluster created
        errorMessage:
          type: string
          description: Response message
        warningMessage:
          type: string
          description: Response message
          default: ''
        etcdSubclientResponse:
          type: array
          items:
            $ref: '#/components/schemas/CreateETCDSubclientResp'
    CreateHypervisorResp:
      type: object
      properties:
        hypervisorId:
          type: integer
          format: int32
          x-terraform-id: true
        warningCode:
          type: integer
          format: int32
          default: 0
        errorCode:
          type: integer
          format: int32
          default: 0
        errorMessage:
          type: string
          description: Response message
        warningMessage:
          type: string
          description: Response message
          default: ''
    DatastoreInventoryResponse:
      type: object
      description: Inventory response of hypervisor for datastore entity
      properties:
        dataCenterName:
          type: string
          description: dataCenter Name of the datastore.
        dnsHostName:
          type: string
          description: dns Hostname  of the datastore.
        esxServerName:
          type: string
          description: esx server name  of the datastore.
        dataStore:
          type: array
          items:
            $ref: '#/components/schemas/dataStoreentityResponse'
    dataStoreentityResponse:
      type: object
      description: Inventory response of hypervisor for datastore entity
      properties:
        dataStoreName:
          type: string
          description: name  of the datastore.
        dataStoreLocation:
          type: string
          description: location  of the datastore.
        dataStoreType:
          type: string
          description: type  of the datastore.
    DatastoreInventoryResponseList:
      title: DatastoreInventoryResponseList
      type: object
      description: To display the list of Inventory response of Datastore
      properties:
        hostInfo:
          type: array
          items:
            $ref: '#/components/schemas/DatastoreInventoryResponse'
    ResourcePoolInventoryResponse:
      type: object
      description: Inventory response of hypervisor for ResourcePool entity
      properties:
        dataCenterName:
          type: string
          description: dataCenter Name of the ResourcePool.
        dnsHostName:
          type: string
          description: dns Hostname  of the ResourcePool.
        esxServerName:
          type: string
          description: esx server name  of the ResourcePool.
        resources:
          type: array
          items:
            $ref: '#/components/schemas/resourcepoolentityResponse'
    resourcepoolentityResponse:
      type: object
      description: Inventory response of hypervisor for resource pool entity
      properties:
        resourcePoolPath:
          type: string
          description: path  of the resource pool.
        name:
          type: string
          description: name  of the resource pool.
        type:
          type: string
          description: type  of the resource pool.
    ResourcePoolInventoryResponseList:
      title: ResourcePoolInventoryResponseList
      type: object
      description: To display the list of Inventory response of Resource Pool
      properties:
        hostInfo:
          type: array
          items:
            $ref: '#/components/schemas/ResourcePoolInventoryResponse'
    NetworkInventoryResponseList:
      title: NetworkInventoryResponseList
      type: object
      description: To display the list of Inventory response of network
      properties:
        hostInfo:
          type: array
          items:
            $ref: '#/components/schemas/NetworkInventoryResponse'
    NetworkInventoryResponse:
      type: object
      description: Inventory response of hypervisor for Network entity
      properties:
        dataCenterName:
          type: string
          description: dataCenter Name of the Network.
        dnsHostName:
          type: string
          description: dns Hostname  of the Network.
        esxServerName:
          type: string
          description: esx server name  of the Network.
        networkSettings:
          type: array
          items:
            $ref: '#/components/schemas/IdName'
    VMSLASTATUS:
      enum:
        - ALL
        - PROTECTED
        - NOT_PROTECTED
        - PENDING
        - BACKED_UP_WITH_ERROR
        - DISCOVERED
      type: string
      format: ''
    AddLaptop:
      title: ''
      type: object
      properties:
        clientNames:
          type: array
          description: list of hostName of computers
          items:
            type: string
        os:
          type: string
          enum:
            - WINDOWS
            - UNIX_AND_MAC
          description: the os type of computers
        userName:
          type: string
          description: username required for authentication of jobs
        password:
          type: string
          description: password (base64 encoded) required for authentication of jobs
      required:
        - clientNames
        - os
        - userName
        - password
    AddLaptopResp:
      title: AddLaptopResp
      type: object
      properties:
        taskId:
          type: integer
          format: int32
        jobIds:
          type: array
          items:
            type: string
    RegionInfo:
      title: RegionInfo
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: Region Id
        name:
          type: string
          description: Region Name
        displayName:
          type: string
          description: Display Name of Region
        latitude:
          type: string
          description: Geolocation Latitude
        longitude:
          type: string
          description: Geolocation Longitude
    vmDiskFilterType:
      enum:
        - NONE
        - DISK_PATH
        - DISK_PATTERN
        - DISK_VIRTUAL_DEVICE_NODE
        - DISK_DATASTORE
        - DISK_LABEL
        - DISK_TYPE
        - DISK_ADDRESS
        - CONTAINER_PATTERN
        - DISK_TAG
      type: string
      format: ''
    vmDiskFilterProp:
      title: vmDiskFilterProp
      type: object
      properties:
        overwrite:
          type: boolean
          description: True if content in vmgroup has to be overwritten, by default it will append the content
          default: false
        rules:
          type: array
          items:
            $ref: '#/components/schemas/vmDiskFilter'
    vmDiskFilter:
      title: vmDiskFilter
      type: object
      properties:
        overwrite:
          type: boolean
          description: True if disk filter in vmgroup has to be overwritten, by default it will append the content
          default: false
        filterType:
          $ref: '#/components/schemas/vmDiskFilterType'
        name:
          type: string
          description: The string to be filtered
        value:
          type: string
          description: The value string to be filtered, in case of disk tag , value of tag to be filtered
        condition:
          $ref: '#/components/schemas/RuleOperationType'
        vmName:
          type: string
          description: VM Name of the Virtual Machine whose disk has to be filtered .
            This is optional. if not given, all disks of name and type from all Vms added in content will be filtered
        vmGuid:
          type: string
          description: VM Guid of the Virtual Machine whose disk has to be filtered .
            This is optional. if not given, all disks of name and type from all Vms added in content will be filtered
    indexingInfo:
      title: indexingInfo
      type: object
      properties:
        status:
          $ref: '#/components/schemas/IndexingStatusType'
        message:
          type: string
          description: Indexing Message
    FirewallTopology:
      title: ''
      type: object
      properties:
        topology:
          $ref: '#/components/schemas/IdName'
        topologyType:
          $ref: '#/components/schemas/firewallTopologyTypes'
        clientType:
          $ref: '#/components/schemas/firewallClientType'
    firewallTopologyTypes:
      type: string
      title: firewallTopologyTypes
      enum:
        - NETWORK_GATEWAY
        - ONE_WAY
        - TWO_WAY
        - CASCADING_GATEWAYS
        - ONEWAY_FORWARDING
      description: The type of topology of client groups (and sometimes network gateway) for this instance.
    firewallClientType:
      type: string
      title: firewallClientType
      enum:
        - SERVER
        - LAPTOP
      description: The type of clients associated with the topology.
    FirewallTopologyDetails:
      title: FirewallTopologyDetails
      type: object
      properties:
        topology:
          $ref: '#/components/schemas/IdName'
        topologyType:
          $ref: '#/components/schemas/firewallTopologyTypes'
        clientType:
          $ref: '#/components/schemas/firewallClientType'
        useWildCardProxy:
          type: boolean
          description: Flag determining wether network gateways are used to connect all infrastructure machines
        firewallGroups:
          type: array
          items:
            $ref: '#/components/schemas/FirewallTopologyGroups'
        encryptTraffic:
          type: boolean
          description: Flag determining if we want the data from tunnel to use HTTPS protocol
        tunnelProtocol:
          $ref: '#/components/schemas/FirewallTopologyTunnelProtocol'
        tunnelsPerRoute:
          type: integer
          format: int32
          description: The number of tunnel connections per route
    FirewallTopologyTunnelProtocol:
      type: string
      title: FirewallTopologyTunnelProtocol
      enum:
        - REGULAR
        - ENCRYPTED
        - AUTHENTICATED
        - RAW
      description: The protocol for outgoing communication
    FirewallTopologyGroups:
      title: ''
      type: object
      properties:
        groupType:
          $ref: '#/components/schemas/FirewallFwGroupType'
        clientGroupId:
          type: integer
          format: int32
          description: The id of the client group
        mnemonic:
          $ref: '#/components/schemas/FirewallGroupMnemonic'
        advancedOptions:
          $ref: '#/components/schemas/FirewallGroupAdvancedOptions'
    FirewallGroupAdvancedOptions:
      title: ''
      type: object
      properties:
        tunnelPort:
          type: integer
          format: int32
          description: The port defined for communications
        keepAliveInterval:
          type: integer
          format: int32
          description: 'The interval in seconds for sending keep-alive packets, to maintain the session if backup traffic has an extended pause.'
    FirewallTopologyCreateReq:
      title: FirewallTopologyReq
      type: object
      properties:
        topologyName:
          type: string
        clientType:
          $ref: '#/components/schemas/firewallClientType'
        topologyType:
          $ref: '#/components/schemas/firewallTopologyTypes'
        tunnelProtocol:
          $ref: '#/components/schemas/FirewallTopologyTunnelProtocol'
        tunnelsPerRoute:
          type: integer
          format: int32
          description: The number of tunnel connections per route
        useWildCardProxy:
          type: boolean
          description: Flag determining wether network gateways are used to connect all infrastructure machines
        encryptTraffic:
          type: boolean
          description: Flag determining if we want the data from tunnel to use HTTPS protocol
        firewallGroups:
          type: array
          items:
            $ref: '#/components/schemas/FirewallTopologyGroups'
    FirewallTopologyCreateResp:
      title: FirewallTopologyCreateResp
      type: object
      properties:
        topologyId:
          type: integer
        error:
          $ref: '#/components/schemas/GenericResp'
    FirewallFwGroupType:
      type: string
      title: FirewallFwGroupType
      enum:
        - INTERNAL
        - EXTERNAL
        - PROXIES
        - PROXY_PERIMETER
    FirewallGroupMnemonic:
      type: string
      title: FirewallGroupMnemonic
      enum:
        - MY_COMMSERVE
        - MY_MEDIAAGENTS
        - MY_COMMSERVE_AND_MEDIAAGENTS
        - NONE
      description: Custom names(mnemonics) given to pre-defined smart client groups
    SAML:
      title: SAML
      type: object
      description: Get SAML response
      properties:
        name:
          type: string
          description: SAML name.
        appKey:
          type: string
          description: Unique key for the SAML app
        description:
          type: string
          description: SAML description
        enabled:
          type: boolean
          description: Boolean to indicate whether SAML is enabled.
        autoCreateUser:
          type: boolean
          description: This auto-creates non-existing user if the user detail match with the identity rule.
        userGroups:
          type: array
          description: 'By default, auto-created users will be associated to the Tenant Users group of the company. Add mapping to override this behaviour for a company.'
          items:
            $ref: '#/components/schemas/CompanyWithUserGroupAssocDetails'
        nameIDAttribute:
          type: string
          description: nameID in SAML assertion subject is used to perform login.
        userGroup:
          $ref: '#/components/schemas/IdName'
        createdForCompany:
          $ref: '#/components/schemas/IdName'
        attributeMappings:
          type: array
          description: attribute mapping details
          items:
            $ref: '#/components/schemas/SAMLAttributes'
        identityProviderMetaData:
          $ref: '#/components/schemas/SAMLIDPMetaDataResp'
        serviceProviderMetaData:
          $ref: '#/components/schemas/SAMLSPMetaDataResp'
        associations:
          $ref: '#/components/schemas/SAMLAssociations'
    SAMLIDPMetaDataResp:
      title: SAMLIDPMetaDataResp
      type: object
      description: SAML Identity provider meta data response
      properties:
        entityId:
          type: string
          description: Identity provider entity
        redirectUrl:
          type: string
          description: Identity provider redirect URL
        logoutUrl:
          type: string
          description: Identity Provider log-out URL
    SAMLAssociations:
      title: SAMLAssociations
      type: object
      properties:
        emailSuffixes:
          type: array
          description: Email suffixes associated with SAML
          items:
            type: string
        companies:
          type: array
          description: Companies associated with SAML
          items:
            $ref: '#/components/schemas/IdName'
        domains:
          type: array
          description: Domains associated with SAML
          items:
            $ref: '#/components/schemas/IdName'
        userGroups:
          type: array
          description: user groups associated with SAML
          items:
            $ref: '#/components/schemas/IdName'
    SAMLAttributes:
      title: SAMLAttributes
      type: object
      properties:
        customAttribute:
          $ref: '#/components/schemas/SAMLCustomAttributes'
        SAMLAttribute:
          type: string
          description: SAML attribute
    CompanyWithUserGroupAssocDetails:
      title: CompanyWithUserGroupAssocDetails
      description: This object will hold company and selected user group for saml.
      type: object
      properties:
        companyInfo:
          $ref: '#/components/schemas/IdName'
        userGroupInfo:
          $ref: '#/components/schemas/IdName'
    SAMLCustomAttributes:
      type: string
      title: SAMLCustomAttributes
      enum:
        - COMPANY_NAME
        - EMAIL
        - SID
        - USER_GROUPS
        - USER_GUID
        - USER_NAME
      description: SAML custom attribute types
    SAMLReq:
      title: SAMLReq
      type: object
      description: Create SAML request
      properties:
        name:
          type: string
          description: SAML name.
        description:
          type: string
          description: SAML description
        identityProviderMetaData:
          $ref: '#/components/schemas/SAMLIDPMetaDataReq'
        serviceProviderMetaData:
          $ref: '#/components/schemas/SAMLSPMetaData'
        associations:
          $ref: '#/components/schemas/SAMLAssociations'
      required:
        - name
        - description
        - identityProviderMetaData
    SAMLSPMetaData:
      title: SAMLSPMetaData
      type: object
      description: SAML service provider meta data
      x-examples:
        example-1:
          serviceProviderEndpoint: string
          autoGenerateSPMetaData: true
          certificateData: string
          JKSPrivateKey: string
      properties:
        serviceProviderEndpoint:
          type: string
          description: web console URL.
        spAliases:
          type: array
          items:
            type: string
          description: web console URL list.
        autoGenerateSPMetaData:
          type: boolean
        certificateData:
          type: string
          description: certificate alias name.
        JKSPrivateKey:
          type: string
          description: key store password.
        jksFileContents:
          type: array
          items:
            type: string
          description: jks file contents as byte array
        aliasName:
          type: string
          description: certificate alias name
        privateKeyPassword:
          type: string
          description: certificate private key password
        keyStorePassword:
          type: string
          description: jks contents key store password.
      required:
        - serviceProviderEndpoint
        - autoGenerateSPMetaData
    SAMLIDPMetaDataReq:
      title: SAMLIDPMetaDataReq
      type: object
      description: SAML IDP meta data request
      x-examples:
        example-1:
          entityId: 'http://servername/adfs/services/trust'
          redirectUrl: 'https://servername/adfs/ls/'
          logoutUrl: 'https://servername/adfs/ls/'
          certificateData: MIIC4jCCAcqgA1hcmlvLm1hcSCdgTTDPDgDrTpcjdmOIWuDpiW6anBaH0jlCRi4IVuBkKJ1lYdh1mG96gfdh8oA103RvtxMWo3qq9muMDmxyRFgGFOuFod60In8QY9kNcsu+ujOWIFaKMI3iDBg2+esbI8S/rov1+0HRKqnP4BARdtK70JhOTikNwQsxINNZD2C79gQKrXItJtbmrPNLIF8Pf4UYrgFPA8RB+jQ3yJiVS67oQswX9UmeLjepVcCAwEAATANBgkqhkiG9w0BAQsFAAOCAQEAWOLOPLQxUfbbG9goGKHqXlaAxRrrb/+K2KpWke5NmpjQl+RRkaFkJCS/vQM14XMep+e/xajtc1Nxrwjjb699muGr0llC8UI5erDmwvlJ2RWNd8j4SBvWVFaarMdwlhd7Istj0ZB5aZr5ZN+scW7Irt7d0Vr1PODhybEwwlcDU5HnGzWacMttErBsCYSH90wO2mp6CFFQf9Ygn9jX4kbaSMiFO8IHG86vLT8TxYSP4GtbT5diICOVhO6ShkBtrfkTSytekwx8vFPKKCi5ml9pYa6CqKNl93QiLglPY9yJDJTP4v1TXv+M7ti+I39apDhXzD0ueB4m9iPcijn/FLyWdw==
          secondaryCertificateData: MIICoTCCAYkCBgGGWY9ArjANBgkqhkiG9w0BAQsFADAUMRIwEAYDVQQDDAlDT01NVkFVTFQwHhcNMjMwMjE2MDkzMDA1WhcNMzMwMjEzMDkzMDA1WjAUMRIwEAYDVQQDDAlDT01NVkFVTFQwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCZGzz5mTld1wuQC5+FA16MF2kfNmz+3OkOFJXOtngknp8iwiukne0q6G4Sf9qruOrHeFMumJmU4Hiv2WUZyhZkry2sV73tKvg5uvxHqqZpDAYKmbm\u002fBLzBDN8X0P9LQDxi4xjGXUVP02fFpr27a09ly5l8syfc2LkR\u002ftXgms7LEPBdB9sBlCz0wfvDFS7nXg8crp3GihoDIrgxtrT55L3r399g0LcGhR64XBSQBmG1QfzMIY65d\u002frGXIhkRgiT5OKYGIEiQDlY9WnnlhP<....................stripped for security.............>BFrko+7RF\u002f1i4UDywH7bLGCZal5NFg+QU4FRMBWjeSG8iddODQZXBsrl4SJnd81uFJgz\u002fY4DQeyL1NGA=
          SAMLProtocolVersion: 'urn:oasis:names:tc:SAML:2.0:protocol'
      properties:
        entityId:
          type: string
          description: Identity provider entity
        redirectUrl:
          type: string
          description: Identity provider redirect URL
        logoutUrl:
          type: string
          description: Identity Provider log-out URL
        certificateData:
          type: string
          description: IDP certificate public key
        secondaryCertificateData:
          type: string
          description: IDP's secondary certificate
        SAMLProtocolVersion:
          type: string
          description: 'SAML Protocol version '
      required:
        - entityId
        - redirectUrl
        - logoutUrl
        - certificateData
        - SAMLProtocolVersion
    SAMLSPMetaDataResp:
      title: SAMLSPMetaDataResp
      type: object
      properties:
        entityId:
          type: string
          description: Service provider entity
        singleSignOnUrl:
          type: string
          description: single sign on URL
        singleLogoutUrl:
          type: string
          description: single log out url
    SAMLUpdate:
      title: SAMLUpdate
      type: object
      description: Updates SAML details
      properties:
        description:
          type: string
          description: SAML description
        enabled:
          type: boolean
          description: Boolean to indicate whether SAML is enabled.
        autoCreateUser:
          type: boolean
          description: This auto-creates non-existing user if the user detail match with the identity rule.
        userGroups:
          type: array
          description: 'By default, auto-created users will be associated to the Tenant Users group of the company. Add mapping to override this behaviour for a company.'
          items:
            $ref: '#/components/schemas/CompanyWithUserGroupAssocDetails'
        nameIDAttribute:
          type: string
          description: nameID in SAML assertion subject is used to perform login.
        attributeMappings:
          type: array
          description: attribute mapping details
          items:
            $ref: '#/components/schemas/SAMLAttributes'
        identityProviderMetaData:
          $ref: '#/components/schemas/SAMLIDPMetaDataReq'
        serviceProviderMetaData:
          $ref: '#/components/schemas/SAMLSPMetaData'
        associations:
          $ref: '#/components/schemas/SAMLAssociations'
    PlanEntityRuleInfo:
      title: PlanEntityRuleInfo
      description: This object will hold each plan rule details.
      type: object
      properties:
        rule:
          $ref: '#/components/schemas/IdName'
        plan:
          $ref: '#/components/schemas/IdNameGUID'
        workloads:
          type: array
          description: This will include list of apptypes that should be evaluated against workload for plan association
          items:
            $ref: '#/components/schemas/IdName'
        regions:
          type: array
          description: This will include list of regions that should be evaluated against workload region for plan association
          items:
            $ref: '#/components/schemas/IdNameGUID'
        tags:
          type: array
          description: This will include list of tags that should be evaluated against workload tags (if any) for plan association
          items:
            $ref: '#/components/schemas/PlanEntityRuleTag'
        serverGroups:
          type: array
          description: This will include list of Server groups that should be evaluated against workload server group for plan association
          items:
            $ref: '#/components/schemas/IdNameGUID'
        rank:
          type: integer
          description: This will suggest rank/priority of the plan rule.
          format: int32
        solutions:
          type: array
          description: This will include list of solutions that should be evaluated against workload for plan association.
          items:
            $ref: '#/components/schemas/IdName'
        company:
          $ref: '#/components/schemas/IdName'
        globalConfigInfo:
          $ref: '#/components/schemas/GlobalConfigInfo'
      required:
        - rule
        - plan
    CreatePlanEntityRule:
      title: CreatePlanEntityRule
      type: object
      description: 'This object will send details to create new plan rule. User can provide all rule options or can specify a specific rule group. Be default, for rule to be applicable for association to a workload,  ALL specified rules in that Rule need to be matched.'
      properties:
        plan:
          $ref: '#/components/schemas/IdNameGUID'
        rank:
          type: integer
          description: 'Optional field to suggest priority/rank of the rule. If not present, we will process rule in the same order they are created.'
          format: int32
        workloads:
          type: array
          description: This will include list of apptypes that should be evaluated against workload apptype for plan association.
          items:
            $ref: '#/components/schemas/IdName'
        serverGroups:
          type: array
          description: This will include list of Server groups that should be evaluated against workload server group for plan association.
          items:
            $ref: '#/components/schemas/IdNameGUID'
        regions:
          type: array
          description: This will include list of regions that should be evaluated against workload region for plan association.
          items:
            $ref: '#/components/schemas/IdNameGUID'
        solutions:
          type: array
          description: This will include list of solutions that should be evaluated against workload for plan association
          items:
            $ref: '#/components/schemas/IdName'
        company:
          $ref: '#/components/schemas/IdName'
        tags:
          type: array
          description: This will include list of tags that should be evaluated against workload for plan association
          items:
            $ref: '#/components/schemas/PlanEntityRuleTag'
        globalConfigInfo:
          $ref: '#/components/schemas/CreateGlobalConfigInfo'
      required:
        - plan
    UpdatePlanEntityRule:
      title: UpdatePlanEntityRule
      type: object
      description: |-
        Plan entity rule update object. Fields in this object need to be populated to suggest what need to be changed in the rule.
        User can provide all rule options or can specify a specific rule group. Be default, for rule to be applicable for association to a workload,  ALL specified rules in that Rule need to be matched.
      properties:
        rule:
          $ref: '#/components/schemas/IdNameGUID'
        plan:
          $ref: '#/components/schemas/IdNameGUID'
        workloads:
          type: array
          description: This will include list of apptypes that should be evaluated against workload apptype for plan association.
          items:
            $ref: '#/components/schemas/IdName'
        serverGroups:
          type: array
          description: This will include list of Server groups that should be evaluated against workload server group for plan association.
          items:
            $ref: '#/components/schemas/IdNameGUID'
        regions:
          type: array
          description: This will include list of regions that should be evaluated against workload region for plan association.
          items:
            $ref: '#/components/schemas/IdNameGUID'
        rank:
          type: integer
          format: int32
          description: '[Optional] - This field will suggest rank/priority of rule.'
        solutions:
          type: array
          description: This will include list of solutions that should be evaluated against workload for plan association.
          items:
            $ref: '#/components/schemas/IdName'
        tags:
          type: array
          description: This will include list of tags that should be evaluated against workload for plan association
          items:
            $ref: '#/components/schemas/PlanEntityRuleTag'
      required:
        - rule
    PlanEntityRuleList:
      title: PlanEntityRuleList
      type: object
      description: List holding details of various plan rules
      properties:
        rules:
          type: array
          description: list of rules
          items:
            $ref: '#/components/schemas/PlanEntityRuleInfo'
    StatusModel:
      title: StatusModel
      type: object
      properties:
        status:
          type: boolean
    RegionSummary:
      description: Summary of the region
      type: object
      title: RegionSummary
      properties:
        id:
          type: integer
          format: int32
          description: ''
        name:
          type: string
        displayName:
          type: string
        regionType:
          $ref: '#/components/schemas/RegionType'
        locations:
          type: array
          uniqueItems: true
          minItems: 1
          description: List of locations in the region
          items:
            $ref: '#/components/schemas/LocationSummary'
        associatedServers:
          type: integer
          format: int32
          description: Number of servers associated to the region
        associatedRegionBasedPlans:
          type: integer
          format: int32
          description: Number of plans associated to the region
        company:
          $ref: '#/components/schemas/IdName'
        globalConfigInfo:
          $ref: '#/components/schemas/GlobalConfigInfo'
    RegionType:
      type: string
      title: RegionType
      enum:
        - DEFAULT
        - AZURE
        - AWS
        - USER_CREATED
        - OCI
        - GCP
      description: Type of region
    RegionsListResp:
      title: RegionsListResp
      type: object
      description: List of regions
      properties:
        regions:
          type: array
          uniqueItems: true
          description: Regions list
          items:
            $ref: '#/components/schemas/RegionSummary'
    LocationDetails:
      title: LocationDetails
      type: object
      description: Details for a location in a region
      properties:
        city:
          type: string
          description: Name of city
        state:
          type: string
          description: Name of state
        country:
          type: string
          description: Name of country
        latitude:
          type: number
          format: double
          description: Latitude for the location
        longitude:
          type: number
          format: double
          description: Longitude for the location
      required:
        - country
        - latitude
        - longitude
    CreateRegion:
      title: CreateRegion
      type: object
      description: Details of the new region
      properties:
        name:
          type: string
          description: Region name
        type:
          type: string
          enum:
            - USER_CREATED
            - AWS
            - AZURE
            - OCI
            - GCP
          default: USER_CREATED
          description: Type of the region
        locations:
          type: array
          minItems: 1
          uniqueItems: true
          description: List of locations which are part of the region
          items:
            $ref: '#/components/schemas/LocationDetails'
        globalConfigInfo:
          $ref: '#/components/schemas/CreateGlobalConfigInfo'
      required:
        - name
        - locations
    LocationSummary:
      title: LocationSummary
      type: object
      description: Summary of a location in a region
      properties:
        city:
          type: string
        state:
          type: string
        country:
          type: string
    BlackoutWindowsListResponse:
      type: object
      properties:
        blackoutWindows:
          type: array
          description: Returns a summary of all blackout windows
          items:
            $ref: '#/components/schemas/BlackoutWindowSummary'
    BlackoutWindowSummary:
      type: object
      description: company refers to company to which the blackout window is associated. dates refers to the dates where the blackout window will be in effect. Dates are given in unix time format.doNotRunBetween refers to the time between which jobs cannot be run. The time is provided in seconds.
      properties:
        id:
          type: integer
          format: int32
          description: blackout window Id
        name:
          type: string
          description: blackout window name
        company:
          $ref: '#/components/schemas/IdName'
        allDays:
          type: array
          description: Days of the week along with the time on which the black out window will be in effect.
          items:
            $ref: '#/components/schemas/DaysAndTimes'
        betweenDates:
          $ref: '#/components/schemas/StartEnd'
    V4BlackoutWindowsListResponse:
      type: object
      properties:
        blackoutWindows:
          type: array
          description: Returns a summary of all blackout windows
          items:
            $ref: '#/components/schemas/V4BlackoutWindowSummary'
    V4BlackoutWindowSummary:
      type: object
      description: company refers to company to which the blackout window is associated. dates refers to the dates where the blackout window will be in effect. Dates are given in unix time format.doNotRunBetween refers to the time between which jobs cannot be run. The time is provided in seconds.
      properties:
        id:
          type: integer
          format: int32
          description: blackout window Id
        name:
          type: string
          description: blackout window name
        company:
          $ref: '#/components/schemas/IdName'
        days:
          type: array
          description: Days of the week on which the black out window will be in effect.
          items:
            $ref: '#/components/schemas/DayOfTheWeek'
        betweenDates:
          $ref: '#/components/schemas/StartEnd'
        time:
          type: array
          description: Refers to the time between which the blackout window will be in effect. It has to be provided in seconds.
          items:
            $ref: '#/components/schemas/StartEnd'
    DaysAndTimes:
      type: object
      description: Days of the week along with the time on which the black out window will be in effect
      properties:
        days:
          type: array
          description: Days of the week when the blackout window will be in effect.
          items:
            $ref: '#/components/schemas/DayOfTheWeek'
        time:
          $ref: '#/components/schemas/StartEnd'
    StartEnd:
      type: object
      properties:
        start:
          type: integer
          format: int64
          description: the blackout window comes into effect at this point.
        end:
          type: integer
          format: int64
          description: the blackout window is no longer in effect from this point on.
    CreateBlackoutWindow:
      type: object
      description: betweenDates refers to the dates where the blackout window will be in effect. Dates have to be given in unix time format. time has to be provided in seconds. company refers to company to which the blackout window is associated.Id is given first preference if both are id and name are provided.
      properties:
        name:
          type: string
          description: Name of the blackout window to be created.
        company:
          $ref: '#/components/schemas/IdName'
        backupOperations:
          type: array
          description: Refers to backup types to include in the blackout window
          items:
            type: string
            enum:
              - FULL
              - INCREMENTAL_AND_DIFFERENTIAL
              - SYNTHETIC_FULL
              - TRANSACTION_LOG
              - ALL_OPERATIONS
        allDays:
          type: array
          description: Days of the week along with the time on which the black out window will be in effect.
          items:
            $ref: '#/components/schemas/DaysAndTimes'
        weeks:
          type: array
          description: Refers to the weeks of the month that the blackout window will be in effect.
          items:
            $ref: '#/components/schemas/WeekOfMonth'
        betweenDates:
          $ref: '#/components/schemas/StartEnd'
        doNotSubmitJob:
          type: boolean
          description: 'Allows or Denies submitting a job when the blackout window is in effect. If set to false, the job is submitted and resumed once the blackout window ends.'
      required:
        - name
    V4CreateBlackoutWindow:
      type: object
      description: betweenDates refers to the dates where the blackout window will be in effect. Dates have to be given in unix time format. time has to be provided in seconds. company refers to company to which the blackout window is associated.Id is given first preference if both are id and name are provided.
      properties:
        name:
          type: string
          description: Name of the blackout window to be created.
        company:
          $ref: '#/components/schemas/IdName'
        backupOperations:
          type: array
          description: Refers to backup types to include in the blackout window
          items:
            type: string
            enum:
              - FULL
              - INCREMENTAL_AND_DIFFERENTIAL
              - SYNTHETIC_FULL
              - TRANSACTION_LOG
              - ALL_OPERATIONS
        days:
          type: array
          description: Days of the week when the blackout window will be in effect.
          items:
            $ref: '#/components/schemas/DayOfTheWeek'
        weeks:
          type: array
          description: Refers to the weeks of the month that the blackout window will be in effect.
          items:
            $ref: '#/components/schemas/WeekOfMonth'
        time:
          type: array
          description: Refers to the time between which the blackout window will be in effect. It has to be provided in seconds
          items:
            $ref: '#/components/schemas/StartEnd'
        betweenDates:
          $ref: '#/components/schemas/StartEnd'
        doNotSubmitJob:
          type: boolean
          description: 'Allows or Denies submitting a job when the blackout window is in effect. If set to false, the job is submitted and resumed once the blackout window ends.'
      required:
        - name
    BlackoutWindow:
      type: object
      description: company refers to company to which the blackout window is associated. Dates are provided in unix time format.
      properties:
        id:
          type: integer
          format: int32
          description: Id of the blackout window.
        name:
          type: string
          description: Name of the blackout window.
        company:
          $ref: '#/components/schemas/IdName'
        backupOperations:
          type: array
          description: backupOperations refers to the backup types to include in the blackout window
          items:
            $ref: '#/components/schemas/BackupOperations'
        allDays:
          type: array
          description: Days of the week along with the time on which the black out window will be in effect.
          items:
            $ref: '#/components/schemas/DaysAndTimes'
        weeks:
          type: array
          description: Refers to the weeks of the month that the blackout window will be in effect and jobs will not run.
          items:
            $ref: '#/components/schemas/WeekOfMonth'
        betweenDates:
          $ref: '#/components/schemas/StartEnd'
        doNotSubmitJob:
          type: boolean
          description: 'Allows or Denies submitting a job when the blackout window is in effect. If allowed, the job is submitted and resumed once the blackout window ends.'
    V4BlackoutWindow:
      type: object
      description: company refers to company to which the blackout window is associated. Dates are provided in unix time format.
      properties:
        id:
          type: integer
          format: int32
          description: Id of the blackout window.
        name:
          type: string
          description: Name of the blackout window.
        company:
          $ref: '#/components/schemas/IdName'
        backupOperations:
          type: array
          description: backupOperations refers to the backup types to include in the blackout window
          items:
            $ref: '#/components/schemas/BackupOperations'
        days:
          type: array
          description: Days of the week when the blackout window will be in effect and jobs will not run.
          items:
            $ref: '#/components/schemas/DayOfTheWeek'
        weeks:
          type: array
          description: Refers to the weeks of the month that the blackout window will be in effect and jobs will not run.
          items:
            $ref: '#/components/schemas/WeekOfMonth'
        time:
          type: array
          description: Refers to the time between which the blackout window will be in effect. It has to be provided in seconds.
          items:
            $ref: '#/components/schemas/StartEnd'
        betweenDates:
          $ref: '#/components/schemas/StartEnd'
        doNotSubmitJob:
          type: boolean
          description: 'Allows or Denies submitting a job when the blackout window is in effect. If allowed, the job is submitted and resumed once the blackout window ends.'
    UpdateBlackoutWindow:
      type: object
      description: company-refers to company to which the blackout window is associated.Dates have to be provided in unix time format.
      properties:
        newName:
          type: string
          description: Refers to the newName given to the blackout Window.
        backupOperations:
          type: array
          description: Refers to backup types to include in the blackout window
          items:
            type: string
            enum:
              - FULL
              - INCREMENTAL_AND_DIFFERENTIAL
              - SYNTHETIC_FULL
              - TRANSACTION_LOG
              - ALL_OPERATIONS
        company:
          $ref: '#/components/schemas/IdName'
        allDays:
          type: array
          description: Days of the week along with the time on which the black out window will be in effect.
          items:
            $ref: '#/components/schemas/DaysAndTimes'
        weeks:
          type: array
          description: Refers to the weeks of the month that the blackout window will be in effect.
          items:
            $ref: '#/components/schemas/WeekOfMonth'
        betweenDates:
          $ref: '#/components/schemas/StartEnd'
        doNotSubmitJob:
          type: boolean
          description: 'Allows or Denies submitting a job when the blackout window is in effect. If allowed, the job is submitted and resumed once the blackout window ends.'
    V4UpdateBlackoutWindow:
      type: object
      description: company-refers to company to which the blackout window is associated.Dates have to be provided in unix time format.
      properties:
        newName:
          type: string
          description: Refers to the newName given to the blackout Window.
        backupOperations:
          type: array
          description: Refers to backup types to include in the blackout window
          items:
            type: string
            enum:
              - FULL
              - INCREMENTAL_AND_DIFFERENTIAL
              - SYNTHETIC_FULL
              - TRANSACTION_LOG
              - ALL_OPERATIONS
        company:
          $ref: '#/components/schemas/IdName'
        days:
          type: array
          description: Days of the week when the blackout window will be in effect.
          items:
            $ref: '#/components/schemas/DayOfTheWeek'
        weeks:
          type: array
          description: Refers to the weeks of the month that the blackout window will be in effect.
          items:
            $ref: '#/components/schemas/WeekOfMonth'
        time:
          type: array
          description: Refers to the time between which the blackout window will be in effect. It has to be provided in seconds
          items:
            $ref: '#/components/schemas/StartEnd'
        betweenDates:
          $ref: '#/components/schemas/StartEnd'
        doNotSubmitJob:
          type: boolean
          description: 'Allows or Denies submitting a job when the blackout window is in effect. If allowed, the job is submitted and resumed once the blackout window ends.'
    BackupOperations:
      enum:
        - FULL
        - INCREMENTAL_AND_DIFFERENTIAL
        - SYNTHETIC_FULL
        - TRANSACTION_LOG
        - ALL_OPERATIONS
        - DATA_RECOVERY
        - AUXILIARY_COPY
        - DISASTER_RECOVERY_BACKUP
        - DATA_VERIFICATION
        - ERASE_SPARE_MEDIA
        - SHELF_MANAGEMENT
        - DELETE_DATA_BY_BROWSING
        - DELETE_ARCHIVED_DATA
        - OFFLINE_CONTENT_INDEXING
        - ONLINE_CONTENT_INDEXING
        - INFORMATION_MANAGEMENT
        - MEDIA_REFRESHING
        - DATA_ANALYTICS
        - DATA_PRUNING
        - BACKUP_COPY
        - STUBBING
        - INSTALL_UPDATES
      type: string
      format: ''
    IndexServersListResp:
      type: object
      description: List of index servers
      properties:
        indexServers:
          type: array
          items:
            $ref: '#/components/schemas/IndexServerSummary'
    IndexServerSummary:
      type: object
      description: Summary of an index server
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        displayName:
          type: string
          description: Display name for the index server
        OS:
          type: string
          description: Operating system of the index server
        cloudId:
          type: integer
          format: int32
          description: Id of the index server cloud
    HybridFileStoresListResp:
      type: object
      description: List of hybrid file stores
      properties:
        hybridFileStores:
          description: Hybrid file stores list
          type: array
          items:
            $ref: '#/components/schemas/HybridFileStoreSummary'
    HybridFileStoreSummary:
      type: object
      description: Summary of a hybrid file store
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        status:
          type: string
          enum:
            - READY
            - IN_PROCESS
          description: Status of the hybrid file store
        statusSummary:
          type: string
          description: A summary of the current status
        plan:
          $ref: '#/components/schemas/IdName'
        indexServer:
          $ref: '#/components/schemas/IdName'
        fileServer:
          $ref: '#/components/schemas/IdName'
    ResourcePoolListResponse:
      type: object
      properties:
        resourcePools:
          type: array
          description: Resource Pool Summary.
          items:
            $ref: '#/components/schemas/ResourcePoolSummary'
      description: 'A resource pool is a logical entity that combines infrastructure settings such as storage, access nodes, and index servers.'
    ResourcePoolSummary:
      type: object
      description: 'solutionType is the solution used to create resource pool. It cannot be changed once the resource pool has been created. indexServer is a server that stores, amalgamates, and processes indexes that contain metadata corresponding to the data protection jobs. The list of index servers is populated with clients that are installed with the index store package. storage refers to the Storage Pool to associate to resource pool. accessNodes is the list of access nodes associated to the resource pool.'
      properties:
        id:
          type: integer
          format: int32
          description: Resource Pool id
        name:
          type: string
          description: Resource Pool name.
        solutionType:
          $ref: '#/components/schemas/SolutionTypes'
        storage:
          $ref: '#/components/schemas/IdName'
        indexServer:
          $ref: '#/components/schemas/IdName'
        accessNodes:
          type: array
          description: List of access nodes associated to the resource pool
          items:
            $ref: '#/components/schemas/AccessNodes'
        associatedPlans:
          type: integer
          format: int32
          description: Refers to the number of plans associated to the resource pool.
        isIndexingEnabledOnAnyPlan:
          type: boolean
          description: Denotes if the resource pool is associated to any plan with indexing enabled
    SolutionTypes:
      type: string
      enum:
        - GENERIC
        - O365
        - SALESFORCE
        - EXCHANGE
        - SHAREPOINT
        - ONEDRIVE
        - TEAMS
        - DYNAMICS_365
        - VSA
        - FILESYSTEM
        - KUBERNETES
        - AZURE_AD
        - CLOUD_LAPTOP
        - FILE_STORAGE_OPTIMIZATION
        - DATA_GOVERNANCE
        - E_DISCOVERY
        - SQL_SERVER
        - ORACLEDB
        - DB2
        - ACTIVE_DIRECTORY
        - DATABASE
    EntityRegionInfo:
      type: object
      description: ''
      properties:
        entityRegionType:
          $ref: '#/components/schemas/EntityRegionTypes'
        region:
          $ref: '#/components/schemas/IdName'
    EntityRegionTypes:
      enum:
        - BACKUP
        - WORKLOAD
      type: string
      format: ''
    EntityTypes:
      enum:
        - COMMCELL
        - CLIENT
        - INSTANCE
        - BACKUPSET
        - SUBCLIENT
        - CLIENT_GROUP
        - USER
        - USER_GROUP
        - LIBRARY
        - MEDIAAGENT
        - RESOURCEPOOL
        - STORAGE_POOL
        - STORAGE_POLICY
        - SCHEDULE_POLICY
        - SUBCLIENT_POLICY
        - ALERT
        - PLAN
        - VIRTUAL_MACHINE
        - ROLE
        - DEVICE
        - REGION
        - NETWORK_TOPOLOGY
        - COMPANY
      type: string
      format: ''
    GetEntityRegionResp:
      type: object
      title: GetEntityRegionResp
      properties:
        regions:
          type: array
          items:
            $ref: '#/components/schemas/EntityRegion'
        entityType:
          $ref: '#/components/schemas/EntityTypes'
        regionType:
          $ref: '#/components/schemas/EntityRegionTypes'
        error:
          $ref: '#/components/schemas/GenericResp'
    EntityRegion:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        entityId:
          type: integer
          format: int32
    ConfigureSMTPServerReq:
      type: object
      title: ConfigureSMTPServerReq
      properties:
        SMTPServerName:
          type: string
          description: 'The name of the mail server that sends alerts, scheduled reports, log files, and additional information.'
        SMTPPort:
          type: integer
          format: int32
          description: The port number that connects to the mail server.
        senderEmail:
          type: string
          description: The sender email address used for emails sent from the software.
        senderName:
          type: string
          description: The sender name used for emails sent from the software.
        encryptionAlgorithm:
          $ref: '#/components/schemas/SMTPServerEncryptionAlgorithm'
        username:
          type: string
          description: This option is used when authentication on the mail server is required
        password:
          type: string
          description: 'Password must be in base64 encoded format. Similar to username, if authentication on the mail server is required, this option is required.'
      required:
        - SMTPServerName
        - SMTPPort
        - senderEmail
        - senderName
    UpdateEmailServerReq:
      description: None of the fields are mandatory. whichever field is specified should be updated. Rest should be untouched.
      type: object
      title: ''
      properties:
        SMTPServerName:
          type: string
          description: 'The name of the mail server that sends alerts, scheduled reports, log files, and additional information.'
        SMTPPort:
          type: integer
          format: int32
          description: The port number that connects to the mail server.
        senderEmail:
          type: string
          description: The sender email address used for emails sent from the software.
        senderName:
          type: string
          description: The sender name used for emails sent from the software.
        encryptionAlgorithm:
          $ref: '#/components/schemas/SMTPServerEncryptionAlgorithm'
        useAuthentication:
          type: boolean
          description: The option to use authentication on the mail server. This is typically used in external or internet mail server configurations.
        username:
          type: string
          description: 'when useAuthentication is true, username must be present'
        password:
          type: string
          description: Password must be in base 64 encoded format. Password attribute can be left out to reuse the already saved password
    GetEmailServerDetails:
      description: ''
      type: object
      properties:
        SMTPServerName:
          type: string
          description: 'The name of the mail server that sends alerts, scheduled reports, log files, and additional information.'
        SMTPPort:
          type: integer
          format: int32
          description: The port number that connects to the mail server.
        senderEmail:
          type: string
          description: The sender email address used for emails sent from the software.
        senderName:
          type: string
          description: The sender name used for emails sent from the software.
        encryptionAlgorithm:
          $ref: '#/components/schemas/SMTPServerEncryptionAlgorithm'
        useAuthentication:
          type: boolean
          description: The option to use authentication on the mail server. This is typically used in external or internet mail server configurations.
        username:
          type: string
          description: 'only when useAuthentication is true, username would be populated'
    SendTestMailReq:
      description: ''
      type: object
      title: ''
      properties:
        SMTPServerName:
          type: string
          minLength: 1
          description: 'The name of the mail server that sends alerts, scheduled reports, log files, and additional information.'
        SMTPPort:
          type: integer
          format: int32
          description: The port number that connects to the mail server.
        senderEmail:
          type: string
          minLength: 1
          description: The sender email address used for emails sent from the software.
        senderName:
          type: string
          minLength: 1
          description: The sender name used for emails sent from the software.
        encryptionAlgorithm:
          $ref: '#/components/schemas/SMTPServerEncryptionAlgorithm'
        useAuthentication:
          type: boolean
          description: The option to use authentication on the mail server. This is typically used in external or internet mail server configurations.
        username:
          type: string
          description: 'If username is specified, password field must also be specified. To use previously saved username and password, leave out username and password in payload.'
        password:
          type: string
          description: 'If password is specified, username must also be specified. password should be a base 64 encoded string. To use previoulsy saved username and password, leave out username and password in payload.'
      required:
        - SMTPServerName
        - SMTPPort
        - senderEmail
        - senderName
    SMTPServerEncryptionAlgorithm:
      type: string
      default: NONE
      enum:
        - NONE
        - TLS
        - SSL
    IndexingStatusType:
      type: string
      description: Type of indexing status.
      enum:
        - NOT_APPLICABLE
        - ENABLED
        - SETUP_IN_PROGRESS
      default: NOT_APPLICABLE
    AlertsTriggeredListResp:
      title: AlertsTriggeredListResp
      type: object
      description: Used to return a list of alerts triggered
      properties:
        totalCount:
          type: integer
          format: int32
          description: Total count of the Alerts Triggered
        unreadCount:
          type: integer
          format: int32
          description: Total unread Alerts Triggered
        alertsTriggered:
          type: array
          items:
            $ref: '#/components/schemas/AlertTriggeredSummary'
    AlertTriggeredSummary:
      title: AlertTriggeredSummary
      type: object
      description: Summary of the Alert Triggered
      properties:
        id:
          type: integer
          format: int32
          description: Triggered Alert Id
        severity:
          $ref: '#/components/schemas/AlertSeverity'
        detectedCriterion:
          type: string
          description: detection criteria for the triggered alert to be generated
          enum:
            - Alert CommServe License Expires Within n Days
            - Alert Modified
            - Alert every n attempts (Network failures)
            - Alert every n attempts (Phase failures)
            - Alert every n failed login attempts
            - Alert when License Consumed reaches n Percent
            - Alert when client certificate Expires Within n Days
            - Alert when jobs in pending state exceed n percent or count of n
            - Auxiliary Copy fallen behind alert
            - Backup for subclient failed consecutively for n attempts
            - Classification Failed
            - DDB Store got corrupted
            - DDB disk space low
            - Data backed up exceeds n GB
            - Decrease in Data size by n %
            - Delayed by n Hrs
            - Disk Space Low
            - Drive went Offline
            - Force De-configured
            - Increase in Data size by n %
            - Insufficient Storage
            - Job Activity
            - Job Failed
            - Job Initiated
            - Job Skipped
            - Job Started
            - Job Succeeded
            - Job Succeeded with Errors
            - Job exceeded running time of n Hrs
            - Library went Offline
            - Maintenance Occurred
            - Maintenance Required
            - Media Handling Required
            - Media Picked Up
            - Media Reached Destination
            - Media Recalled
            - Media Returned to Source
            - MediaAgent went offline
            - Mount Path went Offline
            - No Backup for last n Days
            - No Data Protection
            - Non-encrypted media exported
            - Number of failed files is more than n
            - Percentage of failed files is more than n
            - Properties Modified
            - Release Upgrade Required
            - Rolled Back
            - Scheduler Changes
            - Updates Available to Download
            - User Overwrite of Media
        info:
          type: string
          description: Name of the Alert Triggered
        notes:
          type: string
          description: contains any descriptive note written for the alert
        type:
          type: string
          description: alert type for which the triggered alert was generated
          enum:
            - Configuration - Clients
            - Configuration - Edge drive-Share operations
            - Configuration - License
            - Configuration - MediaAgents
            - Configuration - Users
            - Custom Rules - Client Group License Usage Check
            - Custom Rules - Data aging is disabled for n days
            - Custom Rules - Expiring clones
            - Custom Rules - Index Backup Status
            - Custom Rules - Index State
            - Custom Rules - Notify decommissioned Virtual Machines
            - Job Management - Auxiliary Copy
            - Job Management - Data Aging
            - Job Management - Data Protection
            - Job Management - Data Recovery
            - Job Management - DeDup DB Reconstruction
            - Job Management - Disaster Recovery Backup
            - Media Management - Device Status
            - Media Management - Library Management
            - Operation - Admin Alert
            - Operation - Event Viewer Events
            - Software Updates - Updates Available to Download
        detectedTime:
          type: integer
          format: int32
          description: Unix Epoch Time
        client:
          $ref: '#/components/schemas/IdName'
        readStatus:
          type: boolean
          description: Gives the Alert Read Status. True if Read and False if Unread
        pinStatus:
          type: boolean
          description: Gives the Alert Pin Status. True if pinned and False if not pinned.
        jobId:
          type: integer
          format: int32
          description: Job Id by which this Alert was Triggered
        company:
          $ref: '#/components/schemas/IdName'
          description: Organization corresponding to alert
        commcell:
          $ref: '#/components/schemas/CommcellNameDisplayNameInfo'
    AlertSeverity:
      type: string
      title: AlertSeverity
      description: Alert Severity Level
      enum:
        - AUTO_PICK
        - CRITICAL
        - MAJOR
        - INFORMATION
    InstallMediaAgent:
      type: object
      properties:
        hostNames:
          type: array
          minItems: 1
          uniqueItems: true
          description: Host names where MediaAgent package is required to be installed
          items:
            type: string
            minLength: 1
        username:
          type: string
          description: Username to access hostnames
        password:
          type: string
          description: password should be in base64 encoded string. password is optional only if SSHKeyFilePassphrase is specified
        OSType:
          $ref: '#/components/schemas/MediaAgentInstallOSType'
        installLocation:
          type: string
          description: Holds install path according to the chosen OSType
        rebootIfRequired:
          type: boolean
          default: false
        SSHKeyPath:
          type: string
          description: Applicable only for Unix OSType. Path provided should be valid on the CommServ Client
        SSHKeyFilePassphrase:
          type: string
          description: Applicable only for Unix OSType and should be in base64 encoded string
      required:
        - hostNames
        - username
    MediaAgentInstallOSType:
      type: string
      enum:
        - WINDOWS
        - UNIX
      default: WINDOWS
    JobId:
      type: object
      title: ''
      properties:
        jobId:
          type: string
    RegionDetails:
      title: RegionDetails
      type: object
      description: Details for a region
      properties:
        id:
          type: integer
          format: int32
          description: Region ID
        name:
          type: string
          description: Region name
        displayName:
          type: string
          description: Display name for the region
        regionType:
          $ref: '#/components/schemas/RegionType'
        locations:
          type: array
          description: List of locations in the region
          items:
            $ref: '#/components/schemas/LocationDetailsWithZone'
        associatedServers:
          $ref: '#/components/schemas/RegionAssociatedServers'
        associatedRegionBasedPlans:
          $ref: '#/components/schemas/AssociatedRegionBasedPlans'
        globalConfigInfo:
          $ref: '#/components/schemas/GlobalConfigInfo'
    LocationDetailsWithZone:
      title: LocationDetailsWithZone
      type: object
      description: Details of a location with Zone
      properties:
        continent:
          type: string
          description: Name of continent for the location
        country:
          type: string
          description: Name of country for the location
        state:
          type: string
          description: Name of state for the location
        city:
          type: string
          description: Name of city for the location
        latitude:
          type: number
          format: double
          description: Latitude for the location
        longitude:
          type: number
          format: double
          description: Longitude for the location
        zone:
          $ref: '#/components/schemas/IdName'
      required:
        - country
        - latitude
        - longitude
    RegionAssociatedServers:
      title: RegionAssociatedServers
      type: object
      description: Details of servers associated to a region
      properties:
        serversCount:
          type: integer
          format: int32
        servers:
          type: array
          items:
            $ref: '#/components/schemas/RegionAssociatedServersList'
    RegionAssociatedServersList:
      title: RegionAssociatedServersList
      type: object
      description: List of servers associated to a region
      properties:
        server:
          $ref: '#/components/schemas/IdName'
        latitude:
          type: number
          format: double
        longitude:
          type: number
          format: double
    AssociatedRegionBasedPlans:
      title: AssociatedRegionBasedPlans
      type: object
      description: Details of plans associated to the region
      properties:
        plansCount:
          type: integer
          format: int32
        plans:
          type: array
          items:
            $ref: '#/components/schemas/AssociatedRegionBasedPlansList'
    AssociatedRegionBasedPlansList:
      title: AssociatedRegionBasedPlansList
      type: object
      description: List of plans associated to the region
      properties:
        plan:
          $ref: '#/components/schemas/IdName'
        associatedServers:
          type: integer
          format: int32
        type:
          $ref: '#/components/schemas/PlanType'
    UpdateRegion:
      title: UpdateRegion
      type: object
      description: 'For newly added location - country, latitude and longitude are mandatory fields. Any existing location added to locations array needs to have all the existing fields. '
      properties:
        newName:
          type: string
          description: New name for the region
        locationsOperationType:
          type: string
          description: Type of operation to be performed for locations
          enum:
            - NONE
            - OVERWRITE
            - ADD
            - DELETE
            - CLEAR
          default: ADD
        locations:
          type: array
          items:
            $ref: '#/components/schemas/LocationDetailsWithZone'
    ServersListResp:
      title: ServersListResp
      type: object
      description: Response for servers listing API
      properties:
        totalServers:
          type: integer
          format: int32
        servers:
          type: array
          items:
            $ref: '#/components/schemas/ServerSummary'
    ServerSummary:
      title: ServerSummary
      type: object
      description: Summary of individual server in servers list response
      properties:
        id:
          type: integer
          description: Id of server
          format: int32
        name:
          type: string
          description: Name of the client
        displayName:
          type: string
          description: Name to be displayed in UI
        hostName:
          type: string
          description: Hostname of the client
        agents:
          description: List of agents the server has installed
          type: array
          items:
            $ref: '#/components/schemas/IdName'
        serverGroups:
          type: array
          description: List of server groups for this server
          items:
            $ref: '#/components/schemas/IdName'
        configured:
          type: boolean
          description: Property to show whether client is in configured state or not
        version:
          type: string
          description: 'Version of Commvault software server is running. Version is in the format: Release.SPversion.Hotfixpack. eg: 11.22.5'
          example: 11.22.5
        OS:
          type: string
          description: 'The operating system, for example, Windows Server 2008 R2 Enterprise.'
        updateState:
          $ref: '#/components/schemas/UpdateStatus'
        isInfrastructure:
          type: boolean
          description: 'By default, a server is classified as infrastructure if has one of the following packages installed: CommServe, Index Store, Web Server, Content Extractor, Virtual Server Agent (VSA), Web Console, Content Analyzer, Exchange, Cloud Apps'
        isMARoleSet:
          type: boolean
          description: Used to determine if MA role is set on the client
        isMAPackageInstalled:
          type: boolean
          description: Used to determine if MA package is instlaled on the client
        networkReadiness:
          $ref: '#/components/schemas/FileServerStatus'
        company:
          $ref: '#/components/schemas/IdName'
        tags:
          type: array
          items:
            $ref: '#/components/schemas/IdNameValue'
        commcell:
          $ref: '#/components/schemas/CommcellInfo'
        clientRoles:
          type: array
          items:
            $ref: '#/components/schemas/IdName'
        region:
          $ref: '#/components/schemas/IdNameDisplayName'
    UpdateStatus:
      type: string
      title: UpdateStatus
      description: Enum which specifies the status of update on a server
      enum:
        - UNKNOWN
        - UP_TO_DATE
        - NEEDS_UPDATE
        - AHEAD_OF_CACHE
        - NOT_APPLICABLE
        - HAS_DIAGNOSTIC_UPDATES
        - OTHER_SOFTWARE
        - PENDING
    SolutionsList:
      title: SolutionsList
      type: object
      description: This will return list of supported workload solutions for a command center user
      properties:
        id:
          type: array
          description: Detail of the workload solution that is supported for the user
          items:
            $ref: '#/components/schemas/SolutionDetail'
    StorageUpdateType:
      type: string
      description: Enum which specifies the type of storage update
      enum:
        - DISRUPTIVE
        - NON_DISRUPTIVE
    DownloadOrCopySoftware:
      title: DownloadOrCopySoftware
      type: object
      description: Request body for download or copy software
      properties:
        downloadConfiguration:
          $ref: '#/components/schemas/DownloadConfiguration'
        copyConfiguration:
          $ref: '#/components/schemas/CopyConfiguration'
        notifyWhenJobCompletes:
          type: boolean
          description: Boolean which determines whether to notify when software is downloaded or copied.
    DownloadConfiguration:
      title: DownloadConfiguration
      type: object
      description: Configurations for software download from the internet
      properties:
        latestFixesForCurrentRelease:
          type: boolean
          description: Boolean which determines whether to download latest fixews for current release.
        upgradeToLatestRelease:
          type: boolean
          description: Boolean which determines whether to upgrade to latest release.
        featureRelease:
          type: string
          description: Which specific feature release to download.
        windowsDownloadOptions:
          type: array
          description: gives list of all the target windows operating systems to download software for.
          items:
            type: string
            enum:
              - WINDOWS_X32
              - WINDOWS_X64
          nullable: true
        unixDownloadOptions:
          type: array
          description: gives list of all the target unix and MAC operating systems to download software for.
          items:
            type: string
            enum:
              - AIX_PPC
              - FREEBSD_X86
              - FREEBSD_X86_64
              - HP_IA64
              - LINUX_ARM64
              - LINUX_PPC64
              - LINUX_PPC64LE
              - LINUX_X86
              - LINUX_X86_64
              - MAC_OS
              - SOLARIS_SPARC
              - SOLARIS_X86_64
          nullable: true
    CopyConfiguration:
      title: CopyConfiguration
      type: object
      description: Configurations for software download from the internet
      properties:
        downloadPath:
          type: string
          description: Path from where the software has to be downloaded.
        username:
          type: string
          description: If impersonation a user the, give the username of the user.
        password:
          type: string
          description: Corresponding password of the user
    UpgradeSoftware:
      title: UpgradeSoftware
      type: object
      description: Request body for server and server group upgrade software
      properties:
        rebootIfRequired:
          type: boolean
          description: Boolean which determines whether to reboot if required.
        runDBMaintenance:
          type: boolean
          description: Boolean which determines whether or not to run a database maintenance.
        notifyWhenJobCompletes:
          type: boolean
          description: Boolean which determines whether to notify when software is upgraded.
        installOSUpdates:
          type: boolean
          description: Boolean which determines whether to install operating system updates.
        installStorageUpdates:
          $ref: '#/components/schemas/StorageUpdateType'
          nullable: true
        waitForDownloadJobToComplete:
          type: boolean
          description: Boolean which determines whether to wait for Download software job to complete before software is upgraded.
        entities:
          type: array
          description: List of all the client and client groups on which UpgradeSoftware should be run
          items:
            $ref: '#/components/schemas/IdNameGUIDType'
          nullable: true
    JobIdResponse:
      type: object
      properties:
        jobId:
          type: integer
          format: int32
    SolutionDetail:
      type: object
      description: Consist of workload solution details.
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          description: ''
        commandCenterStateValue:
          type: integer
          format: int32
        commandCenterState:
          type: string
    ExecutePlanRules:
      title: ExecutePlanRules
      type: object
      description: Message object to hold information of entities against which plan rule need to be analyzed
      properties:
        subclients:
          type: array
          description: List of subclients against which plan rules need to be  executed and evaluated.
          items:
            $ref: '#/components/schemas/IdName'
        backupsets:
          type: array
          description: List of backupsets against which plan rules need to be  executed and evaluated.
          items:
            $ref: '#/components/schemas/IdName'
        instances:
          type: array
          description: List of instances against which plan rules need to be  executed and evaluated.
          items:
            $ref: '#/components/schemas/IdName'
        clients:
          type: array
          description: List of clients against which plan rules need to be  executed and evaluated.
          items:
            $ref: '#/components/schemas/IdName'
        ignorePreviousPlanAssociation:
          type: boolean
          description: Boolean to indicate if we want to evaluate rule for entities associated to plan. Default is false. Only entities with no plan associated will be evaluated.
        isPreviewOnly:
          type: boolean
          description: Boolean to indicate if request is to preview list of subclients that will be associated via plan rules
    WorkloadEntity:
      title: WorkloadEntity
      type: object
      description: Core object for workload entity
      properties:
        subclient:
          $ref: '#/components/schemas/IdName'
        backupset:
          $ref: '#/components/schemas/IdName'
        instance:
          $ref: '#/components/schemas/IdName'
        client:
          $ref: '#/components/schemas/IdName'
        apptype:
          $ref: '#/components/schemas/IdName'
    PlanRuleExcludedEntitiesList:
      title: PlanRuleExcludedEntitiesList
      type: object
      description: List of entities that are excluded from plan rule evaluation.
      properties:
        entities:
          type: array
          description: Details of entity excluded for plan association via plan rules.
          items:
            $ref: '#/components/schemas/WorkloadEntity'
    IncludeEntitiesForPlanRuleEvaluation:
      title: IncludeEntitiesForPlanRuleEvaluation
      type: object
      description: Entities that need to be included for plan rule evaluation
      properties:
        subclients:
          type: array
          items:
            $ref: '#/components/schemas/IdName'
    PlanRuleApplicableEntity:
      title: PlanRuleApplicableEntity
      type: object
      description: Entity applicable for plan association via plan assignment rules.
      properties:
        subclient:
          $ref: '#/components/schemas/IdName'
        backupset:
          $ref: '#/components/schemas/IdName'
        instance:
          $ref: '#/components/schemas/IdName'
        client:
          $ref: '#/components/schemas/IdName'
        apptype:
          $ref: '#/components/schemas/IdName'
        evaluatedPlan:
          $ref: '#/components/schemas/IdName'
        currentPlan:
          $ref: '#/components/schemas/IdName'
        ruleDetails:
          $ref: '#/components/schemas/PlanEntityRuleInfo'
    PlanRuleApplicableEntitiesList:
      title: PlanRuleApplicableEntitiesList
      type: object
      description: List of entities that are applicable for plan association via plan assignment rules.
      properties:
        entities:
          type: array
          description: Details of entity applicable for plan association.
          items:
            $ref: '#/components/schemas/PlanRuleApplicableEntity'
    IdType:
      title: IdType
      type: object
      properties:
        id:
          type: integer
          format: int32
        type:
          type: string
    GlobalSettingsItem:
      title: GlobalSettingsItem
      type: object
      properties:
        name:
          type: string
          description: Name of the setting
        displayLabel:
          type: string
          description: Display Label of the setting
        description:
          type: string
          description: Description of the setting
        acceptableValues:
          type: array
          description: Specifies values which are acceptable when modifying the setting value. This will only be returned if there are specific set of values which can be accepted.
          items:
            type: string
        defaultValue:
          type: string
          description: Value used to get default system behaviour
        value:
          type: string
          description: Value of the setting if the setting was modified.
        comment:
          type: string
          description: Comment set by the user while modifying the setting
        isModified:
          type: boolean
          description: Specifies if the setting is already modified by the user
        type:
          type: string
          enum:
            - Integer
            - String
            - Boolean
            - Multi String
          description: Type of the setting
        isRestartRequired:
          type: boolean
          description: Specifies if it is required to restart the services for any changes to take effect
        minValue:
          type: integer
          format: int32
          description: Specifies minimum value that can be set to modify specified global setting. It is only returned if the setting type is Integer
        maxValue:
          type: integer
          format: int32
          description: Specifies maximum value that can be set to modify specified global setting. It is only returned if the setting type is Integer
        category:
          type: string
          description: Category to which setting belongs
    GlobalSettingsResponse:
      title: GlobalSettingsResponse
      type: object
      properties:
        globalSettings:
          type: array
          items:
            $ref: '#/components/schemas/GlobalSettingsItem'
    ModifyAdditionalSetting:
      title: ModifyAdditionalSetting
      type: object
      properties:
        name:
          type: string
          description: Name of the setting to be modified. This cannot be modified but is required to identify the setting for which the new value is to be set.
        category:
          type: string
          description: Category of the setting to be modified. This cannot be modified but is required to identify the setting for which the new value is to be set.
        type:
          type: string
          description: Type of the setting to be modified. This cannot be modified but is required to identify the setting for which the new value is to be set.
          enum:
            - Integer
            - String
            - Boolean
            - Multi string
        newValue:
          type: string
          description: 'New value which will be set for the specified setting, there can be fixed acceptables values for some settings. To get more details about what are acceptable value for a setting, use GET GlobalSettings or GET EntitySettings.'
        comment:
          type: string
          description: Comment to specify why this value was set for the specified setting
        reset:
          type: boolean
          description: 'To reset the value of any already modified setting, set this to true to reset the value and regain default behaviour'
      required:
        - name
        - category
        - type
    AddedEntitySettingInfo:
      title: AddedEntitySettingInfo
      type: object
      properties:
        displayLabel:
          type: string
          description: Name of the setting
        type:
          type: string
          description: Data Type of the entity setting
        enabled:
          type: integer
          format: int64
          description: If the setting is enabled
        name:
          type: string
          description: Name of the setting
        category:
          type: string
          description: Category of the entity setting
        values:
          $ref: '#/components/schemas/EntitySettingsValueArray'
    ListAddedEntitySettings:
      title: ListAddedEntitySettings
      type: object
      properties:
        entitySettings:
          type: array
          items:
            $ref: '#/components/schemas/AddedEntitySettingInfo'
    ListAdditionalSettings:
      title: ListAdditionalSettings
      type: object
      properties:
        additionalSettings:
          type: array
          items:
            $ref: '#/components/schemas/AdditionalSettingInfo'
    AdditionalSettingInfo:
      title: AdditionalSettingInfo
      type: object
      properties:
        name:
          type: string
          description: Name of the setting
        displayLabel:
          type: string
          description: Display name of the setting
        description:
          type: string
          description: Description of the setting
        defaultValue:
          type: string
          description: Default value of the setting
        type:
          type: string
          description: Data type of the value
          enum:
            - Integer
            - String
            - Boolean
            - Multi String
        isRestartRequired:
          type: boolean
          description: Specifies if it is required to restart the services for any changes to take effect
        minValue:
          type: integer
          description: Specifies minimum value that can be set to modify specified global setting. It is only returned if the setting type is Integer
          format: int32
        maxValue:
          type: integer
          format: int64
          description: Maximum supported value
        category:
          type: string
          description: Category of the setting
    ListAddedGlobalSettings:
      type: object
      properties:
        globalSettings:
          type: array
          items:
            $ref: '#/components/schemas/GlobalSettingInfo'
    GlobalSettingInfo:
      title: GlobalSettingInfo
      type: object
      properties:
        name:
          type: string
          description: Name of the setting
        displayLabel:
          type: string
          description: Display name of the setting
        value:
          type: string
          description: Value of the setting
        comment:
          type: string
          description: Comment added along with setting
        type:
          type: string
          description: Data type of the setting
        category:
          type: string
          description: Category of the setting
        enabled:
          type: integer
          format: int64
          description: If the setting is enabled or not
    ModifyGlobalSettings:
      title: ModifyGlobalSettings
      type: object
      properties:
        globalSettings:
          type: array
          items:
            $ref: '#/components/schemas/ModifyAdditionalSetting'
    EntitySettingsValue:
      title: EntitySettingsValue
      type: object
      properties:
        value:
          type: string
          description: Value set for the specified setting linked to the specified entity
        comment:
          type: string
          description: Comment set by user while modifying the specified entity setting for the given entity
        entity:
          $ref: '#/components/schemas/IdNameType'
    EntitySettingsValueArray:
      title: EntitySettingsValueArray
      type: array
      items:
        $ref: '#/components/schemas/EntitySettingsValue'
    EntitySettingsListItem:
      title: EntitySettingsListItem
      type: object
      properties:
        name:
          type: string
          description: Name of the setting
        description:
          type: string
          description: Description of the setting
        acceptableValues:
          type: array
          description: Specifies values which are acceptable when modifying the setting value. This will only be returned if there are specific set of values which can be accepted.
          items:
            type: string
        defaultValue:
          type: string
          description: Value used to get default system behaviour
        values:
          $ref: '#/components/schemas/EntitySettingsValueArray'
        isModified:
          type: boolean
          description: Specifies if the setting is already modified by the user
        type:
          type: string
          enum:
            - Integer
            - String
            - Boolean
            - Multi String
          description: Type of the setting
        isRestartRequired:
          type: boolean
          description: Specifies if it is required to restart the services for any changes to take effect
        minValue:
          type: integer
          format: int32
          description: Specifies minimum value that can be set to modify specified global setting. It is only returned if the setting type is Integer
        maxValue:
          type: integer
          format: int32
          description: Specifies maximum value that can be set to modify specified global setting. It is only returned if the setting type is Integer
        category:
          type: string
          description: Category to which setting belongs
    EntitySettingsResponse:
      title: EntitySettingsResponse
      type: object
      properties:
        entitySettings:
          type: array
          items:
            $ref: '#/components/schemas/EntitySettingsListItem'
    ModifyEntitySettingsItem:
      title: ModifyEntitySettingsItem
      description: Id and Type of the entity is required in entity property to which the entity setting is to be applied. Type of entity can be Server or Server group.
      type: object
      properties:
        name:
          type: string
          description: Name of the setting to be modified. This cannot be modified but is required to identify the setting for which the new value is to be set.
        category:
          type: string
          description: Category of the setting to be modified. This cannot be modified but is required to identify the setting for which the new value is to be set.
        type:
          type: string
          description: Type of the setting to be modified. This cannot be modified but is required to identify the setting for which the new value is to be set.
          enum:
            - Integer
            - String
            - Boolean
            - Multi string
        value:
          type: string
          description: 'Value which will be set for the specified setting, there can be fixed acceptables values for some settings. To get more details about what are acceptable value for a setting, use GET GlobalSettings or GET EntitySettings.'
        comment:
          type: string
          description: Comment to specify why this value was set for the specified setting
        reset:
          type: boolean
          description: 'To reset the value of any already modified setting, set this to true to reset the value and regain default behaviour'
        entity:
          $ref: '#/components/schemas/IdType'
      required:
        - name
        - category
        - type
        - entity
    ModifyEntitySettings:
      title: ModifyEntitySettings
      type: object
      properties:
        entitySettings:
          type: array
          items:
            $ref: '#/components/schemas/ModifyEntitySettingsItem'
    GetGlobalExceptions:
      title: GetGlobalExceptions
      type: object
      description: Get list of global windows and unix execptions
      properties:
        useGlobalExceptionsOnAllSubclients:
          type: boolean
          description: Boolean which signifies application of global execption on all subclients
        windowsGlobalExceptions:
          type: array
          description: gives list of all the windowsglobal execptions
          items:
            type: string
          nullable: true
        unixGlobalExceptions:
          type: array
          description: List of global unix execptions
          items:
            type: string
          nullable: true
    SetGlobalExceptions:
      title: SetGlobalExceptions
      type: object
      description: Used to set global exceptions
      properties:
        windowsGlobalExceptions:
          $ref: '#/components/schemas/GlobalExceptionOperation'
        unixGlobalExceptions:
          $ref: '#/components/schemas/GlobalExceptionOperation'
        useGlobalExceptionsOnAllSubclients:
          type: boolean
          description: Boolean value which updates the property useGlobalExceptionsOnAllSubclients
    GlobalExceptionOperation:
      title: GlobalExceptionOperation
      type: object
      description: Information conatins the operation to be done on exceptions
      properties:
        operationType:
          type: string
          description: The operations on global exceptions provided would be executed based on the operation type provided
          enum:
            - NONE
            - OVERWRITE
            - ADD
            - DELETE
            - CLEAR
          default: OVERWRITE
        exceptions:
          type: array
          description: Array of exceptions which will be operated upon based on the operation type
          items:
            type: string
    RecoveryPointStoreDetails:
      title: RecoveryPointStoreDetails
      type: object
      description: Details about Recovery Point Stores
      properties:
        storageName:
          type: string
          description: Name of the storage library.
        associatedMediaAgent:
          type: string
          description: Tape library MediaAgent association
        totalCapacity:
          type: string
          description: Magnetic library capacity.
        freeSpace:
          type: string
          description: Magnetic library total free space
        maximumSize:
          type: string
          description: Magnetic library capacity size
        maxPairs:
          type: string
          description: Maximum allowed pairs per RPStore
        peakInterval:
          type: array
          description: Interval window containing day and time details
          items:
            $ref: '#/components/schemas/DayAndTime'
        locations:
          type: array
          description: Mount Path locations details
          items:
            $ref: '#/components/schemas/MountLocationDetails'
    MountLocationDetails:
      title: MountLocationDetails
      type: object
      description: 'Mount location details'
      properties:
        status:
          type: string
          description: Status of the mount path.
        mountPath:
          $ref: '#/components/schemas/IdName'
        enabled:
          type: boolean
          description: Describe whether mount path is enabled or not.
        dataServerType:
          type: string
          description: Type of device access server type.
          enum:
            - NONE
            - DATASERVER_ISCSI_DEVICEACCESS
            - DATASERVER_IP_DEVICEACCESS
            - DATASERVER_SAN_DEVICEACCESS
        deviceId:
          type: integer
          format: int32
          description: Unique device identifier.
    CredentialManagerListResp:
      title: CredentialManagerListResp
      type: object
      properties:
        credentialManager:
          type: array
          items:
            $ref: '#/components/schemas/CredentialSummary'
    CredentialSummary:
      title: CredentialSummary
      type: object
      description: Summary of a credential
      properties:
        id:
          type: integer
          format: int32
          description: Id of Credential
        name:
          type: string
          description: Name of Credential
        accountType:
          $ref: '#/components/schemas/CredentialAccountType'
        vendorType:
          $ref: '#/components/schemas/CloudVendorType'
        authType:
          type: string
          description: Aunthentication type applicable only for Cloud Accounts with Amazon Web Services or Microsoft Azure as vendor.
          enum:
            - AMAZON_S3
            - AMAZON_STS_IAM_ROLE
            - MICROSOFT_AZURE
            - AZUREACCOUNT
        description:
          description: Description of Credential
          type: string
        company:
          $ref: '#/components/schemas/IdName'
        commcell:
          $ref: '#/components/schemas/IdName'
    CredentialOwner:
      title: CredentialOwner
      type: object
      properties:
        user:
          $ref: '#/components/schemas/IdName'
        userGroup:
          $ref: '#/components/schemas/IdName'
      description: Owner of a credential can be a user or user group
    CreateCredential:
      title: CreateCredential
      type: object
      description: To create a new Credential
      properties:
        accountType:
          x-terraform-required: false
          $ref: '#/components/schemas/CredentialAccountType'
        vendorType:
          $ref: '#/components/schemas/CloudVendorType'
        name:
          type: string
          description: Name of Credential
      required:
        - accountType
        - name
    CredentialSecurity:
      title: CredentialSecurity
      type: object
      description: Security association of a list of users and user groups
      properties:
        owner:
          x-terraform-required: false
          $ref: '#/components/schemas/CredentialOwner'
        associations:
          type: array
          items:
            $ref: '#/components/schemas/CredentialSecurityAssociations'
      required:
        - owner
    UpdateCredentialSecurity:
      title: UpdateCredentialSecurity
      type: object
      description: Update Security association of a list of users and user groups
      properties:
        owner:
          $ref: '#/components/schemas/CredentialOwner'
        associations:
          type: array
          items:
            $ref: '#/components/schemas/CredentialSecurityAssociations'
    CloudVendorType:
      type: string
      title: CloudVendorType
      description: Cloud vendor types appilcable only for Cloud Account type
      enum:
        - ALICLOUD_OSS
        - AMAZON_GLACIER
        - AMAZON
        - ATT_SYNAPTIC
        - REVERA_VAULT
        - CEPH_OBJECT_GATEWAY_S3
        - CMCC_ONEST
        - CLOUDIAN_HYPERSTORE
        - DELL_EMC_ECS_S3
        - EMC_ATMOS
        - FUJITSU_STORAGE_ETERNUS
        - GOOGLE_CLOUD
        - HDS_HCP
        - HITACHI_VANTARA_HCP_S3
        - HUAWEI_OSS
        - IBM_CLOUD
        - IBM_CLOUD_S3
        - INSPUR_CLOUD
        - IRON_MOUNTAIN_CLOUD
        - KINGSOFT_KS3
        - MICROSOFT_AZURE_TYPE
        - NETAPP_STORAGEGRID
        - NUTANIX_BUCKETS
        - OPENSTACK
        - AMPLIDATA
        - RACKSPACE_CLOUD_FILES
        - S3_COMPATIBLE
        - SALESFORCE_CONNECTED_APP
        - SCALITY_RING
        - TELEFONICA_OPEN_CLOUD_OBJECT_STORAGE
        - VERIZON_CLOUD
        - WASABI_HOT_CLOUD_STORAGE
    CredentialAccountType:
      type: string
      title: CredentialAccountType
      enum:
        - WINDOWSACCOUNT
        - LINUXACCOUNT
        - STORAGE_ARRAY_ACCOUNT
        - CLOUD_ACCOUNT
      description: ''
    CredentialSecurityAssociations:
      title: CredentialSecurityAssociations
      type: object
      description: Reference to a user and user group
      x-terraform-ignore-child: name
      properties:
        user:
          $ref: '#/components/schemas/IdName'
        userGroup:
          $ref: '#/components/schemas/IdName'
        permissions:
          $ref: '#/components/schemas/PermissionResp'
        isCreatorAssociation:
          type: boolean
          description: To check if the user/user group associated is the owner.
    AzureEndpoints:
      title: AzureEndpoints
      type: object
      description: 'Endpoints for Aunthentication, Storage and Management'
      properties:
        activeDirectory:
          type: string
        storage:
          type: string
        resourceManager:
          type: string
    CredentialInfo:
      title: CredentialInfo
      description: 'Applicable for Credentials with Linux Account, Windows Account, Storage Array Account or Cloud Account with Vendor Type as Hitachi Content Platform '
      allOf:
        - $ref: '#/components/schemas/CreateCredential'
        - type: object
          properties:
            userAccount:
              type: string
              description: User account of Credential
            password:
              type: string
              description: Password of Credential. Password must be in base64 encoded format.
          required:
            - userAccount
            - password
        - $ref: '#/components/schemas/CommonCredentialInfo'
    CloudCredentialInfo:
      title: CloudCredentialInfo
      description: 'Applicable only for credentials with Cloud Account and Vendor Type as Cloud Object Storage Service, Amazon Glacier, CCL Vault V2, Ceph Object Gateway, China, Cloudian HyperStore, Dell EMC ECS, Fujitsu Storage ETERNUS CD10000, Google Cloud, Hitachi Content Platform for Cloud Scale, Huawei Object Storage, IBM Cloud Object Storage (S3-compatible), Inspur Cloud Object Storage, Iron Mountain Iron Cloud, Kingsoft Standard Storage Service, NetApp StorageGRID, Nutanix Objects, Quantum ActiveScale, S3 Compatible Storage, Scality RING, Telefonica Open Cloud Object Storage, Verizon Cloud Storage or Wasabi Hot Cloud Storage '
      allOf:
        - $ref: '#/components/schemas/CreateCredential'
        - type: object
          properties:
            accessKeyId:
              type: string
              description: Access Key ID of Credential
            secretAccessKey:
              type: string
              description: Secret Access Key of Credential and must be in base64 encoded format.
          required:
            - accessKeyId
            - secretAccessKey
        - $ref: '#/components/schemas/CommonCredentialInfo'
    CloudCredentialInfoWithTokenId:
      title: CloudCredentialInfoWithTokenId
      description: Applicable only for credentials with Cloud Account and Vendor Type as AT&T Synaptic Storage or EMC Atmos
      allOf:
        - $ref: '#/components/schemas/CreateCredential'
        - type: object
          properties:
            tokenId:
              type: string
              description: Token ID of Credential
            sharedSecret:
              type: string
              description: Shared secret of Credential and must be in base64 encoded format.
          required:
            - tokenId
            - sharedSecret
        - $ref: '#/components/schemas/CommonCredentialInfo'
    CloudCredentialInfoWithAPIKey:
      title: CloudCredentialInfoWithAPIKey
      description: 'Applicable only for credentials with Cloud Account and Vendor Type as IBM Cloud Object Storage, OpenStack Object Storage or Rackspace Cloud Files'
      allOf:
        - $ref: '#/components/schemas/CreateCredential'
        - type: object
          properties:
            userAccount:
              type: string
              description: User account of Credential
            apiKey:
              type: string
              description: API Key of Credential and must be in base64 encoded format.
          required:
            - userAccount
            - apiKey
        - $ref: '#/components/schemas/CommonCredentialInfo'
    SalesforceCredentialInfo:
      title: SalesforceCredentialInfo
      description: Applicable only for credentials with Cloud Account and Vendor Type as Salesforce Connected App
      allOf:
        - $ref: '#/components/schemas/CreateCredential'
        - type: object
          properties:
            consumerKey:
              type: string
              description: Consumer key of Credential
            consumerSecret:
              type: string
              description: Consumer secret of Credential
          required:
            - consumerKey
            - consumerSecret
        - $ref: '#/components/schemas/CommonCredentialInfo'
    AmazonCredentialInfo:
      title: AmazonCredentialInfo
      description: 'Applicable only for credentials with Cloud Account, Vendor Type as Amazon Web Services and  authType is Access and Secret Keys'
      allOf:
        - $ref: '#/components/schemas/CreateCredential'
        - type: object
          properties:
            authType:
              x-terraform-constant: AMAZON_S3
              type: string
              description: Aunthentication type
              enum:
                - AMAZON_S3
            accessKeyId:
              type: string
              description: Access Key ID of Credential
            secretAccessKey:
              type: string
              description: Secret Access Key of Credential and must be in base64 encoded format.
          required:
            - authType
            - accessKeyId
            - secretAccessKey
        - $ref: '#/components/schemas/CommonCredentialInfo'
    AmazonCredentialInfoWithRoleArn:
      title: AmazonCredentialInfoWithRoleArn
      description: 'Applicable only for credentials with Cloud Account, Vendor Type as Amazon Web Services and  authType is STS Assume Role with IAM Role Policy'
      allOf:
        - $ref: '#/components/schemas/CreateCredential'
        - type: object
          properties:
            authType:
              x-terraform-constant: AMAZON_STS_IAM_ROLE
              type: string
              description: Aunthentication type.
              enum:
                - AMAZON_STS_IAM_ROLE
            roleArn:
              type: string
              description: Role ARN of credential
            password:
              type: string
              description: Role ARN of credential
          required:
            - authType
            - roleArn
        - $ref: '#/components/schemas/CommonCredentialInfo'
    AzureCredentialInfo:
      title: AzureCredentialInfo
      description: 'Applicable only for credentials with Cloud Account, Vendor Type is Microsoft Azure and authType is Access Key'
      allOf:
        - $ref: '#/components/schemas/CreateCredential'
        - type: object
          properties:
            authType:
              x-terraform-constant: MICROSOFT_AZURE
              type: string
              description: Aunthentication type applicable only for Cloud Accounts with Microsoft Azure as vendor.
              enum:
                - MICROSOFT_AZURE
            accountName:
              type: string
              description: 'Account name of Credential, applicable only if authType is Access Key'
            accessKeyId:
              type: string
              description: 'Access key ID of Credential, applicable only if authType is Access Secret Key and must be in base64 encoded format.'
          required:
            - authType
            - accountName
            - accessKeyId
        - $ref: '#/components/schemas/CommonCredentialInfo'
    AzureCredentialInfoWithCertificate:
      title: AzureCredentialInfoWithCertificate
      description: Applicable only for Cloud Accounts with Microsoft Azure vendor and authType as IAM AD Application Role Assignment
      allOf:
        - $ref: '#/components/schemas/CreateCredential'
        - type: object
          properties:
            authType:
              x-terraform-constant: AZUREACCOUNT
              type: string
              description: Aunthentication type applicable only for Cloud Accounts with Microsoft Azure as vendor.
              enum:
                - AZUREACCOUNT
            tenantId:
              type: string
              description: Unique Azure active directory ID
            applicationId:
              type: string
              description: Unique Azure application ID
            applicationSecret:
              type: string
              description: Application secret of Credential and must be in base64 encoded format.
            applicationCertificatePassword:
              type: string
              description: Password of the certificate and must be in base64 encoded format.
            certificate:
              type: string
              description: 'Content of the certificate file. It should be base64 encoded. Accepted fileTypes are pfx, p12.'
            certificateThumbprint:
              type: string
              description: Thumbprint of the certificate file.
            environment:
              type: string
              enum:
                - AZURE_CLOUD
                - AZURE_USGOV
                - AZURE_GERMANCLOUD
                - AZURE_CHINACLOUD
                - AZURE_STACK
              description: Azure cloud deployed region
            endpoints:
              $ref: '#/components/schemas/AzureEndpoints'
          required:
            - authType
            - tenantId
            - applicationId
            - applicationSecret
            - environment
            - certificate
            - applicationCertificatePassword
            - certificateThumbprint
        - $ref: '#/components/schemas/CommonCredentialInfo'
    AzureCredentialInfoWithTenantId:
      title: AzureCredentialInfoWithTenantId
      description: Applicable only for Cloud Accounts with Microsoft Azure vendor and authType as IAM AD Application Role Assignment
      allOf:
        - $ref: '#/components/schemas/CreateCredential'
        - type: object
          properties:
            authType:
              x-terraform-constant: AZUREACCOUNT
              type: string
              description: Aunthentication type applicable only for Cloud Accounts with Microsoft Azure as vendor.
              enum:
                - AZUREACCOUNT
            tenantId:
              type: string
              description: Unique Azure active directory ID
            applicationId:
              type: string
              description: Unique Azure application ID
            applicationSecret:
              type: string
              description: Application secret of Credential and must be in base64 encoded format.
            environment:
              type: string
              enum:
                - AZURE_CLOUD
                - AZURE_USGOV
                - AZURE_GERMANCLOUD
                - AZURE_CHINACLOUD
                - AZURE_STACK
              description: Azure cloud deployed region
            endpoints:
              $ref: '#/components/schemas/AzureEndpoints'
          required:
            - authType
            - tenantId
            - applicationId
            - applicationSecret
            - environment
        - $ref: '#/components/schemas/CommonCredentialInfo'
    GoogleCredentialInfo:
      title: GoogleCredentialInfo
      description: 'Applicable only for credentials with Cloud Account, Vendor Type as Google and Auth Type as Access and Secret key'
      allOf:
        - $ref: '#/components/schemas/CreateCredential'
        - type: object
          properties:
            authType:
              type: string
              description: Aunthentication type applicable only for Cloud Accounts with Google as vendor.
              enum:
                - GOOGLE_SERVICE_ACCOUNT
                - GOOGLE_CLOUD
            accessKeyId:
              type: string
              description: 'Access key ID of Credential, applicable only if authType is Access Secret Key.'
            secretAccessKey:
              type: string
              description: Secret Access Key of Credential and must be in base64 encoded format.
            connectString:
              type: string
              description: Connect String for Credential
            dbName:
              type: string
              description: DB Name for Credential
            certificate:
              type: string
              description: Certificate of Credential
            projectId:
              type: string
              description: Project ID of credential
          required:
            - authType
            - accessKeyId
            - secretAccessKey
            - connectString
            - dbName
            - certificate
            - projectId
        - $ref: '#/components/schemas/CommonCredentialInfo'
    GoogleServiceAccountCredentialInfo:
      title: GoogleServiceAccountCredentialInfo
      description: 'Applicable only for credentials with Cloud Account, Vendor Type as Google and Auth Type as Service Account'
      allOf:
        - $ref: '#/components/schemas/CreateCredential'
        - type: object
          properties:
            authType:
              type: string
              description: Aunthentication type applicable only for Cloud Accounts with Google as vendor.
              enum:
                - GOOGLE_SERVICE_ACCOUNT
                - GOOGLE_CLOUD
            userAccount:
              type: string
              description: User Account of Credential
            connectString:
              type: string
              description: Connect String for Credential
            dbName:
              type: string
              description: DB Name for Credential
            certificate:
              type: string
              description: Certificate of Credential
            projectId:
              type: string
              description: Project ID of credential
          required:
            - authType
            - userAccount
            - connectString
            - dbName
            - certificate
            - projectId
        - $ref: '#/components/schemas/CommonCredentialInfo'
    OracleCredentialInfo:
      title: OracleCredentialInfo
      description: Applicable only for credentials with Cloud Account and Vendor Type as Oracle Infrastructure
      allOf:
        - $ref: '#/components/schemas/CreateCredential'
        - type: object
          properties:
            userAccount:
              type: string
              description: User Account of Credential
            password:
              type: string
              description: Password of Credential. Password must be in base64 encoded format.
            connectString:
              type: string
              description: Connect String for Credential
            dbName:
              type: string
              description: DB Name for Credential
            certificate:
              type: string
              description: Certificate of Credential
            tenancyOCID:
              type: string
              description: Oracle Cloud ID
            userOCID:
              type: string
              description: User name for the Oracle Cloud ID
          required:
            - userAccount
            - password
            - connectString
            - dbName
            - certificate
            - tenancyOCID
            - userOCID
        - $ref: '#/components/schemas/CommonCredentialInfo'
    CredentialContent:
      title: CredentialContent
      description: 'Applicable for Credentials with Linux Account, Windows Account, Storage Array Account or Cloud Account with Vendor Type as Hitachi Content Platform. '
      type: object
      properties:
        newName:
          x-terraform-mapping: name
          type: string
          description: Updated name of credential
        userAccount:
          type: string
          description: User account of Credential. If updated the updated user account is considered else the existing user account is considered.
        newPassword:
          x-terraform-mapping: password
          type: string
          description: Updated password of credential. The password has to be provided in Base64 format.
        description:
          type: string
          description: Updated description of Credential
        security:
          x-terraform-include: false
          $ref: '#/components/schemas/UpdateCredentialSecurity'
      required:
        - userAccount
        - newPassword
    CloudCredentialContent:
      title: CloudCredentialContent
      description: 'Applicable only for credentials with Cloud Account and Vendor Type as Cloud Object Storage Service, Amazon Glacier, CCL Vault V2, Ceph Object Gateway, China, Cloudian HyperStore, Dell EMC ECS, Fujitsu Storage ETERNUS CD10000, Google Cloud, Hitachi Content Platform for Cloud Scale, Huawei Object Storage, IBM Cloud Object Storage (S3-compatible), Inspur Cloud Object Storage, Iron Mountain Iron Cloud, Kingsoft Standard Storage Service, NetApp StorageGRID, Nutanix Objects, Quantum ActiveScale, S3 Compatible Storage, Scality RING, Telefonica Open Cloud Object Storage, Verizon Cloud Storage or Wasabi Hot Cloud Storage '
      type: object
      properties:
        newName:
          type: string
          description: Updated name of credential
        accessKeyId:
          type: string
          description: Access Key ID of Credential. If updated the updated Access Key ID is considered else the existing Access Key ID is considered.
        secretAccessKey:
          type: string
          description: Secret Access Key of Credential and must be in base64 encoded format.
        description:
          type: string
          description: Updated description of Credential
        security:
          $ref: '#/components/schemas/UpdateCredentialSecurity'
      required:
        - accessKeyId
        - secretAccessKey
    CloudCredentialContentWithTokenId:
      title: CloudCredentialContentWithTokenId
      description: Applicable only for credentials with Cloud Account and Vendor Type as AT&T Synaptic Storage or EMC Atmos
      type: object
      properties:
        newName:
          type: string
          description: Updated name of credential
        tokenId:
          type: string
          description: Token ID of Credential. If updated the updated token Id is considered else the existing token Id is considered.
        sharedSecret:
          type: string
          description: Updated Shared secret of Credential and must be in base64 encoded format.
        description:
          type: string
          description: Updated description of Credential
        security:
          $ref: '#/components/schemas/UpdateCredentialSecurity'
      required:
        - tokenId
        - sharedSecret
    CloudCredentialContentWithAPIKey:
      title: CloudCredentialContentWithAPIKey
      description: 'Applicable only for credentials with Cloud Account and Vendor Type as IBM Cloud Object Storage, OpenStack Object Storage or Rackspace Cloud Files'
      type: object
      properties:
        newName:
          type: string
          description: Updated name of credential
        userAccount:
          type: string
          description: User account of Credential. If updated the updated user account is considered else the existing user account is considered.
        apiKey:
          type: string
          description: Updated API Key of Credential and must be in base64 encoded format.
        description:
          type: string
          description: Updated description of Credential
        security:
          $ref: '#/components/schemas/UpdateCredentialSecurity'
      required:
        - userAccount
        - apiKey
    SalesforceCredentialContent:
      title: SalesforceCredentialContent
      description: Applicable only for credentials with Cloud Account and Vendor Type as Salesforce Connected App
      type: object
      properties:
        newName:
          type: string
          description: Updated name of credential
        consumerKey:
          type: string
          description: Consumer key of Credential
        consumerSecret:
          type: string
          description: Consumer secret of Credential
        description:
          type: string
          description: Updated description of Credential
        security:
          $ref: '#/components/schemas/UpdateCredentialSecurity'
      required:
        - consumerKey
        - consumerSecret
    AmazonCredentialContent:
      title: AmazonCredentialContent
      description: 'Applicable only for credentials with Cloud Account, Vendor Type as Amazon Web Services and authType is Access and Secret Keys'
      type: object
      properties:
        newName:
          x-terraform-mapping: name
          type: string
          description: Updated name of credential
        accessKeyId:
          type: string
          description: Access Key ID of Credential. If updated the updated access key ID is considered.
        secretAccessKey:
          type: string
          description: Updated Secret Access Key of Credential and must be in base64 encoded format.
        description:
          x-terraform-always-update: true
          type: string
          description: Updated description of Credential
        security:
          $ref: '#/components/schemas/UpdateCredentialSecurity'
      required:
        - accessKeyId
        - secretAccessKey
    AmazonCredentialContentWithRoleArn:
      title: AmazonCredentialContentWithRoleArn
      description: 'Applicable only for credentials with Cloud Account, Vendor Type as Amazon Web Services and authType is STS Assume Role with IAM Role Policy'
      type: object
      properties:
        newName:
          x-terraform-mapping: name
          type: string
          description: Updated name of credential
        password:
          type: string
        roleArn:
          type: string
          description: Role ARN of credential. If updated the updated role ARN is considered.
        description:
          x-terraform-always-update: true
          type: string
          description: Updated description of Credential
        security:
          $ref: '#/components/schemas/UpdateCredentialSecurity'
      required:
        - roleArn
    AzureCredentialContent:
      title: AzureCredentialContent
      description: 'Applicable only for credentials with Cloud Account, Vendor Type as Microsoft Azure and authType is Access Key'
      type: object
      properties:
        newName:
          x-terraform-mapping: name
          type: string
          description: Updated name of credential
        accountName:
          type: string
          description: Account name of Credential. If updated the updated account name is considered else the existing account name is considered.
        accessKeyId:
          type: string
          description: Access key ID of Credential and must be in base64 encoded format.
        description:
          x-terraform-always-update: true
          type: string
          description: Updated description of Credential
        security:
          $ref: '#/components/schemas/CredentialSecurity'
      required:
        - accountName
        - accessKeyId
    AzureCredentialContentWithCertificate:
      title: AzureCredentialContentWithCertificate
      description: Applicable only for credentials with Cloud Account and Vendor Type as Microsoft Azure
      type: object
      properties:
        authType:
          x-terraform-constant: AZUREACCOUNT
          type: string
          description: Aunthentication type applicable only for Cloud Accounts with Microsoft Azure as vendor.
          enum:
            - AZUREACCOUNT
        newName:
          x-terraform-mapping: name
          type: string
          description: Updated name of credential
        tenantId:
          type: string
          description: Unique Azure active directory ID
        applicationId:
          type: string
          description: Unique Azure application ID
        newApplicationSecret:
          x-terraform-mapping: applicationSecret
          type: string
          description: Application secret of Credential and must be in base64 encoded format.
        applicationCertificatePassword:
          type: string
          description: Password of the certificate and must be in base64 encoded format.
        certificate:
          type: string
          description: 'Content of the certificate file. It should be base64 encoded. Accepted fileTypes are pfx, p12.'
        certificateThumbprint:
          type: string
          description: Thumbprint of the certificate file.
        environment:
          type: string
          enum:
            - AZURE_CLOUD
            - AZURE_USGOV
            - AZURE_GERMANCLOUD
            - AZURE_CHINACLOUD
            - AZURE_STACK
          description: Azure cloud deployed region
        endpoints:
          $ref: '#/components/schemas/AzureEndpoints'
        description:
          x-terraform-always-update: true
          type: string
          description: Updated description of Credential
        security:
          $ref: '#/components/schemas/CredentialSecurity'
      required:
        - tenantId
        - applicationId
        - newApplicationSecret
        - applicationCertificatePassword
        - certificate
        - certificateThumbprint
        - endpoints
        - environment
    AzureCredentialContentWithTenantId:
      title: AzureCredentialContentWithTenantId
      description: Applicable only for credentials with Cloud Account and Vendor Type as Microsoft Azure
      type: object
      properties:
        authType:
          x-terraform-constant: AZUREACCOUNT
          type: string
          description: Aunthentication type applicable only for Cloud Accounts with Microsoft Azure as vendor.
          enum:
            - AZUREACCOUNT
        newName:
          x-terraform-mapping: name
          type: string
          description: Updated name of credential
        tenantId:
          type: string
          description: Unique Azure active directory ID
        applicationId:
          type: string
          description: Unique Azure application ID
        newApplicationSecret:
          x-terraform-mapping: applicationSecret
          type: string
          description: Application secret of Credential and must be in base64 encoded format.
        environment:
          type: string
          enum:
            - AZURE_CLOUD
            - AZURE_USGOV
            - AZURE_GERMANCLOUD
            - AZURE_CHINACLOUD
            - AZURE_STACK
          description: Azure cloud deployed region
        endpoints:
          $ref: '#/components/schemas/AzureEndpoints'
        description:
          x-terraform-always-update: true
          type: string
          description: Updated description of Credential
        security:
          $ref: '#/components/schemas/CredentialSecurity'
      required:
        - tenantId
        - applicationId
        - newApplicationSecret
        - endpoints
        - environment
    GoogleCredentialContent:
      title: GoogleCredentialContent
      description: 'Applicable only for credentials with Cloud Account, Vendor Type as Google and Auth Type as Access and Secret key'
      type: object
      properties:
        newName:
          type: string
          description: Updated name of credential
        accessKeyId:
          type: string
          description: 'Access key ID of Credential, applicable only if authType is Access Secret Key.'
        secretAccessKey:
          type: string
          description: Secret Access Key of Credential and must be in base64 encoded format.
        connectString:
          type: string
          description: Connect String for Credential
        dbName:
          type: string
          description: DB Name for Credential
        certificate:
          type: string
          description: Certificate of Credential
        projectId:
          type: string
          description: Project ID of credential
        description:
          type: string
          description: Updated description of Credential
        security:
          $ref: '#/components/schemas/CredentialSecurity'
      required:
        - accessKeyId
        - secretAccessKey
    GoogleServiceAccountCredentialContent:
      title: GoogleServiceAccountCredentialContent
      description: 'Applicable only for credentials with Cloud Account, Vendor Type as Google and Auth Type as Service Account'
      type: object
      properties:
        newName:
          type: string
          description: Updated name of credential
        userAccount:
          type: string
          description: User Account of Credential
        connectString:
          type: string
          description: Connect String for Credential
        dbName:
          type: string
          description: DB Name for Credential
        certificate:
          type: string
          description: Certificate of Credential
        projectId:
          type: string
          description: Project ID of credential
        description:
          type: string
          description: Updated description of Credential
        security:
          $ref: '#/components/schemas/CredentialSecurity'
      required:
        - projectId
        - certificate
        - userAccount
    OracleCredentialContent:
      title: OracleCredentialContent
      description: 'Applicable only for credentials with Cloud Account, Vendor Type as Oracle Cloud Infrastructutre'
      type: object
      properties:
        newName:
          type: string
          description: Updated name of credential
        userAccount:
          type: string
          description: User Account of Credential
        password:
          type: string
          description: Password of Credential. Password must be in base64 encoded format.
        connectString:
          type: string
          description: Connect String for Credential
        dbName:
          type: string
          description: DB Name for Credential
        certificate:
          type: string
          description: Certificate of Credential
        tenancyOCID:
          type: string
          description: Oracle Cloud ID
        userOCID:
          type: string
          description: User name for the Oracle Cloud ID
        description:
          type: string
          description: Updated description of Credential
        security:
          $ref: '#/components/schemas/CredentialSecurity'
      required:
        - tenancyOCID
        - userOCID
        - password
        - certificate
    CommonCredentialInfo:
      title: CommonCredentialInfo
      type: object
      description: ''
      properties:
        description:
          type: string
          description: Description of Credential
        security:
          #x-terraform-include: false
          $ref: '#/components/schemas/CredentialSecurity'
    GetPseudoClientsForCompanyResp:
      title: GetPseudoClientsForCompanyResp
      type: object
      description: Response template for list of servers with no packages a company
      properties:
        clients:
          type: array
          items:
            $ref: '#/components/schemas/IdNameDisplayName'
    GetAssociationsForCompanyResp:
      title: GetAssociationsForCompanyResp
      type: object
      description: Response template for list of associationsfor  a company
      properties:
        associatedEntities:
          type: array
          items:
            $ref: '#/components/schemas/IdName'
    UpdateReplicationGroup:
      title: UpdateReplicationGroupReq
      type: object
      properties:
        newName:
          type: string
          description: Used to change the name of a replication group
        enable:
          type: boolean
          description: Used to enable a replication group
        disable:
          type: boolean
          description: Used to disable a replication group
        advancedOptions:
          $ref: '#/components/schemas/ReplicationGroupAdvancedOptions'
    GetRecoveryTargetListResponse:
      title: GetRecoveryTargetListResponse
      type: object
      description: To display the list of recovery targets
      properties:
        recoveryTargets:
          type: array
          items:
            $ref: '#/components/schemas/GetRecoveryTargetListSummary'
    GetRecoveryTargetListSummary:
      title: GetRecoveryTargetListSummary
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: Recovery Target Id
        name:
          type: string
          description: Recovery Target name
        policyType:
          type: string
          description: Recovery target policy type name
        applicationType:
          type: string
          description: Recovery target application type
          enum:
            - REPLICATION
            - REGULAR
            - AUTO_SCALE_MANAGEMENT
        destinationHypervisor:
          $ref: '#/components/schemas/IdName'
    IdentityServersListResp:
      type: object
      description: List of identity servers
      properties:
        identityServers:
          type: array
          description: Identity servers list
          items:
            $ref: '#/components/schemas/IdentityServer'
    IdentityServer:
      title: IdentityServer
      type: object
      description: Get identity server response
      properties:
        id:
          type: integer
          format: int32
          description: Identity server id
        name:
          type: string
          description: Identity server name
        type:
          type: string
          description: Identity server service type in Enum string
          enum:
            - SAML
            - ACTIVE_DIRECTORY
            - APPLE_DIRECTORY_SERVICE
            - ORACLE_DIRECTORY
            - OPEN_LDAP
            - LDAP_SERVER
            - OTHER
        samlType:
          type: string
          enum:
            - UNKNOWN
            - AZURE
            - ADFS
            - OKTA
          description: Name of the IdP. Available only if type is SAML.
        company:
          $ref: '#/components/schemas/IdName'
        configured:
          type: boolean
          description: Boolean to indicate whether Identity server is configured.
        globalConfigInfo:
          $ref: '#/components/schemas/GlobalConfigInfo'
    LDAPRequest:
      title: ''
      description: Create LDAP request
      type: object
      x-tags:
        - IdentityServers
      properties:
        id:
          type: integer
          format: int32
          description: Required when configuring an existing dummy domain as LDAP/AD
        username:
          type: string
          description: Username to create LDAP/AD app
        password:
          type: string
          description: 'Password to create LDAP app, it should be base64 encoded'
          format: base64
        accessViaClient:
          type: boolean
          description: Denotes if the domain is accessed via a proxy
        proxies:
          type: array
          description: List of proxies used to connect to the domain. Required if accessViaClient is true.
          items:
            $ref: '#/components/schemas/IdName'
        doNotValidateNetBIOSName:
          type: boolean
          description: 'If true, the NetBIOS name will not be validated. Providing a custom name without validation may cause problems during Single Sign-On.'
      required:
        - username
        - password
    ADLDAPDetails:
      description: Details of an AD/LDAP domain
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        domainName:
          type: string
          description: Domain to which the users are associated
        directoryType:
          $ref: '#/components/schemas/ADLDAPDirectoryTypeForGet'
        credentials:
          type: string
          description: Username of the domain user used to connect to the domain
        company:
          $ref: '#/components/schemas/IdName'
        users:
          type: integer
          description: Number of users in the domain
          format: int32
        userGroups:
          type: integer
          description: Number of user groups in the domain
          format: int32
        baseDNForCardUsers:
          type: string
          description: Base DN for card users. Available only if domainType is ACTIVE_DIRECTORY.
        useSecureLDAP:
          type: boolean
          description: Boolean to indicate if the identity server uses secure LDAP
        enableSSO:
          type: boolean
          description: Denotes if SSO is enabled
        accessViaClient:
          type: boolean
          description: Denotes if the domain is accessed via a proxy
        proxies:
          type: array
          description: List of proxies used to connect to the domain. Available only if accessViaClient is true.
          items:
            $ref: '#/components/schemas/IdName'
        LDAPQueryParameters:
          type: array
          uniqueItems: true
          description: List of query parameters for the LDAP domain. Available only if the directory type is LDAP_SERVER
          items:
            $ref: '#/components/schemas/LDAPAttribute'
        attributeMap:
          type: array
          uniqueItems: false
          description: List of attribute mappings for the LDAP domain. Available only if the directoryType is LDAP_SERVER.
          items:
            $ref: '#/components/schemas/LDAPAttribute'
        globalConfigInfo:
          $ref: '#/components/schemas/GlobalConfigInfo'
    LDAPAttribute:
      description: Attribute of an LDAP server
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: ID of the attribute
        name:
          type: string
          description: Name of the attribute
        value:
          type: string
          description: Current value of the attribute
        defaultValue:
          type: string
          description: Default value of the attribute
        isOverridden:
          type: boolean
          description: Denotes if the value of the attribute is overridden
      required:
        - id
        - value
    ADLDAPDirectoryType:
      type: string
      enum:
        - ACTIVE_DIRECTORY
        - APPLE_DIRECTORY_SERVICE
        - LDAP_SERVER
        - OPEN_LDAP
        - ORACLE_DIRECTORY
      description: Directory type of an AD/LDAP domain
    ADLDAPDirectoryTypeForGet:
      type: string
      enum:
        - ACTIVE_DIRECTORY
        - APPLE_DIRECTORY_SERVICE
        - LDAP_SERVER
        - OPEN_LDAP
        - ORACLE_DIRECTORY
        - OTHER
      description: Directory type of an AD/LDAP domain
    UpdateADLDAP:
      description: Update the properties of an AD/LDAP
      type: object
      properties:
        directoryType:
          $ref: '#/components/schemas/ADLDAPDirectoryType'
        host:
          type: string
          description: The fully qualified domain name that you use to identify this network resource. Required only if directoryType is LDAP_SERVER
        OSXServerName:
          type: string
          description: The fully qualified domain name that you use to identify this network resource. Required only if directoryType is APPLE_DIRECTORY_SERVICE
        NETBIOSName:
          type: string
          description: 'The fully qualified domain name that you use to identify this network resource. Required only if directoryType is ACTIVE_DIRECTORY, OPEN_LDAP or ORACLE_DIRECTORY '
        name:
          type: string
          description: 'The fully qualified domain name, for example, my.domain.example.com'
        username:
          type: string
          description: The username for a user who has at least read permission for the domain
        password:
          type: string
          description: Password for the domain user. Should be in Base64 encoded format.
        baseDNForCardUsers:
          type: string
          description: Base DN for card users
        useSecureLDAP:
          type: boolean
          description: 'Boolean to indicate if the app use secure LDAP. Valid only for directory types - ACTIVE_DIRECTORY, ORACLE_DIRECTORY and LDAP_SERVER.'
        enableSSO:
          type: boolean
          description: Denotes if SSO should be enabled for the domain. Valid only for ACTIVE_DIRECTORY.
        accessViaClient:
          type: boolean
          description: Denotes if the domain is to be accessed via a proxy
        proxies:
          type: array
          description: List of proxies used to connect to the domain. Available only if accessViaClient is true.
          items:
            $ref: '#/components/schemas/IdName'
        LDAPQueryParameters:
          type: array
          uniqueItems: true
          description: List of overridden query parameters for the LDAP domain. Valid only if the directory type is LDAP_SERVER
          items:
            $ref: '#/components/schemas/LDAPAttribute'
        attributeMap:
          type: array
          uniqueItems: true
          description: List of overridden attribute mappings for the LDAP domain. Valid only if the directoryType is LDAP_SERVER.
          items:
            $ref: '#/components/schemas/LDAPAttribute'
      required:
        - directoryType
        - name
    ActiveDirectoryType:
      title: ''
      description: Model to create new LDAP identity servers for active directory type
      x-tags:
        - IdentityServer
      allOf:
        - type: object
          properties:
            directoryType:
              type: string
              description: Active directory type
              enum:
                - ACTIVE_DIRECTORY
            NETBIOSName:
              type: string
              description: Domain name (short name) to create LDAP app
            name:
              type: string
              description: Domain connect name
            useSecureLDAP:
              type: boolean
              description: Boolean to indicate if the app use secure LDAP
            enableSSO:
              description: Boolean to indicate if the app use enable SSO
              type: boolean
            globalConfigInfo:
              $ref: '#/components/schemas/CreateGlobalConfigInfo'
          required:
            - directoryType
            - NETBIOSName
            - name
        - $ref: '#/components/schemas/LDAPRequest'
    AppleDirectoryServiceType:
      title: ''
      description: Model to create LDAP app for Apple Directory Service type
      allOf:
        - description: Specific properties for apple directory service type
          type: object
          properties:
            directoryType:
              type: string
              description: Apple directory service type
              enum:
                - APPLE_DIRECTORY_SERVICE
            OSXServerName:
              type: string
              description: Domain shortname to create apple directory type app
            name:
              type: string
              description: Domain connect name
          required:
            - directoryType
            - OSXServerName
            - name
        - $ref: '#/components/schemas/LDAPRequest'
      x-tags:
        - IdentityServer
    LDAPServerType:
      title: ''
      description: Model to create new LDAP identity server for LDAP Server type
      allOf:
        - description: Specific properties for LDAP Server app
          type: object
          properties:
            directoryType:
              type: string
              description: LDAP server directory type - 14
              enum:
                - LDAP_SERVER
            host:
              type: string
              description: Domain shortname
            useSecureLDAP:
              type: boolean
              description: Boolean to indicate if the app use secure LDAP
            LDAPQueryParameters:
              $ref: '#/components/schemas/LDAPAttributes'
          required:
            - directoryType
            - host
        - $ref: '#/components/schemas/LDAPRequest'
      x-tags:
        - IdentityServers
    LDAPAttributes:
      title: ''
      type: object
      description: Provider attributes for LDAP app
      x-tags:
        - IdentityServer
      properties:
        userGroupFilter:
          type: string
          default: (objectClass=group)
          description: Custom attribute string of LDAP query paramters
        userFilter:
          type: string
          description: Custom attribute string of LDAP query paramters
          default: (&(objectCategory=User)(sAMAccountName=*))
        uniqueIdentifier:
          type: string
          default: sAMAccountName
          description: Custom attribute string of LDAP query paramters
        baseDN:
          type: string
          default: base DN
          description: Custom attribute string of LDAP query paramters
    OpenLDAPType:
      title: ''
      description: Model to create new LDAP identity servers for Open LDAP type
      allOf:
        - description: Specific properties for Open LDAP type
          type: object
          properties:
            directoryType:
              type: string
              description: Open LDAP directory type
              enum:
                - OPEN_LDAP
            NETBIOSName:
              type: string
              description: Connect name to create open LDAP type app
            name:
              type: string
              description: Domain connect name
          required:
            - directoryType
            - NETBIOSName
            - name
        - $ref: '#/components/schemas/LDAPRequest'
      x-tags:
        - IdentityServers
    OracleDirectoryType:
      title: ''
      description: Model to create new LDAP identity servers for Oracle type
      allOf:
        - type: object
          description: Specific properties for Oracle directory type
          properties:
            directoryType:
              type: string
              description: Oracle directory type
              enum:
                - ORACLE_DIRECTORY
            NETBIOSName:
              type: string
              description: Domain shortname
            name:
              type: string
              description: Domain connect name
            useSecureLDAP:
              type: boolean
              description: Boolean to indicate if the app use secure LDAP
          required:
            - directoryType
            - NETBIOSName
            - name
        - $ref: '#/components/schemas/LDAPRequest'
      x-tags:
        - IdentityServers
    RecoveryTargetDetails:
      title: RecoveryTargetDetails
      type: object
      description: Recovery target info
      properties:
        entity:
          $ref: '#/components/schemas/GetRecoveryTargetListSummary'
        accessNode:
          $ref: '#/components/schemas/IdNameType'
        vmDisplayName:
          $ref: '#/components/schemas/VMDisplayName'
        vmStoragePolicyName:
          type: string
          description: Name of Storage policy linked with the vm
        securityOptions:
          $ref: '#/components/schemas/SecurityOptions'
        destinationOptions:
          $ref: '#/components/schemas/DestinationOptions'
        networkOptions:
          $ref: '#/components/schemas/NetworkOptions'
        provisioningOptions:
          $ref: '#/components/schemas/ProvisioningOptions'
        cloudDestinationOptions:
          $ref: '#/components/schemas/cloudDestinationOptions'
        isoInfo:
          type: array
          description: Info for the Windows/Unix ISO files
          items:
            $ref: '#/components/schemas/IsoInfo'
        zone:
          $ref: '#/components/schemas/Zone'
        associatedClientGroup:
          $ref: '#/components/schemas/IdName'
        liveMountOptions:
          $ref: '#/components/schemas/LiveMountOptions'
        virtualLabOptions:
          $ref: '#/components/schemas/VirtualLabOptions'
    IsoInfo:
      title: IsoInfo
      type: object
      properties:
        isoPath:
          type: string
          description: Path for the Windows/Unix ISO files
        osType:
          type: string
          description: OS Type name
          enum:
            - UNIX
            - WINDOWS
      description: Info for the Windows/Unix ISO files
    VMDisplayName:
      title: VMDisplayName
      type: object
      properties:
        prefix:
          type: string
          description: A prefix string that will be appended to the source VM to create a display name for each destination VM
        suffix:
          type: string
          description: A suffix string that will be appended to the source VM to create a display name for each destination VM
      description: Prefix or Suffix appended to create display name for destination instance
    ExpirationTime:
      title: ExpirationTime
      type: object
      properties:
        minutesRetainUntil:
          type: string
          description: Expiration Time if in minutes
        daysRetainUntil:
          type: string
          description: Expiration Time if in days
    Template:
      title: Template
      type: object
      properties:
        vmName:
          type: string
          description: VM name of template
        vmGUID:
          type: string
          description: VM guid of template
    Zone:
      title: Zone
      type: object
      properties:
        primaryZoneName:
          type: string
          description: Name of Primary Zone for the VM to deploy
        secondaryZoneName:
          type: string
          description: Name of Secondary Zone for the VM to deploy
    CloudNetwork:
      title: CloudNetwork
      type: object
      properties:
        label:
          type: string
          description: Cloud network label
        networkName:
          type: string
          description: Cloud network name
        subnetNames:
          $ref: '#/components/schemas/NameValue'
    SecurityOptions:
      title: SecurityOptions
      type: object
      properties:
        users:
          type: array
          description: Users that have access to the recovery target
          items:
            $ref: '#/components/schemas/IdNameFullName'
        userGroups:
          type: array
          description: User groups that have access to the recovery target
          items:
            $ref: '#/components/schemas/IdName'
        securityGroups:
          type: array
          description: List of security groups that provide controlled access of the DR VM
          items:
            $ref: '#/components/schemas/SecurityGroup'
        testSecurityGroups:
          type: array
          description: List of security groups that provide controlled access of the VM in cloud for test failover
          items:
            $ref: '#/components/schemas/SecurityGroup'
    DestinationOptions:
      title: DestinationOptions
      type: object
      properties:
        destinationHost:
          type: string
          description: Destination host for the VM to deploy
        dataStore:
          type: string
          description: Datastore for the destination VM to store the disks and its config files. In-case of Microsoft Hyper-V, datastore refers to the destination folder for restore when default folder is not set.
        dataStoreClusterName:
          type: string
          description: Datastore cluster for the destination VM to store disks and config files in the datastore associated with the datastore cluster.
        resourcePoolPath:
          type: string
          description: Resource pool for the destination VM
        vmFolder:
          type: string
          description: Folder path where the destination VM will be located
        iamRole:
          $ref: '#/components/schemas/IdName'
    NetworkOptions:
      title: NetworkOptions
      type: object
      properties:
        networkCard:
          $ref: '#/components/schemas/NetworkCard'
        cloudNetwork:
          $ref: '#/components/schemas/CloudNetwork'
    ProvisioningOptions:
      title: ProvisioningOptions
      type: object
      properties:
        maximumCPUCores:
          type: integer
          description: Maximum cores for the VM
          format: int32
        numberOfVMs:
          type: integer
          description: Number of VMs that each user can create using this recovery target
          format: int32
        maximumMemory:
          type: string
          description: Maximum memory of the VM in GBs
        templates:
          type: array
          items:
            $ref: '#/components/schemas/Template'
    cloudDestinationOptions:
      title: cloudDestinationOptions
      type: object
      properties:
        region:
          $ref: '#/components/schemas/Region'
        keyPair:
          type: string
          description: Name of key pair that associates with the VM for authentication
        restoreAsManagedVM:
          type: boolean
          description: If true, restore creates the destination VM as a managed VM in Azure
        machineType:
          $ref: '#/components/schemas/IdName'
        soleTenancyNodes:
          type: array
          items:
            $ref: '#/components/schemas/NameValue'
        tags:
          type: array
          items:
            $ref: '#/components/schemas/NameValue'
        availabilityZone:
          type: string
          description: Availability zone name for the destination instance
        vmInstanceType:
          type: string
          description: Instance type that provides the available cpu cores and memory to the machine
        encryptionKey:
          $ref: '#/components/schemas/IdName'
        volumeType:
          type: string
          description: Volume type of destination VM
        testDiskType:
          type: string
          description: Disk / Volume type for test failover VM
        instanceTypes:
          type: array
          items:
            type: string
        publicIP:
          type: boolean
          description: If true, public IP address are configured for destination VMs
    LiveMountOptions:
      title: LiveMountOptions
      type: object
      properties:
        mediaAgent:
          $ref: '#/components/schemas/IdName'
        isLiveMountEnabled:
          type: boolean
          description: Indiciates whether the Live mount is allowed from this recovery target
        migrateVMs:
          type: boolean
          description: Whether migrate VMs options is turned on for test failover
        expirationTime:
          $ref: '#/components/schemas/ExpirationTime'
    NetworkCard:
      title: NetworkCard
      type: object
      properties:
        networkDisplayName:
          description: Selected network display name
          type: string
        network:
          description: Name of network switch
          type: string
        subnetId:
          description: Subnet id of the subnet
          type: string
        networkId:
          description: VPC id for the amazon network
          type: string
        destinationNetworks:
          type: array
          description: Destination network name
          items:
            type: string
        networkNames:
          type: array
          description: Name of network to which the nic is connected
          items:
            type: string
    Region:
      title: Region
      type: object
      properties:
        id:
          type: string
          description: GUID of the destination region.
        name:
          type: string
          description: 'Region name of destination. In-case of VMWare, region name refers to the destination host cluster name.'
    VirtualLabOptions:
      title: VirtualLabOptions
      type: object
      description: Virtual lab options configured in the recovery target
      properties:
        externalNetwork:
          type: string
          description: To use virtual lab VM to connect to the existing network
        gatewayTemplate:
          type: string
          description: Gateway template provision VMs to communicate to VMs outside the virtual lab
        gatewayNetwork:
          type: string
          description: Primary network associated on the Provisioning Gateway VM that has production network access
        configureIsolatedNetwork:
          type: boolean
          description: To use isolated network for the virtual lab VM
        ipSettings:
          type: array
          items:
            $ref: '#/components/schemas/VirtualLabIPSettings'
    VMApplicationValidationResults:
      title: VMApplicationValidationResults
      type: object
      properties:
        bootStatus:
          type: boolean
          description: true if backup validation is set
        lastValidationJobId:
          type: integer
          format: int32
          description: job id of the last backup validation job
        backupValidated:
          type: integer
          format: int32
          description: job id of the last backup job that was validated
        backupCompletionDate:
          type: integer
          format: int32
          description: timestamp(in unix) for the last backup job completed
        appsDiscovered:
          type: array
          items:
            $ref: '#/components/schemas/VMAppsDiscovered'
    VMAppsDiscovered:
      title: VMAppsDiscovered
      type: object
      properties:
        name:
          type: string
          description: name of the VM apps discovered for validation
        scriptStatus:
          type: boolean
          description: true if validation status is true
        failureReason:
          type: string
          description: reason for failure of validation of app
    SyslogStatus:
      title: SyslogStatus
      type: object
      description: Get status of a syslog server.
      x-tags:
        - SyslogServer
      properties:
        hostname:
          type: string
          description: The hostname or the IP address of the syslog server.
        port:
          type: integer
          format: int32
          minimum: 1
          maximum: 65535
          description: The port on which the syslog server accepts the logs.
        enabled:
          type: boolean
          description: Specifies if the syslog server is enabled or disabled
        secureMessaging:
          type: boolean
          description: 'When false UDP port will be used, when true TLS encryption will be used to connect to Syslog Server. To upload Certificate Authority file it should be enabled.'
        certificateAuthorityName:
          type: string
          description: File name of the uploaded certificate authority file
        forwardToSyslog:
          $ref: '#/components/schemas/SyslogPolicies'
    SyslogPolicies:
      title: SyslogPolicies
      type: object
      x-tags:
        - SyslogServer
      description: Select the log types that you want to forward to the syslog server.
      properties:
        alerts:
          type: boolean
          description: Forward the system log for alerts to the server.
        audit:
          type: boolean
          description: Forward the system log for audit trails to the server.
        events:
          type: boolean
          description: Forward the system log for events to the server.
    SyslogConfigure:
      title: SyslogConfigure
      type: object
      description: This operation configures a syslog server.
      x-tags:
        - SyslogServer
      properties:
        hostname:
          type: string
          description: The hostname or the IP address of the syslog server.
        port:
          type: integer
          format: int32
          minimum: 1
          maximum: 65535
          description: The port on which the syslog server accepts the logs.
        enabled:
          type: boolean
          description: Specifies if the syslog server is enabled or disabled
        secureMessaging:
          type: boolean
          description: 'When false UDP port will be used, when true TLS encryption will be used to connect to Syslog Server. To upload Certificate Authority file it should be enabled.'
        certificateAuthorityName:
          type: string
          description: File name of the uploaded certificate authority file
        certificateAuthorityContent:
          type: string
          description: 'Content of the uploaded certificate authority file. It should be base64 encoded. Accepted fileTypes are key,crt,pem.'
        forwardToSyslog:
          $ref: '#/components/schemas/SyslogPolicies'
      required:
        - hostname
    ServiceCommcells:
      title: ServiceCommcells
      type: object
      description: Returns a list of service commcells
      properties:
        id:
          type: integer
          description: Id of the commcell
          format: int32
        name:
          type: string
          description: Name of the commcell entity
        hostName:
          type: string
          description: hostname of the Commcell
        syncStatus:
          $ref: '#/components/schemas/SyncStatus'
        role:
          type: string
          description: Role of the commcell
          enum:
            - NOTCONFIGURED
            - ROUTERCOMMCELL
            - ROUTERCOMMCELL_SERVICECOMMCELL
            - IDPCOMMCELL
            - IDPCOMMCELL_SERVICECOMMCELL
            - CLOUDSERVICE
            - ONPRIM_SUBSCRIBER_OF_CLOUDSERVICE
            - MSP_CLOUDSERVICE
        useUniversalCommandCenter:
          type: boolean
          description: if enabled the Command Center of the commcell belong to the primary CommCell
      x-tags:
        - ServiceCommcells
    SyncStatus:
      title: SyncStatus
      type: object
      description: Sync status of the commcell
      x-tags:
        - ServiceCommcells
      properties:
        status:
          type: string
          enum:
            - SUCCESSFUL
            - FAILED
          description: status of the commcell
        errorMessage:
          $ref: '#/components/schemas/ErrorMessage'
        lastSyncedWithIDP:
          type: integer
          format: int32
          description: returns the last synced time with IDP(unix time format)
      required:
        - errorMessage
    ErrorMessage:
      title: ErrorMessage
      type: array
      description: errorMessage if the commcell failed to sync
      items:
        $ref: '#/components/schemas/NameMessage'
      x-tags:
        - ServiceCommcells
    NameMessage:
      type: object
      properties:
        name:
          type: string
          description: Name of the error
        message:
          type: string
          description: Description of the error
    RMRequestList:
      title: RMRequestList
      type: object
      description: ''
      properties:
        requests:
          type: array
          description: List of Request Manager Requests
          items:
            $ref: '#/components/schemas/RMRequestSummary'
    RMRequestSummary:
      title: RMRequestSummary
      type: object
      description: ''
      properties:
        id:
          type: integer
          description: Request id
          format: int32
        name:
          type: string
          description: Request name
        type:
          $ref: '#/components/schemas/RMRequestType'
        status:
          $ref: '#/components/schemas/RMRequestStatus'
        requestor:
          type: string
          format: email
          description: Email of the requestor
        application:
          $ref: '#/components/schemas/ActivateApplication'
        createdOn:
          type: integer
          format: int64
          description: Request creation time in unix epoch format
        owner:
          $ref: '#/components/schemas/IdName'
        reviewers:
          type: array
          description: List of request reviewers
          items:
            $ref: '#/components/schemas/IdName'
        approvers:
          type: array
          description: List of the request approvers
          items:
            $ref: '#/components/schemas/IdName'
    RMRequestStatus:
      type: string
      title: RMRequestStatus
      enum:
        - TaskCreated
        - TaskConfigured
        - ReviewInProgress
        - ReviewCompleted
        - ApproveCompleted
        - TaskCompleted
        - ApprovalRequested
        - ActionInProgress
        - CompletedWithErrors
        - Failed
        - ReviewDeclined
      description: Signifies the progress of the request
    PlanEntityRuleTag:
      title: PlanEntityRuleTag
      type: object
      description: Object to suggest possible plan rule tags that can be part of plan entity rule
      properties:
        GUID:
          type: string
          description: GUID for the tag
        id:
          type: integer
          description: Id for the tag
          format: int32
        name:
          type: string
          description: Name for the plan rule tag which need to be matched against tag of the workload.
        value:
          description: Possible value that need to matched against value of tag associated to workload.
          type: string
    UpdatePlanEntityRuleRanks:
      title: UpdatePlanEntityRuleRanks
      type: object
      description: Plan entity rule update rank object. Fields in this object need to be populated to suggest what rank need to be set for the said rule.
      properties:
        rules:
          type: array
          description: Lits of plan entity rule object suggesting their ranks.
          items:
            $ref: '#/components/schemas/PlanEntityRuleRank'
    PlanEntityRuleRank:
      title: PlanEntityRuleRank
      type: object
      properties:
        rule:
          $ref: '#/components/schemas/IdName'
        rank:
          type: integer
          format: int32
          description: This will suggest rank/priority of the plan rule.
      description: This object will hold detail for plan rule entity and its rank.
    UpdateTimezoneForClientsReq:
      title: UpdateTimezoneForClientsReq
      type: object
      description: Request body for updating timezone for clients
      properties:
        clients:
          type: array
          items:
            $ref: '#/components/schemas/IdName'
        updateAll:
          type: boolean
          description: Boolean which determines if all servers(with no package) should be updated with the company timezone.
    RMRequestDetails:
      title: RMRequestDetails
      description: ''
      allOf:
        - $ref: '#/components/schemas/RMRequestSummary'
        - type: object
          properties:
            properties:
              type: array
              description: Properties of the request
              items:
                $ref: '#/components/schemas/NameValues'
    NameValues:
      title: NameValues
      type: object
      properties:
        name:
          type: string
        value:
          type: string
          nullable: true
        values:
          type: array
          nullable: true
          items:
            type: string
    NameValue:
      title: NameValue
      type: object
      properties:
        name:
          type: string
        value:
          type: string
    EntityAuditInformation:
      title: EntityAuditInformation
      type: object
      properties:
        severity:
          $ref: '#/components/schemas/AuditLevel'
        time:
          type: integer
          format: int32
          description: Unix epoch time representation of audit entry
        user:
          type: string
          description: Name of the user
        operation:
          type: string
          description: Operation performed
        messages:
          type: array
          description: All the audit messages for this entry
          items:
            type: string
    AuditLevel:
      type: string
      title: AuditLevel
      description: Defines the serverity of the audit entry
      enum:
        - LOW
        - MEDIUM
        - HIGH
        - CRITICAL
    EntityAuditList:
      title: EntityAuditList
      description: ''
      type: object
      properties:
        auditDetails:
          type: array
          description: List of audit information for an entity
          items:
            $ref: '#/components/schemas/EntityAuditInformation'
    KeyManagementServer:
      title: KeyManagementServer
      type: object
      description: ''
      properties:
        id:
          type: integer
          format: int32
          description: Gives the key management server id
        name:
          type: string
          description: Gives the name of the key management server
        type:
          type: string
          description: Gives the key provider type for the key management server
          enum:
            - NONE
            - COMMVAULT
            - KMIP
            - AWS_KMS
            - AZURE_KEY_VAULT
            - SAFENET
            - PASSPHRASE
      x-tags:
        - KeyManagementServer
    ReplicationMonitorDetail:
      title: ReplicationMonitorDetail
      type: object
      description: Details of continuous replication group
      properties:
        summary:
          $ref: '#/components/schemas/ReplicationMonitorDetailSummary'
        recoveryOptions:
          $ref: '#/components/schemas/ReplicationMonitorDetailRecoveryOptions'
        replicationCopyDetails:
          type: array
          description: Gives copy details information for replication group
          items:
            $ref: '#/components/schemas/ReplicationMonitorDetailReplicationCopyDetails'
        statistics:
          type: array
          description: Gives statistics information for Replication performance and Journal retention
          items:
            $ref: '#/components/schemas/ReplicationMonitorDetailStats'
    ReplicationMonitorDetailSummary:
      title: ReplicationMonitorDetailSummary
      description: Gives summary of replication group.
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: Id of replication pair
        source:
          $ref: '#/components/schemas/IdName'
        destination:
          $ref: '#/components/schemas/IdName'
        recoveryType:
          type: string
          enum:
            - LIVE
            - SNAPSHOT
            - GRANULAR
            - GRANULARV2
          description: Gives information about the recovery type of replication group
        synchronizationStatus:
          type: string
          enum:
            - BLR_BACKUP
            - BLR_RESTORE
            - BLR_RESYNC
            - BLR_RUNNING
            - BLR_PAUSED
            - BLR_STOPPED
            - BLR_VERIFYING
            - BLR_TROUBLE
            - BLR_FAILED
            - BLR_STARTING
            - BLR_STOPPING
            - BLR_SUSPENDING
            - BLR_RESUMING
            - BLR_FAILING_OVER
            - BLR_FAILOVER_FAILED
            - BLR_FAILOVER_DONE
            - BLR_FAILING_BACK
            - BLR_FAILBACK_FAILED
            - BLR_SWITCHING_ROLES
            - BLR_SWITCH_ROLE_FAILED
          description: Gives information about the synchronization status
        replicationLag:
          type: integer
          format: int32
          description: Lag time in seconds
        eventMessage:
          type: string
          description: additional description of current pair status
    ReplicationMonitorDetailRecoveryOptions:
      title: ReplicationMonitorDetailRecoveryOptions
      description: Gives information about the recovery options for replication group
      type: object
      properties:
        recoverypointStore:
          $ref: '#/components/schemas/IdName'
        CCRPInterval:
          type: integer
          format: int32
          description: Time interval between crash consistent recovery points in seconds
        mergeRecoveryPointsOlderThan:
          type: integer
          format: int32
          description: Time which should be satisfied to merge recovery points in seconds
        retainRecoveryPointsFor:
          type: integer
          format: int32
          description: Recovery points retention time in seconds
        RPIntervalAfterRetention:
          type: integer
          format: int32
          description: Recovery point interval at the end of retention time in seconds
        pruneAndMergeOffPeakOnly:
          type: boolean
          description: Boolean which determines Prune and Merge Recovery Points during off peak time only.
        ACRPInterval:
          type: integer
          format: int32
          description: Gives information about application consistent recovery point interval in seconds
        switchToLatestIfStoreOfflineFor:
          type: integer
          format: int32
          description: Gives information about switching to  latest recovery point store to latest if it is offline for time  in seconds
    ReplicationMonitorDetailReplicationCopyDetails:
      title: ReplicationMonitorDetailReplicationCopyDetails
      description: Gives copy details information for replication group
      type: object
      properties:
        name:
          type: string
          description: Name of replication copy
        UUID:
          type: string
          description: UUID of replication copy
        status:
          type: string
          enum:
            - IN_PROGRESS
            - SUCCESS
            - FAILED
            - ABOUT_TO_EXPIRE
            - EXPIRED
            - USER_DELETED
            - DELETE_FAILED
            - PARTIAL_SUCCESS
          description: Status of replication copy
        statusDescription:
          type: string
          description: Status description
        type:
          type: string
          enum:
            - TESTBOOT
            - PERMANENT
          description: Type of replication copy
        creationTime:
          type: integer
          format: int32
          description: Creation time (Unix Time)
        expirationTime:
          type: integer
          format: int32
          description: Expiration time
    ReplicationMonitorDetailStats:
      title: ReplicationMonitorDetailStats
      description: Gives statistics information for Replication performance and Journal retention
      type: object
      properties:
        id:
          type: integer
          format: int32
        repDataDeltaActual:
          type: integer
          format: int32
        IODelta:
          type: integer
          format: int32
        repSetSize:
          type: integer
          format: int32
        IOPSDelta:
          type: integer
          format: int32
        sizeInRpStore:
          type: integer
          format: int32
        repDataDeltaComp:
          type: integer
          format: int32
        retention:
          type: integer
          format: int32
        timeStamp:
          type: integer
          format: int32
    ArrayReplicationDatastoreReplication:
      title: ArrayReplicationDatastoreReplication
      description: The replication information for each datastore pair mapping
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: The ID of datastore relationship mapping
        sourceDatastore:
          $ref: '#/components/schemas/NameGUID'
        destinationDatastore:
          $ref: '#/components/schemas/NameGUID'
    FailoverStatus:
      type: string
      description: The types of failover statuses
      enum:
        - NONE
        - FAILOVER_COMPLETE
        - FAILOVER_RUNNING
        - FAILOVER_PAUSED
        - FAILOVER_FAILED
        - FAILBACK_COMPLETE
        - FAILBACK_RUNNING
        - FAILBACK_PAUSED
        - FAILBACK_FAILED
        - FAILBACK_PARTIAL
        - FAILOVER_PARTIAL
        - FAILOVER_SKIPPED
        - FAILBACK_SKIPPED
        - REVERT_FAILOVER_COMPLETE
        - REVERT_FAILOVER_RUNNING
        - REVERT_FAILOVER_FAILED
        - REVERT_FAILOVER_PAUSED
    ArrayReplicationMonitorInfo:
      title: ArrayReplicationMonitorInfo
      description: Gives array replication monitor site information
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: The ID of array replication pair
        source:
          $ref: '#/components/schemas/NameGUID'
        destination:
          $ref: '#/components/schemas/NameGUID'
        datastores:
          type: array
          items:
            $ref: '#/components/schemas/ArrayReplicationDatastoreReplication'
        failoverStatus:
          $ref: '#/components/schemas/FailoverStatus'
        testFailoverStatus:
          $ref: '#/components/schemas/FailoverStatus'
        lastReplicationFailureStatus:
          type: string
          description: The reason for last replication job failure
    ArrayReplicationMonitorResp:
      title: ArrayReplicationMonitorResp
      type: object
      description: The response for array replication monitor
      properties:
        arrayReplicationMonitorInfo:
          type: array
          description: The list of array replication pair information
          items:
            $ref: '#/components/schemas/ArrayReplicationMonitorInfo'
    LicenseInfo:
      title: LicenseInfo
      type: object
      description: License details
      properties:
        commCellId:
          type: integer
          format: int32
          description: ID of the registered CommCell
        commServeIPAddress:
          type: string
          minLength: 7
          description: IP Address of CommServe
        licenseIPAddress:
          type: string
          minLength: 7
          description: IP Address of License
        edition:
          type: string
          description: The license is for this software product
          enum:
            - Commvault
            - Hitachi
            - Net Apps
            - Commvault Express
            - Showcase
            - Netapp
            - Virtual Server
            - Medical Imaging
            - IntelliSnap Recovery Manager
            - fujitsu
            - Sapphire
            - HP Snap Manager
            - Commvault Edge
            - MSP
            - IntelliSnap for NetApp
            - Commvault Marketplace
            - Flexential
            - Zeal
            - Metallic
        licenseMode:
          type: string
          description: This license is intended for the specified usage scenario
          enum:
            - EVALUATION
            - PRODUCTION
            - DR_PRODUCTION
        serialNumber:
          type: string
          description: Serial number of CommServe
        registrationCode:
          type: string
          description: Registration code of CommServe
        expiryDate:
          type: integer
          format: int32
          description: Expiry date of current license in epoch format
    AccessControl:
      title: AccessControl
      type: object
      description: Owner permissions and laptop ownership details
      properties:
        ownerPermissions:
          type: array
          description: List of owner permissions
          items:
            $ref: '#/components/schemas/IdName'
        automaticLaptopOwnershipAssignment:
          $ref: '#/components/schemas/LaptopOwnership'
    LaptopOwnership:
      title: LaptopOwnership
      type: object
      description: Details of automatic laptop ownership assignment
      properties:
        assignLaptopOwnerAutomatically:
          type: boolean
          description: Whether the laptop ownership assignment is automatic or not
        laptopOwnerOption:
          $ref: '#/components/schemas/LaptopOwnerOption'
        userGroups:
          type: string
          description: 'Comma seperated usergroups to add users from, when the laptopOwnerOption is ''ALL_USERS_OF_USERGROUPS'''
          nullable: true
    LaptopOwnerOption:
      type: string
      title: LaptopOwnerOption
      enum:
        - ALL_LOGGED_IN_AD_USERS
        - FIRST_USER_TO_LOGIN
        - ALL_USERS_OF_USERGROUPS
      description: Options to automatically assign laptop owners
      nullable: true
    LaptopsWebConsole:
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: id of the laptop client
        name:
          type: string
          description: name of the laptop client
        lastBackupTime:
          type: integer
          format: int32
          description: This specifies the last backup time (in unix timestamp)
        lastBackupJobInfo:
          $ref: '#/components/schemas/LastBackupJobInfo'
        totalBackupSize:
          type: integer
          format: int32
          description: This specifies the total backup size (in bytes)
        nextBackupTime:
          type: integer
          format: int32
          description: This species the timestamp (in unix timestamp) of the next scheduled backup
        slaStatus:
          $ref: '#/components/schemas/SLAStatus'
        slaReason:
          type: string
          description: reason for the current sla status
    LaptopsList:
      title: LaptopsList
      oneOf:
        - $ref: '#/components/schemas/LaptopsListWebConsole'
        - $ref: '#/components/schemas/LaptopsListAdminConsole'
    RMConfigureRequest:
      title: RMConfigureRequest
      type: object
      properties:
        projectIds:
          type: array
          description: List of project ids
          items:
            type: integer
            format: int32
            minimum: 1
        reviewers:
          type: array
          description: List of reviewers for the request
          items:
            $ref: '#/components/schemas/IdNameDisplayName'
        approvers:
          type: array
          description: List of approvers for the request
          items:
            $ref: '#/components/schemas/IdNameDisplayName'
      required:
        - projectIds
        - reviewers
    RMCreateRequest:
      title: RMCreateRequest
      type: object
      properties:
        name:
          type: string
          description: Name of the request
        type:
          $ref: '#/components/schemas/RMRequestType'
        deleteFromBackup:
          type: boolean
          default: false
        enableRedaction:
          type: boolean
          default: false
          description: This option redacts sensitive information from the files in the request
        enableDocumentChaining:
          type: boolean
          default: false
          description: 'If additional entities are found in a document, include documents that contain those additional entities in search results'
        requestor:
          type: string
          format: email
        entities:
          type: array
          description: List of personal entities with their values to form the criteria for the request
          items:
            $ref: '#/components/schemas/NameValues'
      required:
        - name
        - type
        - requestor
        - entities
    RMRequestType:
      type: string
      title: RMRequestType
      description: ''
      enum:
        - EXPORT
        - DELETE
        - MOVE
        - RETENTION
        - IGNORE
        - ARCHIVE
        - TAG
    ActivateApplication:
      type: string
      title: ActivateApplication
      description: Enum to signify the application under Activate
      enum:
        - NONE
        - SDG
        - FSO
    RMProjectsList:
      title: RMProjectsList
      type: object
      properties:
        projects:
          type: array
          items:
            $ref: '#/components/schemas/RMProjectInfo'
    RMProjectInfo:
      title: RMProjectInfo
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        status:
          $ref: '#/components/schemas/RMProjectStatus'
    RMProjectStatus:
      type: string
      title: RMProjectStatus
      enum:
        - VALID
        - DATASOURCE_UNAVAILABLE
        - INVALID_PLAN_ENTITIES
      description: INVALID_PLAN_ENTITIES signifies the plan configuration associated to project does not contain at least one entity that is configured for the request in consideration. DATASOURCE_UNAVAILABLE signifies no data sources associated to the project.
    ActivityControlTileDelayTime:
      title: ActivityControlTileDelayTime
      type: object
      properties:
        timeZone:
          $ref: '#/components/schemas/IdName'
        time:
          type: integer
          format: int32
          description: delay time in unix timestamp
        value:
          type: string
          description: actual delay time value in string format according to the timezone
    accessNodesList:
      title: accessNodesList
      type: object
      properties:
        accesNodes:
          type: array
          items:
            $ref: '#/components/schemas/accessNodeInfo'
    accessNodeInfo:
      title: accessNodeInfo
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        displayName:
          type: string
          nullable: true
        hostName:
          type: string
          description: client Host Name of the Access Node
        GUID:
          type: string
          description: client GUID of the Access
        type:
          type: integer
          format: int32
          description: 'Type of access node , Ex: 3 - access Node , 28 - Access Node Groups'
    AssociatePlanRuleEntity:
      title: AssociatePlanRuleEntity
      type: object
      description: Message object to hold information of entities to which selected plan and plan rule need to be associated
      properties:
        subclient:
          $ref: '#/components/schemas/IdName'
        plan:
          $ref: '#/components/schemas/IdName'
        rule:
          $ref: '#/components/schemas/IdName'
    AssociatePlanRuleEntityList:
      title: AssociatePlanRuleEntityList
      type: object
      description: List of entities that are will be associated to provided plan and said rule
      properties:
        entities:
          type: array
          description: Details of entity that will be associated to plan and rule.
          items:
            $ref: '#/components/schemas/AssociatePlanRuleEntity'
    ExcludeEntitiesFromPlanRuleEvaluation:
      title: ExcludeEntitiesFromPlanRuleEvaluation
      type: object
      description: Entities that need to be excluded from plan rule evaluation
      properties:
        subclients:
          type: array
          items:
            $ref: '#/components/schemas/IdName'
    PlanRuleExecutionSettings:
      title: PlanRuleExecutionSettings
      type: object
      description: Message object to hold settings for plan rule execution.
      properties:
        executionMode:
          $ref: '#/components/schemas/PlanRuleExecutionMode'
        executionInterval:
          type: integer
          format: int32
          description: Setting to suggest evaluation frequency in case of evaluation mode being Automatic.
        enableAlertNotification:
          type: boolean
          description: 'Set this to enable/disable notification over email for subclients pending plan associationover 24 hours. By default, notification will be enabled.'
    PlanRuleExecutionMode:
      type: string
      title: PlanRuleExecutionMode
      description: Plan rule execution mode
      enum:
        - 'OFF'
        - MANUAL
        - AUTOMATIC
    vmGroupPreviewReq:
      title: vmGroupPreviewReq
      type: object
      properties:
        content:
          $ref: '#/components/schemas/vmContent'
        filters:
          $ref: '#/components/schemas/vmContent'
        diskFilters:
          $ref: '#/components/schemas/vmDiskFilterProp'
        createClientsForDiscoveredVms:
          type: boolean
        skipNonexistentVms:
          type: boolean
    vmGroupPreviewResp:
      title: vmGroupPreviewResponse
      type: object
      properties:
        ProtectedVMCount:
          type: integer
          format: int32
        managementVersion:
          type: string
          description: management Version of the Hypervisor like vcenter version , Hyperv version
        vmGroup:
          $ref: '#/components/schemas/IdName'
        vmList:
          $ref: '#/components/schemas/vmPreviewInfo'
    vmPreviewInfo:
      title: vmPreviewInfo
      type: object
      properties:
        name:
          type: string
          description: name  of the VM
        GUID:
          type: string
          description: GUID  of the VM
        poweredStatus:
          type: string
          description: Power status of the VM from the hypervisor Eg- Powered on ,  Running if the VM is powered on .
            Values might differ based on hypervisor type
        toolStatus:
          type: string
          description: if Installed then the corresponding tools version of the VM.
            VMWare - VMWare tools version
            Hyper-V - Integration services version
            Values might differ based on hypervisor type
            status would be not installed if tools is not installed.
        host:
          type: string
          description: host of the VM
    DistributedStorageListResp:
      description: List of distributed storages
      type: object
      properties:
        distributedStorage:
          type: array
          description: List of distributed storages
          items:
            $ref: '#/components/schemas/DistributedStorageSummary'
    DistributedStorageSummary:
      description: Summary of a distributed storage
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        clusterURL:
          type: string
          format: uri
          description: URL of the distributed storage cluster
        username:
          type: string
          description: Username of the distributed storage user
        canManage:
          type: boolean
          description: Denotes if the user can manage the cluster
    UpdateTriggeredAlertsNotes:
      title: UpdateTriggeredAlertsNotes
      type: object
      properties:
        notes:
          type: string
          description: Notes that you want to add to the triggered alerts. Leave it empty if you want to delete the alert
    AlertDefinition:
      title: AlertDefinition
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: Id of the alert definition
        name:
          type: string
          description: Name of the alert definition
        type:
          type: string
          description: category of the alert definition
          enum:
            - Clients
            - Edge drive-Share operations
            - License
            - MediaAgents
            - Users
            - Client Group License Usage Check
            - Data aging is disabled for n days
            - Expiring clones
            - Index Backup Status
            - Index State
            - Notify decommissioned Virtual Machines
            - Auxiliary Copy
            - Data Aging
            - Data Protection
            - Data Recovery
            - DeDup DB Reconstruction
            - Disaster Recovery Backup
            - Device Status
            - Library Management
            - Admin Alert
            - Event Viewer Events
            - Updates Available to Download
            - No DDB Verification Job in last n days
            - HyperScale-HardwareAlerts
        company:
          $ref: '#/components/schemas/IdName'
        enabled:
          type: boolean
          description: denotes if the alert definition is enabled or disabled
        globalConfigInfo:
          $ref: '#/components/schemas/GlobalConfigInfo'
    AlertDefinitionsList:
      title: AlertDefinitionsList
      type: object
      properties:
        alertDefinitions:
          type: array
          items:
            $ref: '#/components/schemas/AlertDefinition'
        globalConfigInfo:
          $ref: '#/components/schemas/GlobalConfigInfo'
    TriggeredAlertsDetails:
      title: TriggeredAlertsDetails
      type: object
      properties:
        id:
          type: integer
          description: id of the triggered alert
          format: int32
        severity:
          $ref: '#/components/schemas/AlertSeverity'
        alertType:
          type: string
          description: alert type for which the triggered alert was generated
          enum:
            - Configuration - Clients
            - Configuration - Edge drive-Share operations
            - Configuration - License
            - Configuration - MediaAgents
            - Configuration - Users
            - Custom Rules - Client Group License Usage Check
            - Custom Rules - Data aging is disabled for n days
            - Custom Rules - Expiring clones
            - Custom Rules - Index Backup Status
            - Custom Rules - Index State
            - Custom Rules - Notify decommissioned Virtual Machines
            - Job Management - Auxiliary Copy
            - Job Management - Data Aging
            - Job Management - Data Protection
            - Job Management - Data Recovery
            - Job Management - DeDup DB Reconstruction
            - Job Management - Disaster Recovery Backup
            - Media Management - Device Status
            - Media Management - Library Management
            - Operation - Admin Alert
            - Operation - Event Viewer Events
            - Software Updates - Updates Available to Download
        description:
          type: string
          description: The HTML template for the triggered alert containing description
        detectedCriteria:
          type: string
          description: detection criteria for the triggered alert to be generated
          enum:
            - Alert CommServe License Expires Within n Days
            - Alert Modified
            - Alert every n attempts (Network failures)
            - Alert every n attempts (Phase failures)
            - Alert every n failed login attempts
            - Alert when License Consumed reaches n Percent
            - Alert when client certificate Expires Within n Days
            - Alert when jobs in pending state exceed n percent or count of n
            - Auxiliary Copy fallen behind alert
            - Backup for subclient failed consecutively for n attempts
            - Classification Failed
            - DDB Store got corrupted
            - DDB disk space low
            - Data backed up exceeds n GB
            - Decrease in Data size by n %
            - Delayed by n Hrs
            - Disk Space Low
            - Drive went Offline
            - Force De-configured
            - Increase in Data size by n %
            - Insufficient Storage
            - Job Activity
            - Job Failed
            - Job Initiated
            - Job Skipped
            - Job Started
            - Job Succeeded
            - Job Succeeded with Errors
            - Job exceeded running time of n Hrs
            - Library went Offline
            - Maintenance Occurred
            - Maintenance Required
            - Media Handling Required
            - Media Picked Up
            - Media Reached Destination
            - Media Recalled
            - Media Returned to Source
            - MediaAgent went offline
            - Mount Path went Offline
            - No Backup for last n Days
            - No Data Protection
            - Non-encrypted media exported
            - Number of failed files is more than n
            - Percentage of failed files is more than n
            - Properties Modified
            - Release Upgrade Required
            - Rolled Back
            - Scheduler Changes
            - Updates Available to Download
            - User Overwrite of Media
    LaptopsAdminConsole:
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: id of the laptop
        name:
          type: string
          description: name of the laptop
        owners:
          type: array
          items:
            $ref: '#/components/schemas/IdName'
        username:
          type: string
          description: comma seperated value for username of the laptop
        email:
          type: string
          description: comma seperated value for email of the laptop
        configured:
          type: boolean
          description: defines if the laptop is configured or not
        lastBackupJobInfo:
          $ref: '#/components/schemas/LastBackupJobInfo'
        totalBackupSize:
          type: integer
          format: int32
          description: application size (in bytes) for the laptop
        plan:
          $ref: '#/components/schemas/IdName'
        sla:
          $ref: '#/components/schemas/SLADetails'
        slaReason:
          type: string
          description: reason for the current sla status
        lastSuccessfulBackup:
          type: integer
          format: int32
          description: time (in unix timestamp) for the last successful backup
        tags:
          type: array
          items:
            $ref: '#/components/schemas/IdNameType'
    MigrationConfiguration:
      title: MigrationConfiguration
      type: object
      description: Configuration for Migration to Azure
      properties:
        source:
          $ref: '#/components/schemas/MigrationSource'
        destination:
          $ref: '#/components/schemas/MigrationDestination'
        migrationPairs:
          $ref: '#/components/schemas/ManagePaths'
        migrationSettings:
          $ref: '#/components/schemas/MigrationSettings'
        plan:
          $ref: '#/components/schemas/IdName'
        kickOffMigrationImmediately:
          type: boolean
          description: Kick off migration immediately?
        startAnalysisNow:
          type: boolean
    MigrationPair:
      title: MigrationPair
      type: object
      properties:
        SourcePath:
          type: string
        DestinationPath:
          type: string
    AccessNodes:
      title: AccessNode
      type: object
      description: ''
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        type:
          type: string
          default: CLIENT
          enum:
            - CLIENT
            - CLIENT_GROUP
    MigrationSource:
      title: Source
      type: object
      description: Source of the migration NAS data
      properties:
        sourceName:
          type: string
          description: NAS filer name
        NASType:
          type: string
          default: CIFS
          enum:
            - CIFS
            - NFS
          description: NAS type
        sourceCredentials:
          $ref: '#/components/schemas/IdName'
        accessNode:
          type: array
          description: Access nodes for source clients
          items:
            $ref: '#/components/schemas/AccessNodes'
    MigrationDestination:
      title: Destination
      type: object
      description: Specify node with write access to Azure File share. The destincation type (NFS/CIFS) is determined by source.
      properties:
        region:
          $ref: '#/components/schemas/IdName'
        accessNode:
          type: array
          description: Access nodes for the destination client
          items:
            $ref: '#/components/schemas/AccessNodes'
        destinationName:
          type: string
          description: Azure storage account
        destinationCredentials:
          $ref: '#/components/schemas/IdName'
    Credentials:
      title: Credentials
      type: object
      description: Credentials for source client and destination client
      properties:
        sourceCredentials:
          $ref: '#/components/schemas/IdName'
        destinationCredentials:
          $ref: '#/components/schemas/IdName'
    ManagePaths:
      title: ManagePaths
      type: object
      description: Define migration paths to ensure proper mapping
      properties:
        pair:
          type: array
          items:
            $ref: '#/components/schemas/MigrationPair'
    MigrationSettings:
      title: MigrationSettings
      type: object
      description: Name the migration group and define the frequency
      properties:
        migrationWindow:
          type: array
          items:
            $ref: '#/components/schemas/CreateBlackoutWindow'
        migrationFrequency:
          $ref: '#/components/schemas/PlanPattern'
        name:
          type: string
    MigrationGroupDetails:
      title: MigrationGroupDetailsResp
      type: object
      properties:
        sourceClient:
          $ref: '#/components/schemas/IdName'
        destinationClient:
          $ref: '#/components/schemas/IdName'
        sourceAccessNode:
          type: array
          items:
            $ref: '#/components/schemas/AccessNodes'
        destinationAccessNode:
          type: array
          items:
            $ref: '#/components/schemas/AccessNodes'
        credentials:
          $ref: '#/components/schemas/Credentials'
        updateFrequency:
          $ref: '#/components/schemas/PlanPattern'
        migrationGroupName:
          type: string
        migrationMonitors:
          type: array
          items:
            $ref: '#/components/schemas/MigrationMonitor'
        migrationGroupState:
          type: boolean
        sourceBackupset:
          $ref: '#/components/schemas/IdName'
        destinationBackupset:
          $ref: '#/components/schemas/IdName'
        sourceInstance:
          $ref: '#/components/schemas/IdName'
        destinationInstance:
          $ref: '#/components/schemas/IdName'
        sourceSubclient:
          $ref: '#/components/schemas/IdName'
        destinationSubclient:
          $ref: '#/components/schemas/IdName'
        sourceApplication:
          $ref: '#/components/schemas/IdName'
        destinationApplication:
          $ref: '#/components/schemas/IdName'
        migrationSize:
          type: integer
          format: int64
        numOfFiles:
          type: integer
          format: int64
        failures:
          type: string
        backupJobId:
          type: integer
          format: int32
        restoreJobId:
          type: integer
          format: int32
        migrationStatus:
          $ref: '#/components/schemas/ReplicationStatus'
        lastSyncTime:
          type: integer
          format: int64
        backupSchedulePolicy:
          $ref: '#/components/schemas/IdName'
        backupSchedule:
          $ref: '#/components/schemas/IdName'
        failureReason:
          type: string
        region:
          $ref: '#/components/schemas/IdName'
    MigrationMonitor:
      type: object
      title: MigrationMonitor
      properties:
        destinationPath:
          type: string
        type:
          type: string
        lastSyncTime:
          type: integer
          format: int64
        migrationSize:
          type: number
          format: float
        numOfFiles:
          type: integer
          format: int64
        sourcePath:
          type: string
        syncStatus:
          $ref: '#/components/schemas/ReplicationStatus'
        replicationId:
          type: integer
          format: int32
    ReplicationStatus:
      type: string
      title: ReplicationStatus
      enum:
        - VSAREP_NONE = 0
        - VSAREP_COMPLETE = 1
        - VSAREP_PENDING = 2
        - VSAREP_RUNNING = 3
        - VSAREP_PAUSED = 4
        - VSAREP_FAILED = 5
        - VSAREP_DISABLED = 6
        - VSAREP_ENABLED= 7
        - VSAREP_VALIDATION_FAILED = 8
        - VSAREP_JOB_QUEUED = 9
        - VSAREP_REVERT_FAILED = 10
        - VSAREP_STARTING = 11
    SNMPConfigurationSummary:
      title: SNMPConfigurationSummary
      type: object
      description: SNMP host configuration
      properties:
        id:
          type: integer
          description: Id of SNMP host
          format: int32
        name:
          type: string
          description: Name of SNMP host
        userName:
          type: string
          description: Username used to access SNMP host
        authenticationAlgorithm:
          type: string
          description: Authentication algorithm of SNMP host
          enum:
            - HMAC_MD5
            - HMAC_SHA
            - HMAC128_SHA224
            - HMAC192_SHA256
            - HMAC256_SHA384
            - HMAC384_SHA512
        privacyAlgorithm:
          type: string
          description: Privacy algorithm of SNMP host
          enum:
            - None
            - CBC_DES
            - CFB128_AES128
            - CFB128_AES192
            - CFB128_AES256
            - CBC_AES128
            - CBC_AES192
            - CBC_AES256
    AlertIds:
      title: AlertIds
      type: object
      description: Array of ids of an entity
      properties:
        alertId:
          type: array
          items:
            type: integer
            format: int32
    LaptopsListWebConsole:
      type: array
      items:
        $ref: '#/components/schemas/LaptopsWebConsole'
    LaptopsListAdminConsole:
      type: array
      items:
        $ref: '#/components/schemas/LaptopsAdminConsole'
    ServiceAccount:
      description: Google cloud service account details
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
    GoogleCloudDestinationInfo:
      description: Destination information for the GCP VMs to restore
      type: object
      properties:
        googleCloudVMInfoList:
          type: array
          description: List of Google Cloud VMs that are to be restored
          items:
            $ref: '#/components/schemas/GoogleCloudVMInfo'
        namePrefix:
          type: string
          description: Adds prefix for VM display name
        nameSuffix:
          type: string
          description: Adds suffix for VM display name
    GoogleCloudVMInfo:
      description: VM restore information for the Google Cloud VM
      type: object
      properties:
        instanceId:
          type: string
          description: 'Instance ID of the google cloud virtual machine to be restored. Ex: 123456789123456789.'
          example: '123456789123456'
        name:
          type: string
          description: The new name of the instance after restore. Defaults to source name after restore.
          default: Defaults to source VM name
        projectId:
          type: string
          description: GCP Project ID
        zone:
          type: string
          description: 'GCP zones. Ex: asia-east1-a. Defaults to source instance zone after restore. For reference: cloud.google.com/compute/docs/regions-zones#available'
          example: asia-east1-a
          default: 'Defaults to source instance zone after restore. For reference: cloud.google.com/compute/docs/regions-zones#available'''
        region:
          type: string
          description: 'GCP Region. Ex: asia-east1. Defaults to source instance region after restore. For reference: cloud.google.com/compute/docs/regions-zones#available'
          example: asia-east1
          default: 'Defaults to source instance region after restore. For reference: cloud.google.com/compute/docs/regions-zones#available'
        machineType:
          type: string
          description: 'GCP Machine Family. Ex: c2d-highmem-8. Defaults to --Auto Select--. For Reference: cloud.google.com/compute/docs/machine-resource'
          example: c2d-highmem-8
          default: '--Auto Select--'
        createPublicIP:
          type: boolean
          description: Flag to create external IP after restore. Defaults to false.
          default: false
        networkInterfaces:
          type: array
          description: Google Cloud VM network interfaces list
          items:
            $ref: '#/components/schemas/GoogleCloudNetworkInterfaceInfo'
        customMetadata:
          type: array
          description: GCP custom metadata key-value pairs
          items:
            $ref: '#/components/schemas/NameValue'
        nodeAffinities:
          type: array
          description: 'Node affinity for the virtual machine to provision virtual machine as sole tenanat VM. Defaults to no node affinity. Format: ''[{name: compute.googleapis.com/node-group-name, value: {Node Group Name} }, {name: compute.googleapis.com/node-name, value: {Node Name} }]'''
          items:
            $ref: '#/components/schemas/NameValue'
        serviceAccount:
          $ref: '#/components/schemas/ServiceAccount'
        encryptionKey:
          type: string
          description: Customer Managed Encryption Key
          example: 'kmsKeyName:projects/projectName/locations/global/keyRings/enc-key/cryptoKeys/enc-key-name'
        keyProtectionLevel:
          type: string
          description: Protection level of encryption key
          example: SOFTWARE
    GoogleCloudNetworkInterfaceInfo:
      description: Google cloud network interface information
      type: object
      properties:
        name:
          type: string
          description: 'Name of the network interface card. Ex: nic0.'
          example: nic0
        networkName:
          type: string
          description: 'Network Name. Ex: default. Defaults to source network name.'
          example: default
          default: Defaults to source network name.
        subnetId:
          type: string
          description: 'Subnet self-link. Format: googleapis.com/compute/v1/projects/<Project ID>/regions/<Region>/subnetworks/{Subnet Name}. Defaults to source subnet self-link.'
          default: Defaults to source subnet
        networkId:
          type: string
          description: 'Network self-link. Format: googleapis.com/compute/v1/projects/<Project ID>/global/networks/{Network Name}. Defaults to source network self-link.'
          default: Defaults to source network self-link.
        internalIP:
          type: string
          description: Internal IP address. Defaults to the source internal IP after restore.
          default: Defaults to the source internal IP after restore.
          format: ipv4
        externalIP:
          type: string
          description: External IP Address. Defaults to null and is not set after restore.
          format: ipv4
          default: Defaults to null and is not set after restore.
    GoogleCloudDiskInfo:
      description: Google cloud disk information
      type: object
      properties:
        name:
          type: string
          description: Google Cloud VM disk name
    AzureDestinationInfo:
      description: Destination information for the Azure VMs to restore
      type: object
      properties:
        azureVMInfoList:
          type: array
          description: List of Azure VMs that are to be restored
          items:
            $ref: '#/components/schemas/AzureVMInfo'
        namePrefix:
          type: string
          description: Adds prefix for VM display name
        nameSuffix:
          type: string
          description: Adds suffix for VM display name
    AzureVMInfo:
      description: VM restore information for the Azure VM
      type: object
      properties:
        sourceVMGuid:
          type: string
          description: Azure VM ID
          example: c1231de123-4309-41be-123123-123abc123
        name:
          type: string
          description: Azure VM name to be set after restore. Defaults to source VM name.
          default: Defaults to source VM name
        resourceGroup:
          type: string
          description: Azure Resource Group Name. Defaults to source VM resource group name.
          default: Defaults to source VM resource group name
        region:
          type: string
          description: 'Azure region name. Ex: For azure region (West US 3) the region value will be westus3. For reference: learn.microsoft.com/en-us/rest/api/resources/subscriptions/list-locations'
          example: For azure region (West US 3) the region value will be westus3
          default: Defaults to source VM region
        availabilityZone:
          type: string
          description: 'Azure availablity zones. Defaults to Auto. Values can be as follows: ''Auto'' (Select from the source VM config), ''None'' (Will not restore to any zone), ''{Zone Number}'' (Availablity zone number the restored VM should be in. Ex: 2).'
          default: Defaults to Auto
        storageAccount:
          type: string
          description: Azure staging storage account. Defaults to source storage account.
          default: Defaults to source storage account
        vmSize:
          type: string
          description: 'VM size to be after restore. Defaults to --Auto Select--. Ex: Standard_A1.'
          default: '--Auto Select--'
          example: Standard_A1
        diskType:
          type: string
          description: 'Disk type to set after restore. Ex: Standard_LRS.'
          example: Standard_LRS
        createPublicIP:
          type: boolean
          description: Boolean to specify if VM should have publice IP. Defaults to false.
          default: false
        restoreAsManagedVM:
          type: boolean
          description: Boolean to specify if VM need to be restored as managed VM. Defaults to true.
          default: true
        securityGroupId:
          type: string
          description: Azure security group to be set for the VM. Defaults to source configuration.
          default: Defaults to source configuration
        diskEncryptionSetTypeId:
          type: string
          description: 'Azure Disk Encryption Type. Values can be: ''EncryptionAtRestWithCustomerKey'' or ''EncryptionAtRestWithPlatformAndCustomerKeys'' or ''EncryptionAtRestWithPlatformAndCustomerKeys''. For reference: learn.microsoft.com/en-us/dotnet/api/microsoft.azure.management.compute.models.encryptiontype?view=azure-dotnet&viewFallbackFrom=azure-dotnet'
        diskEncryptionSetId:
          type: string
          description: 'Azure Disk Encryption Set ID. Format: /subscriptions/{Subscription ID}/resourceGroups/{Resource Group Name}/providers/Microsoft.Compute/diskEncryptionSets/{Disk Encryption Set}.'
        nics:
          type: array
          description: Azure VM network interface list
          items:
            $ref: '#/components/schemas/AzureDestinationInfoNic'
        vmTags:
          type: array
          description: Azure VM tag list
          items:
            $ref: '#/components/schemas/NameValue'
        restoreSourceVMTags:
          type: boolean
          description: Restore source VM tags.
          default: true
      required:
        - storageAccount
    AzureDestinationInfoNic:
      description: Azure nic info for restore
      type: object
      properties:
        networkId:
          type: string
          description: 'Azure network ID. Format: /subscriptions/{Subscription ID}/resourceGroups/{Resource Group Name}/providers/Microsoft.Network/virtualNetworks/{Network Name}.'
        subnetId:
          type: string
          description: 'Azure subnet ID. Format: /subscriptions/{Subscription ID}/resourceGroups/{Resource Group Name}/providers/Microsoft.Network/virtualNetworks/{Network Name}/subnets/{Subnet Name}.'
        privateIpAddress:
          type: string
          description: Azure private IP address.
          format: ipv4
        publicIpAddress:
          type: string
          description: Azure publice IP address.
          format: ipv4
        publicIpAddressId:
          type: string
          description: 'Azure public IP address ID. Format: /subscriptions/{Subscription ID}/resourceGroups/{Resource Group Name}/providers/Microsoft.Network/publicIPAddresses/{Public IP Address Name}.'
    AzureDestinationInfoDisk:
      description: Azure disk info for restore
      type: object
      properties:
        storageAccount:
          type: string
          description: Azure storage account name
        name:
          type: string
          description: Azure disk name
    VSAEncryptionOption:
      type: object
      properties:
        isEncrypted:
          type: boolean
        encryptionKey:
          type: string
        diskEncryptionSetId:
          type: string
        diskEncryptionSetTypeId:
          type: string
    AWSNetworkInterfaceInfo:
      type: object
      description: AWS nic info for restore
      properties:
        vpcId:
          type: string
        networkName:
          type: string
        subnetId:
          type: string
        eniId:
          type: string
    VMSecurityGroupInfo:
      type: object
      description: AWS security group info for restore
      properties:
        groupId:
          type: string
        groupName:
          type: string
    VMKeyPairInfo:
      type: object
      description: VM Key pair info
      properties:
        keyId:
          type: string
        keyName:
          type: string
    AWSDestinationInfo:
      description: Destination information for the AWS instances to restore
      type: object
      properties:
        awsInstanceInfoList:
          type: array
          description: List of AWS instances that are to be restored
          items:
            $ref: '#/components/schemas/AWSInstanceInfo'
        namePrefix:
          type: string
          description: Adds prefix for instance display name
        nameSuffix:
          type: string
          description: Adds suffix for instance display name
    AWSInstanceInfo:
      description: VM restore information for the AWS VM
      type: object
      properties:
        instanceId:
          type: string
          description: AWS instance ID
          example: i-0f90bef70bd90c9e0
        instanceName:
          type: string
          description: AWS instance name to be set after restore. Defaults to source instance name.
          default: Defaults to source instance name
        zone:
          type: string
          description: AWS Availability zone. Defaults to source instance availability zone.
          default: Defaults to source instance availability zone.
        region:
          type: string
        instanceSize:
          type: string
          description: Instance size to be after restore. Defaults to source instance size
          default: Defaults to source instance size
          example: t2.micro
        volumeType:
          type: string
        encryptionKey:
          $ref: '#/components/schemas/VSAEncryptionOption'
        nics:
          type: array
          description: AWS instance network interface list
          items:
            $ref: '#/components/schemas/AWSNetworkInterfaceInfo'
        securityGroups:
          type: array
          description: List of AWS security groups to be set for the instance.
          items:
            $ref: '#/components/schemas/VMSecurityGroupInfo'
        vmTags:
          type: array
          description: AWS VM tag list
          items:
            $ref: '#/components/schemas/NameValue'
        restoreSourceVMTags:
          type: boolean
          description: Restore source VM tags.
          default: true
        keyPairs:
          type: array
          description: List of key pairs
          items:
            $ref: '#/components/schemas/VMKeyPairInfo'
        restoreSourceNetworkConfig:
          type: boolean
          description: If set to true, we will use the source network configuration during restore
          default: true
    VMDestinationInfo:
      description: Destination informantion for the VM to restore
      type: object
      properties:
        googleCloud:
          $ref: '#/components/schemas/GoogleCloudDestinationInfo'
        azure:
          $ref: '#/components/schemas/AzureDestinationInfo'
        aws:
          $ref: '#/components/schemas/AWSDestinationInfo'
    VmWareTransportMode:
      description: Backup transport modes enum
      type: string
      enum:
        - Auto
        - SAN
        - Hot_Add
        - NAS
        - NBD_SSL
        - NBD
        - EBS_DIRECT
        - IMPORT
    RestoreFlavour:
      description: Type of restore for virtual machine
      type: string
      enum:
        - NONE
        - VIRTUAL_MACHINE
        - PHYSICAL_VOLUME
        - VMDK_FILES
        - VIRTUAL_HARD_DISKS
        - VDI_OBJECT
        - DISK_ATTACH
        - RESTORE_AS_FILE
        - INSTANT_VM
      title: ''
    VMGroupRestoreRequest:
      description: VM or VMGroup restore request body
      type: object
      properties:
        powerOnVmAfterRestore:
          type: boolean
          description: Turn ON virtual machine after restore. Defaults to false.
          default: false
        overwriteVM:
          type: boolean
          description: Unconditionally overwrite VM during restore. Defaults to false.
          default: false
        inPlaceRestore:
          type: boolean
          description: Flag to set if restore is in-place or out-of-place. Defaults to false.
          default: false
        backupSource:
          type: integer
          description: 'Backup source information from where you want to restore. 0 (Automatic), 1 (Snap Copy), 2 (Primary), 3 to N (Aux Copy)'
          format: int32
          example: 2
          default: 0
        destination:
          $ref: '#/components/schemas/IdName'
        accessNode:
          $ref: '#/components/schemas/IdName'
        accessNodeGroup:
          $ref: '#/components/schemas/IdName'
        vmDestinationInfo:
          $ref: '#/components/schemas/VMDestinationInfo'
        transportMode:
          $ref: '#/components/schemas/VmWareTransportMode'
        restoreFlavour:
          $ref: '#/components/schemas/RestoreFlavour'
        notifyOnJobCompletion:
          type: boolean
          description: Enable email notificaiton for job status. Defaults to false.
          default: false
        reuseVMClient:
          type: boolean
          description: Reuse the existing VM client instance of creating new one after restore. Defaults to true for inplace restore and false for out of place restore.
      required:
        - inPlaceRestore
        - vmDestinationInfo
    CreateTaskRespforBackup:
      description: 'Create task response for backup'
      type: object
      properties:
        taskId:
          type: integer
          format: int32
        jobIds:
          type: array
          description: JobIds for the immediate run request
          items:
            type: string
    ServerPlanBackupRequest:
      description: 'Server plan immediate backup request'
      type: object
      properties:
        scheduleId:
          type: integer
          format: int32
        policyId:
          type: integer
          format: int32
    AnomalousConditionInfo:
      type: object
      properties:
        time:
          type: integer
          format: int64
          description: Time when anomalous condition has happened
        clientInfo:
          $ref: '#/components/schemas/IdName'
        description:
          type: string
        anomalyType:
          type: string
          enum:
            - Anomalous runtime
            - Anomalous event
            - Offline client
            - High CPU usage
            - High memory usage
    AlertDefinitonsCreate:
      title: AlertDefinitonsCreate
      type: object
      properties:
        name:
          type: string
        alertType:
          $ref: '#/components/schemas/AlertDefinitionsCreateAlertType'
        sendIndividualNotifications:
          type: boolean
          default: false
          description: Flag indicating the functionality to send individual notifications
        subscriptionBasedAlert:
          type: boolean
          default: false
          description: Flag to indicate whether its a subscription based alert.
        processDiscoveredVMs:
          type: boolean
          default: false
          description: Flag indicating the functionality to send individual notifications for each discovered virtual machine
        associations:
          $ref: '#/components/schemas/AlertDefinitionsAssociations'
        alertTarget:
          $ref: '#/components/schemas/AlertDefinitionsTarget'
        templates:
          $ref: '#/components/schemas/AlertDefinitionsTemplate'
        tokens:
          $ref: '#/components/schemas/TokenRuleGroups'
        eventCriteriaDetails:
          $ref: '#/components/schemas/EventCriteriaDetails'
        globalConfigInfo:
          $ref: '#/components/schemas/CreateGlobalConfigInfo'
    AlertDefinitionsEdit:
      title: AlertDefinitionsEdit
      type: object
      properties:
        newName:
          type: string
          description: The new name of the alert definition
        criteriaList:
          type: array
          description: List of alert criteria
          items:
            $ref: '#/components/schemas/AlertCriteriaIdName'
        sendIndividualNotifications:
          type: boolean
          description: Flag indicating the functionality to send individual notifications
        subscriptionBasedAlert:
          type: boolean
          description: Flag to indicate whether its a subscription based alert.
        processDiscoveredVMs:
          type: boolean
          description: Flag indicating the functionality to send individual notifications for each discovered virtual machine
        associationsOperationType:
          type: string
          description: 'Allows adding to, overwriting and deleting existing alert associations. default is adding to existing alert associations'
          enum:
            - ADD
            - DELETE
            - OVERWRITE
          default: ADD
        associations:
          $ref: '#/components/schemas/AlertDefinitionsAssociations'
        alertTarget:
          $ref: '#/components/schemas/AlertDefinitionsTarget'
        templates:
          $ref: '#/components/schemas/AlertDefinitionsTemplate'
        tokens:
          $ref: '#/components/schemas/TokenRuleGroups'
        eventCriteriaDetails:
          $ref: '#/components/schemas/EventCriteriaDetails'
        globalConfigInfo:
          $ref: '#/components/schemas/GlobalConfigInfo'
    AlertDefinitionsDetails:
      title: AlertDefinitionsDetails
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        alertSummary:
          $ref: '#/components/schemas/AlertDetailsSummary'
        sendIndividualNotifications:
          type: boolean
          description: true if individual notifications are on for the alert definitions
        processDiscoveredVMs:
          type: boolean
          description: True if individual notifications for each discovered virtual machine are enabled for the alert definition
        subscriptionBasedAlert:
          type: boolean
          description: Flag to indicate whether its a subscription based alert.
        associations:
          $ref: '#/components/schemas/AlertDefinitionsAssociations'
        alertTarget:
          $ref: '#/components/schemas/AlertDefinitionsTarget'
        templates:
          $ref: '#/components/schemas/AlertDefinitionsTemplate'
        additionalProperties:
          $ref: '#/components/schemas/AlertAdditionalProperties'
        tokens:
          $ref: '#/components/schemas/TokenRuleGroups'
        customQueryDetails:
          $ref: '#/components/schemas/CustomQueryDetails'
        eventCriteriaDetails:
          $ref: '#/components/schemas/EventCriteriaDetails'
        globalConfigInfo:
          $ref: '#/components/schemas/GlobalConfigInfo'
    TokenRuleGroupOperation:
      enum:
        - AND
        - OR
        - IS_RULE
        - IS_DATE
        - IS_TIME
        - BETWEEN
        - NOT_BETWEEN
      type: string
      format: ''
    TokenRuleGroups:
      type: object
      properties:
        match:
          $ref: '#/components/schemas/TokenRuleGroupOperation'
        ruleGroups:
          type: array
          description: List of rule groups
          items:
            $ref: '#/components/schemas/TokenRuleGroup'
    TokenRuleGroup:
      type: object
      properties:
        match:
          $ref: '#/components/schemas/TokenRuleGroupOperation'
        rules:
          type: array
          description: List of rules
          items:
            $ref: '#/components/schemas/TokenRule'
    TokenRule:
      type: object
      properties:
        tokenName:
          type: string
          enum:
            - SUBJECT END
            - SUBJECT BEGIN
            - COMMCELL NAME
            - ALERT CATEGORY - ALERT TYPE
            - TIME
            - UTC_TIME
            - OWNER NAME
            - OWNER EMAIL
            - ALERT ID
            - ALERT NAME
            - DETECTED CRITERIA
            - STATUS
            - CLIENT LIST
            - ATTACHMENT
            - DESCRIPTION
            - JOB ID
            - START TIME
            - END TIME
            - SCHEDULE TIME
            - FAILURE REASON
            - SP NAME
            - COPY NAME
            - CLIENT NAME
            - AGENT TYPE NAME
            - INSTANCE NAME
            - BACKUPSET NAME
            - SUBCLIENT NAME
            - LEVEL
            - PROTECTED COUNT
            - FAILED COUNT
            - RECOVERED COUNT
            - SKIPPED COUNT
            - PROTECTED OBJECTS
            - FAILED OBJECTS
            - RECOVERED OBJECTS
            - SKIPPED OBJECTS
            - MEDIA LABEL
            - LIBRARY NAME
            - EXPORT LOCATION
            - MEDIA LIST
            - MEDIA LIST
            - MEDIA SUCCEEDED
            - MEDIA FAILED
            - COMMENT
            - COMMENT
            - COMMENT
            - FREE SPACE
            - FREE SPACE
            - FREE SPACE
            - FORCE DECONFIG Y/N
            - MEDIAAGENT NAME
            - SCHEDULE/SCHEDULE POLICY NAME
            - SPAREPOOL/MOUNTPATH NAME
            - MEDIA SPACE LEFT
            - THRESHOLD
            - OTHER LIBRARY
            - DRIVEPOOL NAME
            - DRIVE NAME
            - INITIATER
            - SOURCE LOCATION
            - TRANSIT LOCATION
            - SP LIST
            - DESTINATION LOCATION
            - DISK SPACE LOW Y/N
            - DISK SPACE LOW Y/N
            - DISK SPACE LOW Y/N
            - PROPERTY MODIFIED Y/N
            - MOUNTPATH NAME
            - SUCCESSFUL CLIENT LIST
            - FAILED CLIENT LIST
            - UNKNOWN CLIENT LIST
            - UP-TO-DATE CLIENT LIST
            - ALL CLIENT LIST
            - MEDIA REQUIRE LIST
            - MEDIA LOCATION LIST
            - CONDITION CLEARED Y/N
            - USER NAME
            - AGENT TYPE ID
            - RESOURCE WAIT TIME
            - MESSAGE COUNT
            - MAILBOX NAME
            - ELAPSED TIME
            - CONTENTS
            - CONTENTS DOWNLOADED
            - FILES DOWNLOADED
            - DOWNLOAD SIZE (MB)
            - CLIENT STATUS LIST
            - JOBS RUNNING CLIENT LIST
            - LOW CACHE CLIENT LIST
            - UNREACHABLE CLIENT LIST
            - SERVER RELEASE
            - CLIENT RELEASE LIST
            - DISK SPACE INFO
            - DISK SPACE INFO
            - DISK SPACE INFO
            - LAST ACTIVITY TIME
            - MORE MEDIA Y/N
            - SNAPSHOT VOLUME UNIT
            - WORKFLOW
            - FLR_SRC_PATH
            - FLR_DEST_PATH
            - DEST CLIENT
            - REPSET NAME
            - OPERATION TYPE
            - CS UPGR TIME
            - CS UPGR TIME
            - XFER BYTES
            - XFER SECS
            - XFER GB PER HOUR
            - ERR CODE
            - RECALL REASON
            - RECALL EXPIRE TIME
            - RECALL DESTINATION
            - Report ID
            - Report Hist ID
            - Report URL
            - Report URL
            - CURRENT BACKUP SIZE
            - PREVIOUS BACKUP SIZE
            - PREVIOUS JOBID
            - PERCENTAGE CHANGE
            - PRUNED MEDIA BARCODE LIST
            - PRUNED JOBS COUNT
            - RESTORE USER NAME
            - NUMBER OF ITEMS
            - SIZE
            - FAILED ATTEMPTS COUNT
            - GUI Client Name
            - USER NAME LIST
            - FAILED ATTEMPT TIME LIST
            - STORAGE POLICIES USED
            - SIZE OF DATA TOBE COPIED
            - MEDIA TOBE COPIED COUNT
            - JOBS TOBE COPIED
            - OLDEST JOB ENDDATE
            - COPIED MEDIA LIST
            - COPIED DATA SIZE
            - REPORT NAME
            - AUTOMATED_CONTENT_CLASSIFICATION_POLICY_NAME
            - PHASES_IN_JOB
            - STATUS OF SEARCH PHASE
            - STATUS OF TAGGING PHASE
            - STATUS OF ERM CONNECTOR PHASE
            - STATUS OF RESTORE TO REVIEW SET PHASE
            - STATUS OF LEGAL HOLD BACKUP PHASE
            - STATUS OF LEGAL HOLD RESTORE PHASE
            - SEARCH PHASE SELETED Y/N
            - TAGGING PHASE SELECTED Y/N
            - ERM CONNECTOR PHASE SELECTED Y/N
            - RESTORE TO REVIEW SET PHASE SELECTED Y/N
            - LEGAL HOLD BACKUP PHASE SELECTED Y/N
            - LEGAL HOLD RESTORE PHASE SELECTED Y/N
            - NO. OF ITEMS SELECTED FOR TAGGING
            - NO. OF ITEMS TAGGED SUCCESSFULLY
            - NO. OF ITEMS FAILED TO TAG
            - NO. OF ITEMS SELECTED FOR ERM CONNECTOR
            - NO. OF ITEMS SUCCEEDED IN ERM CONNECTOR PHASE
            - NO. OF ITEMS FAILED IN ERM CONNECTOR PHASE
            - NO. OF ITEMS SELECTED TO RESTORE TO REVIEW SET
            - NO. OF ITEMS SUCCEEDED IN RESTORE TO REVIEW SET PHASE
            - NO. OF ITEMS FAILED IN RESTORE TO REVIEW SET PHASE
            - NO. OF ITEMS SELECTED FOR LEGAL HOLD BACKUP
            - NO. OF ITEMS SUCCEEDED IN LEGAL HOLD BACKUP PHASE
            - NO. OF ITEMS FAILED IN LEGAL HOLD BACKUP PHASE
            - NO. OF ITEMS SELECTED FOR LEGAL HOLD RESTORE
            - NO. OF ITEMS SUCCEEDED IN LEGAL HOLD RESTORE PHASE
            - NO. OF ITEMS FAILED IN LEGAL HOLD RESTORE PHASE
            - NO. OF ITEMS SELECTED TO SEARCH
            - NO. OF ITEMS SEARCHED SUCCESSFULLY
            - NO. OF ITEMS FAILED TO SEARCH
            - Virtual Machine NAME
            - XFER SIZE
            - EXTENDED RET. CANDIDATE Y/N
            - RETAIN UNTIL
            - LICENSE EXPIRED
            - NO. OF DAYS LEFT FOR LICENSE EXPIRY
            - XFER TIME
            - Task ID
            - OBJ STORE CACHE
            - CSV Output File
            - FileList
            - LICENSE PERCENT CONSUMED
            - TIME OF LAST SUCCESSFUL JOB
            - DATE OF LAST SUCCESSFUL JOB
            - NO SUCCESSFUL JOB SINCE
            - TOTAL OBJECTS
            - DDB NAME
            - OFFLINE SINCE
            - FAILED JOB INFO
            - TOTAL JOBS
            - PENDING JOBS COUNT
            - TOP PENDING ERRORS LIST
            - TOP WAITING ERRORS LIST
            - SUCCESSFUL MESSAGE
            - STATUS MESSAGE
            - ERR CODE MESSAGE
            - FAILURE REASON MESSAGE
            - CHECK LOGS MESSAGE
            - MONITORING POLICY NAME
            - MONITORING CRITERIA STRING
            - MATCHED LINE
            - MATCHED LINE
            - MATCHED LINE NUMBER
            - EVENT SEVERITY
            - EVENT DATE
            - EVENT PROGRAM
            - MATCHED LOG FILE
            - LINES ABOVE MATCHED LINE
            - LINES BELOW MATCHED LINE
            - EVENT ID
            - PARTIALLY SUCCESSFUL CLIENT LIST
            - CLIENT GROUP NAME
            - TASK CATEGORY
            - COMPUTER
            - VCENTER
            - ESX
            - DATASTORE
            - VMHOSTNAME
            - IPADDRESS
            - CLONECLIENTNAME
            - CLONEHOSTNAME
            - COPY HOURS
            - NUMBER OF SUBCLIENTS
            - SUBSTORE LOCATION
            - ALERT REASON
            - INDEX 0
            - INDEX 1
            - INDEX 2
            - INDEX 3
            - INDEX 4
            - INDEX 5
            - INDEX 6
            - INDEX 7
            - INDEX 8
            - INDEX 9
            - INDEX 10
            - INDEX 11
            - INDEX 12
            - INDEX 13
            - INDEX 14
            - INDEX 15
            - INDEX 16
            - INDEX 17
            - INDEX 18
            - INDEX 19
            - INDEX 20
            - INDEX 21
            - INDEX 22
            - INDEX 23
            - INDEX 24
            - INDEX 25
            - INDEX 26
            - INDEX 27
            - INDEX 28
            - INDEX 29
            - INDEX 30
            - INDEX 31
            - INDEX 32
            - INDEX 33
            - INDEX 34
            - INDEX 35
            - INDEX 36
            - INDEX 37
            - INDEX 38
            - INDEX 39
            - INDEX 40
            - INDEX 41
            - INDEX 42
            - INDEX 43
            - INDEX 44
            - INDEX 45
            - INDEX 46
            - INDEX 47
            - INDEX 48
            - INDEX 49
            - INDEX 50
            - INDEX 51
            - INDEX 52
            - INDEX 53
            - INDEX 54
            - INDEX 55
            - INDEX 56
            - INDEX 57
            - INDEX 58
            - INDEX 59
            - INDEX 60
            - INDEX 61
            - INDEX 62
            - INDEX 63
            - INDEX 64
            - INDEX 65
            - INDEX 66
            - INDEX 67
            - INDEX 68
            - INDEX 69
            - INDEX 70
            - INDEX 71
            - INDEX 72
            - INDEX 73
            - INDEX 74
            - INDEX 75
            - INDEX 76
            - INDEX 77
            - INDEX 78
            - INDEX 79
            - INDEX 80
            - INDEX 81
            - INDEX 82
            - INDEX 83
            - INDEX 84
            - INDEX 85
            - INDEX 86
            - INDEX 87
            - INDEX 88
            - INDEX 89
            - INDEX 90
            - INDEX 91
            - INDEX 92
            - INDEX 93
            - INDEX 94
            - INDEX 95
            - INDEX 96
            - INDEX 97
            - INDEX 98
            - INDEX 99
            - INDEX 100
            - QUERY NAME
            - SIZE OF DATA TOBE CONTENT INDEXED
            - JOBS TOBE CONTENT INDEXED
            - REPORT DISPLAY NAME
            - REPORT PARAM NAME
            - REPORT NAME
            - REPORT CRITERIA
            - VM FAILURE REASON
            - VM STATUS
            - VIRTUAL MACHINE NAME
            - VIRTUAL MACHINE HOST NAME
            - TABLE DATA
            - INPUT DATA
            - SEARCH QUERY STRING
            - SEARCH CRITERIA
            - SEARCH URL INFO
            - SEARCH CRITERA MATCHED LINES
            - JOB OPERATION
            - PENDING CLIENT LIST
            - WARNING
            - LEGAL HOLD NAME
            - REPORT URL
            - REPORT MANAGE URL
            - ADDITIONAL VM INFO
            - TABLE DATA XML
            - AUDIT INFO
            - TOTAL METRICS RESULT COUNT
            - CLIENT HOST NAME
            - ALARM HEADER
            - JOB DESCRIPTION
            - OBJECT SIZE
            - QUOTA LIMIT
            - SPACE CONSUMED
            - USER ID
            - OPERATION PERFORMED BY USER
            - USER GROUP NAME
            - CLEANUP DATA TEXT
            - CLIENT_OS_NAME
            - CLIENT_OS_PLATFORM
            - CLIENT_OS_SUBTYPE
            - CLIENT_OS_TYPE
            - CLIENT_OS_VERSION
            - OPERATION DATA
            - OFFLINE REASON
            - DESTINATION CLIENT
            - SOURCE CLIENT
            - CLIENT DESCRIPTION
            - DATA WRITTEN
            - PERCENTAGE INCREASE IN OBJECT COUNT
            - PREVIOUS JOB OBJECT COUNT
            - SHARE ENTITY INFO
            - ACTIVITY ID
            - ACTIVITY NAME
            - DIGEST INFO
            - ENTITY GUID
            - IS FILE ACTIVITY
            - FILE NAME
            - OLD FILE NAME
            - OPERATION DATA BODY
            - SHARE NAME
            - SHARE ID
            - MAIL ID
            - SEVERITY
            - SEVERITY INT
            - CLIENT GROUP LIST
            - ORGANIZATION NAME
            - FAILOVER COMMSERVE
            - FAILOVER INITIATED FROM
            - DIRECTORY WITH LOW SPACE
            - THRESHOLD FOR LOW SPACE
            - EXCLUDED FROM SLA
            - FAILED MAILBOXES
            - SKIPPED MAILBOXES
            - SUCCESSFUL MAILBOXES
            - FAILED JOBS THRESHOLD
            - PENDING JOBS THRESHOLD
            - FAILED JOBS COUNT
            - SUBCLIENT DESCRIPTION
            - SUCCEEDED JOBS THRESHOLD
            - SUCCEEDED JOBS COUNT
            - DESCRIPTION HTML
            - TIME EPOCH
            - VERSION GUID
            - CLIENT DISPLAY NAME
            - NEED REBOOT CLIENT LIST
            - ALERT TIME
            - VIRTUAL MACHINE INSTANCE UUID
            - CLIENT VERSION
            - JOB STARTED FROM
            - USER LOGIN NAME
            - TEXT DATA
            - QUERY GENERATED HTML CONTENT
            - FAILED VMS
            - PARTIALSUCCESS VMS
            - FAILOVER GROUP
            - FAILOVER STATUS
            - DATE OF LAST REPLICATION JOB
            - TIME OF LAST REPLICATION JOB
            - REPLICATION GROUP
            - REPLICATION STATUS
            - Synchronization Status
            - EVENT CODE
            - TIME ZONE
            - UTC_TIMESTAMP
            - ALERT LINK
            - CUSTOMER ID
            - VIRTUAL MACHINE CLIENT NAME
            - DOWNLOAD JOB MESSAGE
            - ALERT EVENT ID
            - WORKLOAD
          description: Name of the token.
        value:
          type: string
          description: 'Value to be compared for the token'
        ruleSecValue:
          type: string
          description: 'Secondary value used for BETWEEN and NOT_BETWEEN matchCondition.'
        matchCondition:
          $ref: '#/components/schemas/TokenOperationType'
        timeRange:
          $ref: '#/components/schemas/TimeRange'
        dateRange:
          $ref: '#/components/schemas/DateRange'
        tokenFormat:
          $ref: '#/components/schemas/TokenFormat'
    TimeRange:
      description: Time range is for time related token rule values to specify from and to time in unix timestamp format.
      type: object
      properties:
        fromTime:
          type: string
          description: 'From time value in unix timestamp format'
        toTime:
          type: string
          description: 'To time value in unix timestamp format'
    DateRange:
      description: Date range is for date related token rule values to specify from and to date in unix date timestamp format..
      type: object
      properties:
        fromDate:
          type: string
          description: 'From date value in unix timestamp format'
        toDate:
          type: string
          description: 'To date value in unix timestamp format'
        timeRange:
          type: array
          description: Time range selection details
          items:
            $ref: '#/components/schemas/TimeRange'
    TokenOperationType:
      enum:
        - EQUALS
        - DOES_NOT_EQUALS
        - CONTAINS
        - DOES_NOT_CONTAINS
        - LESSTHAN
        - LESSTHAN_EQUAL
        - GREATERTHAN
        - GREATERTHAN_EQUAL
        - BETWEEN
        - ANY_IN_SELECTION
        - FROM
        - TILL
        - NOT_BETWEEN
      type: string
      format: ''
    TokenFormat:
      enum:
        - NONE
        - REGULAR_EXPRESSION
        - CASE_SENSITIVE
        - MATCH_WHOLE_WORD
        - INCLUSIVE
      type: string
      format: ''
    QueryParameter:
      type: object
      properties:
        paramName:
          type: string
          description: Parameter name for the input field present in the SQL query
        value:
          type: string
          description: Value of the query parameter (JSON text in string format)
    QueryAdditionalInfo:
      type: object
      properties:
        queryParameters:
          type: array
          description: List of query parameters
          items:
            $ref: '#/components/schemas/QueryParameter'
    CustomQueryDetails:
      type: object
      properties:
        queryId:
          type: integer
          format: int32
          description: Unique id for the custom alert rule associated with the alert definition
        additionalQueryInfo:
          $ref: '#/components/schemas/QueryAdditionalInfo'
    ConditionOperationType:
      enum:
        - EQUALS
        - DOES_NOT_EQUALS
        - CONTAINS
        - DOES_NOT_CONTAINS
        - LESS_THAN
        - LESS_THAN_EQUAL
        - GREATER_THAN
        - GREATER_THAN_EQUAL
        - BETWEEN
        - ANY_IN_SELECTION
      type: string
      description: Operation type value for the condition column
      format: ''
    ConditionDetails:
      type: object
      properties:
        name:
          type: string
          description: Name of the condition column
        id:
          type: integer
          format: int32
          description: Unique identifier for the condition column
        operation:
          $ref: '#/components/schemas/ConditionOperationType'
        value:
          type: string
          description: Value associated with the column
        fromValue:
          type: string
          description: First value associated with the column when the operation type is BETWEEN
        toValue:
          type: string
          description: Second value associated with the column when the operation type is BETWEEN
        advancedCriteria:
          type: array
          description: List of advanced criteria options
          items:
            $ref: '#/components/schemas/TokenFormat'
        valuesList:
          type: array
          description: List of the values associated with the column in case of multiple values selection
          items:
            type: integer
            format: int32
      required:
        - name
        - id
        - operation
    Conditions:
      type: array
      items:
        $ref: '#/components/schemas/ConditionDetails'
    EventCriteriaDetails:
      type: object
      properties:
        opBetweenConditions:
          type: integer
          format: int32
          default: 0
          description: Integer value for the operation type between conditions
        criteriaName:
          type: string
          description: Alert criteria name
        conditions:
          $ref: '#/components/schemas/Conditions'
      required:
        - criteriaName
    AlertAdditionalProperties:
      title: ''
      type: object
      properties:
        status:
          type: integer
          format: int32
          description: Tells status of alert. Can be used to find if alert is enabled or not.
    AlertDetailsSummary:
      title: AlertDetailsSummary
      type: object
      properties:
        type:
          $ref: '#/components/schemas/AlertTypeIdName'
        category:
          $ref: '#/components/schemas/AlertCategoryIdName'
        criteria:
          $ref: '#/components/schemas/AlertCriteriaIdName'
        criteriaList:
          type: array
          description: List of alert criteria
          items:
            $ref: '#/components/schemas/AlertCriteriaIdName'
    AlertAssociationIdNameType:
      description: Hierarchy starts at the top at client level(parentEntity1) and ends at backupset level(parentEntity4) when defining parents for the associated entity. Parent entities must be defined application and lower entities.
      title: AlertAssociationIdNameType
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: id of the associated entity
        name:
          type: string
          description: name of the associated entity
        type:
          type: string
          enum:
            - ALL_SERVERS
            - ALL_SERVER_GROUPS_ENTITY
            - SERVER_GROUP_ENTITY
            - SERVER_ENTITY
            - APPTYPE_ENTITY
            - INSTANCE_ENTITY
            - BACKUPSET_ENTITY
            - SUBCLIENT_ENTITY
            - REPLICATION_PAIR_ENTITY
            - BLR_PAIR_ENTITY
            - FS_REPLICATION_PAIR_ENTITY
            - MEDIA_AGENT_ENTITY
            - ALL_MEDIA_AGENTS
            - JOB_ID_ENTITY
        parentEntity1:
          $ref: '#/components/schemas/AlertAssocParentEntity'
        parentEntity2:
          $ref: '#/components/schemas/AlertAssocParentEntity'
        parentEntity3:
          $ref: '#/components/schemas/AlertAssocParentEntity'
        parentEntity4:
          $ref: '#/components/schemas/AlertAssocParentEntity'
        flags:
          $ref: '#/components/schemas/AlertAssociationFlags'
    AlertAssociationFlags:
      type: object
      description: These flags are used to specify the type of association for the entities.
      properties:
        exclude:
          type: boolean
          description: If set to true, this entity and its child entities are excluded from the associations
    AlertAssocParentEntity:
      type: object
      description: parentEntity1 can only have type SERVER_ENTITY.parentEntity2 can only have type APPTYPE_ENTITY.parentEntity3 can only have type INSTANCE_ENTITY.parentEntity4 can only have type BACKUPSET_ENTITY.
      properties:
        id:
          type: integer
          format: int32
          description: id of the associated entity
        name:
          type: string
          description: name of the associated entity
        type:
          type: string
          enum:
            - SERVER_ENTITY
            - BACKUPSET_ENTITY
            - APPTYPE_ENTITY
            - INSTANCE_ENTITY
    AlertTypeIdName:
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: id of the alert definition
        name:
          type: string
          description: type of the alert definitions
          enum:
            - Clients
            - Edge drive-Share operations
            - License
            - MediaAgents
            - Users
            - Client Group License Usage Check
            - Data aging is disabled for n days
            - Expiring clones
            - Index Backup Status
            - Index State
            - Notify decommissioned Virtual Machines
            - Auxiliary Copy
            - Data Aging
            - Data Protection
            - Data Recovery
            - DeDup DB Reconstruction
            - Disaster Recovery Backup
            - Device Status
            - Library Management
            - Admin Alert
            - Event Viewer Events
            - Updates Available to Download
            - No DDB Verification Job in last n days
            - HyperScale-HardwareAlerts
            - Replication
    AlertCategoryIdName:
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: id of the category of the alert definition
        name:
          type: string
          description: category of the alert definition
          enum:
            - Configuration
            - Custom Rules
            - Job Management
            - Media Management
            - Operation
            - Software Updates
    AlertCriteriaIdName:
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: id of the criteria of detection for the alert definition
        name:
          type: string
          description: criteria of detection for the alert definition
          enum:
            - Backup Job Failed
            - Backup Job Skipped
            - Backup Job Succeeded
            - Increase in Data size by n percent for backup job
            - Backup Job Activity
            - Backup Delayed by n Hrs
            - Backup Job completed with Errors
            - Backup Job Started
            - No Backup for last n Days
            - Restore Job Failed
            - Restore Job Skipped
            - Restore Job Succeeded
            - Restore Job Activity
            - Restore Job Started
            - Restore Job completed with Errors
            - Disk space low on client
            - Failover started
            - Failover activity
            - Failover completed
            - Failover failed
            - Production Commserve is not reachable
            - Production Commserve is not running
            - Passive node is not reachable
            - May miss SLA
            - VM Backup succeeded
            - VM Backup failed
            - VM Backup succeeded with errors
            - Missed SLA
            - Replication Delayed by n Hrs
            - No Replication in last n Days
            - In Sync
            - Sync Pending
            - Sync Paused
            - Sync Failed
            - Failover Failed
            - Failover Complete
            - Failback Failed
            - Undo Failover Failed
            - Event Viewer Events
        paramsList:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/AlertDefinitionsCriteriaParams'
        notificationCriteria:
          $ref: '#/components/schemas/NotificationCriteriaOptions'
    AlertDefinitionsEditAlertCriteria:
      title: AlertDefinitionsEditAlertCriteria
      type: object
      properties:
        paramsList:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/AlertDefinitionsCriteriaParams'
        notificationCriteria:
          $ref: '#/components/schemas/NotificationCriteriaOptions'
    AlertTargetIdNameType:
      title: AlertTargetIdNameType
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        type:
          type: string
          enum:
            - USER
            - USER_GROUP
            - EMAIL
            - AD_USERGROUP
    AlertDefinitionsTarget:
      title: AlertDefinitionsTarget
      description: Please note CONTENT_INDEX will be returned at all times as it is enabled at all times.
      type: object
      properties:
        sendAlertTo:
          type: array
          items:
            type: string
            enum:
              - LIVEFEEDS
              - SNMP
              - WEBHOOK
              - EMAIL
              - APPLOG
              - CONTENT_INDEX
        recipientsOperationType:
          type: string
          description: 'Allows adding to, overwriting and deleting existing recipients. default is adding to existing recipients'
          enum:
            - ADD
            - DELETE
            - OVERWRITE
        recipients:
          $ref: '#/components/schemas/AlertDefinitionsTargetRecipients'
    AlertDefinitionsTargetRecipients:
      title: AlertDefinitionsTargetRecipients
      type: object
      properties:
        to:
          type: array
          items:
            $ref: '#/components/schemas/AlertTargetIdNameType'
        cc:
          type: array
          items:
            $ref: '#/components/schemas/AlertTargetIdNameType'
        bcc:
          type: array
          items:
            $ref: '#/components/schemas/AlertTargetIdNameType'
        webHookId:
          type: integer
          format: int32
          description: 'id of the webhook to be associated with the alert definition. Only needed incase of webhook notif selected. To get a list of webhooks, use api GET Webhook'
    WorkflowEntity:
      title: WorkflowEntity
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: id of the workflow which runs when the alert is triggered
        name:
          type: string
          description: name of the workflow which runs when the alert is triggered
        clientId:
          type: integer
          format: int32
          description: id of the client on which the workflow runs (zero value means it can run on any workflow engine)
        clientName:
          type: string
          description: name of the client on which the workflow runs (empty value means it can run on any workflow engine)
      required:
        - id
        - name
        - clientId
        - clientName
    AlertDefinitionsTemplate:
      title: AlertDefinitionsTemplate
      type: object
      properties:
        locale:
          $ref: '#/components/schemas/IdName'
        email:
          type: string
          description: the message template for the email notification. Contains both email subject as well as body
        console:
          type: string
          description: the message template for the console notification
        eventViewer:
          type: string
          description: the message template for the event viewer notification
        webhook:
          type: string
          description: the message template for the webhook notification
        workflow:
          $ref: '#/components/schemas/WorkflowEntity'
        workflowInputDetails:
          type: string
          description: the template for the workflow input entries values (empty value means the configured workflow does not need any inputs value)
    AlertDefinitionsAssociations:
      title: AlertDefinitionsAssociations
      type: array
      items:
        $ref: '#/components/schemas/AlertAssociationIdNameType'
    AlertDefinitionsCreateAlertType:
      title: AlertDefinitionsCreateAlertType
      type: object
      properties:
        category:
          type: string
          description: Defines the category of the alert
          enum:
            - DATA_AGING
            - AUX_COPY
            - DATA_PROT
            - DATA_RECOV
            - EXP_RECOV
            - DATA_VERIFI
            - MEDIA_INVENT
            - SCH_EXPORT
            - MEDIA_ERASE
            - CLIENTS
            - AGENTS
            - COMMCELL
            - MEDIA_AGENTS
            - SCHE
            - STOR_POL
            - LIBRARY
            - LIB_MAN
            - VAULT_TRAK
            - FTP_DOWNLOAD
            - CLIENT_DIST
            - DEVICE_STATUS
            - ERASE_DATA
            - APP_EXCHANGE
            - DOWNLOAD_AVAIL
            - APP_FLR
            - UPGR_UPDATES
            - DATA_CLASSIFI
            - FLR_JOB
            - OFFLINE_CONT_INDEX
            - APP_SHAREPOINT
            - SRM_WINFS
            - SRM_ORACLE
            - SRM_SQL
            - SRM_NAS
            - SRM_EXCHANGE
            - SRM_SHARE_POINT
            - SRM_UNIXFS
            - SRM_COST_ANALYSIS
            - SRM_NETWARE
            - SRM_ADVISORY
            - SRM
            - REPORT
            - INFO_MANAGEMENT
            - MEDIA_REFRESHING
            - DEDUPDBSYNC
            - SRM_REPORT
            - LOG_MONITORING
            - EVENT_MONITORING
            - CLIENT_GROUPS
            - LICENSE
            - BACKUP_COPY
            - WORKFLOW
            - LOG_MONITORING_WINDOW_EVENT
            - VIRTUALIZE_ME
            - CUSTOM_QUERY
            - DATA_ANALYTICS
            - UNINSTALL_SOFTWARE
            - UPGRADE_CLIENT
            - INSTALL_SOFTWARE
            - USERS
            - USER_GROUPS
            - EDGE_DRIVE
            - ADMIN_JOB
            - COMMSERV_FAILOVER
            - ADMIN_ALERT
            - REPLICATION_ALERT
        criteria:
          type: string
          description: Defines the criteria of the alert
          enum:
            - SUCCEEDED
            - FAILURE_ATTEMTS
            - FAILED
            - SKIPPED
            - DELAYED
            - MEDIA_REQUIRED
            - INITIATED
            - ROLLED_BACK
            - MEDIA_NEEDS_IMPORT
            - MEDIA_HANDLING_REQUIRED
            - MEDIA_PICKED_UP
            - MEDIA_REACHED_DESTINATION
            - MEDIA_RET_SOURCE
            - JOB_ACTIVITY
            - ASR_BACKUP_OCCURED
            - PROPERTIES_MODIFIED
            - ALERT_MODIFIED
            - DISK_SPACE_LOW
            - FORCED_DECONF
            - LIBRARY_OFFLINE
            - SCHEDULER_CHANGES
            - INSUFF_STORAGE
            - TAPE_HANDLING_ERR
            - TAPE_HANDLING_REQ
            - TAPE_MOUNT_ERR
            - MAINT_REQ
            - MAINT_OCCURED
            - USE_OVERWRITE_MEDIA
            - DRIVE_OFFLINE
            - MEDIAAGENT_OFFLINE
            - MOUNTPATH_OFFLINE
            - NW_FAILURE_ATTEMTS
            - JOURNAL_MAILBOX
            - JR_DISK_SPACE_LOW
            - IC_DISK_SPACE_LOW
            - UPDATE_REQUIRED
            - DOWNLOAD_REQUIRED
            - UPDATES_AVAILABLE
            - RELEASE_UPGRADE_REQUIRED
            - UPDATES_REQUIRED
            - MEDIA_READY_IN_CAP
            - FLR_LOG_FILE_HIGH
            - FLR_FREE_SPACE_LOG_FILE_VOL_LOW
            - FLR_NO_PLAY_ACTIVITY
            - FLR_NO_TRANSFER_ACTIVITY
            - NO_DATA_PROTECTION
            - CLASSIFICATION_FAILED
            - FLR_FAILED_REPLICATION
            - SHAREPOINT_VIRTUAL_SERVERS
            - SHAREPOINT_V3_UPGRADE
            - LIBR_MEDIA_RECALLED
            - BACKUP_SIZE_ANOMALY_INCR
            - BACKUP_SIZE_ANOMALY_DECR
            - JOB_STARTED
            - LOGIN_FAILED
            - AUXCOPY_FALLEN_BEHIND
            - SUCCESS_WITH_ERRORS
            - LICENSE_EXPIRY
            - CCP_MODIFIED
            - LICENSE_CONSUMED
            - LOG_MONITORING
            - EVENT_MONITORING
            - LIBR_NONENCRYPTED_MEDIA_EXPORT
            - CICOPY_FALLEN_BEHIND
            - CLIENT_JOB_NOT_RUN
            - CLIENT_CERTIFICATE_EXPIRY
            - JOB_EXCEEDED_RUNNINGTIME
            - FILES_FAILED_COUNT
            - FILES_FAILED_PERCENT
            - DDB_CORRUPTED
            - SUCCESSIVE_FAILED
            - DDB_DISK_SPACE_LOW
            - JOBS_PENDING_STATE
            - BACKUP_SIZE
            - GENERIC_QUERY
            - JOB_COMMITTED
            - JOB_RESULTS_DISK_SPACE_LOW
            - INDEX_CACHE_DISK_SPACE_LOW
            - GALAXY_DIR_DISK_SPACE_LOW
            - QUOTA_EXCEEDED
            - QUOTA_THREASHOLD
            - QUOTA_VALIDATION_FAILED
            - EDGE_DRIVE_ACTION
            - NT_DDB_OFFLINE
            - NT_OBJECT_COUNT_INCR_PERCENT
            - NT_FAILOVER_STARTED
            - NT_FAILOVER_ACTIVITY
            - NT_FAILOVER_COMPLETE
            - NT_FAILOVER_FAILED
            - NT_FAILOVER_CS_UNREACHABLE
            - NT_FAILOVER_CS_NOT_RUNNING
            - NT_FAILOVER_PASSIVE_NODE_UNREACHABLE
            - NT_ADMIN_ALERT_EVENT_ANOMALOUS
            - NT_ADMIN_ALERT_JOB_RUNTIME_ANOMALOUS
            - NT_ANOMALOUS_PENDING_JOBS
            - NT_ANOMALOUS_FAILED_JOBS
            - NT_ALL_CRITERIA
            - NT_FILE_SYSTEM_QUOTA_EXCEEDED
            - NT_FILE_SYSTEM_QUOTA_THRESHOLD
            - NT_FILE_SYSTEM_QUOTA_VALIDATION_FAILED
            - NT_ADMIN_ALERT_JOB_ACTIVITY_ANOMALOUS
            - NT_ANOMALOUS_SUCCEEDED_JOBS
            - NT_CLIENT_OFFLINE
            - NT_ADMIN_ALERT_DDB_PRUNING_ANOMALOUS
            - NT_ADMIN_ALERT_SMART_STATE_MA
            - NT_JOB_SUCCEEDED_WITH_WARNINGS
            - NT_ADMIN_ALERT_PREDICT_SLA_FALL
            - NT_ADMIN_ALERT_SALESFORCE_OBJECT_BACKUP_ANOMALOUS
            - NT_REPLICATION_JOB_NOT_RUN
            - NT_DELAYED_REPLICATION
            - NT_REPLICATION_STATUS_IN_SYNC
            - NT_REPLICATION_STATUS_SYNC_PENDING
            - NT_REPLICATION_STATUS_SYNC_PAUSED
            - NT_REPLICATION_STATUS_SYNC_FAILED
            - NT_FAILOVER_STATUS_FAILOVER_FAILED
            - NT_FAILOVER_STATUS_FAILOVER_COMPLETE
            - NT_FAILOVER_STATUS_FAILBACK_FAILED
            - NT_FAILOVER_STATUS_REVERT_FAILOVER_FAILED
        paramsList:
          type: array
          items:
            $ref: '#/components/schemas/AlertDefinitionsCriteriaParams'
        notificationCriteria:
          $ref: '#/components/schemas/NotificationCriteriaOptions'
    AlertDefinitionsCriteriaParams:
      title: AlertDefinitionsCriteriaParams
      type: object
      properties:
        unit:
          type: integer
          format: int32
          description: 'Unit of the criteria(For eg. :Hrs,min)'
        type:
          type: integer
          format: int32
          description: Input value type (default 0 = no input required)
        value:
          type: integer
          format: int32
          description: 'Value of the criteria (deefault 0 : if no value required)'
        paramIndex:
          type: integer
          format: int32
          description: Param order index
    NotificationCriteriaOptions:
      title: NotificationCriteriaOptions
      type: object
      properties:
        value:
          type: integer
          format: int32
          default: 1
          description: Bit flag indicating notification criteria value. 1 means immediate, 2 means repeated and 8 means delayed
        delayTime:
          type: integer
          format: int32
          description: Delayed time in seconds when the notification criteria value contains delayed flag
        persistTime:
          type: integer
          format: int32
          description: Persisting time in seconds when the notification criteria value contains repeated flag
    CommcellInfo:
      title: CommcellInfo
      type: object
      nullable: true
      properties:
        name:
          type: string
          description: Name of the commcell the entity belongs to.
    CommcellNameDisplayNameInfo:
      title: CommcellNameDisplayNameInfo
      type:   object
      nullable: true
      properties:
        name:
          type: string
          description: Name of the commcell the entity belongs to.
        displayName:
          type: string
          description: Display name of the commcell the entity belongs to.
    AssignLaptopOwnerMappingReq:
      title: AssignLaptopOwnerMappingReq
      type: object
      description: Model used for assign laptop owner mapping
      properties:
        laptopOwnerMapping:
          type: array
          description: Accepts list of laptop owner mapping ids to be applied
          items:
            type: integer
            format: int32
        applyAll:
          type: boolean
          default: true
          description: This indicates if applying assign laptop owners to all device user mappings within a company
    LaptopOwnerInfo:
      title: LaptopOwnerInfo
      type: object
      description: Model used for laptop owner mapping
      properties:
        id:
          type: integer
          format: int32
          description: Unique Id
        serialNumber:
          type: string
          description: This is the serial number
        laptopName:
          type: string
          description: name of the laptop
        host:
          type: string
          description: host name of the laptop
        ownerEmail:
          type: string
          description: Email address of the owner
        ownerUPN:
          type: string
          description: UPN of the owner
        osType:
          type: string
          enum:
            - MAC
            - WIN
          description: OS type of the laptop. Can be LINUX or MAC
        company:
          $ref: '#/components/schemas/IdName'
        configured:
          type: boolean
          description: This indicates if the laptop has been installed or not
        client:
          $ref: '#/components/schemas/IdName'
      required:
        - id
    LaptopOwnerMapping:
      title: LaptopOwnerMapping
      type: object
      description: List of laptop owner info
      properties:
        laptopOwnerMapping:
          type: array
          items:
            $ref: '#/components/schemas/LaptopOwnerInfo'
        error:
          $ref: '#/components/schemas/GenericResp'
    DeleteLaptopOwnerMapping:
      title: DeleteLaptopOwnerMapping
      type: object
      description: This model accepts the list of laptop owner mapping to be deleted
      properties:
        laptopOwnerMapping:
          type: array
          description: Accepts list of laptop owner mapping ids to be deleted
          items:
            type: integer
            format: int32
      required:
        - laptopOwnerMapping
    CreateLaptopOwnerMapping:
      title: CreateLaptopOwnerMapping
      type: object
      description: POST request for adding new laptop owner mapping, The mandotary fields are combination of multiple properties SerialNumber AND (host OR laptopName) AND (ownerEmail OR ownerUPN)
      properties:
        laptopOwnerMapping:
          type: array
          items:
            $ref: '#/components/schemas/CreateLaptopOwnerInfo'
    HFSShareStatusResp:
      title: HFSShareStatusResp
      type: object
      properties:
        statusMessage:
          type: string
          description: Status message telling information about HFS status
        statusCode:
          type: integer
          format: int32
      description: 'Some common status are 0 - All Okay, 2 - HFS File Server is not up, 11 - HFS not ready'
    CreateLaptopOwnerInfo:
      title: CreateLaptopOwnerInfo
      type: object
      description: This is the data model for creating a laptop owner info
      properties:
        serialNumber:
          type: string
          description: Serial number of the laptop
        laptopName:
          type: string
          description: Display name of the laptop
        host:
          type: string
          description: Host name of the laptop
        ownerEmail:
          type: string
          description: Email address of the owner
        ownerUPN:
          type: string
          description: UPN of the owner
        osType:
          type: string
          description: Operating system of the owner
        company:
          $ref: '#/components/schemas/IdName'
    GroupByAggregationValue:
      title: GroupByAggregationValue
      type: object
      description: This is the data model for return aggregation result for single group
      properties:
        funcValue:
          type: string
          description: value returned by aggregation function for global search entities for a particular group
        groupByVals:
          description: list of groupby attribute's Name and value pair.
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/NameValue'
    GetAllApplicableAgentResp:
      title: GetAllApplicableAgentResp
      type: object
      properties:
        agentDetails:
          type: array
          items:
            $ref: '#/components/schemas/AgentDetails'
      description: List of associated agents
    AgentDetails:
      type: object
      properties:
        appTypeId:
          type: integer
          format: int32
          description: Id of the associated agent
        appTypeName:
          type: string
          description: Name of the associated agent
    GlobalEntityAggregationValueResp:
      title: GlobalEntityAggregationValueResp
      type: object
      description: this is the data model for return aggregate API
      properties:
        aggregation:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/GroupByAggregationValue'
    SolutionFilter:
      type: string
      title: SolutionFilter
      description: This filter can be passed Solutions REST API to fetch applicable supported solutions
      enum:
        - ALL
        - PLAN_RULES
        - PLAN_SUPPORTED_SOLUTIONS
        - GCM_PLAN_RULES
        - GCM_PLAN_SUPPORTED_SOLUTIONS
    TagAssociatedEntitiesResponse:
      title: TagAssociatedEntitiesResponse
      type: object
      description: Response for returning associated entities for tags of default entity tag set.
      properties:
        tagSetInfo:
          $ref: '#/components/schemas/IdNameGUID'
        tags:
          type: array
          items:
            $ref: '#/components/schemas/TagAssociationInfo'
    TagAssociationInfo:
      title: TagAssociationInfo
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        count:
          type: integer
          format: int32
        globalConfigInfo:
          $ref: '#/components/schemas/GlobalConfigInfo'
        associatedEntities:
          type: array
          items:
            $ref: '#/components/schemas/IdNameType'
      description: Information of count and associatedEntities
    GetLaptopAdminsResp:
      title: GetLaptopAdminsResp
      type: object
      description: Response of get laptop admins
      properties:
        error:
          $ref: '#/components/schemas/GenericResp'
        laptopAdmins:
          type: array
          description: List of laptop admins (users or user groups).
          items:
            $ref: '#/components/schemas/IdNameType'
    UpdateLaptopAdminsReq:
      title: UpdateLaptopAdminsReq
      type: object
      description: Request of updating laptop admins
      properties:
        laptopAdmins:
          type: array
          description: List of laptop admins (users or user groups)
          items:
            $ref: '#/components/schemas/IdNameType'
        operationType:
          $ref: '#/components/schemas/UpdateOperationType'
    UpdateLaptopAdminsResp:
      title: UpdateLaptopAdminsResp
      type: object
      properties:
        error:
          $ref: '#/components/schemas/GenericResp'
    UpdateOperationType:
      type: string
      title: UpdateOperationType
      enum:
        - OVERWRITE
        - ADD
        - DELETE
        - CLEAR
    InventoryCreateRequest:
      title: InventoryCreateRequest
      type: object
      description: ''
      properties:
        name:
          type: string
          description: Name of the inventory
        indexServer:
          $ref: '#/components/schemas/IndexServerSummary'
        identityServers:
          type: array
          description: List of AD servers to be analyzed
          items:
            type: string
      required:
        - name
        - indexServer
    FileServerAsset:
      title: FileServerAsset
      type: object
      properties:
        name:
          type: string
          description: Display name of the file server
        hostName:
          type: string
          description: Fully qualified domain name of the server
          format: hostname
        ipAddress:
          type: string
          description: Ip Address of the server
          format: ipv4
        operatingSystem:
          type: string
          description: Operating system of the server
          enum:
            - Mac and Linux
            - NAS
            - Windows
        countryCode:
          type: string
          description: Country code to which the server belongs
      required:
        - name
        - hostName
        - ipAddress
        - operatingSystem
    IdentityServerAsset:
      title: IdentityServerAsset
      type: object
      properties:
        identityServers:
          type: array
          description: List of identity server names
          items:
            type: string
        startDataCollection:
          type: boolean
          default: false
          description: Flag to signify if data collection job needs to be invoked after addition of identity server
      required:
        - identityServers
    InventoryAssetCreateRequest:
      title: InventoryAssetCreateRequest
      allOf:
        - $ref: '#/components/schemas/IdentityServerAsset'
        - $ref: '#/components/schemas/FileServerAsset'
        - $ref: '#/components/schemas/ObjectStorageAsset'
        - type: object
          properties:
            assetType:
              $ref: '#/components/schemas/InventoryAssetType'
      x-internal: true
      description: ''
    InventoryDetails:
      title: InventoryDetails
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        displayName:
          type: string
          nullable: true
        indexServer:
          $ref: '#/components/schemas/IndexServerSummary'
        owner:
          type: string
          description: Inventory Owner
        createdOn:
          type: integer
          description: Inventory creation time in unix epoch format
          format: int32
    InventoryList:
      title: InventoryList
      type: object
      properties:
        inventories:
          type: array
          description: List of inventories
          items:
            $ref: '#/components/schemas/InventoryDetails'
    RPStoreListEntity:
      title: RPStoreListEntity
      type: object
      description: Recovery point store entity detail on the listing page.
      properties:
        library:
          $ref: '#/components/schemas/IdName'
        status:
          type: string
          enum:
            - READY
            - OFFLINE
            - DECONFIGURED
          example: READY
          description: Status of recovery point store library.
        model:
          type: string
          enum:
            - DISK
            - CLOUD
          example: DISK
          description: Model of recovery point store library.
    RPStoreListResponse:
      title: RPStoreListResponse
      type: object
      description: List of recovery point stores.
      properties:
        stores:
          type: array
          items:
            $ref: '#/components/schemas/RPStoreListEntity'
    InventoryAssetType:
      type: string
      title: InventoryAssetType
      enum:
        - NONE
        - IDENTITY_SERVER
        - FILE_SERVER
        - OBJECT_STORAGE
    InventoryAssetSummary:
      title: InventoryAssetSummary
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        type:
          $ref: '#/components/schemas/InventoryAssetType'
        status:
          $ref: '#/components/schemas/DcubeJobState'
        lastCollectionTime:
          type: integer
          format: int32
        createdAt:
          type: integer
          format: int32
    InventoryAssetList:
      title: InventoryAssetList
      type: object
      properties:
        assets:
          type: array
          items:
            $ref: '#/components/schemas/InventoryAssetSummary'
    InventoryAssetDetails:
      allOf:
        - $ref: '#/components/schemas/InventoryAssetSummary'
        - type: object
          properties:
            properties:
              type: array
              items:
                $ref: '#/components/schemas/NameValue'
    DcubeJobState:
      type: string
      title: DcubeJobState
      enum:
        - IDLE
        - STARTING
        - RUNNING
        - FINISHING
        - FINISHED
        - STOPPING
        - STOPPED
        - ABORTING
        - ABORTED
        - EXCEPTION
        - UNKNOWN
        - SYNCING
        - PENDING
        - COMPLETED_WITH_ERRORS
    ArrayUserPassword:
      title: ArrayUserPassword
      type: object
      description: Template for options provided to user
      properties:
        userName:
          type: string
          description: Username to access the array
        password:
          type: string
          description: Base 64 encoded Password to access the array
      required:
        - userName
    EditArrayInfo:
      title: EditArrayInfo
      description: Template for the editable generic information of an array. Region depicts the workload region which is only applicable to NetApp arrays as of now.
      type: object
      properties:
        controlHost:
          type: string
          description: Host name of the array
        credential:
          $ref: '#/components/schemas/ArrayUserPassword'
        savedCredential:
          $ref: '#/components/schemas/IdName'
        description:
          type: string
          description: Description about the Array
        region:
          $ref: '#/components/schemas/IdName'
        flags:
          type: integer
          format: int32
          description: Flags to be set for array
    ArrayAccessNodes:
      title: ArrayAccessNodes
      type: object
      description: Template for MAs that can access Arrays
      properties:
        id:
          type: integer
          format: int32
          description: Id of the MediaAgent
        name:
          type: string
          description: Name of the MediaAgent
        displayName:
          type: string
          description: The display name of the corresponding Media Agent
        pruning:
          type: boolean
          description: Enable/Disable pruning of snapshots on the selected Media Agent
    ArrayLabel:
      title: ArrayLabel
      type: object
      description: Labels for array entities to be displayed on the CC page
      properties:
        name:
          type: string
          description: Label for array name
        controlHost:
          type: string
          description: Label for array control host
        userName:
          type: string
          description: Label for array username
        password:
          type: string
          description: Label for array password
    VendorDetails:
      title: VendorDetails
      type: object
      description: Details of the vendor being selected
      properties:
        snapVendor:
          type: string
        name:
          type: string
          description: Name of the array
        controlHost:
          type: string
          description: Host Name of the array
        description:
          type: string
          description: Description of the array
        credential:
          $ref: '#/components/schemas/ArrayUserPassword'
        savedCredential:
          $ref: '#/components/schemas/IdName'
      required:
        - snapVendor
        - name
    ArrayConfigsGet:
      title: ArrayConfigsGet
      description: Array config template for getArrayDetails
      type: object
      properties:
        masterConfigId:
          type: integer
          format: int32
          description: 'This is the masterConfigId, which is available for each vendors configs'
        name:
          type: string
          description: This is the name of the config which is displayed on the Command Center Console
        type:
          type: integer
          format: int32
          description: 'Type of the config value. type can accept 7 values [1,2,8,10,12,13,14], 1: boolean, 2: integer, 8: text, 10: array[string] are common configs, the rest three are special keys, 12 is for password type key for NetApp E-Series and HPE Nimble, 13 is Private Key for GCP, 14 is a config to select type of Disk for GCP'
          enum:
            - 1
            - 2
            - 8
            - 10
            - 12
            - 13
            - 14
        value:
          type: string
          description: Values to be set for all types except 10 and 14
        values:
          type: array
          description: Values to be set for type 10 and 14. Incase of HPE 3PAR StoreServ, name field will have the remote snap MA Id.
          items:
            $ref: '#/components/schemas/IdName'
        flags:
          type: integer
          format: int32
          description: Flag regarding placement of config in the CC page
        description:
          type: string
          description: Description about the config that tells the user what it is for and the range of values it accepts
        isEnabled:
          type: boolean
          description: Whether the config is enabled or not
        checkRange:
          type: boolean
          description: Whether to check if the value is in range or not of accepted values
        minValue:
          type: integer
          format: int64
          description: This is the lower limit value to which the config can be set for numeric types
        maxValue:
          type: integer
          format: int64
          description: This is the higher limit value to which the config can be set for numeric types
    ArrayConfigsBasic:
      title: ArrayConfigsBasic
      type: object
      description: Generic template for arrayConfigs
      properties:
        masterConfigId:
          type: integer
          format: int32
          description: 'This is the masterConfigId, which is available for each vendor''s configs'
        name:
          type: string
          description: This is the name of the config which is displayed on the Command Center Console
        type:
          type: integer
          format: int32
          description: 'Type of the config value. type can accept 7 values [1,2,8,10,12,13,14], 1: boolean, 2: integer, 8: text, 10: array[string] are common configs, the rest three are special keys, 12 is for password type key for NetApp E-Series and HPE Nimble, 13 is Private Key for GCP, 14 is a config to select type of Disk for GCP'
          enum:
            - 1
            - 2
            - 8
            - 10
            - 12
            - 13
            - 14
        value:
          type: string
          description: Takes a single value for all types except 10 and for type 14 it holds the id of the selected value from values
        values:
          type: array
          description: Values to be entered. for type 10 and 14. For HPE 3PAR StoreServ, pass MA Id in name field to configure that MA as remote snap MA.
          items:
            $ref: '#/components/schemas/IdName'
      required:
        - masterConfigId
        - name
        - type
    ArrayConfigsEdit:
      title: ArrayConfigsEdit
      description: Array config template for editArrayDetails
      type: object
      properties:
        masterConfigId:
          type: integer
          format: int32
          description: 'This is the masterConfigId, which is available for each vendor''s configs'
        name:
          type: string
          description: This is the name of the config which is displayed on the Command Center Console
        type:
          type: integer
          format: int32
          description: 'Type of the config value. type can accept 7 values [1,2,8,10,12,13,14], 1: boolean, 2: integer, 8: text, 10: array[string] are common configs, the rest three are special keys, 12 is for password type key for NetApp E-Series and HPE Nimble, 13 is Private Key for GCP, 14 is a hidden config to select type of Disk for GCP'
          enum:
            - 1
            - 2
            - 8
            - 10
            - 12
            - 13
            - 14
        value:
          type: string
          description: Takes a single value for all types and for type 14 it holds the id of the selected value from values
        values:
          description: 'For type 10 and 14, it can take one or more value of idname type where id by default is 0 for 10. For HPE 3PAR StoreServ, pass MA Id in name field to configure that MA as remote snap MA.'
          type: array
          items:
            $ref: '#/components/schemas/IdName'
        flags:
          type: integer
          format: int32
          description: Flag regarding placement of config in the CC page
        isUpdated:
          type: boolean
          description: Whether the config is updated/edited or not
      required:
        - masterConfigId
        - name
        - type
        - flags
        - isUpdated
    ArrayGenDetails:
      title: ArrayGenDetails
      description: Generic Details of the Engine Array. Region depicts the workload region which is only applicable to NetApp arrays as of now.
      type: object
      properties:
        snapVendor:
          $ref: '#/components/schemas/IdName'
        array:
          $ref: '#/components/schemas/IdName'
        controlHost:
          type: string
          description: Control Host name of the array
        credential:
          $ref: '#/components/schemas/ArrayUserPassword'
        savedCredential:
          $ref: '#/components/schemas/IdName'
        region:
          $ref: '#/components/schemas/IdName'
        flags:
          type: integer
          format: int32
          description: '0: default 1: Only selected arrays 2: Disable automatic cleanup 4: System created arrays 8: Auto created arrays 16: User created arrays'
          enum:
            - 0
            - 1
            - 2
            - 4
            - 8
            - 16
          default: 0
        enableNetAppCloudAccount:
          type: boolean
          description: Set as true for NetApp cloud target arrays
        arrayType:
          type: integer
          format: int32
          description: 'Used to differentiate between Primary, Secondary, and OCUM type of NetApp Array'
        cloudVendorId:
          type: integer
          format: int32
          description: Id for cloud vendors associated to arrays
        uniqueIdentifier:
          type: string
          description: Unique identifier pertaining to each array
        description:
          type: string
          description: User provided description of the array
        company:
          $ref: '#/components/schemas/IdName'
    ListSnapshots:
      title: ListSnapshots
      type: object
      description: Response for Listing Snapshots
      properties:
        smVolumeId:
          type: integer
          format: int32
          description: The Volume Id of the snapshots
        arrayName:
          type: string
          description: Name of the array
        arrayId:
          type: integer
          description: Id of the array
          format: int32
        sourceClientId:
          type: integer
          format: int32
          description: Id of the Source Client
        sourceClientName:
          type: string
          description: Source client for the engine
        sourcePath:
          type: string
          description: Source path of the engine where disk is stored
        mountHostId:
          type: integer
          description: Id of the MA where the mount is hosted
          format: int32
        mountHostName:
          type: string
          description: Host on which the snapshot is mounted on
        mountPath:
          type: string
          description: Path to the mounted snapshot
        appTypeId:
          type: integer
          format: int32
          description: Id of the application type engine used
        appTypeName:
          type: string
          description: Name of the application type which the Engine used
          example: Windows File System
        masterJobId:
          type: integer
          format: int32
          description: Job Id of the master job
        jobId:
          type: integer
          format: int32
        creationTime:
          type: integer
          format: int32
          description: Time of Creation
        mountStatusId:
          type: integer
          format: int32
          description: Id for the mount status
        mountStatusName:
          type: string
          description: Whether the snapshot was taken sucessfully or not
        mountStatusUpdateTime:
          type: integer
          description: Last Status Update
          format: int32
        snapshotType:
          type: integer
          format: int32
          description: The type of the snapshot
        capabilities:
          type: integer
          format: int32
          description: The capability flags set for the snapshot
    CreateArray:
      title: CreateArray
      type: object
      description: Request body for creating Array
      properties:
        general:
          $ref: '#/components/schemas/VendorDetails'
        accessNodes:
          type: array
          description: MAs that can access the array
          items:
            $ref: '#/components/schemas/ArrayAccessNodes'
        snapConfigurations:
          description: Configurations related to a snap engine
          type: array
          items:
            $ref: '#/components/schemas/ArrayConfigsBasic'
    VendorCapabilities:
      title: VendorCapabilities
      type: object
      properties:
        enableUserName:
          type: boolean
          description: Set to true if username is enabled for the vendor
        enableArrayDeviceGroup:
          type: boolean
          description: Set to true if the array belongs to a device group
        enableHostDeviceGroup:
          type: boolean
          description: Set to true if the host belongs to a device group
        enableArrayType:
          type: boolean
          description: Set to true if array type is enabled for the NetApp and AWS to establish subtypes of vendors
        enablePassword:
          type: boolean
          description: Set to true if password is enabled for the vendor
        enableControlHost:
          type: boolean
          description: Set to true if control host is enabled for the vendor
        enableArrayNameChange:
          type: boolean
          description: Set to true if name of the array can be changed
        enableNetAppCloudAccount:
          type: boolean
          description: Set to true if NetApp Cloud Account is enabled for the vendor
    ISServerGroup:
      title: ISServerGroup
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: Id of server group
        name:
          type: string
          description: Name of server group
        mediaAgentCount:
          type: integer
          format: int32
          description: Count of servers where MediaAgent package is installed
    ArrayDetails:
      title: ArrayDetails
      description: Details of Engine Array
      type: object
      properties:
        labels:
          $ref: '#/components/schemas/ArrayLabel'
        general:
          $ref: '#/components/schemas/ArrayGenDetails'
        security:
          $ref: '#/components/schemas/SecurityAssoc'
        accessNodes:
          type: array
          items:
            $ref: '#/components/schemas/ArrayAccessNodes'
        availableAccessNodes:
          type: array
          items:
            $ref: '#/components/schemas/IdNameDisplayName'
        snapConfigurations:
          type: array
          items:
            $ref: '#/components/schemas/ArrayConfigsGet'
        capabilities:
          $ref: '#/components/schemas/VendorCapabilities'
        serverGroups:
          type: array
          items:
            $ref: '#/components/schemas/ISServerGroup'
    EditArray:
      title: EditArray
      description: Request to pass for Edit Array
      type: object
      properties:
        general:
          $ref: '#/components/schemas/EditArrayInfo'
        accessNodes:
          type: array
          items:
            $ref: '#/components/schemas/ArrayAccessNodes'
        snapConfigurations:
          type: array
          description: Configurations related to a snap engine
          items:
            $ref: '#/components/schemas/ArrayConfigsEdit'
        security:
          $ref: '#/components/schemas/UpdateSecurityAssoc'
    ArrayLevel:
      title: ArrayLevel
      type: object
      description: Array detail template
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        userName:
          type: string
          description: User name for array
        vendor:
          type: string
          description: Vendor Name
        flags:
          type: integer
          format: int32
          description: '0: default 1: Only selected arrays 2: Disable automatic cleanup 4: System created arrays 8: Auto created arrays 16: User created arrays'
          enum:
            - 0
            - 1
            - 2
            - 4
            - 8
            - 16
          default: 0
        description:
          type: string
          description: description about the Storage Array
        controlHost:
          type: string
          description: Control host of the storage array
        assocFlag:
          type: boolean
          description: Flag to check if the array is associated to the given client or subclient
        VSVendor:
          $ref: '#/components/schemas/VSVendor'
        company:
          $ref: '#/components/schemas/IdName'
    GetArraysResp:
      title: GetArraysResp
      type: object
      description: Get list of all arrays
      properties:
        arrays:
          type: array
          description: List of arrays
          items:
            $ref: '#/components/schemas/ArrayLevel'
    VendorResp:
      title: VendorResp
      type: object
      properties:
        snapVendor:
          $ref: '#/components/schemas/IdName'
        capabilities:
          $ref: '#/components/schemas/VendorCapabilities'
        cloudVendorId:
          type: integer
          format: int32
        label:
          $ref: '#/components/schemas/ArrayLabel'
    SnapVendors:
      title: SnapVendors
      type: object
      description: Get list of all snap vendors
      properties:
        snapVendors:
          type: array
          description: List of all snap vendors
          items:
            $ref: '#/components/schemas/VendorResp'
    GetSnapConfig:
      title: GetSnapConfig
      type: object
      description: Get snap configs for vendors
      properties:
        vendor:
          type: string
          description: vendor Name
        configList:
          type: array
          description: snap configs of snap vendor with default values
          items:
            $ref: '#/components/schemas/ArrayConfigsGet'
    SoftwareCacheDetail:
      title: SoftwareCacheDetail
      type: object
      description: Details of software cache server.
      properties:
        cache:
          $ref: '#/components/schemas/IdName'
        cacheDirectory:
          type: string
          description: The software cache directory path where the media will be located
        enabled:
          type: boolean
          description: Whether the software cache is enabled or not
        configurable:
          type: boolean
          description: Whether the software cache is configurable
        status:
          $ref: '#/components/schemas/SyncStatusTypes'
          description: The status of the software cache for server. Either In Sync or Out of Sync with CommServe cache
        associations:
          type: array
          description: List of servers and server groups.
          items:
            $ref: '#/components/schemas/ServerOrServerGroupAssociation'
        cacheContents:
          type: array
          description: List of cache content details of software cache.
          items:
            $ref: '#/components/schemas/SoftwareCacheContent'
    SoftwareCacheContent:
      title: SoftwareCacheContent
      type: object
      description: Software cache content details.
      properties:
        osName:
          type: string
          description: OS Name of the media available in software cache
        version:
          type: string
          description: Version of the media available in software cache
        additionalUpdates:
          type: string
          description: List of additional updates available in software cache
        packagesInCache:
          type: string
          description: List of packages available in the software cache
    SoftwareCacheDetailListResp:
      type: object
      properties:
        softwareCacheDetailList:
          type: array
          items:
            $ref: '#/components/schemas/SoftwareCacheDetail'
    ModifySoftwareCacheAssociations:
      allOf:
        - $ref: '#/components/schemas/ServerOrServerGroupAssociation'
        - type: object
          properties:
            opType:
              $ref: '#/components/schemas/BasicListOpType'
          required:
            - opType
    ServerOrServerGroupAssociation:
      title: ServerOrServerGroupAssociation
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: Id of server or server group
        name:
          type: string
          description: Name of server or server group
        type:
          $ref: '#/components/schemas/ServerOrServerGroupTypes'
    ServerOrServerGroupTypes:
      type: string
      title: ServerOrServerGroupTypes
      enum:
        - SERVER
        - SERVER_GROUP
    SyncStatusTypes:
      type: string
      title: SyncStatusTypes
      enum:
        - OUT_OF_SYNC
        - IN_SYNC
    ModifySoftwareCacheDetails:
      title: ModifySoftwareCacheDetails
      type: object
      description: Request to update software cache properties like associations, cache directory or enabled for a specific server.
      properties:
        cacheDirectory:
          type: string
          description: The software cache directory path where the media will be located
        enabled:
          type: boolean
          description: Whether the software cache is enabled or not
        associations:
          type: array
          items:
            $ref: '#/components/schemas/ModifySoftwareCacheAssociations'
    JobDetailForStorage:
      title: JobDetailForStorage
      type: object
      description: Details of a Job on storage.
      properties:
        jobId:
          type: integer
          format: int32
          description: The system-generated Id assigned to the job
        status:
          type: string
          description: The status of the job
        server:
          $ref: '#/components/schemas/IdName'
        agentType:
          $ref: '#/components/schemas/IdName'
        subClient:
          $ref: '#/components/schemas/IdName'
        jobType:
          type: string
          description: Backup level of the Job
        startTime:
          type: integer
          format: int64
          description: The date and time the job started
        sizeOfApplication:
          type: integer
          format: int64
          description: The amount of application data that was protected during the job
        retainUntil:
          type: integer
          format: int64
          description: The date and time until job should be retained
        instance:
          $ref: '#/components/schemas/IdName'
        backupSet:
          $ref: '#/components/schemas/IdName'
        region:
          $ref: '#/components/schemas/IdName'
        retentionReason:
          type: string
          description: Reason for retaining the job
        username:
          type: string
          description: User who initiated the job
        description:
          type: string
          description: Job description
        savingPercentage:
          type: number
          format: float
          description: 'The percentage of space saved due to deduplication and compression, if employed'
        dataWritten:
          type: integer
          format: int64
          description: Size of the data stored on the media.
        avgThroughput:
          type: number
          format: float
          description: Average throughput of the job
        endTime:
          type: integer
          format: int64
          description: The date and time the job ended
        duration:
          type: integer
          format: int64
          description: The time duration for which the job ran
        dataVerificationStatus:
          type: integer
          format: int32
          description: 'Specify if Job data is verified by periodic DV jobs. Possible values [0 = unchecked, 1 = expired, 2 = do not check, 3 = to be checked, 4 = partial checked, 5 = successful, 6 = failed]'
        hardwareEncrypted:
          type: boolean
          description: Set to true if Job is hardware encrypted
        lastVerifiedOn:
          type: string
          description: Last DataVerification time
        copiedTime:
          type: integer
          format: int64
          description: Auxcopied time
        encrypted:
          type: boolean
          description: Set to true if Job is encrypted
        parentJobId:
          type: integer
          format: int64
          description: Parent JobId in a linked job
        retainedBy:
          type: integer
          format: int32
          description: Reason for retention
        deduplicated:
          type: boolean
          description: Set to true if Job is deduplicated.
        requiredByJobs:
          type: string
          description: Comma separated list of linked Jobs
        strRetainedBy:
          type: string
          description: String defining reason for retention
          enum:
            - No Data Available
            - User
            - Extended Retention
            - Basic Retention
        strDataVerificationStatus:
          type: string
          description: 'Specify if Job data is verified by periodic DV jobs. Possible values [unchecked, expired, do not check, to be checked, partial checked, successful, failed]'
          enum:
            - Not Picked
            - Expired
            - Picked
            - Partial
            - Successful
            - Failed
            - Invalid data received.
        isAged:
          type: boolean
          description: Set to true if Job is marked as aged.
        statusId:
          type: integer
          format: int32
          description: The status id of the job
        jobAttributesEx:
          type: integer
          format: int64
          description: The jobAttributesEx field is an internal attribute used to construct Admin Console URLs. It contains additional attributes and information specific to each job.
        isSoftAged:
          type: boolean
          description: Indicates if job is soft aged or not.
        retentionCode:
          type: string
          description: Indicates the retained reason string.
        estMediaSize:
          type: integer
          format: int64
          description: The estimated space occupied by the backed up data on the media.
        snapCatalogStatus:
          type: string
          description: The status for snap catalog jobs.
          enum:
            - Not Applicable
            - Partial
            - Picked
            - Success
            - Not picked
    CompareXMLReq:
      title: CompareXmlRequestObjects
      type: object
      description: This is the data model to compare two objects
      properties:
        OldXML:
          type: string
          description: first xml object in string format
        NewXML:
          type: string
          description: second xml object in string format
    CompareXMLResp:
      title: CompareXmlResponse
      type: object
      description: This is the result of two objects comparision
      properties:
        result:
          type: string
          description: difference details in json format
    GetJobsOnStorageResp:
      title: GetJobsOnStorageResp
      type: object
      description: Job List for storage entity.
      properties:
        jobs:
          type: array
          items:
            $ref: '#/components/schemas/JobDetailForStorage'
    ClientListForStorageResp:
      title: ClientListForStorageResp
      type: object
      description: Client List for storage entity.
      properties:
        clients:
          type: array
          description: List of Client Id and Name.
          items:
            $ref: '#/components/schemas/IdName'
    SnapReconResp:
      title: SnapReconResp
      type: object
      description: Snap reconcile operation response
      properties:
        jobId:
          type: integer
          format: int32
          description: Resulting job Id
        errorCode:
          type: integer
          description: error code
          format: int32
        errorMessage:
          type: string
          description: error message
          nullable: true
    DatasourceJobSummary:
      title: DatasourceJobSummary
      type: object
      properties:
        startTime:
          type: integer
          format: int32
          minimum: 0
        endTime:
          type: integer
          format: int32
          minimum: 0
        status:
          $ref: '#/components/schemas/DcubeJobState'
        totalCount:
          type: integer
          format: int64
          minimum: 0
        numAdded:
          type: integer
          format: int64
          minimum: 0
        numFailed:
          type: integer
          format: int64
          minimum: 0
    DatasourceJobHistory:
      title: DatasourceJobHistory
      type: object
      properties:
        jobs:
          type: array
          items:
            $ref: '#/components/schemas/DatasourceJobSummary'
    DestinationMount:
      title: DestinationMount
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: Id of the MA where the Snap is mounted
        path:
          type: string
          description: Path where the snap is mounted
      description: Model for destination clients id and path during Snap operations
    VolumeSnap:
      title: VolumeSnap
      type: object
      description: An object containing smVolumeId of Snaps and the flags set
      properties:
        smVolumeId:
          type: integer
          format: int32
          description: smVolumeId of the snaps you want to mount/unmount/delete
        flags:
          type: integer
          format: int32
          description: Volume flags to be set for snap Operations.
          default: 0
    MountReq:
      title: MountReq
      type: object
      description: Request template for Mounting Snapshots. scsiServer refers to the iSCSI server which the user can choose while mounting.
      properties:
        destinationClient:
          $ref: '#/components/schemas/DestinationMount'
        protectSnap:
          type: integer
          enum:
            - 0
            - 1
          format: int32
          description: Enable or disable VSS protection on Snaps while mounting
        volumes:
          type: array
          description: Volumes of the snap you want to mount
          items:
            $ref: '#/components/schemas/VolumeSnap'
        scsiServer:
          $ref: '#/components/schemas/IdName'
        appId:
          nullable: true
          items:
            $ref: '#/components/schemas/VSAApplicationDetails'
        userName:
          nullable: true
          type: string
        server:
          nullable: true
          items:
            $ref: '#/components/schemas/VSAServerDetails'
    UnmountSnapReq:
      title: UnmountSnapReq
      type: object
      description: Request template for unmount request of snapshots
      properties:
        volumes:
          type: array
          description: Volumes of the snap you want to unmount
          items:
            $ref: '#/components/schemas/VolumeSnap'
    DeleteSnapReq:
      title: DeleteSnapReq
      type: object
      description: Request template of delete snapshots
      properties:
        volumes:
          type: array
          description: Volumes of the snaps you want to delete
          items:
            $ref: '#/components/schemas/VolumeSnap'
    ContinuousPairFailoverRequest:
      title: ContinuousPairFailoverRequest
      description: The payload of the replication monitor continuous pair failover request
      type: object
      properties:
        failoverType:
          type: string
          description: Type of failover to be performed
          enum:
            - TEST_FAILOVER
            - CLONE_DR_VM
            - PLANNED_FAILOVER
            - UNPLANNED_FAILOVER
        recoverFrom:
          type: string
          description: Recovery point type
          enum:
            - OLDEST_POINT
            - LATEST_RECOVERY
            - GRAPH_SELECTION
            - RECOVERY_POINT
        recoveryPointTime:
          type: string
          description: Applicable if recoverFrom is GRAPH_SELECTION or RECOVERY_POINT. Format- MM/DD/YYY HH:MM:SS AM/PM
        hostname:
          type: string
          description: Override boot options - Destination host name
        vmNetworkName:
          type: string
          description: Override boot options - Destination network
        failoverVmName:
          type: string
          description: New Failover VM Name - Applicable only for Test Failover and Clone DR VM
        vmExpirationTime:
          type: integer
          format: int64
          description: Expiration time in seconds for new test failover VM - Applicable only for Test Failover
      required:
        - failoverType
        - recoverFrom
    ContinuousPairFailoverResponse:
      title: ContinuousPairFailoverResponse
      description: The response of the continuous replication pair failover request
      type: object
      x-examples:
        example-1:
          jobId: 12345
      properties:
        jobId:
          $ref: '#/components/schemas/JobId'
    PeriodicMonitorDeleteRequest:
      title: PeriodicMonitorDeleteRequest
      description: The payload of the periodic monitor delete operation
      type: object
      x-examples:
        Delete2Pairs:
          pairIds:
            - 1
            - 2
          deleteDRVMs: false
      properties:
        pairIds:
          type: array
          format: int32
          description: The id's of the pair that have to be deleted.
          minItems: 1
          uniqueItems: true
          items:
            type: integer
            minimum: 1
            format: int32
        deleteDRVMs:
          type: boolean
          default: false
          description: Provide this option to delete the DR VM's too.
      required:
        - pairIds
    PeriodicMonitorDeleteResponse:
      title: PeriodicMonitorDeleteResponse
      description: The response of the delete periodic replication pair request
      type: object
      x-examples:
        example-1:
          jobId: 12345
      properties:
        jobId:
          type: integer
          format: int32
          description: The job id of the delete pair request
    SnapRevertReq:
      title: SnapRevertReq
      type: object
      properties:
        volumes:
          type: array
          items:
            $ref: '#/components/schemas/VolumeSnap'
      description: Request template for revert snapshots
    RestrictConsoleTypes:
      type: object
      properties:
        consoleType:
          type: array
          items:
            $ref: '#/components/schemas/ConsoleTypes'
    ConsoleTypes:
      type: string
      title: ConsoleTypes
      enum:
        - COMMANDCENTER
        - WEBCONSOLE
        - COMMCELLCONSOLE
        - API
        - MOBILE
    RestrictedConsoleTypes:
      title: RestrictedConsoleTypes
      type: object
      description: 'This property is listing restricted consoles. If the restricted console is inherited from parent, parent name and id will be listed along with restricted console.'
      properties:
        consoleType:
          type: string
          description: This is console type
          enum:
            - COMMANDCENTER
            - WEBCONSOLE
            - COMMCELLCONSOLE
            - API
            - MOBILE
        parent:
          x-terraform-include: false
          $ref: '#/components/schemas/IdNameType'
    CRDCloudAccount:
      title: CRDCloudAccount
      type: object
      description: Cloud account eligible for Cloud Resource Discovery
      properties:
        client:
          $ref: '#/components/schemas/IdName'
        subscriptionId:
          type: string
          description: Subscription Id of the cloud account
    GetCRDCloudAccountsResponse:
      title: GetCRDCloudAccountsResponse
      type: object
      description: Contains the list of cloud accounts eligible for Cloud Resource Discovery
      properties:
        cloudAccounts:
          type: array
          description: Array of cloud accounts eligible for Cloud Resource Discovery
          items:
            $ref: '#/components/schemas/CRDCloudAccount'
        error:
          $ref: '#/components/schemas/GenericResp'
    TagValueResponse:
      title: TagValueResponse
      type: object
      description: Returns list of tag values associated to tag names
      properties:
        tagId:
          type: integer
          format: int32
        tagValues:
          type: array
          description: Array of tag values
          items:
            $ref: '#/components/schemas/IdName'
        globalConfigInfo:
          $ref: '#/components/schemas/GlobalConfigInfo'
    UpdateTagValueRequest:
      title: UpdateTagValueRequest
      type: object
      description: Request body to update tag values
      properties:
        oldValue:
          type: string
        newValue:
          type: string
    SnapConfigsOverride:
      title: SnapConfigsOverride
      description: Array config template for getting options of Snap Configs on different levels
      type: object
      properties:
        masterConfigId:
          type: integer
          format: int32
          description: 'This is the masterConfigId, which is available for each vendors configs'
        id:
          type: integer
          format: int32
          description: This is the id of the config which is required during config override
        name:
          type: string
          description: This is the name of the config which is displayed on the Command Center Console
        type:
          type: integer
          format: int32
          description: 'Type of the config value. type can accept 7 values [1,2,8,10,12,13,14], 1: boolean, 2: integer, 8: text, 10: array[string] are common configs, the rest three are special keys, 12 is for password type key for NetApp E-Series and HPE Nimble, 13 is Private Key for GCP, 14 is a hidden config to select type of Disk for GCP'
          enum:
            - 1
            - 2
            - 8
            - 10
            - 12
            - 13
            - 14
        value:
          type: string
          description: Value of the config
        values:
          type: array
          description: 'Holds a single value for types except 10, for 10 it holds one or more values. Incase of HPE 3PAR StoreServ, name field will have the remote snap MA Id.'
          items:
            $ref: '#/components/schemas/IdName'
        flags:
          type: integer
          format: int32
          description: Flag regarding placement of config in the CC page
        description:
          type: string
          description: Description about the config that tells the user what it is for and the range of values it accepts
        isEnabled:
          type: boolean
          description: Whether the config is enabled or not
        isOverridden:
          type: boolean
          description: Whether the config is Overridden or not
        checkRange:
          type: boolean
          description: Whether to check if the value is in range or not of accepted values
        minValue:
          type: integer
          format: int64
          description: This is the lower limit value to which the config can be set for numeric types
        maxValue:
          type: integer
          format: int64
          description: This is the higher limit value to which the config can be set for numeric types
    SnapConfigOverrideResp:
      title: SnapConfigOverrideResp
      type: object
      description: Response template for Snap Config
      properties:
        assocType:
          type: integer
          description: 'Association type, at subclient level it is 9, at client level it is 8, at copy level it is 6 and by default at array level it is 3'
          format: int64
        clientId:
          type: integer
          description: Client Id
          format: int64
        subclientId:
          type: integer
          description: Subclient id
          format: int64
        copyId:
          type: integer
          description: snap copy id
          format: int64
        snapConfigurations:
          type: array
          description: Snap Config options that can be overridden
          items:
            $ref: '#/components/schemas/SnapConfigsOverride'
    IntelliSnapClientsList:
      title: IntelliSnapClientsList
      type: object
      description: Response template to get IntelliSnap enabled Clients
      properties:
        snapClients:
          type: array
          items:
            $ref: '#/components/schemas/IntelliSnapClients'
    IntelliSnapClients:
      title: IntelliSnapClients
      type: object
      description: Response template to get IntelliSnap enabled Clients
      properties:
        enableIntelliSnap:
          type: boolean
          description: Whether IntelliSnap is enabled or not for the client
          default: true
        client:
          $ref: '#/components/schemas/IdName'
    IntelliSnapSubclients:
      title: IntelliSnapSubclients
      type: object
      description: Response Template to get IntelliSnap enabled Subclients
      properties:
        enableIntelliSnap:
          type: boolean
          description: Whether IntelliSnap is enabled or not
          default: true
        client:
          $ref: '#/components/schemas/IdName'
        backupset:
          $ref: '#/components/schemas/IdName'
        subclient:
          $ref: '#/components/schemas/IdName'
    ArchFileType:
      type: string
      title: ArchFileType
      enum:
        - DATA
        - INDEX
        - ARCHIVE_FILE
        - LOG
        - JOB_METADATA
        - NA
      description: 'Job Archive File type'
    MountPathJobInfo:
      title: MountPathJobInfo
      type: object
      description: Mountpath job information
      properties:
        jobId:
          type: integer
          format: int64
          description: The system-generated ID assigned to the job.
        jobStatus:
          $ref: '#/components/schemas/JobStatus'
        clientName:
          type: string
          description: The name of the client associated with the job.
        appName:
          type: string
          description: The name of application
        instanceName:
          type: string
          description: The name of the instance associated with the job.
        backupSetName:
          type: string
          description: The name of the backup set associated with the job.
        subclientName:
          type: string
          description: The name of the subclient associated with the job.
        backupLevel:
          type: string
          description: The level of the backup job
        cyclesNSeq:
          type: string
          description: Cycles and Sequences
        archFileType:
          $ref: '#/components/schemas/ArchFileType'
        dataStatus:
          type: string
          description: Status of the data of job
        backupTime:
          type: integer
          description: The time when backup is done
          format: int64
        retainTill:
          type: integer
          description: Retention DateTime for job
          format: int64
        mediaSideName:
          type: string
          description: Media Side Name
        archFileName:
          type: string
          description: Archive File Name
        storagePolicyNCopy:
          type: string
          description: Storage Policy and Copy Name
        dataWritten:
          type: integer
          description: Amount of data written on mountpath during job
          format: int64
        sizeOfBackup:
          type: integer
          description: The amount of application data that was protected during the job
          format: int64
        sizeOfApplication:
          type: integer
          description: The amount of application data that was protected during the job.
          format: int64
        isAged:
          type: boolean
          description: Indicates if job is aged or not.
        isValidData:
          type: boolean
          description: Indicates if job has valid Data
    GetMountPathContentResp:
      title: GetMountPathContentResp
      type: object
      properties:
        mountpathName:
          type: string
          description: Name of mountpath
        totalSizeOnMedia:
          type: integer
          description: 'Total size of the data stored on the mountpath. This is the size of the data after deduplication and compression, if employed. This amount also includes metadata information, so in some cases, it could be larger than the actual size of the backed up data.'
          format: int64
        totalDataWritten:
          type: integer
          description: Total amount of data written on mountpath
          format: int64
        isRequiredByAuxiliaryCopy:
          type: boolean
          description: This indicates if any of the jobs on this mountpath is required for auxiliary copy.
        retainDataUntil:
          type: integer
          description: Maximum DateTime upto which the jobs on this mountpath is retained
          format: int64
        isSingleInstanced:
          description: Indicates if mountpath has any DDB references
          type: boolean
        hasSubclientLogCacheDump:
          type: boolean
          description: Indicates if mountpath has any subclient lLog cache dump
        jobInfoList:
          type: array
          description: Jobs on mountpath
          items:
            $ref: '#/components/schemas/MountPathJobInfo'
    SnapConfigsOverrideEdit:
      title: SnapConfigsOverrideEdit
      description: Array config template for editing overridden Snap Configs
      type: object
      properties:
        masterConfigId:
          type: integer
          format: int32
          description: 'This is the masterConfigId, which is available for each vendors configs'
        id:
          type: integer
          format: int32
          description: This is the id of the config which is required during config override
        name:
          type: string
          description: This is the name of the config which is displayed on the Command Center Console
        type:
          type: integer
          format: int32
          description: 'Type of the config value. type can accept 7 values [1,2,8,10,12,13,14], 1: boolean, 2: integer, 8: text, 10: array[string] are common configs, the rest three are special keys, 12 is for password type key for NetApp E-Series and HPE Nimble, 13 is Private Key for GCP, 14 is a hidden config to select type of Disk for GCP'
          enum:
            - 1
            - 2
            - 8
            - 10
            - 12
            - 13
            - 14
        value:
          type: string
          description: Value of the config
        values:
          type: array
          description: 'Holds a single value for types except 10, for 10 it holds one or more values. For HPE 3PAR StoreServ, pass MA Id in name field to configure that MA as remote snap MA.'
          items:
            $ref: '#/components/schemas/IdName'
        flags:
          type: integer
          format: int32
          description: Flag regarding placement of config in the CC page
        isUpdated:
          type: boolean
          description: Whether the config is updated or not
        isOverridden:
          type: boolean
          description: whether the config is overridden or not
      required:
        - masterConfigId
        - name
        - type
        - flags
        - isOverridden
    SnapConfigOverrideEditReq:
      title: SnapConfigOverrideEditReq
      type: object
      description: Request Template to edit Snap Config
      properties:
        snapConfigurations:
          type: array
          items:
            $ref: '#/components/schemas/SnapConfigsOverrideEdit'
    SnapVolumes:
      title: SnapVolumes
      type: object
      description: An object containing smVolumeId of snaps and commcell id of the setup
      properties:
        smVolumeId:
          type: integer
          format: int32
          description: smVolumeId of the snap
        commCellId:
          type: integer
          default: 2
          format: int32
          description: Commcell Id of the setup
      required:
        - smVolumeId
    SnapNodeReq:
      title: SnapNodeReq
      type: object
      properties:
        volume:
          type: array
          description: Array of volumes to include for the operation
          items:
            $ref: '#/components/schemas/SnapVolumes'
        mountVolumeIds:
          type: array
          description: Volume Ids of the Snaps to include for multi node unmount or instant clone delete
          items:
            type: integer
            format: int32
      description: Request template for multi node unmount and instant clone delete
    VMGuestCredentials:
      title: VMGuestCredentials
      type: object
      properties:
        userName:
          type: string
        password:
          type: string
    GetSetWindowsMSSQLPatchingMsg:
      title: GetSetWindowsMSSQLPatchingMsg
      type: object
      properties:
        option:
          type: integer
          format: int32
        clientId:
          type: integer
          format: int32
        MSSQLPatching:
          type: integer
          format: int32
        WindowsPatching:
          type: integer
          format: int32
        UnixOSPatching:
          type: integer
          format: int32
        HyperScaleOSPatching:
          type: integer
          format: int32
        HSXStorageUpdatesPatching:
          type: integer
          format: int32
        DiagsInCSCache:
          type: integer
          format: int32
        EligibleForMSSQLPatching:
          type: integer
          format: int32
        EligibleForWindowsOSPatching:
          type: integer
          format: int32
      description: Response message for install job options
    VMExistingCredential:
      title: VMExistingCredential
      type: object
      properties:
        credentialId:
          type: integer
          format: int32
        credentialName:
          type: string
    SnapForceReq:
      title: snapForceReq
      type: object
      properties:
        volumes:
          type: array
          items:
            $ref: '#/components/schemas/SnapVolumes'
    ObjectStorageAsset:
      title: ObjectStorageAsset
      type: object
      properties:
        storageName:
          type: string
          description: Name of the object storage
        hostURL:
          type: string
          description: Service account URL
        credentials:
          $ref: '#/components/schemas/IdName'
        accessNode:
          $ref: '#/components/schemas/IdName'
        storageType:
          $ref: '#/components/schemas/ObjectStorageAssetType'
      required:
        - storageName
        - hostURL
        - credentials
        - accessNode
        - storageType
    ObjectStorageAssetType:
      type: string
      title: ObjectStorageAssetType
      enum:
        - AMAZON_S3
        - AZURE_BLOB
        - GOOGLE_CLOUD
    CreateExchangeClient:
      type: object
      title: CreateExchangeClient
      properties:
        name:
          type: string
          description: Unique Exchange app name
        serverPlan:
          $ref: '#/components/schemas/IdName'
        azureApp:
          $ref: '#/components/schemas/Office365ConnectionsSettings'
      required:
        - name
        - serverPlan
        - azureApp
      description: Request Message for exchange app creation
    CreateOnedriveClient:
      type: object
      title: CreateOnedriveClient
      properties:
        name:
          type: string
          description: Unique Onedrive app name
        serverPlan:
          $ref: '#/components/schemas/IdName'
        azureApp:
          $ref: '#/components/schemas/Office365ConnectionsSettings'
      required:
        - name
        - serverPlan
        - azureApp
      description: Request Message for onedrive app creation
    CreateTeamsClient:
      type: object
      title: CreateTeamsClient
      properties:
        name:
          type: string
          description: Unique Teams app name
        serverPlan:
          $ref: '#/components/schemas/IdName'
        azureApp:
          $ref: '#/components/schemas/TeamsConnectionsSettings'
      required:
        - name
        - serverPlan
        - azureApp
      description: Request Message for teams app creation
    CreateDynamics365Client:
      type: object
      title: CreateDynamics365Client
      properties:
        name:
          type: string
          description: Unique Dynamics365 app name
        serverPlan:
          $ref: '#/components/schemas/IdName'
        azureApp:
          $ref: '#/components/schemas/Dynamics365ConnectionsSettings'
      required:
        - name
        - serverPlan
        - azureApp
      description: Request Message for Dynamics365 app creation
    CreateAzureADClient:
      type: object
      title: CreateAzureADClient
      properties:
        name:
          type: string
          description: Unique Azure AD app name
        serverPlan:
          $ref: '#/components/schemas/IdName'
        azureApp:
          $ref: '#/components/schemas/Office365ConnectionsSettings'
      required:
        - name
        - serverPlan
        - azureApp
      description: Request Message for Azure active directory app creation
    CreateSharepointClient:
      type: object
      title: CreateSharepointClient
      properties:
        name:
          type: string
          description: Unique Sharepoint app name
        serverPlan:
          $ref: '#/components/schemas/IdName'
        tenantAdminSiteURL:
          type: string
          description: SharePoint Online tenant admin site URL
        azureApp:
          $ref: '#/components/schemas/Office365ConnectionsSettings'
      required:
        - name
        - serverPlan
        - tenantAdminSiteURL
        - azureApp
      description: Request Message for sharepoint app creation
    AzureAdApp:
      type: object
      properties:
        applicationId:
          type: string
          description: Azure Application ID
        applicationSecret:
          type: string
          description: 'Azure app secret key, needs to be base64 encoded'
        certificatePassword:
          type: string
          description: 'Password of the azure application certificate and must be in base64 encoded format. Only applicable for SharePoint Online'
        certificate:
          type: string
          description: 'Content of the azure application certificate file and must be in base64 encoded format. Accepted fileTypes are pfx, p12. Only applicable for SharePoint Online'
        certificateThumbprint:
          type: string
          description: 'Thumbprint of the azure application certificate file. Only applicable for SharePoint Online'
      required:
        - applicationId
        - applicationSecret
      description: ''
    AzureAdAppToken:
      type: object
      allOf:
        - $ref: '#/components/schemas/AzureAdApp'
        - type: object
          properties:
            refreshToken:
              type: string
              description: User based refresh token generated with corresponding app credentials. Can be left blank if the azure app is protected API approved.
      title: AzureAdAppToken
    Office365ConnectionsSettings:
      type: object
      title: Office365ConnectionsSettings
      allOf:
        - $ref: '#/components/schemas/AzureAdApp'
        - type: object
          properties:
            azureDirectoryId:
              type: string
              description: Azure directory (tenant) ID
          required:
            - azureDirectoryId
    TeamsConnectionsSettings:
      type: object
      title: TeamsConnectionsSettings
      allOf:
        - $ref: '#/components/schemas/AzureAdAppToken'
        - type: object
          properties:
            azureDirectoryId:
              type: string
              description: Azure directory (tenant) ID
          required:
            - azureDirectoryId
    Dynamics365ConnectionsSettings:
      type: object
      title: Dynamics365ConnectionsSettings
      allOf:
        - $ref: '#/components/schemas/AzureAdAppToken'
        - type: object
          properties:
            azureDirectoryId:
              type: string
              description: Azure directory (tenant) ID
          required:
            - azureDirectoryId
    ExchangeContentReq:
      title: ExchangeContentReq
      type: object
      properties:
        type:
          type: string
          enum:
            - ALL_MAILBOXES
            - ALL_PUBLIC_FOLDERS
            - ALL_GROUP_MAILBOXES
            - AD_GROUP
          default: ALL_MAILBOXES
        group:
          $ref: '#/components/schemas/NameGUID'
        office365plan:
          $ref: '#/components/schemas/IdName'
      required:
        - type
        - office365plan
      description: Request Message to add content to exchange app
    OnedriveContentReq:
      title: OnedriveContentReq
      type: object
      properties:
        type:
          type: string
          default: ALL_USERS
          enum:
            - ALL_USERS
            - GROUP
        group:
          $ref: '#/components/schemas/NameGUID'
        office365plan:
          $ref: '#/components/schemas/IdName'
      required:
        - type
        - office365plan
      description: Request Message to add content to onedrive app
    SharepointContentReq:
      title: SharepointContentReq
      type: object
      properties:
        type:
          type: string
          default: ALL_WEB_SITES
          enum:
            - ALL_WEB_SITES
            - ALL_TEAMS_SITES
            - ALL_PROJECT_ONLINE_SITES
        office365plan:
          $ref: '#/components/schemas/IdName'
      required:
        - type
        - office365plan
      description: Request Message to add content to sharepoint app
    TeamsContentReq:
      title: TeamsContentReq
      type: object
      properties:
        type:
          type: string
          default: ALL_TEAMS
          enum:
            - ALL_TEAMS
            - ALL_USERS
            - GROUP
        group:
          $ref: '#/components/schemas/NameGUID'
        office365plan:
          $ref: '#/components/schemas/IdName'
      required:
        - type
        - office365plan
      description: Request Message to add content to teams app
    Dynamics365ContentReq:
      title: Dynamics365ContentReq
      type: object
      properties:
        type:
          type: string
          default: ALL_ENVIRONMENTS
          enum:
            - ALL_ENVIRONMENTS
        dynamics365plan:
          $ref: '#/components/schemas/IdName'
      required:
        - type
        - dynamics365plan
      description: Request Message to add content to dynamics 365 app
    Office365SLASummary:
      title: Office365SLASummary
      type: object
      properties:
        totalEntities:
          type: integer
          format: int64
        slaNotMetEntities:
          type: integer
          format: int64
        neverBackedupEntities:
          type: integer
          format: int64
        recentlyAddedEntities:
          type: integer
          format: int64
        recentlyAddedSLANotMetEntities:
          type: integer
          format: int64
        slaMetPercentage:
          type: float
        slaNotMetProcessedAtleastOncePercentage:
          type: float
        neverBackedupPercentage:
          type: float
    ActiveDirectoryClient:
      title: ActiveDirectoryClient
      type: object
      properties:
        appTypeId:
          type: integer
          format: int32
          description: Azure Active Directory (139), Granular Active Directory (41) or File Server (33)
        subclient:
          $ref: '#/components/schemas/IdName'
        backupset:
          $ref: '#/components/schemas/IdName'
        client:
          $ref: '#/components/schemas/IdNameDisplayName'
        plan:
          $ref: '#/components/schemas/IdName'
        company:
          $ref: '#/components/schemas/IdNameFullName'
        slaStatus:
          $ref: '#/components/schemas/SLAStatus'
        domainURL:
          type: string
        applicationSize:
          type: integer
          format: int64
        numberOfItems:
          type: integer
          format: int32
        isConfigured:
          type: boolean
        isDisabledClient:
          type: boolean
        userAccount:
          $ref: '#/components/schemas/IdName'
        lastBackup:
          $ref: '#/components/schemas/LastBackupJobInfoWithLastSuccessfulBackup'
        slaSummary:
          $ref: '#/components/schemas/Office365SLASummary'
    ActiveDirectoryClientsV2Resp:
      title: ActiveDirectoryClientsV2Resp
      type: object
      properties:
        error:
          $ref: '#/components/schemas/GenericResp'
        adClients:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/ActiveDirectoryClient'
        totalADClients:
          type: integer
          format: int32
    RetireClientRequest:
      title: RetireClientRequest
      type: object
      properties:
        retireClient:
          type: boolean
        packages:
          type: array
          items:
            $ref: '#/components/schemas/IdName'
    RetireClientResponse:
      title: RetireClientResponse
      type: object
      properties:
        jobId:
          type: integer
          format: int32
        error:
          $ref: '#/components/schemas/GenericResp'
    AccessNodeDeployment:
      title: AccessNodeDeployment
      type: object
      properties:
        name:
          type: string
          description: 'Client name for vm, if not provided it will be same as vmName'
        hostName:
          type: string
          description: 'Host name for vm, if not provided it will be same as vmName'
        os:
          type: string
          enum:
            - Windows
            - Linux
        deploymentType:
          type: integer
          format: int32
          enum:
            - 0
            - 1
          description: '0: Access node deployment, 1: File recovery enabler for linux deployment'
          default: 0
        commCell:
          $ref: '#/components/schemas/CommCellNameHostName'
        vmName:
          type: string
        userCredentials:
          $ref: '#/components/schemas/userCredentials'
        vCenter:
          type: string
          description: vCenter server instance
        vmLocation:
          $ref: '#/components/schemas/vmLocation'
        hardDiskType:
          type: integer
          format: int32
          enum:
            - 1
            - 2
            - 3
          description: '1: Thin Provision, 2: Thick provision lazy zeroed, 3: Thick provision eager zeroed'
          default: 2
        network:
          $ref: '#/components/schemas/NetworkDetails'
        clientGroup:
          type: string
        notifyUserOnJobCompletion:
          type: boolean
          default: false
        automaticOSUpdates:
          type: boolean
          default: false
        timezone:
          type: string
          description: Linux OS qualified timezones
          default: America/New_York
      required:
        - vmName
        - userCredentials
        - vCenter
        - vmLocation
        - network
    CommCellNameHostName:
      title: CommCellNameHostName
      type: object
      properties:
        name:
          type: string
          description: CommServer name
        hostName:
          type: string
          description: CommServer host name
    userCredentials:
      title: UserCredentials
      type: object
      properties:
        userName:
          type: string
        password:
          type: string
      required:
        - userName
        - password
    vmLocation:
      title: VMLocation
      type: object
      properties:
        inventoryPath:
          type: string
          description: 'Folder path where you can locate vm, empty if Datacenter is selected for location. Default is set to Datacenter'
        dataCenterName:
          type: string
        host:
          type: string
          description: If ESX-Host for resource the host moref or If ESX-Cluster then cluster moref and if resource pool is used for resource then first go for host moref then cluster moref
        resourcePool:
          type: string
          description: Resource Pool moref if resource pool is selected for resource
        cluster:
          type: string
          description: ESX-Cluster moref if cluster is selected for resource
        datastore:
          type: string
          description: If cluster is selected for storage then moref of datastore cluster else dataStoreName
      required:
        - dataCenterName
        - host
        - datastore
    NetworkDetails:
      title: NetworkDetails
      type: object
      properties:
        name:
          type: string
          description: Destination network name
        useDHCP:
          type: string
          enum:
            - 'True'
            - 'False'
          description: 'If useDHCP is False then make sure to provide staticIP, netmask, gateway'
          default: 'True'
        staticIP:
          type: string
        netmask:
          type: string
        gateway:
          type: string
        dnsSearch:
          type: string
        nameservers:
          type: array
          maxItems: 2
          minItems: 2
          items:
            type: string
      required:
        - name
    ReplicationGroupAdvancedOptions:
      type: object
      description: The advanced option for replication group
      properties:
        delayBetweenPriorityMachines:
          type: integer
          format: int32
          default: 2
          minimum: 0
          description: The delay between machines in different priorities. Mention in minutes
        continueOnFailure:
          type: boolean
          default: false
          description: Set to true to continue to the next priority machines on failure.
        script:
          $ref: '#/components/schemas/ReplicationGroupScript'
    ReplicationGroupScript:
      description: Pre/post failover and failback scripts at group level
      type: object
      properties:
        preFailover:
          $ref: '#/components/schemas/DROperationScript'
        postFailover:
          $ref: '#/components/schemas/DROperationScript'
        preFailback:
          $ref: '#/components/schemas/DROperationScript'
        postFailback:
          $ref: '#/components/schemas/DROperationScript'
    JobOperationOnCopyResp:
      title: JobOperationOnCopyResp
      type: object
      properties:
        dependentJobsExist:
          type: boolean
          description: 'Whether dependent jobs were found'
        archiverJobsExist:
          type: boolean
          description: 'Whether archiver jobs were found'
        jobInfo:
          type: array
          description: 'List of jobs being run due to specified job operation'
          items:
            $ref: '#/components/schemas/JobDetailForStorage'
        error:
          $ref: '#/components/schemas/GenericResp'
    JobOperationType:
      enum:
        - DELETE
        - RETAIN
        - DO_NOT_RETAIN
        - DISALLOW_COPY
        - DISALLOW_COPY_ALL
        - ALLOW_COPY
        - RECOPY
      type: string
    JobOperationOnCopyReq:
      title: JobOperationOnCopyReq
      type: object
      properties:
        storagePolicyId:
          type: integer
          format: int32
          description: ID for chosen storage policy
        copyId:
          type: integer
          format: int32
          description: ID for chosen copy
        opType:
          $ref: '#/components/schemas/JobOperationType'
        jobIds:
          type: array
          format: int32
          description: Comma separated Job IDs to run job operation on
          items:
            type: integer
            format: int32
        commcellId:
          type: integer
          format: int32
          description: ID for chosen commcell
        retainUntilTime:
          type: integer
          format: int64
          description: Job will be retained till specified time. The time is provided in unix time format.
        loadDependentJobs:
          type: boolean
          description: Defines whether dependent jobs need to be computed.
          default: false
        loadArchiverJobs:
          type: boolean
          default: false
          description: Defines whether archiver jobs need to be computed.
      required:
        - storagePolicyId
        - copyId
        - opType
        - jobIds
        - commcellId
    DataSourceType:
      title: DataSourceType
      x-stoplight:
        id: 5rxx51vvj3h2q
      type: string
      enum:
        - NONE
        - JDBC
        - WEB
        - EXE
        - CSV
        - FILE
        - NAS
        - ELOQUA
        - SALESFORCE
        - LDAP
        - FEDERATED
        - BLANK
        - HTTP
        - CAMEL
        - FACEBOOK
        - FLA
        - EDGE
        - EXCHANGE
        - REVIEWSET
        - TWITTER
        - COMPLIANCEAUDIT
        - FSINDEX
        - NFS
        - CLOUDORACLE
        - SYSTEMDEFAULT
        - DOWNLOADCENTERAUDIT
        - VM
        - ONEDRIVE
        - SHAREPOINT
        - EMAIL
        - DBANALYSIS
        - CLOUDPAAS
        - GOOGLEDRIVE
        - GMAIL
        - ACTIVEDIRECTORY
        - ONEDRIVEINDEX
        - MULTINODEFEDERATED
        - DYNAMIC365
        - IDXLOGS
        - TEAMS
        - CLOUDSTORAGE
    InventoryAssociatedDatasource:
      title: InventoryAssociatedDatasource
      x-stoplight:
        id: ij6y2evo02j07
      type: object
      properties:
        id:
          type: integer
          format: int32
          minimum: 0
        name:
          type: string
        type:
          $ref: '#/components/schemas/DataSourceType'
        plan:
          $ref: '#/components/schemas/IdName'
        application:
          $ref: '#/components/schemas/ActivateApplication'
    InventoryAssociatedDatasourceList:
      title: InventoryAssociatedDatasourceList
      x-stoplight:
        id: vwkeeh852x1ws
      type: object
      properties:
        dataSources:
          type: array
          items:
            $ref: '#/components/schemas/InventoryAssociatedDatasource'
      description: List of data sources associated to the inventory
    PlanSubType:
      enum:
        - ExchangeUser
        - Office365
      type: string
      format: ''
    Office365PlanTier:
      enum:
        - STANDARD
        - ENTERPRISE
        - SYNTEX
      type: string
      format: ''
    Office365PlanSummary:
      type: object
      properties:
        plan:
          $ref: '#/components/schemas/IdName'
        planTier:
          $ref: '#/components/schemas/Office365PlanTier'
        planSubType:
          $ref: '#/components/schemas/PlanSubType'
        contentIndexingEnabled:
          type: boolean
          description: Tells if Content Indexing is enabled on this plan
        mailboxes:
          type: integer
          description: Number of mailboxes assocaited with this plan
          format: int32
        users:
          type: integer
          description: Number of users assocaited with this plan
          format: int32
        sites:
          type: integer
          description: Number of sites assocaited with this plan
          format: int32
        teams:
          type: integer
          description: Number of teams assocaited with this plan
          format: int32
        totalEntities:
          type: integer
          description: Count of total associated entities for the Office 365 plan
          format: int32
        company:
          $ref: '#/components/schemas/CompanySummary'
    Office365PlanSummaryListResp:
      type: object
      properties:
        error:
          $ref: '#/components/schemas/GenericResp'
        o365Plans:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/Office365PlanSummary'
        totalO365Plans:
          type: integer
          format: int32
          description: Total number of Office365 plans returned
    RetireServerGroupResp:
      title: RetireServerGroupResp
      type: object
      properties:
        jobId:
          type: integer
          format: int64
        error:
          $ref: '#/components/schemas/GenericRespWithWarning'
    RetireServersRequest:
      title: RetireServersRequest
      type: object
      properties:
        servers:
          type: array
          items:
            $ref: '#/components/schemas/IdName'
    RetireServersResponse:
      title: RetireServersResponse
      type: object
      description: Retire servers response
      properties:
        jobId:
          type: integer
          format: int64
        error:
          $ref: '#/components/schemas/GenericRespWithWarning'
    DDBDiskInfo:
      title: DDBDiskInfo
      type: object
      description: DDB disk information of a MediaAgent
      properties:
        diskId:
          type: integer
          format: int32
          description: Id of the DDB disk
        diskPath:
          type: string
          description: File path of the DDB disk
        clientInfo:
          $ref: '#/components/schemas/IdName'
        partitionList:
          type: array
          description: List of DDB partitions hosted on this disk
          items:
            $ref: '#/components/schemas/DDBSubStoreInfo'
        numOfPartitions:
          type: integer
          format: int32
          description: Number of DDB partitions hosted on this disk
        status:
          type: string
          description: Satus of the disk
          enum:
            - OFFLINE
            - ONLINE
        consumedSpaceMB:
          type: integer
          format: int64
          description: Amount of space consumed by the DDB partitions hosted on this disk
        freeSpaceMB:
          type: integer
          format: int64
          description: Available usable free space on the disk path
        totalSpaceMB:
          type: integer
          format: int64
          description: Total space capacity of the disk path
    DDBSubStoreInfo:
      title: DDBSubStoreInfo
      type: object
      properties:
        subStoreId:
          type: integer
          format: int32
          description: Id of the DDB substore
        storeId:
          type: integer
          format: int32
          description: Id of the DDB store
        storeName:
          type: string
          description: Name of the DDB store
        estimatedSubstoreSizeInMB:
          type: integer
          format: int64
          description: Estimated size in MBs occupied by the substore
        moveStatusCode:
          type: integer
          format: int64
          description: Status code for the move partition attempt on this substore
        moveStatusMsg:
          type: string
          description: Status message for the move partition attempt on this substore
        isSealed:
          type: boolean
          description: Specify whether the substore is sealed or not
        lastFailedMoveJobId:
          type: integer
          format: int64
          description: JobId of the last failed move job for this substore
    MADDBDiskMgmtResp:
      title: MADDBDiskMgmtResp
      type: object
      properties:
        mediaAgentInfo:
          $ref: '#/components/schemas/MediaAgentForDDBSummary'
        disks:
          type: array
          items:
            $ref: '#/components/schemas/DDBDiskInfo'
        error:
          $ref: '#/components/schemas/GenericResp'
      description: Response for DDB disk management operation request on MediaAgent
    MADDBDiskMgmtReq:
      title: MADDBDiskMgmtReq
      type: object
      description: Request to perform DDB disk management operations on MediaAgent
      properties:
        disks:
          type: array
          items:
            $ref: '#/components/schemas/DDBDiskInfo'
        opType:
          type: string
          description: Type of operation to be performed on the input disks
          enum:
            - ADD
            - DELETE
            - MOVE
            - MOVE_CONFIG_ONLY
        targetMAId:
          type: integer
          format: int32
          description: Id of the target MediaAgent for Move DDB disk operation
        targetPath:
          type: string
          description: Target path for Move DDB disk operation
        targetDiskId:
          type: integer
          format: int32
          description: Id of the target DDB disk for Move DDB disk operation
      required:
        - opType
    VSAApplicationDetails:
      title: VSAApplicationDetails
      type: object
      description: Application details for mount request.
      properties:
        subclientId:
          type: integer
          format: int32
          description: subclient id associated to snapshot
        clientId:
          type: integer
          format: int32
          description: hypervisor Id of hypervisor where user is mounting snapshot
        instanceId:
          type: integer
          format: int32
          description: instance id of the instance to which subclient is associated
        apptypeId:
          type: integer
          format: int32
          description: apptype id or agent type
    VSAServerDetails:
      title: VSAServerDetails
      type: object
      description: server details for mount request
      properties:
        serverType:
          type: integer
          format: int32
          description: type of server
        serverName:
          type: string
          description: server name
    ClientInfoForRetire:
      title: ClientInfoForRetire
      type: object
      description: Client information for retire
      properties:
        client:
          $ref: '#/components/schemas/IdName'
        associatedPseudoClientNames:
          type: string
        isMediaAgentInUse:
          type: boolean
        error:
          $ref: '#/components/schemas/GenericRespWithWarning'
    CreateDCPlan:
      title: CreateDCPlan
      type: object
      description: Create Data Classification Plan Request Model
      properties:
        name:
          type: string
          description: Name of Data Classification Plan
        threatAnalysis:
          type: boolean
          format: int32
          description: Enables\Disables Threat Analysis support for DC Plan
        application:
          $ref: '#/components/schemas/PlanTargetApp'
        indexServer:
          $ref: '#/components/schemas/IdName'
        contentAnalyzer:
          type: array
          description: Content Analyzer Id`s for Entity Detection
          items:
            $ref: '#/components/schemas/IdName'
        contentIndexing:
          $ref: '#/components/schemas/DCPlanCIpolicy'
        entityDetection:
          $ref: '#/components/schemas/DCPlanEEPolicy'
        schedule:
          $ref: '#/components/schemas/DCPlanJobSchedule'
    DCPlanCIpolicy:
      title: DCPlanCIPolicy
      type: object
      description: Create Content Indexing Policy Model for DC Plan
      properties:
        extractTextFromImage:
          type: boolean
          description: Enable OCR in Data Classification Plan
        exactSearch:
          type: boolean
          description: Enable Exact Seach in Data Classification Plan
        copyPrecedence:
          type: integer
          format: int32
          description: Set Content Indexing Copy Precedence
        searchType:
          $ref: '#/components/schemas/ContentIndexingOperationType'
        contentLanguage:
          $ref: '#/components/schemas/DCPlanOCRLanguage'
        fileFilters:
          $ref: '#/components/schemas/DCPlanCIFileFilters'
        backupCopy:
          type: array
          items:
            $ref: '#/components/schemas/DCBackupCopy'
    DCPlanCIFileFilters:
      title: DCPlanCIFileFilters
      type: object
      properties:
        includeDocTypes:
          type: string
        excludePaths:
          type: array
          items:
            type: string
        minDocSize:
          type: integer
          format: int32
        maxDocSize:
          type: integer
          format: int32
          maximum: 500
    DCPlanEEPolicy:
      title: DCPlanEEPolicy
      type: object
      description: Entity Extraction Model for Data Classification Plan
      properties:
        entities:
          type: array
          description: Entity TagId for Extraction
          items:
            $ref: '#/components/schemas/IdName'
        classifiers:
          type: array
          description: Classifier TagId For Extraction
          items:
            $ref: '#/components/schemas/IdName'
        copyPrecendence:
          type: integer
          format: int32
    DCPlanJobSchedule:
      title: DCPlanJobSchedule
      type: object
      description: Describes the Schedule object for Data Classification Plan
      properties:
        name:
          type: string
        pattern:
          $ref: '#/components/schemas/ContentIndexingFrequencyPattern'
    DCPlanOCRLanguage:
      title: DCPlanOCRLanguage
      type: string
      enum:
        - NONE
        - ENGLISH
        - HEBREW
        - SPANISH
        - FRENCH
        - ITALIAN
        - DANISH
      description: OCR Languages Supported By DC Plan
    DCBackupCopy:
      title: DCBackupCopy
      type: object
      description: Backup Copy Info For Content Indexing
      properties:
        copyId:
          type: integer
          format: int32
        storagePoolId:
          type: integer
          format: int32
    DCPlanDetails:
      title: DCPlanDetails
      type: object
      description: 'Describes the Data Classification Plan response object '
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        threatAnalysis:
          type: boolean
          description: Whether Threat Analysis is enabled for plan
        targetApplication:
          $ref: '#/components/schemas/PlanTargetApp'
        contentAnalyzer:
          type: array
          description: Content Analyzer details for Data Classification plan
          items:
            $ref: '#/components/schemas/IdName'
        indexServer:
          $ref: '#/components/schemas/IdName'
        entityDetection:
          $ref: '#/components/schemas/DCPlanEEPolicy'
        contentIndexing:
          $ref: '#/components/schemas/GetDCPlanCIPolicy'
        permissions:
          type: array
          items:
            $ref: '#/components/schemas/IdName'
        associatedEntities:
          type: array
          items:
            $ref: '#/components/schemas/IdNameCount'
        schedule:
          $ref: '#/components/schemas/DCPlanJobSchedule'
    DCPlanContentIndexingDetails:
      title: DCPlanContentIndexingDetails
      type: object
      description: Describes the Content Indexing attributes related to a Data Classification Plan
      properties:
        exactSearch:
          type: boolean
          description: Whether Exact Search is enabled or disabled
        extractTextFromImage:
          type: boolean
          description: Whether Image Extraction is Enabled
        contentLanguage:
          $ref: '#/components/schemas/DCPlanOCRLanguage'
        searchType:
          $ref: '#/components/schemas/ContentIndexingOperationType'
        previewPath:
          type: string
          description: Describes the Preview path for Content Indexed Data when search type is METADATA_CONTENT_PREVIEW
        domainName:
          type: string
          description: Associated Domain of user having access to preview path
        userName:
          type: string
          description: Associated user name of user having access to preview path
    ContentIndexingOperationType:
      title: ContentIndexingOperationType
      type: string
      description: Describes the Content Indexing Operation Type for Data Classification Plan
      enum:
        - METADATA
        - METADATA_CONTENT
        - METADATA_CONTENT_PREVIEW
    UpdateDCPlan:
      title: UpdateDCPlan
      type: object
      description: Describes Input to Update Data Classification Plan
      properties:
        name:
          type: string
          description: Name of the Data Classification plan
        contentAnalyzer:
          type: array
          items:
            $ref: '#/components/schemas/IdName'
        threatAnalysis:
          type: boolean
          format: int32
          description: Enables\Disables Threat Analysis support for DC Plan
        entityDetection:
          $ref: '#/components/schemas/DCPlanEEPolicy'
        contentIndexing:
          $ref: '#/components/schemas/UpdateDCPlanCI'
        schedule:
          $ref: '#/components/schemas/DCPlanJobSchedule'
    UpdateDCPlanCI:
      allOf:
        - type: object
          properties:
            fileFilters:
              $ref: '#/components/schemas/DCPlanCIFileFilters'
            backupCopy:
              type: array
              items:
                $ref: '#/components/schemas/DCBackupCopy'
        - $ref: '#/components/schemas/DCPlanContentIndexingDetails'
      description: Update Content Indexing Policy Model for DC Plan
    GetDCPlanCIPolicy:
      allOf:
        - type: object
          properties:
            fileFilters:
              $ref: '#/components/schemas/DCPlanCIFileFilters'
            backupCopy:
              type: array
              items:
                $ref: '#/components/schemas/DCBackupCopyDetail'
        - $ref: '#/components/schemas/DCPlanContentIndexingDetails'
      description: Fetch Content Indexing Policy Model for DC Plan
    DCBackupCopyDetail:
      title: DCBackupCopyDetail
      type: object
      description: Backup Copy Details For Content Indexing
      properties:
        copyId:
          type: integer
          format: int32
          description: Copy Id of Copy used for Content Indexing Job
          default: 0
        copyName:
          type: string
          description: Copy Name of Copy used for Content Indexing
        storagePoolId:
          type: integer
          format: int32
          description: Storage Pool Id of Storage Pool Used for Content Indexing
          default: 0
        storagePoolName:
          type: string
          description: Storage Pool Name of Storage Pool Used for Content Indexing
        copyRetentionPeriod:
          type: integer
          format: int32
          description: Rentention Period of Copy
          default: 0
        storagePoolType:
          $ref: '#/components/schemas/StoragePoolType'
        planId:
          type: integer
          format: int32
          default: 0
        planType:
          $ref: '#/components/schemas/PlanType'
        storageType:
          $ref: '#/components/schemas/StorageType'
        storageSubType:
          $ref: '#/components/schemas/StorageSubType'
    KubernetesServiceTypes:
      title: KubernetesServiceTypes
      description: The Service Type of the Kubernetes cluster
      type: string
      enum:
        - ONPREM
        - AKS
      default: ONPREM

    KubernetesSLADetails:
      title: Kubernetes SLA Details
      description: SLA Details for a Kubernetes entity
      type: object
      properties:
        status:
          $ref: '#/components/schemas/SLAStatus'
        reason:
          type: string

    KubernetesClusterItem:
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: ID of the Kubernetes cluster
        name:
          type: string
          format: ''
          description: Name of the Kubernetes cluster
        displayName:
          type: string
          format: ''
          description: Display name of the Kubernetes cluster
        configured:
          type: boolean
          description: Denotes if the cluster is configured for backups or retired
        version:
          type: string
          format: ''
          description: Kubernetes cluster version
        instance:
          $ref: '#/components/schemas/IdName'
        tags:
          type: array
          items:
            $ref: '#/components/schemas/IdNameValue'
        company:
          $ref: '#/components/schemas/companyInfo'
        commcell:
          $ref: '#/components/schemas/CommcellInfo'

    KubernetesApplicationGroupItem:
      type: object
      description: Details of a Kubernetes Application Group
      properties:
        id:
          type: integer
          format: int32
          description: ID of the Kubernetes Application group
        name:
          type: string
          format: ''
          description: Name of the Kubernetes Application Group
        isDefaultApplicationGroup:
          type: boolean
          description: Specifies whether the Application Group is a default Application Group
        snapBackupEnabled:
          type: boolean
          description: Specifies if snap backup is enabled
        cluster:
          $ref: '#/components/schemas/IdNameDisplayName'
        plan:
          $ref: '#/components/schemas/IdName'
        company:
          $ref: '#/components/schemas/companyInfo'
        tags:
          description: List of Tags associated to the Kubernetes Application Group
          type: array
          items:
            $ref: '#/components/schemas/IdNameValue'
        instance:
          $ref: '#/components/schemas/IdName'
        lastBackup:
          $ref: '#/components/schemas/lastBackup'

    KubernetesApplicationItem:
      description: Details of a Kubernetes Applications
      allOf:
        - $ref: '#/components/schemas/NameGUID'
        - properties:
            nameSpace:
              type: string
              format: ''
              description: Specifies the Namespace of the Application
            kind:
              type: string
              format: ''
              description: Specifies the resource Kind of the Application
            applicationGroup:
              $ref: '#/components/schemas/IdName'
            backupset:
              $ref: '#/components/schemas/IdName'
            commcell:
              $ref: '#/components/schemas/IdName'
            cluster:
              $ref: '#/components/schemas/IdName'
            plan:
              $ref: '#/components/schemas/IdName'
            instance:
              $ref: '#/components/schemas/IdName'
            usedSize:
              type: integer
              format: int32
              description: Describes the Total used space of all volumes of the Application
            provisionedSize:
              type: integer
              format: int32
              description: Describes the Total provisioned size of the volumes of the Application
            applicationSize:
              type: integer
              format: int32
              description: Describes the application size of the Application
            lastBackup:
              $ref: '#/components/schemas/lastBackup'
            company:
              $ref: '#/components/schemas/IdName'
            tags:
              description: List of Tags associated to the Kubernetes Application
              type: array
              items:
                $ref: '#/components/schemas/IdNameValue'
            SLA:
              $ref: '#/components/schemas/KubernetesSLADetails'

    KubernetesContentApplications:
      title: Kubernetes Application Content
      type: object
      description: Describes the application content for Application Group
      properties:
        GUID:
          type: string
          format: ''
          description: GUID value of the Kubernetes Application to be associated as content
        type:
          type: string
          format: ''
          description: Type of the Kubernetes application
          enum:
            - NAMESPACE
            - APPLICATION
            - PVC
            - LABELS
        name:
          type: string
          format: ''
          description: Name of the application
      required:
        - type
        - GUID

    KubernetesContentSelectors:
      title: Kubernetes Selector Content
      type: object
      description: Describes the label selector content for the Application Group
      properties:
        selectorValue:
          type: string
          format: ''
          description: Value of the label selector in key=value format
        selectorLevel:
          type: string
          format: ''
          description: Selector level of the label selector
          enum:
            - Application
            - Volumes
            - Namespace
      required:
        - selectorValue
        - selectorLevel

    KubernetesApplicationGroupContentItem:
      title: Kubernetes Application Group Content Item
      type: object
      description: Item to describe the applications and label selectors
      properties:
        applications:
          x-terraform-computed: false
          description: List of applications to be added as content
          type: array
          items:
            $ref: '#/components/schemas/KubernetesContentApplications'
        labelSelectors:
          x-terraform-computed: false
          description: List of label selectors to be added as content
          type: array
          items:
            $ref: '#/components/schemas/KubernetesContentSelectors'

    KubernetesApplicationGroupFilterItem:
      title: Kubernetes Application Group Filter Item
      type: object
      description: Item to describe the applications and label selectors for filters
      allOf:
        - properties:
            skipStatelessApps:
              description: Specify whether to skip backup of stateless applications
              type: boolean
              default: false
        - $ref: '#/components/schemas/KubernetesApplicationGroupContentItem'

    KubernetesApplicationGroupContent:
      title: Kubernetes Application Group Content
      type: object
      description: Item describing the content for Application Group
      allOf:
        - properties:
            overwrite:
              x-terraform-constant: true
              type: boolean
              default: false
              description: Specifies whether content has to be overwritten or appended
        - $ref: '#/components/schemas/KubernetesApplicationGroupContentItem'

    KubernetesApplicationGroupFilters:
      title: Kubernetes Application Group Filter
      allOf:
        - properties:
            overwrite:
              x-terraform-constant: true
              type: boolean
              default: false
              description: Specifies whether content has to be overwritten or appended
        - $ref: '#/components/schemas/KubernetesApplicationGroupFilterItem'

    KubernetesClusterCredentials:
      title: Kubernetes Cluster Credentials
      type: object
      description: Credentials of a Kubernetes cluster
      properties:
        apiServer:
          type: string
          format: ''
          description: API Server Endpoint of the cluster
        serviceAccount:
          type: string
          format: ''
          description: Name of the Service Account to authenticate with the cluster
        serviceToken:
          type: string
          format: ''
          description: Secret token to authenticate with the cluster

    KubernetesAccessNodes:
      title: Kubernetes Access Nodes
      type: object
      description: List of Access Nodes
      properties:
        accessNodes:
          type: array
          items:
            $ref: '#/components/schemas/IdNameType'

    KubernetesClusterBrowseItem:
      title: Kubernetes Cluster Browse Item
      description: Object to describe the browse item of a Kubernetes cluster
      allOf:
        - $ref: '#/components/schemas/NameGUID'
        - properties:
            kind:
              type: string
              format: ''
              description: Kind value of the discovered item

    ClusterDetailsCommonClientSecurity:
      title: Cluster Client Security Details
      description: Describe the client security details of a Kubernetes cluster
      type: object
      properties:
        owners:
          description: List of owners associated to the cluster
          type: array
          items:
            type: string
            format: ''

    ClusterDetailsCommonProps:
      title: Cluster Client Common Properties
      description: Describe the common properties of a Kubernetes cluster
      type: object
      properties:
        security:
          $ref: '#/components/schemas/ClusterDetailsCommonClientSecurity'
        associatedUserGroups:
          type: array
          items:
            $ref: '#/components/schemas/IdName'

    KubernetesAssociatedApplicationGroup:
      title: Associated Application Group
      description: Associated Application Group of the Application
      type: object
      properties:
        instance:
          $ref: '#/components/schemas/IdName'
        backupset:
          $ref: '#/components/schemas/IdName'
        applicationGroup:
          $ref: '#/components/schemas/IdName'

    KubernetesNextAssociatedApplicationGroup:
      title: Next Associated Application Group
      description: Next associated Application Group of the Application
      type: object
      properties:
        backupset:
          $ref: '#/components/schemas/IdName'
        applicationGroup:
          $ref: '#/components/schemas/IdName'

    KubernetesApplicationCountInfo:
      title: Application Backup Info
      description: Describe the Backup info for a Kubernetes Application
      type: object
      properties:
        pendingCount:
          type: integer
          format: int32
          description: Count of Applications Pending backup
        protectedCount:
          type: integer
          format: int32
          description: Count of Applications Protected
        notProtectedCount:
          type: integer
          format: int32
          description: Count of Applications Not Protected
        neverBackedUpCount:
          type: integer
          format: int32
          description: Count of Applications Never Backed up
        backupUpWithErrorCount:
          type: integer
          format: int32
          description: Count of Applications Backed up with errors
        totalCount:
          type: integer
          format: int32
          description: Count of total number of Applications

    KubernetesApplicationGroupCommonProps:
      title: Application Group Common Properties
      description: Common properties of a Kubernetes Application Group
      type: object
      properties:
        cluster:
          $ref: '#/components/schemas/IdNameDisplayName'
        instance:
          $ref: '#/components/schemas/IdName'
        backupset:
          $ref: '#/components/schemas/IdName'

    KubernetesApplicationGroupSummaryInfo:
      title: Application Group Summary Info
      description: Summary of a Kubernetes Application
      type: object
      allOf:
        - properties:
            nextBackupTime:
              type: integer
              format: int32
            isETCDApplicationGroup:
              type: boolean
              description: Describes if the Application Group is an ETCD Application Group
            isDefaultApplicationGroup:
              type: boolean
              description: Describes if the Application Group is a default Application Group
            plan:
              $ref: '#/components/schemas/IdName'
            timezone:
              $ref: '#/components/schemas/IdName'
            tags:
              type: array
              items:
                $ref: '#/components/schemas/IdNameValue'
            content:
              $ref: '#/components/schemas/KubernetesApplicationGroupContentItem'
            filters:
              $ref: '#/components/schemas/KubernetesApplicationGroupFilterItem'
            lastBackup:
              $ref: '#/components/schemas/LastBackupJobInfo'
            activityControl:
              $ref: '#/components/schemas/ApplicationGroupActivityControl'
            accessNodes:
              type: array
              items:
                $ref: '#/components/schemas/IdName'
            options:
              $ref: '#/components/schemas/ApplicationGroupGetOptions'
        - $ref: '#/components/schemas/KubernetesApplicationGroupCommonProps'

    CreateKubernetesClusterRequest:
      title: Create Kubernetes Cluster Request
      description: Request definition for creating Kubernetes cluster
      type: object
      allOf:
        - $ref: '#/components/schemas/KubernetesClusterCredentials'
        - $ref: '#/components/schemas/KubernetesAccessNodes'
        - properties:
            name:
              type: string
              x-terraform-setter: DisplayName
              format: ''
              description: Name of the Kubernetes Cluster
            serviceType:
              $ref: '#/components/schemas/KubernetesServiceTypes'
            etcdProtection:
              $ref: '#/components/schemas/EtcdProtectionItem'
              description: Enable ETCD Protection on the Kubernetes Cluster
      required:
        - name
        - apiServer
        - serviceAccount
        - serviceToken
        - accessNodes

    EditClusterActivityControlOptions:
      title: Kubernetes Cluster activity control options
      description: Request definition changing activity control options for cluster
      type: object
      properties:
        enableBackup:
          type: boolean
          description: Enable or disable backup for cluster
        enableRestore:
          type: boolean
          description: Enable or disable restore for cluster
        enableBackupAfterADelay:
          type: integer
          format: int32
          description: Enabling backup after a delay. Provide UTC Time in Unix format
        enableRestoreAfterADelay:
          type: integer
          format: int32
          description: Enabling restore after a delay. Provide UTC Time in Unix format

    EditClusterAdvancedOptionsInfo:
      title: Kubernetes Cluster Advanced Options
      description: Request definition for cluster advanced options
      type: object
      properties:
        imageRegistry:
          $ref: '#/components/schemas/ClusterImageRegistryOptions'
        configNamespace:
          type: string
          format: ''
          description: Specify the name of the Namespace where Commvault resources will be deployed
        jobStepWaitTime:
          $ref: '#/components/schemas/JobStepWaitTimeOptions'

    ClusterImageRegistryOptions:
      title: Kubernetes Cluster image registry options
      description: Request definition changing image registry options for cluster
      type: object
      properties:
        url:
          type: string
          format: ''
          description: Specify image registry URL for internal image repository
        pullSecret:
          type: string
          format: ''
          description: Specify image pull secret to authenticate with the image repository

    JobStepWaitTimeOptions:
      title: Kubernetes Cluster job step wait time options
      description: Request definition changing job step wait time options for cluster
      type: object
      properties:
        workerPodStartup:
          type: integer
          format: int32
          description: Specify wait time (in minutes) for Worker Pod to start
        resourceCleanup:
          type: integer
          format: int32
          description: Specify wait time (in minutes) for resources to be deleted
        snapshotReady:
          type: integer
          format: int32
          description: Specify wait time (in minutes) for snapshot to be Ready
        snapshotCleanup:
          type: integer
          format: int32
          description: Specify wait time (in minutes) for snapshot to be deleted

    UpdateKubernetesClusterRequest:
      title: Create Kubernetes Cluster Request
      description: Request definition for creating Kubernetes cluster
      type: object
      allOf:
        - $ref: '#/components/schemas/KubernetesClusterCredentials'
        - $ref: '#/components/schemas/KubernetesAccessNodes'
        - properties:
            name:
              type: string
              format: ''
              description: Name of the Kubernetes Cluster
            serviceType:
              $ref: '#/components/schemas/KubernetesServiceTypes'
            etcdProtection:
              $ref: '#/components/schemas/GetEtcdProtectionItem'
              description: Enable ETCD Protection on the Kubernetes Cluster
            tags:
              description: Modify or add tags on the cluster
              type: array
              items:
                $ref: '#/components/schemas/NameValue'
            region:
              $ref: '#/components/schemas/IdName'
              description: Update the workload region of the cluster
            activityControl:
              $ref: '#/components/schemas/EditClusterActivityControlOptions'
            options:
              $ref: '#/components/schemas/EditClusterAdvancedOptionsInfo'

    CreateKubernetesClusterResponse:
      title: Create Kubernetes Cluster Response
      type: object
      properties:
        id:
          type: integer
          x-terraform-id: true
          format: int32
          description: ID of the Kubernetes Cluster created
        name:
          type: string
          format: ''
          description: Name of the Kubernetes Cluster
        etcd:
          $ref: '#/components/schemas/IdName'
          description: Name and ID of the ETCD Application Group

    GetClusterResp:
      title: Get Kubernetes clusters
      description: List of all Kubernetes Clusters
      type: object
      properties:
        clusterCount:
          type: integer
          format: int32
          description: Total number of clusters
        clusters:
          type: array
          items:
            $ref: '#/components/schemas/KubernetesClusterItem'

    ClusterActivityControlOptions:
      title: Cluster Activity Control Options
      description: Activity Control Options for Kubernetes Cluster
      type: object
      properties:
        enableBackup:
          type: boolean
        enableRestore:
          type: boolean

    EtcdProtectionItem:
      title: Etcd Protection Options
      description: ETCD Protection options for a cluster
      type: object
      properties:
        enabled:
          type: boolean
          description: Denote if etcd protection is enabled
        plan:
          $ref: '#/components/schemas/IdName'

    GetEtcdProtectionItem:
      title: ETCD Protection options
      allOf:
        - $ref: '#/components/schemas/IdName'
        - $ref: '#/components/schemas/EtcdProtectionItem'

    GetClusterDetailsResp:
      title: Get Cluster Details
      description: Details of a Kubernetes Cluster
      allOf:
        - $ref: '#/components/schemas/IdNameDisplayName'
        - type: object
          properties:
            apiServer:
              type: string
              format: ''
              description: API Server Endpoint of the cluster
            version:
              type: string
              format: ''
              description: Kubernetes client version
            accessNode:
              type: array
              items:
                $ref: '#/components/schemas/IdName'
            tags:
              type: array
              items:
                $ref: '#/components/schemas/IdNameValue'
            etcdProtection:
              $ref: '#/components/schemas/GetEtcdProtectionItem'
            applicationCount:
              $ref: '#/components/schemas/KubernetesApplicationCountInfo'
            instance:
              $ref: '#/components/schemas/IdName'
            clientGroups:
              type: array
              items:
                $ref: '#/components/schemas/IdName'
            region:
              description: Workload region of the client
              $ref: '#/components/schemas/IdName'
            commonProperties:
              $ref: '#/components/schemas/ClusterDetailsCommonProps'
            activityControl:
              $ref: '#/components/schemas/ClusterActivityControlOptions'
            options:
              $ref: '#/components/schemas/EditClusterAdvancedOptionsInfo'
            cloudStorage:
              $ref: '#/components/schemas/KubernetesCloudStorage'

    KubernetesBrowseClusterResp:
      type: object
      properties:
        items:
          description: List of items discovered form a Kubernetes cluster browse
          type: array
          items:
            $ref: '#/components/schemas/KubernetesClusterBrowseItem'

    GetApplicationGroupsList:
      title: Get Application Group List
      type: object
      description: List of Application Groups
      properties:
        applicationGroupCount:
          type: integer
          format: int32
        applicationGroups:
          type: array
          items:
            $ref: '#/components/schemas/KubernetesApplicationGroupItem'

    ApplicationGroupActivityControl:
      title: Application Group Activity Control Options
      type: object
      properties:
        enableBackup:
          type: boolean
          default: true

    ApplicationGroupWorkerResourcesOptions:
      title: Application Group Worker Pod Resources Options
      type: object
      properties:
        cpuLimits:
          type: string
          description: Define limits.cpu to set on the worker Pod
        cpuRequests:
          type: string
          description: Define requests.cpu to set on the worker Pod
        memoryLimits:
          type: string
          description: Define limits.memory to set on the worker Pod
        memoryRequests:
          type: string
          description: Define requests.memory to set on the worker Pod

    ApplicationGroupGetOptions:
      title: Application Group Backup Options
      type: object
      properties:
        backupStreams:
          type: integer
          format: int32
          default: 5
          description: Define number of parallel data readers
        jobStartTime:
          type: integer
          format: int32
          description: Define the backup job start time in epochs
        onSnapFailureFallbackToLiveVolume:
          type: boolean
          default: false
          description: Define setting to enable fallback to live volume backup in case of snap failure
        scheduleWorkerToConfigNamespace:
          type: boolean
          default: false
          description: Define setting to enable scheduling worker Pods to CV Namespace for CSI-Snapshot enabled backups
        workerResources:
          $ref: '#/components/schemas/ApplicationGroupWorkerResourcesOptions'

    ApplicationGroupRequestInputs:
      title: Application Group Request Inputs
      properties:
        name:
          type: string
          description: Specify new name to rename an Application Group
        plan:
          $ref: '#/components/schemas/IdName'
        content:
          $ref: '#/components/schemas/KubernetesApplicationGroupContent'
        filters:
          $ref: '#/components/schemas/KubernetesApplicationGroupFilters'

    UpdateApplicationGroupRequest:
      title: Update Application Group Request
      type: object
      allOf:
        - $ref: '#/components/schemas/ApplicationGroupRequestInputs'
        - properties:
            options:
              $ref: '#/components/schemas/ApplicationGroupGetOptions'
            timezone:
              $ref: '#/components/schemas/IdName'
            activityControl:
              $ref: '#/components/schemas/ApplicationGroupActivityControl'
            tags:
              type: array
              items:
                $ref: '#/components/schemas/NameValue'

    CreateApplicationGroupRequest:
      title: Create Application Group Request
      allOf:
        - $ref: '#/components/schemas/ApplicationGroupRequestInputs'
        - properties:
            cluster:
              $ref: '#/components/schemas/IdName'
      required:
        - name
        - cluster
        - content

    GetApplicationGroupDetails:
      title: Get Application Group Details
      allOf:
        - $ref: '#/components/schemas/IdName'
        - properties:
            applicationCount:
              $ref:  '#/components/schemas/KubernetesApplicationCountInfo'
        - $ref:  '#/components/schemas/KubernetesApplicationGroupSummaryInfo'

    KubernetesApplicationGroupPreviewReq:
      title: Application Group Preview Request
      type: object
      properties:
        content:
          $ref: '#/components/schemas/KubernetesApplicationGroupContentItem'
        filters:
          $ref: '#/components/schemas/KubernetesApplicationGroupFilterItem'
      required:
        - content

    KubernetesPreviewItem:
      title: Kubernetes Application Group Preview Item
      allOf:
        - $ref: '#/components/schemas/NameGUID'
        - properties:
            nameSpace:
              type: string
              format: ''
            type:
              type: string
              format: ''
              description: Application type of the content

    KubernetesApplicationGroupPreviewResp:
      title: Kubernetes Application Group Preview Response
      properties:
        protectedApplicationCount:
          type: integer
          format: int32
        applicationGroup:
          $ref: '#/components/schemas/IdName'
        applicationList:
          type: array
          items:
            $ref: '#/components/schemas/KubernetesPreviewItem'

    GetApplicationsList:
      title: Get Applications List
      properties:
        applicationCount:
          type: integer
          format: int32
        applications:
          type: array
          items:
            $ref: '#/components/schemas/KubernetesApplicationItem'

    ApplicationActivityControl:
      title: Kubernetes Application Activity Control Options
      properties:
        enableBackup:
          type: boolean
        enableRestore:
          type: boolean

    ApplicationSummaryInfo:
      title: Application Summary Info
      properties:
        SLA:
          $ref: '#/components/schemas/KubernetesSLADetails'
        applicationSize:
          type: integer
          format: int32
          description: Size of the application
        company:
          $ref: '#/components/schemas/IdName'
        cluster:
          $ref: '#/components/schemas/IdName'
        plan:
          $ref: '#/components/schemas/IdName'
        status:
          type: string
          description: 'The status of the backup for the VM, instance, or  container.'
          enum:
            - PROTECTED
            - NOT_PROTECTED
            - PENDING
            - BACKED_UP_WITH_ERROR
            - DISCOVERED
        applicationGroup:
          $ref: '#/components/schemas/IdName'
        provisionedSize:
          type: integer
          format: int32
          description: Provisioned size of the volumes

    JobIdTime:
      title: Job ID and Time
      description: Job ID and Time
      properties:
        jobId:
          type: integer
          format: int32
          description: Job ID of the backup job
        time:
          type: integer
          format: int32
          description: Backup job time (in epochs)

    KubernetesApplicationDetails:
      title: Kubernetes Application Details
      description: Details for a Kubernetes Application
      allOf:
        - properties:
            name:
              type: string
              format: ''
              description: Name of the Application
            GUID:
              type: string
              format: ''
              description: GUID of the Application
            activityControl:
              $ref: '#/components/schemas/ApplicationActivityControl'
        - $ref: '#/components/schemas/ApplicationSummaryInfo'

    KubernetesAppGroupBrowseNamespaceItem:
      title: Kubernetes Application Group Browse Namespace Item
      description: Details for individual namespace item of for Kubernetes Application Group
      properties:
        name:
          type: string
          format: ''
          description: Name of the Application
        GUID:
          type: string
          format: ''
          description: GUID of the Application
        kind:
          type: string
          format: ''
          description: Kubernetes resource Kind of the Application
        applicationSize:
          type: integer
          format: int32
          description: Backup size of the Application
        modificationTime:
          type: integer
          format: int32
          description: Modification time of the Application in epochs
        path:
          type: string
          format: ''
          description: Browse path of the Application
        backupJob:
          $ref: '#/components/schemas/JobIdTime'

    KubernetesAppGroupBrowseApplicationItem:
      title: Kubernetes Application Group Browse Item
      description: Details for individual item of browse response for Kubernetes Application Group
      allOf:
        - $ref: '#/components/schemas/KubernetesAppGroupBrowseNamespaceItem'
        - properties:
            nameSpace:
              type: string
              format: ''
              description: Namespace name of the Application

    KubernetesAppGroupNamespaceBrowseResp:
      title: Kubernetes Application Group Namespace Browse Response
      description: Details for Namespace browse response for Kubernetes Application Group
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/KubernetesAppGroupBrowseNamespaceItem'

    KubernetesAppGroupApplicationBrowseResp:
      title: Kubernetes Application Group Application Browse Response
      description: Details for Application browse response for Kubernetes Application Group
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/KubernetesAppGroupBrowseApplicationItem'

    KubernetesNamespaceRestoreItem:
      title: Kubernetes Namespace Restore Item
      description: Structure describing each namespace item for restore
      allOf:
        - $ref: '#/components/schemas/NameGUID'
        # Not supported yet. Un-comment when support is added.
        # - properties:
        #     storageClass:
        #       type: array
        #       items:
        #         properties:
        #           source:
        #             type: string
        #             format: ''
        #             example: rook-ceph-block
        #           destination:
        #             type: string
        #             format: ''
        #             example: rook-cephfs
      required:
        - GUID

    KubernetesApplicationRestoreItem:
      title: Kubernetes Namespace Restore Item
      description: Structure describing each namespace item for restore
      allOf:
        - $ref: '#/components/schemas/NameGUID'
        - properties:
            nameSpace:
              type: string
              format: ''
              description: Specify destination namespace of the Application (Picks the source namespace if not specified)
              example: simple-depl-rst
            storageClass:
              type: string
              format: ''
              description: Specify destination storage class to use for restoring PVC (Picks the source storage class if not specified)
              example: azure-csi-disk
      required:
        - GUID

    KubernetesAppGroupAppAndNamespaceItem:
      title: Kubernetes Application Group Namespace and App Item
      description: Kubernetes Application Group Namespace and App Item
      properties:
        inPlace:
          type: boolean
          description: Run In-Place restore job
        destinationCluster:
          $ref: '#/components/schemas/IdName'
        accessNode:
          $ref: '#/components/schemas/IdName'
        overwrite:
          type: boolean
          description: Overwrite if already present
          default: false
        timeRange:
          $ref: '#/components/schemas/TimeRange'
        modifier:
          type: string
          format: ''
          description: Specify list of resource modifier YAML as a string
          example: 'apiVersion: v1\r\nkind: List\r\nitems:\r\n  - apiVersion: k8s.cv.io\/v1\r\n    kind: RestoreModifier\r\n    metadata:\r\n      name: test-mod\r\n      namespace: cv-config\r\n    spec:\r\n      modifiers:\r\n        - action: Add\r\n          parameters: Exact\r\n          path: \/new\r\n          selectorId: 9fb3a4a2-0f03-4dc0-93d4-4eabffe31b35\r\n          value: value\r\n      selectors:\r\n        - id: 9fb3a4a2-0f03-4dc0-93d4-4eabffe31b35\r\n          name: Pod\r\n\r\n'

    KubernetesAppGroupNamespaceRestore:
      title: Kubernetes Application Group Namespace-Level Restore Request
      description: Request body for Namespace-Level Restore of Application Group
      allOf:
        - properties:
            restoreApplications:
              type: boolean
              description: Restore Applications of the Namespace
              default: true
            namespaces:
              type: array
              items:
                $ref: '#/components/schemas/KubernetesNamespaceRestoreItem'
        - $ref: '#/components/schemas/KubernetesAppGroupAppAndNamespaceItem'
      x-examples:
        CrossClusterOverwrite:
          inPlace: false
          destinationCluster:
            id: 5
            name: restore-cluster
          accessNode:
            id: 2
            name: bastion01
          restoreApplications: true
          namespaces:
            - name: simple-depl-rst
              GUID: simple-depl`Namespace`simple-depl`85f12c05-ecfb-4045-9bf5-7a70816d3e3d
          overwrite: true
          modifier: 'apiVersion: v1\r\nkind: List\r\nitems:\r\n  - apiVersion: k8s.cv.io\/v1\r\n    kind: RestoreModifier\r\n    metadata:\r\n      name: test-mod\r\n      namespace: cv-config\r\n    spec:\r\n      modifiers:\r\n        - action: Add\r\n          parameters: Exact\r\n          path: \/new\r\n          selectorId: 9fb3a4a2-0f03-4dc0-93d4-4eabffe31b35\r\n          value: value\r\n      selectors:\r\n        - id: 9fb3a4a2-0f03-4dc0-93d4-4eabffe31b35\r\n          name: Pod\r\n\r\n'

    KubernetesAppGroupApplicationRestore:
      title: Kubernetes Application Group Full Application Restore Request
      description: Request body for Full Application Restore of Application Group
      allOf:
        - properties:
            applications:
              type: array
              items:
                $ref: '#/components/schemas/KubernetesApplicationRestoreItem'
        - $ref: '#/components/schemas/KubernetesAppGroupAppAndNamespaceItem'
      x-examples:
        CrossClusterOverwrite:
          inPlace: false
          destinationCluster:
            id: 5
            name: restore-cluster
          accessNode:
            id: 2
            name: bastion01
          applications:
            - name: my-deployment-renamed
              GUID: simple-depl`Deployment`my-deployment-same-app`26aeacdb-96f3-4e93-9118-07c1345ea133
              storageClass: rook-cephfs
              nameSpace: simple-depl-rst
          overwrite: true
          modifier: 'apiVersion: v1\r\nkind: List\r\nitems:\r\n  - apiVersion: k8s.cv.io\/v1\r\n    kind: RestoreModifier\r\n    metadata:\r\n      name: test-mod\r\n      namespace: cv-config\r\n    spec:\r\n      modifiers:\r\n        - action: Add\r\n          parameters: Exact\r\n          path: \/new\r\n          selectorId: 9fb3a4a2-0f03-4dc0-93d4-4eabffe31b35\r\n          value: value\r\n      selectors:\r\n        - id: 9fb3a4a2-0f03-4dc0-93d4-4eabffe31b35\r\n          name: Pod\r\n\r\n'

    VirtualLabIPSettings:
      title: VirtualLabIPSettings
      type: object
      properties:
        networkName:
          type: string
        ipAddressRange:
          type: string
        subnetMask:
          type: string
        defaultGatewayIP:
          type: string
      description: IP settings containing mappings of IP address range to the destination network
    StorageSubType:
      title: StorageSubType
      type: string
      enum:
        - ALL
        - IBMi_VTL
        - ALL_EXCEPT_IBMi_VTL
        - METALLIC
        - METALLIC_CLOUD_STORAGE
        - ALL_INCLUDING_METALLIC_CLOUD_STORAGE
        - ALL_EXCEPT_METALLIC_CLOUD_STORAGE
    ServiceMeshClientProperties:
      title: ServiceMeshClientProperties
      type: object
      properties:
        kubeAPIURL:
          type: string
          description: Kubernetes API server URL
        serviceDomainName:
          type: string
          description: Domain of services deployed in the kubernetes cluster.
        adminPortalURL:
          type: string
          description: Admin Portal URL to access the service mesh configuration details.
        ingressBaseURL:
          type: string
          description: Ingress Base URL to access or send requests to services deployed in the Service mesh
        vaultBaseURL:
          type: string
          description: Vault Base URL to access Hashicorp Vault UI
        serviceMeshVendor:
          type: integer
          format: int32
          description: Service mesh vendor type
    CreateServiceMeshReq:
      allOf:
        - $ref: '#/components/schemas/ServiceMeshClientProperties'
        - properties:
            name:
              type: string
              description: Service mesh Client name
      description: Create Service mesh client request with properties payload
      title: CreateServiceMeshReq
    UpdateServiceMeshReq:
      allOf:
        - $ref: '#/components/schemas/ServiceMeshClientProperties'
        - properties:
            name:
              type: string
              description: Service Mesh Client name
      description: Update Service mesh request with properties payload
      title: UpdateServiceMeshReq
    AlertRuleQueryCreator:
      type: object
      description: details of the query creator
      properties:
        userName:
          type: string
          description: name of the query creator
        userId:
          type: integer
          format: int32
          description: unique id of the user
    ScriptDescriptionDetails:
      type: object
      description: contains script details
      properties:
        reportName:
          type: string
          description: name of the report
        description:
          type: string
        guid:
          type: string
          description: unique identifier for the script
    AlertRuleAdditionalQueryDetails:
      type: object
      description: contains additional query details
      properties:
        querySeverity:
          type: string
          description: 'query severity level value'
          format: ''
          enum:
            - NONE
            - CRITICAL
            - WARNING
            - INFORMATION
          default: NONE
        scriptDescription:
          $ref: '#/components/schemas/ScriptDescriptionDetails'
    AlertRuleQueryEntity:
      type: object
      description: contains query details
      properties:
        queryId:
          type: integer
          format: int32
          description: unique id of the query
        queryName:
          type: string
          description: name of the query
    AlertRuleQueryOutputColumnObject:
      type: object
      description: contains output column details
      properties:
        isColumnFilterable:
          type: boolean
        lmDataType:
          type: integer
          format: int32
        isPrimaryKey:
          type: boolean
        columnFriendlyName:
          type: string
        columnName:
          type: string
    AlertRuleQueryOutputColumns:
      type: array
      description: list of the output columns associated with the alert rule
      items:
        $ref: '#/components/schemas/AlertRuleQueryOutputColumnObject'
    AlertRuleAssociationsUserorGroup:
      type: object
      properties:
        userId:
          type: integer
          format: int32
        providerId:
          type: integer
          format: int32
        userName:
          type: string
        __type__:
          type: integer
          format: int32
        providerDomainName:
          type: string
    AlertRuleAssociationsObject:
      type: object
      properties:
        ref: '#/components/schemas/AlertRuleAssociationsUserorGroup'
    AlertRuleSecurityAssociations:
      type: object
      description: contains associations
      title: ''
      properties:
        associations:
          type: array
          description: contains list of security associations
          items:
            $ref: '#/components/schemas/AlertRuleAssociationsObject'
    AlertRuleQueryEntityDetails:
      type: object
      description: query entity object
      properties:
        isQueryModifyEnabled:
          type: boolean
        visibility:
          type: integer
          format: int32
          description: whether its private or public
        sqlQuery:
          type: string
        doesQuerySupportOutputFilter:
          type: boolean
        frequency:
          type: integer
          format: int32
        isOverwriteAssociationAtAlertAllowed:
          type: boolean
        isSystemCreated:
          type: boolean
          description: whether its system created or not
        isPrimaryKeyPresent:
          type: boolean
          description: whether primary key is present or not
        isDisabled:
          type: boolean
          description: whether its disabled or not
        queryDescription:
          type: string
          description: brief description of the query
        queryCriteriaName:
          type: string
          description: criteria name of the query
        customAlertType:
          type: integer
          format: int32
          description: alert type enum value
        creator:
          $ref: '#/components/schemas/AlertRuleQueryCreator'
        additionalQueryDetails:
          $ref: '#/components/schemas/AlertRuleAdditionalQueryDetails'
        queryEntity:
          $ref: '#/components/schemas/AlertRuleQueryEntity'
        queryOutputColumns:
          $ref: '#/components/schemas/AlertRuleQueryOutputColumns'
        securityAssociations:
          $ref: '#/components/schemas/AlertRuleSecurityAssociations'
    AlertRulesDetailsList:
      type: object
      description: list of the alert rules
      title: Alert rules list
      properties:
        queryEntities:
          type: array
          description: list of query entities
          items:
            $ref: '#/components/schemas/AlertRuleQueryEntityDetails'
    AlertRuleGenericResp:
      type: object
      description: contains processing instruction information
      properties:
        errorCode:
          type: integer
          format: int32
          description: error code value
        attributes:
          type: array
          description: list of attributes
          items:
            $ref: '#/components/schemas/NameValue'
    AlertCategoryIdNameValue:
      allOf:
        - $ref: '#/components/schemas/AlertTypeIdName'
        - type: object
          description: category utilized in alert definition creation
          properties:
            value:
              type: string
              enum:
                - DATA_AGING
                - AUX_COPY
                - DATA_PROT
                - DATA_RECOV
                - DATA_VERIFI
                - CLIENTS
                - MEDIA_AGENTS
                - LIB_MAN
                - DEVICE_STATUS
                - DATA_CLASSIFI
                - DEDUPDBSYNC
                - EVENT_MONITORING
                - LICENSE
                - CUSTOM_QUERY
                - USERS
                - EDGE_DRIVE
                - COMMSERV_FAILOVER
                - ADMIN_ALERT
                - REPLICATION_ALERT
    AlertCriteriaIdNameValue:
      allOf:
        - $ref: '#/components/schemas/AlertCriteriaIdName'
        - type: object
          description: criteria utilized in alert definition creation
          properties:
            value:
              type: string
              enum:
                - SUCCEEDED
                - FAILURE_ATTEMTS
                - FAILED
                - SKIPPED
                - DELAYED
                - MEDIA_REQUIRED
                - INITIATED
                - ROLLED_BACK
                - MEDIA_NEEDS_IMPORT
                - MEDIA_HANDLING_REQUIRED
                - MEDIA_PICKED_UP
                - MEDIA_REACHED_DESTINATION
                - MEDIA_RET_SOURCE
                - JOB_ACTIVITY
                - ASR_BACKUP_OCCURED
                - PROPERTIES_MODIFIED
                - ALERT_MODIFIED
                - DISK_SPACE_LOW
                - FORCED_DECONF
                - LIBRARY_OFFLINE
                - SCHEDULER_CHANGES
                - INSUFF_STORAGE
                - TAPE_HANDLING_ERR
                - TAPE_HANDLING_REQ
                - TAPE_MOUNT_ERR
                - MAINT_REQ
                - MAINT_OCCURED
                - USE_OVERWRITE_MEDIA
                - DRIVE_OFFLINE
                - MEDIAAGENT_OFFLINE
                - MOUNTPATH_OFFLINE
                - NW_FAILURE_ATTEMTS
                - JOURNAL_MAILBOX
                - JR_DISK_SPACE_LOW
                - IC_DISK_SPACE_LOW
                - UPDATE_REQUIRED
                - DOWNLOAD_REQUIRED
                - UPDATES_AVAILABLE
                - RELEASE_UPGRADE_REQUIRED
                - UPDATES_REQUIRED
                - MEDIA_READY_IN_CAP
                - FLR_LOG_FILE_HIGH
                - FLR_FREE_SPACE_LOG_FILE_VOL_LOW
                - FLR_NO_PLAY_ACTIVITY
                - FLR_NO_TRANSFER_ACTIVITY
                - NO_DATA_PROTECTION
                - CLASSIFICATION_FAILED
                - FLR_FAILED_REPLICATION
                - SHAREPOINT_VIRTUAL_SERVERS
                - SHAREPOINT_V3_UPGRADE
                - LIBR_MEDIA_RECALLED
                - BACKUP_SIZE_ANOMALY_INCR
                - BACKUP_SIZE_ANOMALY_DECR
                - JOB_STARTED
                - LOGIN_FAILED
                - AUXCOPY_FALLEN_BEHIND
                - SUCCESS_WITH_ERRORS
                - LICENSE_EXPIRY
                - CCP_MODIFIED
                - LICENSE_CONSUMED
                - LOG_MONITORING
                - EVENT_MONITORING
                - LIBR_NONENCRYPTED_MEDIA_EXPORT
                - CICOPY_FALLEN_BEHIND
                - CLIENT_JOB_NOT_RUN
                - CLIENT_CERTIFICATE_EXPIRY
                - JOB_EXCEEDED_RUNNINGTIME
                - FILES_FAILED_COUNT
                - FILES_FAILED_PERCENT
                - DDB_CORRUPTED
                - SUCCESSIVE_FAILED
                - DDB_DISK_SPACE_LOW
                - JOBS_PENDING_STATE
                - BACKUP_SIZE
                - GENERIC_QUERY
                - JOB_COMMITTED
                - JOB_RESULTS_DISK_SPACE_LOW
                - INDEX_CACHE_DISK_SPACE_LOW
                - GALAXY_DIR_DISK_SPACE_LOW
                - QUOTA_EXCEEDED
                - QUOTA_THREASHOLD
                - QUOTA_VALIDATION_FAILED
                - EDGE_DRIVE_ACTION
                - NT_DDB_OFFLINE
                - NT_OBJECT_COUNT_INCR_PERCENT
                - NT_FAILOVER_STARTED
                - NT_FAILOVER_ACTIVITY
                - NT_FAILOVER_COMPLETE
                - NT_FAILOVER_FAILED
                - NT_FAILOVER_CS_UNREACHABLE
                - NT_FAILOVER_CS_NOT_RUNNING
                - NT_FAILOVER_PASSIVE_NODE_UNREACHABLE
                - NT_ADMIN_ALERT_EVENT_ANOMALOUS
                - NT_ADMIN_ALERT_JOB_RUNTIME_ANOMALOUS
                - NT_ANOMALOUS_PENDING_JOBS
                - NT_ANOMALOUS_FAILED_JOBS
                - NT_ALL_CRITERIA
                - NT_FILE_SYSTEM_QUOTA_EXCEEDED
                - NT_FILE_SYSTEM_QUOTA_THRESHOLD
                - NT_FILE_SYSTEM_QUOTA_VALIDATION_FAILED
                - NT_ADMIN_ALERT_JOB_ACTIVITY_ANOMALOUS
                - NT_ANOMALOUS_SUCCEEDED_JOBS
                - NT_CLIENT_OFFLINE
                - NT_ADMIN_ALERT_DDB_PRUNING_ANOMALOUS
                - NT_ADMIN_ALERT_SMART_STATE_MA
                - NT_JOB_SUCCEEDED_WITH_WARNINGS
                - NT_ADMIN_ALERT_PREDICT_SLA_FALL
                - NT_ADMIN_ALERT_SALESFORCE_OBJECT_BACKUP_ANOMALOUS
                - NT_REPLICATION_JOB_NOT_RUN
                - NT_DELAYED_REPLICATION
                - NT_REPLICATION_STATUS_IN_SYNC
                - NT_REPLICATION_STATUS_SYNC_PENDING
                - NT_REPLICATION_STATUS_SYNC_PAUSED
                - NT_REPLICATION_STATUS_SYNC_FAILED
                - NT_FAILOVER_STATUS_FAILOVER_FAILED
                - NT_FAILOVER_STATUS_FAILOVER_COMPLETE
                - NT_FAILOVER_STATUS_FAILBACK_FAILED
                - NT_FAILOVER_STATUS_REVERT_FAILOVER_FAILED
    AlertTypeItem:
      type: object
      properties:
        category:
          $ref: '#/components/schemas/AlertCategoryIdNameValue'
        categoryType:
          $ref: '#/components/schemas/AlertCategoryIdName'
        criteria:
          $ref: '#/components/schemas/AlertCriteriaIdNameValue'
        queryDetail:
          $ref: '#/components/schemas/IdName'
        actionsAllowed:
          type: integer
          description: bit flag indicating actions allowed on this alert type. 128 means subscription support is present.
          format: int32
        processDiscoveredVMs:
          type: boolean
          default: false
          description: whether process discovered virtual machines enabled or not
        notificationOptionsAllowed:
          type: integer
          format: int32
          description: Bit flag indicating notification criteria value. 1 means immediate, 2 means repeated and 8 means delayed
    AlertTypeResp:
      type: object
      description: list of alert types and alert custom rules
      title: Alert Types List
      properties:
        alertTypes:
          type: array
          items:
            $ref: '#/components/schemas/AlertTypeItem'
    GetServiceMeshDetailsResp:
      allOf:
        - $ref: '#/components/schemas/IdNameDisplayName'
        - $ref: '#/components/schemas/ServiceMeshClientProperties'
      description: Service mesh client details properties
      title: GetServiceMeshDetailsResp
    GetRunningJobsIdList:
      type: object
      description: List of running jobs
      properties:
        jobIds:
          type: array
          items:
            type: integer
            format: int64
    ErrorCode:
      type: string
      title: ErrorCode
      enum:
        - NO_ERROR
        - INVALID_INPUT
        - VALUE_NOT_FOUND
        - UNKNOWN_EXCEPTION
        - CONNECTION_PROBLEM
        - UNKNOWN_SQL_ERROR
        - INVALID_USER
        - INVALID_OPERATION_TYPE
        - INTERNAL_SERVER_PROBLEM
        - INSUFFICIENT_USER_PERMISSION_ON_ENTITY
        - INVALID_ENTITY_ID
      description: Error code value
    GenericResponse:
      title: GenericResponse
      type: object
      properties:
        errorMessage:
          type: string
          description: Tells about the error occured
          nullable: true
        errorCode:
          $ref: '#/components/schemas/ErrorCode'
    GCPReplicationGroup:
      title: GCPReplicationGroup
      allOf:
        - $ref: '#/components/schemas/ReplicationGroup'
        - type: object
          properties:
            advancedOption:
              $ref: '#/components/schemas/ReplicationGroupAdvOptionsGCP'
            replicationConfiguration:
              type: array
              items:
                $ref: '#/components/schemas/ReplicationConfigurationGCP'
            vendor:
              type: string
              enum:
                - Google
              description: Vendor type of this replication group. Values in enum are case sensitive
          required:
            - vendor
      description: Replication group details pertaining to GCP
    ReplicationGroupAdvOptionsGCP:
      allOf:
        - $ref: '#/components/schemas/ReplicationGroupAdvancedOptions'
        - type: object
          properties:
            unconditionalOverwrite:
              type: boolean
              description: This will replace the instance at the destination if the instance with the same name already exists.
    ReplicationConfigurationGCP:
      title: ReplicationConfigurationGCP
      type: object
      description: Model to store configuration per VM
      properties:
        sourceVM:
          type: string
          description: Source VM instance name
        sourceVMGuid:
          type: string
          description: Source VM instance guid
        destinationVM:
          type: string
          description: Destination VM instance name
        primaryZone:
          type: string
          description: Primary zone of the destination VM instance
        datacenter:
          type: string
          description: Datacenter of the destination VM instance
        projectId:
          type: string
          description: Gcp project id
        createPublicIP:
          type: boolean
          description: Public/External IP of the destination VM instance
        machineType:
          type: string
          description: Destination VM instance machine type
        secondaryZone:
          type: string
          description: Secondary zone of the destination VM instance
        overrideReplicationOptions:
          $ref: '#/components/schemas/OverrideReplicationOptionsGCP'
    OverrideReplicationOptionsGCP:
      title: OverrideReplicationOptionsGCP
      type: object
      description: Extended instance configuration options
      properties:
        tags:
          $ref: '#/components/schemas/NameValue'
        vmNodeAffinity:
          $ref: '#/components/schemas/NameValue'
        network:
          $ref: '#/components/schemas/Network'
      x-examples:
        Example 1:
          network:
            networkDisplayName: vsa-vpc-jas-useast1
            networkName: 'https://www.googleapis.com/compute/v1/projects/vsa-dev-298916/global/networks/vsa-vpc-jas-useast1'
            subnetId: 'https://www.googleapis.com/compute/v1/projects/vsa-dev-298916/regions/us-east1/subnetworks/vsa-vpc-subnet-jas-useast1'
          tags:
            - name: name
              value: TestVM
          vmNodeAffinity:
            - name: compute.googleapis.com/node-group-name
              value: node-group-1
            - name: compute.googleapis.com/node-name
              value: node-group-1-szb3
    AnomalousAudit:
      title: AnomalousAudit
      type: object
      description: structure to hold audit details
      properties:
        operation:
          type: string
          description: Audit operation
        user:
          $ref: '#/components/schemas/IdName'
        fromTime:
          type: integer
          format: int32
          description: time from when the audit operation was anomalous
        toTime:
          type: integer
          format: int32
          description: time till which the audit operaion was anomalous
        count:
          type: integer
          format: int32
          description: number of audit operations in the given time
        messageId:
          type: integer
          format: int32
          description: messageid of the audit operation
    AnomalousAuditsResp:
      title: AnomalousAuditsResp
      type: object
      description: structure to hold anomalous audits
      properties:
        audits:
          type: array
          description: list of audit objects
          items:
            $ref: '#/components/schemas/AnomalousAudit'
    CreateRecoveryGroupResp:
      title: CreateRecoveryGroupResp
      description: Model for update create recovery group
      type: object
      properties:
        recoveryGroup:
          $ref: '#/components/schemas/IdName'
        error:
          $ref: '#/components/schemas/GenericResp'
    DeleteRecoveryEntityReq:
      title: DeleteRecoveryEntityReq
      type: object
      properties:
        recoveryGroup:
          $ref: '#/components/schemas/IdName'
        recoveryEntities:
          type: array
          items:
            type: integer
            format: int32
    RecoveryStatus:
      type: string
      description: Status of recovery entity
      enum:
        - NO_STATUS
        - NOT_READY
        - READY
        - RECOVERED
        - FAILED
        - RECOVERED_WITH_ERRORS
        - IN_PROGRESS
        - CLEANED_UP
        - MARK_AS_FAILED
        - CLEANUP_FAILED
    RecoveryStatusNotReadyCategory:
      type: string
      description: Recovery status not ready category
      enum:
        - NONE = 0
        - INVALID_VM_NAME = 1
        - INVALID_COPY = 2
        - MARK_AS_FAILED = 4
        - INVALID_SMART_FOLDER = 8
        - MANAGED_IDENTITY_ENABLED = 16
    ValidationStatus:
      type: string
      description: Validation status of recovery entity
      enum:
        - NO_STATUS
        - IN_PROGRESS
        - SUCCESS
        - FAILED
    DeleteOffice365AzureAppEntity:
      type: object
      properties:
        applicationId:
          type: string
          description: Azure application id
        credentialId:
          type: integer
          description: Credential manager id of the azure application. Only deletes association to the client.
          format: int64
      required:
        - applicationId
    DeleteOffice365AzureAppReq:
      type: object
      properties:
        apps:
          type: array
          items:
            $ref: '#/components/schemas/DeleteOffice365AzureAppEntity'
    UpdateOffice365AzureAppResp:
      allOf:
        - $ref: '#/components/schemas/GenericResp'
    UpdateOffice365AzureAppEntity:
      allOf:
        - $ref: '#/components/schemas/AzureAdApp'
        - type: object
          properties:
            applicationName:
              type: string
              description: Azure application display name.
    UpdateOffice365AzureAppReq:
      type: object
      properties:
        apps:
          type: array
          items:
            $ref: '#/components/schemas/UpdateOffice365AzureAppEntity'
    GetOffice365AzureAppFlags:
      type: string
      description: Additional flags of the azure application.
      enum:
        - CREDENTIAL_APP
        - MULTI_TENANT_APP
        - TEAMS_CHANNEL_CHAT_FREE_PROTECTED_API
        - TEAMS_CHANNEL_CHAT_PAID_EXPORT_API
        - TEAMS_CHANNEL_CHAT_SERVICE_ACCOUNT_BASED
        - TEAMS_PERSONAL_CHAT_FREE_CHAT_API
        - TEAMS_PERSONAL_CHAT_PAID_EXPORT_API
    GetOffice365AzureAppEntity:
      allOf:
        - $ref: '#/components/schemas/AzureAdApp'
        - type: object
          properties:
            applicationName:
              type: string
              description: Azure application display name.
            applicationStatus:
              type: string
              description: Azure application connection status.
              enum:
                - AUTHORIZED
                - NOT_AUTHORIZED
                - NOT_SYNCED
                - THROTTLED
                - INCOMPLETE_PERMISSIONS
                - NOT_AVAILABLE
                - PROTECTED_APIS_INACCESSIBLE
                - INVALID_REPLY_URL
                - INVALID_TOKEN
                - INCORRECT_CREDENTIALS
                - SHAREPOINT_APP_PRINCIPAL_MISSING
                - INCORRECT_CERTIFICATE_CREDENTIALS
                - INCORRECT_SECRET_AND_CERTIFICATE_CREDENTIALS
            credentialId:
              type: integer
              description: Credential manager id of the azure application.
              format: int64
            flags:
              type: array
              items:
                $ref: '#/components/schemas/GetOffice365AzureAppFlags'
    GetOffice365AzureAppResp:
      type: object
      properties:
        count:
          type: integer
          format: int32
        azureDirectoryId:
          type: string
          description: Azure application directory id.
        apps:
          type: array
          items:
            $ref: '#/components/schemas/GetOffice365AzureAppEntity'
    Office365ClientData:
      allOf:
        - $ref: '#/components/schemas/IdName'
        - type: object
          properties:
            itemsBackedUp:
              type: integer
              description: Number of items backed up for this client.
              format: int64
            associatedEntities:
              type: integer
              description: Number of entities associated for this client.
              format: int64
            backupSize:
              type: integer
              description: Backup size in bytes for this client.
              format: int64
            backupHealthPercentage:
              type: number
              description: Value of backup health percentage for this client
              format: float
            serverPlan:
              $ref: '#/components/schemas/IdName'
            company:
              $ref: '#/components/schemas/IdName'
    Office365ClientsResp:
      type: object
      properties:
        totalRecords:
          type: integer
          format: int64
        clients:
          type: array
          items:
            $ref: '#/components/schemas/Office365ClientData'
    Office365AllClientData:
      allOf:
        - $ref: '#/components/schemas/Office365ClientData'
        - type: object
          properties:
            type:
              type: string
              description: Agent type of this client
              enum:
                - EXCHANGE
                - ONEDRIVE
                - SHAREPOINT
                - TEAMS
    Office365AllClientsResp:
      type: object
      properties:
        totalRecords:
          type: integer
          format: int64
        clients:
          type: array
          items:
            $ref: '#/components/schemas/Office365AllClientData'
    Office365CommonInfo:
      type: object
      properties:
        office365Plan:
          $ref: '#/components/schemas/IdName'
        status:
          type: string
          enum:
            - INCLUDED_IN_BACKUP
            - DELETED_FROM_CONTENT
            - EXCLUDED_FROM_BACKUP
    Office365ExchangeContentData:
      allOf:
        - $ref: '#/components/schemas/NameGUID'
        - $ref: '#/components/schemas/Office365CommonInfo'
        - type: object
          properties:
            emailAddress:
              type: string
              description: Email Address for the content association
            type:
              type: string
              description: Type of the entity.
              enum:
                - ALL_MAILBOXES
                - ALL_PUBLIC_FOLDERS
                - ALL_OFFICE365_GROUP_MAILBOXES
                - AD_GROUP
                - CUSTOM_CATEGORY
    Office365OnedriveContentData:
      allOf:
        - $ref: '#/components/schemas/NameGUID'
        - $ref: '#/components/schemas/Office365CommonInfo'
        - type: object
          properties:
            emailAddress:
              type: string
              description: Email Address for the content association
            type:
              type: string
              description: Type of the entity.
              enum:
                - ALL_USERS
                - GROUP
                - CUSTOM_CATEGORY
    Office365SharepointContentData:
      allOf:
        - $ref: '#/components/schemas/NameGUID'
        - $ref: '#/components/schemas/Office365CommonInfo'
        - type: object
          properties:
            emailAddress:
              type: string
              description: Email Address for the content association
            type:
              type: string
              description: Type of the entity.
              enum:
                - ALL_SITES
                - ALL_PROJECT_ONLINE_SITES
                - ALL_TEAMS_SITES
                - CUSTOM_CATEGORY
    Office365TeamsContentData:
      allOf:
        - $ref: '#/components/schemas/NameGUID'
        - $ref: '#/components/schemas/Office365CommonInfo'
        - type: object
          properties:
            emailAddress:
              type: string
              description: Email Address for the content association
            type:
              type: string
              description: Type of the entity.
              enum:
                - ALL_TEAMS
                - ALL_USERS
                - GROUP
                - CUSTOM_CATEGORY
    Office365ExchangeContentResp:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/Office365ExchangeContentData'
    Office365OnedriveContentResp:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/Office365OnedriveContentData'
    Office365SharepointContentResp:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/Office365SharepointContentData'
    Office365TeamsContentResp:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/Office365TeamsContentData'
    Office365ContentIndividualBackupStats:
      type: object
      properties:
        lastBackup:
          type: integer
          description: Time of last backup in UNIX time.
          format: int64
        activeBackupSize:
          type: integer
          description: Size of active backups in bytes.
          format: int64
        inactiveBackupSize:
          type: integer
          description: Size of inactive backups in bytes.
          format: int64
        totalBackupSize:
          type: integer
          description: Total size of all backups in bytes.
          format: int64
        activeItemsBackedUp:
          type: integer
          description: Active backup items count.
          format: int64
        InactiveItemsBackedUp:
          type: integer
          description: Inactive backup items count.
          format: int64
        TotalItemsBackedUp:
          type: integer
          description: Total backup items count.
          format: int64
        lastBackupStatus:
          type: string
          description: status of last backup for this entity
          enum:
            - NONE
            - FAILED
            - SKIPPED
            - SUCCESSFUL
            - CWE
        lastBackupAttempt:
          type: integer
          description: Time of last backup attempt in UNIX time.
          format: int64
        lastAttemptJobId:
          type: integer
          description: Job Id of the last backup job.
          format: int32
        failedItemsCount:
          type: integer
          description: Count of the failed items in the backup.
          format: int64
    Office365MailboxData:
      allOf:
        - $ref: '#/components/schemas/Office365ContentIndividualBackupStats'
        - $ref: '#/components/schemas/NameGUID'
        - $ref: '#/components/schemas/Office365CommonInfo'
        - type: object
          properties:
            emailAddress:
              type: string
              description: Email Address of the mailbox
            type:
              type: string
              description: Exchange Entity type.
              enum:
                - USER_MAILBOX
                - GROUP_MAILBOX
                - SHARED_MAILBOX
    Office365MailboxesResp:
      type: object
      properties:
        totalRecords:
          type: integer
          format: int64
        mailboxes:
          type: array
          items:
            $ref: '#/components/schemas/Office365MailboxData'
    Office365SiteData:
      allOf:
        - $ref: '#/components/schemas/Office365ContentIndividualBackupStats'
        - $ref: '#/components/schemas/NameGUID'
        - $ref: '#/components/schemas/Office365CommonInfo'
        - type: object
          properties:
            cvSharepointGUID:
              type: string
              description: Commvault Sharepoint GUID
            url:
              type: string
              description: Url of the site
            ItemType:
              type: string
              description: Type of the sharepoint item
              enum:
                - SUBSITE
                - SITE
            type:
              type: string
              description: Sharepoint Entity type.
              enum:
                - REGULAR_SITE
                - TEAM_SITE
                - ONLINE_SITE
    Office365SitesResp:
      type: object
      properties:
        totalRecords:
          type: integer
          format: int64
        sites:
          type: array
          items:
            $ref: '#/components/schemas/Office365SiteData'
    Office365TeamsData:
      allOf:
        - $ref: '#/components/schemas/Office365ContentIndividualBackupStats'
        - $ref: '#/components/schemas/NameGUID'
        - $ref: '#/components/schemas/Office365CommonInfo'
        - type: object
          properties:
            emailAddress:
              type: string
              description: Email Address of the Team
            teamType:
              type: string
              description: Type of the team
              enum:
                - PRIVATE
                - PUBLIC
            type:
              type: string
              description: Teams Entity type.
              enum:
                - TEAM
                - USER
    Office365TeamsResp:
      type: object
      properties:
        totalRecords:
          type: integer
          format: int64
        teams:
          type: array
          items:
            $ref: '#/components/schemas/Office365TeamsData'
    Office365TeamsUsersData:
      allOf:
        - $ref: '#/components/schemas/Office365ContentIndividualBackupStats'
        - $ref: '#/components/schemas/NameGUID'
        - $ref: '#/components/schemas/Office365CommonInfo'
        - type: object
          properties:
            emailAddress:
              type: string
              description: Email Address of the Teams user
            type:
              type: string
              description: Teams Entity type.
              enum:
                - TEAM
                - USER
    Office365TeamsUsersResp:
      type: object
      properties:
        totalRecords:
          type: integer
          format: int64
        teams:
          type: array
          items:
            $ref: '#/components/schemas/Office365TeamsUsersData'
    Office365OnedriveUserData:
      allOf:
        - $ref: '#/components/schemas/Office365ContentIndividualBackupStats'
        - $ref: '#/components/schemas/NameGUID'
        - $ref: '#/components/schemas/Office365CommonInfo'
        - type: object
          properties:
            emailAddress:
              type: string
              description: Email Address of the user
            adGroup:
              type: array
              items:
                $ref: '#/components/schemas/NameGUID'
    Office365OnedriveUsersResp:
      type: object
      properties:
        totalRecords:
          type: integer
          format: int64
        users:
          type: array
          items:
            $ref: '#/components/schemas/Office365OnedriveUserData'
    Office365MailboxesReqEntity:
      allOf:
        - $ref: '#/components/schemas/NameGUID'
        - type: object
          properties:
            emailAddress:
              type: string
              description: Email Address of the Mailbox
      required:
        - GUID
        - name
        - emailAddress
    Office365MailboxesReq:
      type: object
      properties:
        office365Plan:
          $ref: '#/components/schemas/IdName'
        mailboxes:
          type: array
          items:
            $ref: '#/components/schemas/Office365MailboxesReqEntity'
      required:
        - office365Plan
        - mailboxes
    Office365SitesReqEntity:
      allOf:
        - $ref: '#/components/schemas/NameGUID'
        - type: object
          properties:
            url:
              type: string
              description: Url of the site
            type:
              type: string
              description: Sharepoint Entity type.
              enum:
                - REGULAR_SITE
                - TEAM_SITE
                - ONLINE_SITE
              default: REGULAR_SITE
      required:
        - GUID
        - name
        - url
    Office365SitesReq:
      type: object
      properties:
        office365Plan:
          $ref: '#/components/schemas/IdName'
        sites:
          type: array
          items:
            $ref: '#/components/schemas/Office365SitesReqEntity'
      required:
        - office365Plan
        - sites
    Office365OnedriveUsersReqEntity:
      allOf:
        - $ref: '#/components/schemas/NameGUID'
        - type: object
          properties:
            emailAddress:
              type: string
              description: Email Address of the user
      required:
        - GUID
        - name
        - emailAddress
    Office365OnedriveUsersReq:
      type: object
      properties:
        office365Plan:
          $ref: '#/components/schemas/IdName'
        users:
          type: array
          items:
            $ref: '#/components/schemas/Office365OnedriveUsersReqEntity'
      required:
        - office365Plan
        - users
    Office365TeamsReqEntity:
      allOf:
        - $ref: '#/components/schemas/NameGUID'
        - type: object
          properties:
            emailAddress:
              type: string
              description: Email Address of the Team
            teamType:
              type: string
              description: Type of the team
              enum:
                - PRIVATE
                - PUBLIC
              default: PUBLIC
      required:
        - GUID
        - name
    Office365TeamsReq:
      type: object
      properties:
        office365Plan:
          $ref: '#/components/schemas/IdName'
        teams:
          type: array
          items:
            $ref: '#/components/schemas/Office365TeamsReqEntity'
      required:
        - office365Plan
        - teams
    Office365TeamsUsersReqEntity:
      allOf:
        - $ref: '#/components/schemas/NameGUID'
        - type: object
          properties:
            emailAddress:
              type: string
              description: Email Address of the Teams user
      required:
        - GUID
        - name
        - emailAddress
    Office365TeamsUsersReq:
      type: object
      properties:
        office365Plan:
          $ref: '#/components/schemas/IdName'
        users:
          type: array
          items:
            $ref: '#/components/schemas/Office365TeamsUsersReqEntity'
      required:
        - office365Plan
        - users
    Office365CustomCategoryCommonInfo:
      type: object
      properties:
        ruleOperator:
          type: string
          description: Operator of the custom category condition.
          enum:
            - CONTAINS
            - REGEX
            - STARTS_WITH
            - ENDS_WITH
            - BEFORE
            - AFTER
            - ON_OR_BEFORE
            - ON_OR_AFTER
            - LESS
            - GREATER
            - LESS_THAN_OR_EQUAL_TO
            - GREATER_THAN_OR_EQUAL_TO
            - EQUALS
            - NOT_EQUAL
        ruleValue:
          type: string
          description: Value of the custom category condition rule.
      required:
        - ruleOperator
        - ruleValue
    Office365SharepointCustomCategoryCondition:
      allOf:
        - $ref: '#/components/schemas/Office365CustomCategoryCommonInfo'
        - type: object
          properties:
            ruleName:
              type: string
              description: Sharepoint custom category rule name.
              enum:
                - GEO_LOCATION
                - LOCALE
                - SITE_COLLECTION_CLASSIFICATION
                - SITE_COLLECTION_URL
                - SITE_DESCRIPTION
                - SITE_URL
                - TIME_ZONE
                - SP_PROPERTY_BAG
            propertyBagName:
              type: string
              description: Sharepoint property bag name.
            propertyBagType:
              type: string
              description: Type of the sharepoint property bag value.
              enum:
                - DATE
                - DATETIME
                - NUMBER
                - STRING
                - TIME
          required:
            - ruleName
    Office365SharepointCustomCategoryReq:
      type: object
      properties:
        name:
          type: string
          description: Name of the custom category.
        office365Plan:
          $ref: '#/components/schemas/IdName'
        conditions:
          type: array
          items:
            $ref: '#/components/schemas/Office365SharepointCustomCategoryCondition'
      required:
        - name
        - office365Plan
        - conditions
    Office365OnedriveCustomCategoryCondition:
      allOf:
        - $ref: '#/components/schemas/Office365CustomCategoryCommonInfo'
        - type: object
          properties:
            ruleName:
              type: string
              description: Onedrive custom category rule name.
              enum:
                - LICENSE
                - USER_DISPLAY_NAME
                - USER_GEO_LOCATION
                - USER_SMTP_ADDRESS
          required:
            - ruleName
    Office365OnedriveCustomCategoryReq:
      type: object
      properties:
        name:
          type: string
          description: Name of the custom category.
        office365Plan:
          $ref: '#/components/schemas/IdName'
        conditions:
          type: array
          items:
            $ref: '#/components/schemas/Office365OnedriveCustomCategoryCondition'
      required:
        - name
        - office365Plan
        - conditions
    Office365ExchangeCustomCategoryCondition:
      allOf:
        - $ref: '#/components/schemas/Office365CustomCategoryCommonInfo'
        - type: object
          properties:
            ruleName:
              type: string
              description: Exchange custom category rule name.
              enum:
                - LICENSE
                - USER_DISPLAY_NAME
                - USER_GEO_LOCATION
                - USER_SMTP_ADDRESS
          required:
            - ruleName
    Office365ExchangeCustomCategoryReq:
      type: object
      properties:
        name:
          type: string
          description: Name of the custom category.
        office365Plan:
          $ref: '#/components/schemas/IdName'
        conditions:
          type: array
          items:
            $ref: '#/components/schemas/Office365ExchangeCustomCategoryCondition'
      required:
        - name
        - office365Plan
        - conditions
    Office365TeamsCustomCategoryCondition:
      allOf:
        - $ref: '#/components/schemas/Office365CustomCategoryCommonInfo'
        - type: object
          properties:
            ruleName:
              type: string
              description: Teams custom category rule name.
              enum:
                - TEAM_CREATED_TIME
                - TEAM_DISPLAY_NAME
                - TEAM_SMTP_ADDRESS
                - GROUP_OPEN_EXTENSION
            openExtensionName:
              type: string
              description: Name value of open extension if rule name is GROUP_OPEN_EXTENSION
          required:
            - ruleName
    Office365TeamsCustomCategoryReq:
      type: object
      properties:
        name:
          type: string
          description: Name of the custom category.
        office365Plan:
          $ref: '#/components/schemas/IdName'
        conditions:
          type: array
          items:
            $ref: '#/components/schemas/Office365TeamsCustomCategoryCondition'
      required:
        - name
        - office365Plan
        - conditions
    Office365ExchangeBkpContentEntity:
      type: object
      properties:
        type:
          type: string
          enum:
            - ALL_MAILBOXES
            - ALL_PUBLIC_FOLDERS
            - ALL_OFFICE365_GROUP_MAILBOXES
            - AD_GROUP
            - CUSTOM_CATEGORY
        name:
          type: string
          description: Name of the Exchange Content. Custom Category name if type is CUSTOM_CATEGORY. AD Group Name if type is AD_GROUP
      required:
        - type
        - name
    Office365ExchangeBackupReq:
      type: object
      properties:
        totalRunningTime:
          type: integer
          format: int32
          description: Total running time of the backup in minutes
        mailboxes:
          type: array
          items:
            $ref: '#/components/schemas/NameGUID'
        content:
          type: array
          items:
            $ref: '#/components/schemas/Office365ExchangeBkpContentEntity'
        type:
          type: string
          enum:
            - ALL_MAILBOXES
            - MAILBOXES_ARCHIVED_RECENTLY
            - MAILBOXES_NEVER_ARCHIVED
            - MAILBOXES_NOT_ARCHIVED_RECENTLY
    Office365OnedriveBkpContentEntity:
      type: object
      properties:
        type:
          type: string
          enum:
            - ALL_USERS
            - GROUP
            - CUSTOM_CATEGORY
        name:
          type: string
          description: Name of the Onedrive Content.
        GUID:
          type: string
          description: GUID is required if type is CUSTOM_CATEGORY or GROUP
      required:
        - type
        - name
    Office365OnedriveBackupReq:
      type: object
      properties:
        totalRunningTime:
          type: integer
          format: int32
          description: Total running time of the backup in minutes
        users:
          type: array
          items:
            $ref: '#/components/schemas/NameGUID'
        content:
          type: array
          items:
            $ref: '#/components/schemas/Office365OnedriveBkpContentEntity'
        type:
          type: string
          enum:
            - ALL_USERS
            - USERS_BACKED_UP_RECENTLY
            - USERS_NEVER_BACKED_UP
            - USERS_NOT_BACKED_UP_RECENTLY
    Office365SiteBkpRestoreEntity:
      allOf:
        - $ref: '#/components/schemas/NameGUID'
        - type: object
          properties:
            type:
              type: string
              description: Type of the sharepoint item
              enum:
                - SUBSITE
                - SITE
      required:
        - GUID
        - name
    Office365SharepointBackupReq:
      type: object
      properties:
        totalRunningTime:
          type: integer
          format: int32
          description: Total running time of the backup in minutes
        sites:
          type: array
          items:
            $ref: '#/components/schemas/Office365SiteBkpRestoreEntity'
        type:
          type: string
          enum:
            - ALL_SITES
            - SITES_BACKED_UP_RECENTLY
            - SITES_NEVER_BACKED_UP
            - SITES_NOT_BACKED_UP_RECENTLY
    Office365TeamsBkpContentEntity:
      type: object
      properties:
        type:
          type: string
          enum:
            - GROUP
            - CUSTOM_CATEGORY
            - ALL_TEAMS
            - ALL_USERS
        name:
          type: string
          description: Name of the Teams Content.
        GUID:
          type: string
          description: GUID is required if type is CUSTOM_CATEGORY or GROUP
      required:
        - type
        - name
        - GUID
    Office365TeamsBackupReq:
      type: object
      properties:
        totalRunningTime:
          type: integer
          format: int32
          description: Total running time of the backup in minutes
        teams:
          type: array
          items:
            $ref: '#/components/schemas/NameGUID'
        users:
          type: array
          items:
            $ref: '#/components/schemas/NameGUID'
        content:
          type: array
          items:
            $ref: '#/components/schemas/Office365TeamsBkpContentEntity'
        type:
          type: string
          enum:
            - ALL_TEAMS
            - TEAMS_BACKED_UP_RECENTLY
            - TEAMS_NEVER_BACKED_UP
            - TEAMS_NOT_BACKED_UP_RECENTLY
    Office365ExchRestoreCommonOptions:
      type: object
      properties:
        ifMessageExists:
          type: string
          enum:
            - SKIP
            - UNCONDITIONALLY_OVERWRITE
          default: SKIP
        deletedItems:
          type: boolean
          description: Include deleted items on Restore
        matchEmailAddress:
          type: boolean
          description: Match destination user based on the email address
    Office365ExchMailboxRestoreEntity:
      allOf:
        - $ref: '#/components/schemas/NameGUID'
        - type: object
          properties:
            emailAddress:
              type: string
              description: Email Address is needed if matchEmailAddress is set to true.
      required:
        - GUID
        - name
    Office365ExchangeRestoreReq:
      allOf:
        - $ref: '#/components/schemas/Office365ExchRestoreCommonOptions'
        - type: object
          properties:
            mailboxes:
              type: array
              items:
                $ref: '#/components/schemas/Office365ExchMailboxRestoreEntity'
            groups:
              type: array
              items:
                $ref: '#/components/schemas/NameGUID'
    Office365OnedriveRestoreCommonOptions:
      type: object
      properties:
        ifFileExists:
          type: string
          enum:
            - SKIP
            - UNCONDITIONALLY_OVERWRITE
            - RESTORE_AS_COPY
          default: SKIP
        deletedItems:
          type: boolean
          description: Include deleted items on Restore
        matchEmailAddress:
          type: boolean
          description: Match destination user based on the email address
        skipFilePermissions:
          type: boolean
          description: Skip Onedrive file permissions during restore
          default: true
    Office365OnedriveRestoreReq:
      allOf:
        - $ref: '#/components/schemas/Office365OnedriveRestoreCommonOptions'
        - type: object
          properties:
            users:
              type: array
              items:
                $ref: '#/components/schemas/NameGUID'
            groups:
              type: array
              items:
                $ref: '#/components/schemas/NameGUID'
    Office365SharepointRestoreCommonOptions:
      type: object
      properties:
        ifDocumentExists:
          type: string
          enum:
            - SKIP
            - UNCONDITIONALLY_OVERWRITE
          default: SKIP
        deletedItems:
          type: boolean
          description: Include deleted items on Restore
        additionalRestoreOption:
          type: string
          enum:
            - RESTORE_ACLS_ONLY
            - RESTORE_WORKFLOW_DEFINITION_AND_ALERTS_ONLY
        latestVersion:
          type: boolean
          default: true
          description: Restore latest version only
        skipLookupMetadata:
          type: boolean
          description: Skip lookup metadata on sharepoint restore
    Office365SharepointCategoryRestoreEntity:
      type: object
      properties:
        GUID:
          type: string
          description: Custom category GUID(Optional)
        conditions:
          type: array
          description: Conditions for custom category.
          items:
            $ref: '#/components/schemas/Office365SharepointCustomCategoryCondition'
    Office365SharepointRestoreReq:
      allOf:
        - $ref: '#/components/schemas/Office365SharepointRestoreCommonOptions'
        - type: object
          properties:
            sites:
              type: array
              items:
                $ref: '#/components/schemas/Office365SiteBkpRestoreEntity'
            category:
              $ref: '#/components/schemas/Office365SharepointCategoryRestoreEntity'
    Office365TeamsRestoreCommonOptions:
      type: object
      properties:
        ifFileExists:
          type: string
          enum:
            - SKIP
            - UNCONDITIONALLY_OVERWRITE
          default: SKIP
        deletedItems:
          type: boolean
          description: Include deleted items on Restore
    Office365TeamsCategoryRestoreEntity:
      type: object
      properties:
        GUID:
          type: string
          description: Custom category GUID(Optional)
        conditions:
          type: array
          description: Conditions for custom category.
          items:
            $ref: '#/components/schemas/Office365TeamsCustomCategoryCondition'
    Office365TeamsRestoreReq:
      allOf:
        - $ref: '#/components/schemas/Office365TeamsRestoreCommonOptions'
        - type: object
          properties:
            users:
              type: array
              description: List of Teams Users for Restore
              items:
                $ref: '#/components/schemas/NameGUID'
            destinationUserInfo:
              $ref: '#/components/schemas/Office365TeamsDestinationUserEntity'
            teams:
              type: array
              description: List of Teams for Restore
              items:
                $ref: '#/components/schemas/NameGUID'
            category:
              $ref: '#/components/schemas/Office365TeamsCategoryRestoreEntity'
    Office365TeamsDestinationUserEntity:
      type: object
      properties:
        emailAddress:
          type: string
          description: Destination Onedrive user email address
        GUID:
          type: string
          description: Destination Onedrive user GUID
      required:
        - emailAddress
        - GUID
    RecoveryGroup:
      title: RecoveryGroup
      description: Model to provide basic detail of recovery group
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: Id of the recovery group
        name:
          type: string
          description: Name of the recovery group
        target:
          $ref: '#/components/schemas/IdName'
        postRecoveryActions:
          type: array
          items:
            $ref: '#/components/schemas/DROperationScript'
        delayBetweenPriorityMachines:
          type: integer
          format: int32
          description: The delay between machines in different priorities in minutes
        continueOnFailure:
          type: boolean
          default: false
          description: Set to true to continue to the next priority machines on failure
        action:
          $ref: '#/components/schemas/RecoveryAction'
        recoveryPointDetails:
          $ref: '#/components/schemas/RecoveryGroupRPDetails'
        recoveryPoint:
          type: integer
          default: 0
          format: int32
          description: Timestamp for group restore in case of disaster
        recoveryExpirationOptions:
          $ref: '#/components/schemas/RecoveryExpirationOptions'
    ValidationResult:
      title: ValidationResult
      description: Result from the script execution ran on entity during recovery
      type: object
      properties:
        output:
          type: string
          description: Output of the script executed
        name:
          type: string
          description: Name of the script executed
        validationStatus:
          $ref: '#/components/schemas/ValidationStatus'
        failureReason:
          type: string
          description: Script validation failure reason
    RecoveryEntity:
      title: RecoveryEntity
      description: The payload for the creation of recovery entity
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: Id of the recovery entity
        name:
          type: string
          description: Name of the recovery entity
        entity:
          $ref: '#/components/schemas/IdName'
        recoveryGroup:
          $ref: '#/components/schemas/IdName'
        workload:
          $ref: '#/components/schemas/SolutionTypes'
        client:
          $ref: '#/components/schemas/IdName'
        backupSet:
          $ref: '#/components/schemas/IdName'
        vmGroup:
          $ref: '#/components/schemas/IdName'
        virtualMachine:
          $ref: '#/components/schemas/NameGUID'
        recoveryConfiguration:
          $ref: '#/components/schemas/RecoveryConfiguration'
        instance:
          $ref: '#/components/schemas/IdName'
        preRecoveryActions:
          type: array
          items:
            $ref: '#/components/schemas/DROperationScript'
        postRecoveryActions:
          type: array
          items:
            $ref: '#/components/schemas/DROperationScript'
        target:
          $ref: '#/components/schemas/IdName'
        recoveryPointDetails:
          $ref: '#/components/schemas/RecoveryEntityRPDetails'
        recoveryPoint:
          type: integer
          default: 0
          format: int32
          description: 'Timestamp for entity restore in case of disaster, default value is 0 as latest recovery point'
        executionOrder:
          $ref: '#/components/schemas/RecoveryEntityExecutionInfo'
        connectionDetails:
          $ref: '#/components/schemas/VMConnectionDetails'
        blockSysrepForRecovery:
          type: boolean
        recoveryStatus:
          $ref: '#/components/schemas/RecoveryStatus'
        validationStatus:
          $ref: '#/components/schemas/ValidationStatus'
        validationResults:
          type: array
          items:
            $ref: '#/components/schemas/ValidationResult'
        recoveryFailureReason:
          type: string
          description: Reason for last recovery job failure
        validationFailureReason:
          type: string
          description: Reason for last validation failure
        recoveryStatusNotReadyReason:
          type: string
          description: Recovery status not ready reason
        recoveryStatusNotReadyCategory:
          $ref: '#/components/schemas/RecoveryStatusNotReadyCategory'
        lastRecoveryJobId:
          type: integer
          format: int32
          description: Last recovery job Id of the entity
        osType:
          $ref: '#/components/schemas/OSType'
        copyAvailableTime:
          type: integer
          format: int32
          description: Timestamp of the latest backup job start time present in the copy that would be used for recovery. Value would be -1 if no valid copy is present for recovery.
        installedWorkloads:
          type: array
          items:
            $ref: '#/components/schemas/SolutionTypes'
        sourceVendor:
          $ref: '#/components/schemas/VSVendor'
    RecoveryConfiguration:
      title: RecoveryConfiguration
      type: object
      properties:
        advancedOptions:
          $ref: '#/components/schemas/AdvancedRecoveryConfiguration'
        configuration:
          $ref: '#/components/schemas/VMRecoveryConfiguration'
        dbConfig:
          $ref: '#/components/schemas/DBRecoveryConfiguration'
        imageDetails:
          $ref: '#/components/schemas/VMImageDetails'
        mediaAgent:
          $ref: '#/components/schemas/IdName'
        copyPrecedence:
          type: integer
          format: int32
          description: Copy precedence for the copy used for the restore
        hardwareConfiguration:
          $ref: '#/components/schemas/HardwareConfiguration'
        credentials:
          $ref: '#/components/schemas/guestCredentialInfo'
    RecoveryExpirationOptions:
      title: RecoveryExpirationOptions
      type: object
      properties:
        enableExpirationOption:
          type: boolean
          default: true
          description: If true, cleans up recovered VMs after the set daysToExpire value
        daysToExpire:
          type: integer
          default: 7
          format: int32
          description: Number of days after which recovered VMs are automatically cleaned up
        isRescuedCommServe:
          type: boolean
          description: Whether the CommServe is rescued or not
        expirationTime:
          type: integer
          format: int32
          description: Timestamp when the clean up of all recovered VMs happens on the rescued CommServe. It happens 4 hours before the CommServe expiration time
    AdvancedRecoveryConfiguration:
      title: AdvancedRecoveryConfiguration
      type: object
      properties:
        azure:
          $ref: '#/components/schemas/ReplicationGroupAdvOptionsAzure'
    VMImageDetails:
      title: VMImageDetails
      type: object
      properties:
        vmCreds:
          $ref: '#/components/schemas/guestCredentialInfo'
        vmTemplate:
          $ref: '#/components/schemas/NameGUID'
        skipOSDisk:
          type: boolean
          default: false
          description: Determine if OS disk should be attached to new VM during the disk attach restore
    VMRecoveryConfiguration:
      title: VMRecoveryConfiguration
      type: object
      properties:
        azure:
          $ref: '#/components/schemas/ReplicationConfigurationAzure'
    DBRecoveryConfigurationDatabaseFile:
      title: DBRecoveryConfigurationDatabaseFile
      type: object
      properties:
        logicalName:
          type: string
          description: Logical name of the file
        physicalPath:
          type: string
          description: Physical path of the file
    DBRecoveryConfigurationDatabaseFileMapping:
      title: DBRecoveryConfigurationDatabaseFile
      type: object
      properties:
        source:
          $ref: '#/components/schemas/DBRecoveryConfigurationDatabaseFile'
        destination:
          $ref: '#/components/schemas/DBRecoveryConfigurationDatabaseFile'
    DBRecoveryConfigurationDatabase:
      title: DBRecoveryConfigurationDatabase
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: ID of the source database
        sourceName:
          type: string
          description: Name of the source database
        destinationName:
          type: string
          description: Name of the destination database
        fileMappings:
          type: array
          items:
            $ref: '#/components/schemas/DBRecoveryConfigurationDatabaseFileMapping'
    DBRecoveryConfiguration:
      title: DBRecoveryConfiguration
      type: object
      properties:
        server:
          $ref: '#/components/schemas/IdName'
        instance:
          $ref: '#/components/schemas/IdName'
        databases:
          type: array
          items:
            $ref: '#/components/schemas/DBRecoveryConfigurationDatabase'
    RecoveryActivityType:
      type: string
      title: RecoveryActivityType
      description: Type of recovery activity
      enum:
        - WORKFLOW
    RecoveryActivity:
      title: RecoveryActivity
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: Id of the recovery activity
        name:
          type: string
          description: Name of the recovery activity
        executionOrder:
          $ref: '#/components/schemas/RecoveryEntityExecutionInfo'
        workflow:
          $ref: '#/components/schemas/IdName'
        activityType:
          $ref: '#/components/schemas/RecoveryActivityType'
    RecoveryEntityExecutionInfo:
      title: RecoveryEntityExecutionInfo
      type: object
      properties:
        priority:
          type: integer
          format: int32
          description: Decides the priority of group execution
        order:
          type: integer
          format: int32
          description: Decides the priority of entites within a group
        group:
          type: integer
          format: int32
          description: Group ID to group similar entities together
    RecoveryAction:
      title: RecoveryAction
      enum:
        - CREATE
        - UPDATE
        - DELETE
      description: Recovery Action
    RecoveryGroupRPDetails:
      title: RecoveryGroupRPDetails
      type: object
      description: Contains the information regarding the recovery group level recoveryPoint selection
      properties:
        recoveryPoint:
          type: integer
          default: 0
          format: int32
          description: Timestamp for group restore in case of disaster
        recoveryPointCategory:
          type: string
          enum:
            - LATEST
            - POINT_IN_TIME
            - AUTOMATIC
          default: LATEST
          description: Type of recovery point category
    RecoveryEntityRPDetails:
      title: RecoveryEntityRPDetails
      type: object
      description: Contains the information regarding the recovery entity level recoveryPoint selection
      properties:
        entityRecoveryPoint:
          type: integer
          default: 0
          format: int32
          description: Timestamp for entity restore in case of disaster, default value is 0 as latest recovery point
        entityRecoveryPointCategory:
          type: string
          enum:
            - LATEST
            - POINT_IN_TIME
            - AUTOMATIC
          default: LATEST
          description: Type of recovery point category
        inheritedFrom:
          type: string
          enum:
            - RECOVERY_GROUP
            - RECOVERY_ENTITY
          default: RECOVERY_GROUP
          description: Describes from where the recovery point is inherited from. If not provided, recovery point will be used as if it is set at recovery group level
        timeZoneId:
          type: integer
          default: 0
          format: int32
          description: TimeZone Id of the CS
    RecoveryGroupListResp:
      title: RecoveryGroupListResp
      type: object
      properties:
        recoveryGroups:
          type: array
          items:
            $ref: '#/components/schemas/RecoveryGroup'
    GetRecoveryGroupDetailsResp:
      title: GetRecoveryGroupDetailsResp
      type: object
      properties:
        recoveryGroup:
          $ref: '#/components/schemas/RecoveryGroup'
        entities:
          type: array
          items:
            $ref: '#/components/schemas/RecoveryEntity'
    GetRecoveryGroupDetailsReq:
      title: GetRecoveryGroupDetailsReq
      type: object
      properties:
        recoveryGroupIds:
          type: array
          items:
            type: integer
            format: int32
    AzureNetwork:
      title: AzureNetwork
      type: object
      description: Network interface for the destination instances
      properties:
        networkId:
          type: string
          description: Network unique identifier
        networkDisplayName:
          type: string
          description: Display Name of network
        subnetId:
          type: string
          description: subnet id of network
        networkName:
          type: string
          description: Name of the network
        networkAddressDetails:
          $ref: '#/components/schemas/AzureDestinationInfoNic'
        privateIPaddress:
          type: string
          description: Private IP address of the network
        publicIPAddress:
          type: string
          description: Public IP address of the network
        publicIPaddressID:
          type: string
          description: 'Azure public IP address ID. Format: /subscriptions/{Subscription ID}/resourceGroups/{Resource Group Name}/providers/Microsoft.Network/publicIPAddresses/{Public IP Address Name}.'
    GatewayConnectionInfo:
      title: GatewayConnectionInfo
      type: object
      description: Gateway information for network topology
      properties:
        hostname:
          type: string
          description: Gateway machine hostname
        port:
          type: integer
          format: int32
          minimum: 1
          maximum: 65535
    AddUpdateRecoveryEntityRequest:
      title: AddUpdateRecoveryEntityRequest
      type: object
      properties:
        entities:
          type: array
          items:
            $ref: '#/components/schemas/RecoveryEntity'
    RecoveryActionRequest:
      title: RecoveryActionRequest
      type: object
      properties:
        recoveryGroup:
          $ref: '#/components/schemas/IdName'
        entities:
          type: array
          items:
            $ref: '#/components/schemas/IdName'
    VMConnectionDetails:
      title: VMConnectionDetails
      type: object
      properties:
        guestCreds:
          $ref: '#/components/schemas/guestCredentialInfo'
        csCreds:
          $ref: '#/components/schemas/guestCredentialInfo'
        topologyDetails:
          $ref: '#/components/schemas/VMTopologyDetails'
        vmHostName:
          type: string
          description: VM host name
        vmClientName:
          type: string
          description: VM client name
        domainCreds:
          $ref: '#/components/schemas/guestCredentialInfo'
    VMTopologyDetails:
      title: VMTopologyDetails
      type: object
      properties:
        serverGroups:
          type: array
          items:
            $ref: '#/components/schemas/IdName'
        networkGateway:
          type: array
          items:
            $ref: '#/components/schemas/GatewayConnectionInfo'
    HardwareConfiguration:
      title: HardwareConfiguration
      type: object
      properties:
        dataDiskConfiguration:
          type: array
          items:
            $ref: '#/components/schemas/DiskConfiguration'
        volumeConfiguration:
          type: array
          items:
            $ref: '#/components/schemas/VolumeConfiguration'
        systemDiskConfiguration:
          $ref: '#/components/schemas/DiskConfiguration'
    DiskConfiguration:
      title: DiskConfiguration
      type: object
      properties:
        name:
          type: string
          description: Name of the disk
        provisioningType:
          type: string
          description: Disk provisioning type
          enum:
            - THIN
            - THICK
        diskSize:
          type: integer
          format: int64
          description: Disk size in bytes
        diskType:
          type: string
          description: Type of disk controller
          enum:
            - ISCSI
            - IDE
    VolumeConfiguration:
      title: VolumeConfiguration
      type: object
      properties:
        name:
          type: string
          description: Name of the volume
        totalSize:
          type: integer
          format: int64
          description: Size for volume in bytes
        enabled:
          type: boolean
          description: Determine if volume is enabled or not
        disks:
          type: array
          items:
            $ref: '#/components/schemas/DiskConfiguration'
    LicenseType:
      type: string
      title: LicenseType
      description: The type of licenses supported for LicenseUsage API
      enum:
        - CLEANROOM
        - AUTORECOVERY
      default: CLEANROOM
    LicenseUsageType:
      type: string
      title: LicenseUsageType
      description: The state of a license supported for LicenseUsage API
      enum:
        - PURCHASED
        - LIMITREACHED
        - EXPIRED_OR_NOTPURCHASED
        - NOTAVAILABLE
    LicenseUsageDetails:
      type: object
      description: License usage information for a given license type
      properties:
        licenseUsageType:
          $ref: '#/components/schemas/LicenseUsageType'
        licenseType:
          $ref: '#/components/schemas/LicenseType'
        licenseName:
          type: string
          description: The name of the license
        issuedQuantity:
          type: integer
          format: int32
          description: The quantity issued in the license
        usedQuantity:
          type: integer
          format: int32
          description: The quantity used in the license
        error:
          type: object
          $ref: '#/components/schemas/GenericResp'
    RepairSoftware:
      title: RepairSoftware
      type: object
      description: Request body for server and server group repair software
      properties:
        rebootIfRequired:
          type: boolean
          default: false
          description: Boolean which determines whether to reboot if required.
        notifyWhenJobCompletes:
          type: boolean
          default: false
          description: Boolean which determines whether to notify when software is repaired.
        username:
          type: string
          description: If using system credentials, provide the user name
        password:
          type: string
          description: Corresponding password of the user
        entities:
          type: array
          description: List of all the client and client groups on which repair software should be run
          items:
            $ref: '#/components/schemas/IdNameGUIDType'
          nullable: true
        invokedFrom:
          title: invokedFrom
          type: string
          enum:
            - NONE
            - COMMCELL
            - LIBRARY
            - MEDIA
            - DRIVE
            - CLIENT
            - MEDIAAGENT
            - CLIENTGROUP
            - PSEUDOCLIENT
      required:
        - invokedFrom
        - entities
    GetSubclientForSnapEngine:
      title: GetSubclientForSnapEngine
      type: object
      description: 'Response body for getting subclients using particular snapEngine '
      properties:
        subclientDetails:
          type: array
          items:
            $ref: '#/components/schemas/subclientDetails'
    subclientDetails:
      title: subclientDetails
      type: object
      description: subclient details associated to snap engine
      properties:
        subclient:
          $ref: '#/components/schemas/IdName'
        client:
          $ref: '#/components/schemas/IdName'
        snapEngine:
          $ref: '#/components/schemas/IdName'
    TestCloudConnectionReq:
      title: TestCloudConnectionReq
      x-stoplight:
        id: kixzv0sfzv7p1
      type: object
      description: Request body for checking cloud resource connectivity
      properties:
        hostname:
          type: string
          description: Hostname / IP address of cloud resource
        port:
          type: integer
          format: int32
          minimum: 0
          description: Connection port
        backupGatewayIds:
          type: array
          default: []
          description: Backup gateways list for connectivity verification
          items:
            type: integer
            format: int32
      required:
        - hostname
        - port
        - backupGatewayIds
    CyberResilienceConfigureRequest:
      title: CyberResilienceConfigureRequest
      x-stoplight:
        id: cclunsysn7zaq
      type: object
      description: ''
      properties:
        indexServer:
          type: integer
          format: int32
          description: Pseudo client id of the Index Server
        credentials:
          type: array
          description: List of Credential ids to be analysed
          items:
            type: integer
            format: int32
    CyberResilienceCredentialOperation:
      title: CyberResilienceCredentialOperation
      x-stoplight:
        id: o9ses0hxdd2q9
      type: object
      properties:
        id:
          type: integer
          format: int32
          minimum: 1
          description: Credential ID
        operation:
          $ref: '#/components/schemas/BasicListOpType'
      required:
        - id
        - operation
      description: ''
    CyberResilienceManageCredentials:
      title: CyberResilienceManageCredentials
      x-stoplight:
        id: ffb6d075f4739
      type: object
      properties:
        credentials:
          type: array
          items:
            $ref: '#/components/schemas/CyberResilienceCredentialOperation'
      required:
        - credentials
    CVFSVersioning:
      enum:
        - UNVERSIONED
        - ENABLED
        - SUSPENDED
      type: string
      description: To enable/suspend the versioning on the CVFS S3 bucket
    CVFSUserOps:
      enum:
        - ADD_READ_WRITE_PERMISSION
        - REMOVE_READ_WRITE_PERMISSION
        - ADD_READ_ONLY_PERMISSION
        - REMOVE_READ_ONLY_PERMISSION
      type: string
      description: Add or remove user's read-write/read-only permission to access the bucket
    S3BucketProperties:
      title: S3BucketProperties
      type: object
      properties:
        versioning:
          $ref: '#/components/schemas/CVFSVersioning'
        bucketSize:
          type: string
          pattern: ^\d+\s(GB)$
          description: The size of the bucket in GB
    CreateCVFSS3Bucket:
      title: CreateCVFSS3Bucket
      allOf:
        - type: object
          properties:
            name:
              type: string
              description: The name of the CVFS S3 bucket to be created
            planName:
              type: string
              description: Plan name to be used to fetch the CVFS S3 cluster
        - $ref: '#/components/schemas/S3BucketProperties'
      required:
        - name
        - planName
        - versioning
    UpdateCVFSS3Bucket:
      title: UpdateCVFSS3Bucket
      allOf:
        - type: object
          properties:
            user:
              $ref: '#/components/schemas/IdName'
            userOperation:
              $ref: '#/components/schemas/CVFSUserOps'
        - $ref: '#/components/schemas/S3BucketProperties'
    CreateCVFSS3BucketResp:
      title: CreateCVFSS3BucketResp
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: The ID of the created bucket
        endPointURL:
          type: string
          description: The URL of bucket
    GetCVFSS3BucketResp:
      title: GetCVFSS3BucketResp
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: The ID of the bucket
        name:
          type: string
          description: The name of bucket
        endPointURL:
          type: string
          description: The URL of bucket
        spaceUsage:
          type: string
          description: amount of space used in GB
        objectCount:
          type: integer
          format: int32
          description: the count of the number of objects in the bucket
        compressionRatio:
          type: number
          format: float
          description: the present compression ratio of the bucket
        versioning:
          $ref: '#/components/schemas/CVFSVersioning'
        bucketSize:
          type: string
          pattern: ^\d+\s(GB)$
          description: The size of the bucket in GB
    CreateCVFSS3BucketClone:
      title: CreateCVFSS3BucketClone
      properties:
        fromTime:
          type: integer
          format: int32
          description: Clone objects in the bucket created on or after the specified time in unix format.
        toTime:
          type: integer
          format: int32
          description: Clone objects in the bucket created on or before the specified time in unix format.
        copyPrecedence:
          type: integer
          format: int32
          description: The copy precedence to use for the clone operation
        reservationTime:
          type: integer
          format: int32
          description: Clone reservation time in seconds. The clone will be automatically deleted after the specified duration.
      required:
        - toTime
        - copyPrecedence
        - reservationTime
    CreateCVFSS3BucketCloneResponse:
      title: CreateCVFSS3BucketCloneResponse
      properties:
        cloneId:
          type: integer
          format: int32
          description: cloneId (equivalent to the clone job Id).
        endPointURL:
          type: string
          description: The S3 URL of bucket
    GetCVFSS3BucketCloneDetailsResp:
      title: GetCVFSS3BucketCloneDetails
      properties:
        cloneId:
          type: integer
          format: int32
          description: ID of the cloned bucket
        creationTime:
          type: integer
          format: int32
          description: Bucket clone creation time in UNIX format
        expiryTime:
          type: integer
          format: int32
          description: Bucket clone expiry time in UNIX fomat
        copyPrecedenece:
          type: integer
          format: int32
          description: Copy Precedence of the cloned bucket
        endPointURL:
          type: string
          description: The S3 URL of bucket
    VaultTrackerOperationType:
      enum:
        - REACHED_DESTINATION
        - PICKED_UP
        - RETURN_TO_SOURCE
        - ABORT
        - SET_CONTAINER
        - ROLL_BACK
        - DELETE
        - SUSPEND
        - RESUME
        - RECALL_DONE
      description: Supported operations for VaultTracker Action
    SpareGroupTypes:
      enum:
        - REGULAR_SPARE_GROUP
        - DEFAULT_SPARE_GROUP
        - UNIDENTIFIED_GROUP
        - DEPRECATED_GROUP
        - FOREIGN_GROUP
        - CLEANING_GROUP
        - OVERWRITE_PROTECT_GROUP
        - CATALOG_GROUP
        - REGULAR_AND_DEFAULT_SPARE_GROUP
      description: Spare group type of a group from which media belongs
    FilterMediaType:
      enum:
        - ALL
        - SPARE
        - CLEANING
        - RETIRED
        - OVERWRITE_PROTECT
        - AGED
        - FOREIGN
        - CATALOG
        - ASSIGNED
        - ERASABLE
      description: Enum to filter the media list based on given type
    SlotTypes:
      enum:
        - INVALID_SLOT
        - REGULAR_SLOT
        - MAIL_SLOT
        - CAP_SLOT
      description: Enum to filter the slot list based on given type
    ActionType:
      enum:
        - NONE
        - REGULAR
        - RECALL
      description: Enum for Action Type
    VaultTrackerOperationInfo:
      title: VaultTrackerOperationInfo
      type: object
      description: VaultTrackerAction information to perform operation
      properties:
        actionId:
          type: integer
          format: int32
          description: Id of action
        historyId:
          type: integer
          format: int32
          description: Id of history
        container:
          $ref: '#/components/schemas/IdName'
        mediaList:
          type: array
          items:
            type: integer
            format: int32
          description: List of mediaIds
    VaultTrackerOperationReq:
      title: VaultTrackerOperationReq
      type: object
      description: Payload for VaultTracker Operation
      properties:
        vtActionList:
          type: array
          items:
            $ref: '#/components/schemas/VaultTrackerOperationInfo'
        opType:
          $ref: '#/components/schemas/VaultTrackerOperationType'
    MediaDetails:
      title: MediaDetails
      type: object
      description: Details of Media
      properties:
        mediaId:
          type: integer
          format: int32
          description: Id of Media
        isExported:
          type: boolean
          description: Indicates whether media is exported or in library
        libraryId:
          type: integer
          format: int32
          description: Id of Library
        libraryName:
          type: string
          description: Name of Library
        status:
          type: string
          description: Status of media
        barcode:
          type: string
          description: Barcode label on media
        storagePolicy:
          $ref: '#/components/schemas/IdName'
        storagePolicyCopy:
          $ref: '#/components/schemas/IdName'
        slot:
          $ref: '#/components/schemas/IdName'
        container:
          $ref: '#/components/schemas/IdName'
        storedDataBytes:
          type: integer
          format: int64
          description: The amount of stored data in media
        lastWriteTime:
          type: integer
          format: int64
          description: The date and time when the last write occurred on media
        retainDataUntil:
          type: integer
          format: int64
          description: The date and time until the data should be retained
        spareGroup:
          $ref: '#/components/schemas/IdName'
        spareGroupType:
          $ref: '#/components/schemas/SpareGroupTypes'
        mediaType:
          $ref: '#/components/schemas/IdName'
        drive:
          $ref: '#/components/schemas/IdName'
        isInMediaGroup:
          type: boolean
          description: Indicates whether media is assigned or not.
        guiMediaAttribute:
          type: integer
          format: int64
          description: Attributes of Media
    SlotInfo:
      title: SlotInfo
      type: object
      description: Details of Slot
      properties:
        slot:
          $ref: '#/components/schemas/IdName'
        slotType:
          $ref: '#/components/schemas/SlotTypes'
        libraryId:
          type: integer
          format: int32
          description: Id of Library
        mediaId:
          type: integer
          format: int32
          description: Id of Media
        mediaDetails:
          $ref: '#/components/schemas/MediaDetails'
    VaultTrackerAction:
      title: VaultTrackerAction
      type: object
      description: Info of Vault Tracker Action
      properties:
        actionId:
          type: integer
          format: int32
          description: Id of Action
        actionType:
          $ref: '#/components/schemas/ActionType'
        actionTypeStr:
          type: string
          description: Action Type
        libraryId:
          type: integer
          format: int32
          description: Id of Library
        userId:
          type: integer
          format: int32
          description: Id of User
        policyId:
          type: integer
          format: int32
          description: Id of Policy
        jobId:
          type: integer
          format: int32
          description: Id of job
        initiator:
          type: string
          description: Initiator of action
        sourceLocation:
          $ref: '#/components/schemas/IdName'
        destinationLocation:
          $ref: '#/components/schemas/IdName'
        transitLocation:
          $ref: '#/components/schemas/IdName'
        actionStatus:
          type: string
          description: Status of action
        startTime:
          type: integer
          format: int64
          description: Start time of action
        completionTime:
          type: integer
          format: int64
          description: End time of action
        recallExpirationTime:
          type: integer
          format: int64
          description: RecallExpirationTime time of action
    VaultTrackerMediaDetails:
      title: VaultTrackerMedia
      type: object
      description: Info of Vault Tracker Media
      properties:
        actionId:
          type: integer
          format: int32
          description: Id of Action
        mediaId:
          type: integer
          format: int32
          description: Id of media
        historyId:
          type: integer
          format: int32
          description: Id of history
        policyId:
          type: integer
          format: int32
          description: Id of policy
        barcode:
          type: string
          description: Barcode label of media
        state:
          type: string
          description: state of media
        library:
          $ref: '#/components/schemas/IdName'
        sourceLocation:
          $ref: '#/components/schemas/IdName'
        currentLocation:
          $ref: '#/components/schemas/IdName'
        destLocation:
          $ref: '#/components/schemas/IdName'
        container:
          $ref: '#/components/schemas/IdName'
        dueBackForReuseOn:
          type: string
          description: Due back for reuse 'Now' or 'Never'
        exportError:
          type: string
          description: Export error message
        storagePolicy:
          $ref: '#/components/schemas/IdName'
        storagePolicyCopy:
          $ref: '#/components/schemas/IdName'
        isInLibrary:
          type: boolean
          description: Media is in library or not
    GetMediaListResp:
      title: GetMediaListResp
      type: object
      description: Media List for Library
      properties:
        mediaDetailsList:
          type: array
          items:
            $ref: '#/components/schemas/MediaDetails'
    GetSlotListResp:
      title: GetSlotListResp
      type: object
      description: Slot List for Library
      properties:
        slotList:
          type: array
          items:
            $ref: '#/components/schemas/SlotInfo'
    GetVaultTrackerActionListResp:
      title: GetVaultTrackerActionListResp
      type: object
      description: Vault Tracker Action List
      properties:
        vaultTrackerActionList:
          type: array
          items:
            $ref: '#/components/schemas/VaultTrackerAction'
    GetVaultTrackerMediaDetailsResp:
      title: GetVaultTrackerMediaDetailsResp
      type: object
      description: List of media tracked by vault tacker
      properties:
        vaultTrackerMediaDetailsList:
          type: array
          items:
            $ref: '#/components/schemas/VaultTrackerMediaDetails'
    ListCVFSS3BucketCloneResp:
      title: ListCVFSS3BucketCloneResp
      properties:
        clones:
          type: array
          items:
            $ref: '#/components/schemas/GetCVFSS3BucketCloneDetailsResp'
    UpdateCVFSS3CloneReq:
      title: UpdateCVFSS3CloneExpiryTime
      properties:
        expiryTime:
          type: integer
          format: int32
          description: Bucket clone expiry time in UNIX format
    ObjectStorePlanBackupDestination:
      type: object
      properties:
        backupDestinationName:
          type: string
          description: Backup destination name
          nullable: true
        storagePool:
          $ref: '#/components/schemas/IdName'
        storageType:
          $ref: '#/components/schemas/StorageType'
        retentionPeriodDays:
          type: integer
          description: Retention period in days. -1 can be specified for infinite retention.
          format: int32
          minimum: 1
          maximum: 9999
        useExtendedRetentionRules:
          type: boolean
          description: Use extended retention rules
        extendedRetentionRules:
          $ref: '#/components/schemas/ExtendedRetentionRules'
      oneOf:
        - required:
            - storagePool
        - required:
            - storageTemplateTags
      required:
        - backupDestinationName
        - retentionPeriodDays
        - storageType
    ObjectStoreBackupPlanRPO:
      type: object
      description: Recovery Point Objective (RPO) is the maximum amount of time that data can be lost during a service disruption. Your RPO determines the frequency of your backup jobs.
      properties:
        backupFrequency:
          $ref: '#/components/schemas/ObjectStorePlanSchedules'
        fullBackupWindow:
          type: array
          description: Backup window for full backup
          nullable: true
          items:
            $ref: '#/components/schemas/DayAndTime'
    ObjectStorePlanSchedule:
      title: PlanSchedule
      type: object
      description: Used to describe single plan schedule information
      properties:
        scheduleId:
          type: integer
          description: 'Id of the schedule if available, required for modifying, deleting schedule'
          format: int32
        scheduleName:
          type: string
          description: 'Name of the schedule, for modify'
        policyId:
          type: integer
          description: Schedule policy Id to which the schedule belongs
          format: int32
        scheduleOperation:
          type: string
          enum:
            - ADD
            - DELETE
            - MODIFY
          description: Operation being performed on schedule
          default: MODIFY
        schedulePattern:
          $ref: '#/components/schemas/SchedulePattern'
      required:
        - backupType
        - schedulePattern
    ObjectStorePlanSchedules:
      title: PlanSchedules
      type: object
      properties:
        schedules:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/ObjectStorePlanSchedule'
        operationType:
          $ref: '#/components/schemas/ListOpType'
    ObjectStorePlanUpdateRPO:
      type: object
      description: Recovery Point Objective (RPO) is the maximum amount of time that data can be lost during a service disruption. Your RPO determines the frequency of your backup jobs.
      properties:
        backupFrequency:
          $ref: '#/components/schemas/ObjectStorePlanSchedules'
        fullBackupWindow:
          type: array
          description: Backup window for full backup
          nullable: true
          items:
            $ref: '#/components/schemas/DayAndTime'
        SLA:
          $ref: '#/components/schemas/SLAUpdateOptions'
    BkpDestOperation:
      enum:
        - ADD
        - MODIFY
        - OVERWRITE
        - DELETE
      type: string
      description: Operation type for backup destination
    ObjectStorePlanUpdateBkpDest:
      type: object
      description: Add/Modify backup destinations for ObjectStore Plan
      properties:
        planBackupDestinationId:
          type: integer
          format: int32
          description: Id of the backup destination to modify/delete
        planBackupDestinationName:
          type: string
          description: Backup Destination Name for add/modify operation
        storagePool:
          $ref: '#/components/schemas/IdName'
        storageType:
          $ref: '#/components/schemas/StorageType'
        retentionPeriodDays:
          type: integer
          description: Retention period in days. -1 can be specified for infinite retention.
          format: int32
          minimum: 1
          maximum: 9999
        useExtendedRetentionRules:
          type: boolean
          description: Use extended retention rules(not applicable to the Primary(Snap) copy)
        extendedRetentionRules:
          $ref: '#/components/schemas/ExtendedRetentionRules'
        enableDataAging:
          type: boolean
          description: enable or disable Datat aging on the backup destiantion
        sourceCopy:
          $ref: '#/components/schemas/IdName'
    GetObjectStorePlanBackupDestination:
      type: object
      properties:
        planBackupDestination:
          $ref: '#/components/schemas/IdName'
        backupDestinationName:
          type: string
          description: Backup destination name
          nullable: true
        storagePool:
          $ref: '#/components/schemas/StoragePool'
        storageType:
          $ref: '#/components/schemas/StorageType'
        retentionPeriodDays:
          type: integer
          description: Retention period in days. -1 can be specified for infinite retention.
          format: int32
          minimum: 1
          maximum: 9999
        enableDataAging:
          type: boolean
          description: Tells if this copy has data aging enabled
        copyPrecedence:
          type: integer
          format: int32
          description: Order of backup destination copy created in storage policy
        backupsToCopy:
          $ref: '#/components/schemas/PlanFullBackupType'
        isDefault:
          type: boolean
          description: Is this a default backup destination?
        isSnapCopy:
          type: boolean
          description: Is this a snap copy?
        useExtendedRetentionRules:
          type: boolean
          description: Use extended retention rules
        extendedRetentionRules:
          $ref: '#/components/schemas/ExtendedRetentionRules'
    ObjectStorePlanRPO:
      type: object
      description: >-
        Recovery Point Objective (RPO) is the maximum amount of time that data
        can be lost during a service disruption. Your RPO determines the
        frequency of your backup jobs.
      properties:
        backupFrequency:
          $ref: '#/components/schemas/PlanSchedules'
        fullBackupWindow:
          type: array
          description: Backup window for full backup
          nullable: true
          items:
            $ref: '#/components/schemas/DayAndTime'
        SLA:
          $ref: '#/components/schemas/SLAOptions'
    CyberResilienceCredentials:
      title: CyberResilienceCredentials
      x-stoplight:
        id: 6rqglvcbqfqto
      type: object
      properties:
        credentials:
          type: array
          items:
            $ref: '#/components/schemas/CyberResilienceCredentialDetails'
    CyberResilienceCredentialDetails:
      allOf:
        - $ref: '#/components/schemas/IdName'
        - type: object
          properties:
            vendorType:
              $ref: '#/components/schemas/CloudVendorType'
            configured:
              type: boolean
              description: To signify if the credential is already configured
            lastSyncedAt:
              type: integer
              format: int64
              minimum: 0
              description: Signifies epoch time of last successful sync
    CyberResilienceErrorCode:
      title: CyberResilienceErrorCode
      x-stoplight:
        id: ufdxece4dki0q
      type: string
      enum:
        - NO_ERROR
        - INVALID_INPUT
        - INDEX_SERVER_NOT_EXIST
        - INDEX_SERVER_INACCESSIBLE
        - INDEX_SERVER_DATA_ANALYTICS_ROLE_MISSING
        - CREDENTIAL_UNSUPPORTED
        - CREDENTIAL_INACCESSIBLE
        - CYBER_RESILIENCE_ALREADY_CONFIGURED
        - CYBER_RESILIENCE_NOT_CONFIGURED
        - DELETING_UNCONFIGURED_CREDENTIAL
        - ADDING_CONFIGURED_CREDENTIAL
        - UNKNOWN_ERROR
        - INTERNAL_SERVER_ERROR
    CyberResilienceGenericResponse:
      title: CyberResilienceGenericResponse
      x-stoplight:
        id: fek7tbx17vdeh
      type: object
      properties:
        errorCode:
          $ref: '#/components/schemas/CyberResilienceErrorCode'
        errorMessage:
          type: string
          nullable: true
    UpdateHypervisorFilterReq:
      title: UpdateHypervisorFilterReq
      type: object
      properties:
        backupsetId:
          type: integer
          format: int32
          description: if not specified the default backupset is modified
        filters:
          $ref: '#/components/schemas/vmContent'
        diskFilters:
          $ref: '#/components/schemas/vmDiskFilterProp'
    GetHypervisorFilterResp:
      title: GetHypervisorFilterResp
      type: object
      properties:
        filters:
          type: array
          items:
            $ref: '#/components/schemas/vmContent'
        diskFilters:
          type: array
          items:
            $ref: '#/components/schemas/vmDiskFilterProp'
    ArchiveCheckOperationResp:
      title: ArchiveCheckOperationResp
      type: object
      description: Response for Archive check operation request on storage pool
      properties:
        jobInfoList:
          type: array
          items:
            $ref: '#/components/schemas/DDBStoreJobInfo'
        error:
          $ref: '#/components/schemas/GenericResp'
    DDBStoreJobInfo:
      title: DDBStoreJobInfo
      type: object
      description: DDB Store Jobs Information of a storage pool
      properties:
        jobIds:
          type: array
          description: List of JobIds
          items:
            type: integer
            format: int64
        storeId:
          type: integer
          format: int32
          description: Id of the DDB store
        storeName:
          type: string
          description: Name of the DDB store
        error:
          $ref: '#/components/schemas/GenericResp'
    TestFailoverMonitorMachines:
      description: Test failover Machine details from Replication monitor
      type: object
      title: TestFailoverMonitorMachines
      properties:
        operatingSystem:
          type: string
          minLength: 1
          description: OS of the test failover VM
        userCapabilities:
          type: integer
          format: int32
        numberOfDisks:
          type: integer
          description: Number of disk in test failover VM
          format: int32
        memory:
          type: integer
          description: Memory of failover VM
          format: int32
        flags:
          type: integer
          format: int32
        isVirtualLabGateway:
          type: boolean
          description: Vlab configured for test failover operation
        vmAllocPolicyId:
          type: integer
          description: 'recovery target id '
          format: int32
        numberOfCPUs:
          type: integer
          description: number of CPU of test failoverVM
          format: int32
        vmState:
          type: integer
          description: VM state
          format: int32
        modifiedTime:
          type: integer
          format: int32
          description: clone VM modified time in Unix timestamp format
        proxyClient:
          $ref: '#/components/schemas/IdName'
        ipAddress:
          $ref: '#/components/schemas/TestFailoverIPAddress'
        vmLocation:
          $ref: '#/components/schemas/TestFailoverVMLocation'
        expirationTime:
          type: integer
          format: int32
          description: clone VM expiration time in Unix timestamp format
        vm:
          $ref: '#/components/schemas/TestFailoverVMInfo'
        creationTime:
          type: integer
          format: int32
          description: clone VM creation time in Unix timestamp format
        lastPowerOnTime:
          type: integer
          format: int32
          description: Clone VM last power-on time in Unix timestamp format
        creator:
          $ref: '#/components/schemas/IdNameGUID'
        instanceTypeEntity:
          type: string
          description: 'Instance Type Name '
        advancedProperties:
          $ref: '#/components/schemas/TestFailoverAdvancedProp'
        entity:
          $ref: '#/components/schemas/IdName'
    TestFailoverVMLocation:
      title: TestFailoverVMLocation
      type: object
      description: Test failover VM location information
      properties:
        hostName:
          type: string
          description: host name of the test failover VM
        dataCenterName:
          type: string
          description: datacentername of the test failover VM
        vCenter:
          type: string
          description: vCenter in which test failover VM exists
    TestFailoverVMInfo:
      description: Test failover virtual machine information
      type: object
      title: TestFailoverVMInfo
      properties:
        hostName:
          type: string
          minLength: 1
          description: hostname of clone VM
        clientName:
          type: string
          minLength: 1
          description: clientname of clone VM
        vmName:
          type: string
          minLength: 1
          description: display name of clone VM
        clientId:
          type: integer
          description: VM client
          format: int32
        vmGUID:
          type: string
          minLength: 1
          description: Clone VM guid
    TestFailoverIPAddress:
      title: TestFailoverIPAddress
      type: object
      description: 'Test faiover VM IP address '
      properties:
        subnet:
          type: integer
          format: int32
        address:
          type: string
          description: Test failover VM IP address
        family:
          type: integer
          format: int32
    TestFailoverAdvancedProp:
      title: TestFailoverAdvancedProp
      type: object
      description: Test failover advanced properties
      properties:
        connectionString:
          type: string
        additionalFlags:
          type: integer
          format: int32
    CyberResilienceSyncStatus:
      title: CyberResilienceSyncStatus
      x-stoplight:
        id: 317wpth8v2ox0
      type: object
      properties:
        status:
          $ref: '#/components/schemas/DcubeJobState'
        lastSyncedAt:
          type: integer
          format: int64
    TCOCloudProvider:
      title: TCOCloudProvider
      x-stoplight:
        id: 4on9rq79a687y
      type: string
      enum:
        - AWS
        - AZURE
      default: AWS
    TCOCalculateRequest:
      title: TCOCalculateRequest
      x-stoplight:
        id: yqfk2xgvvr479
      type: object
      properties:
        cloudProvider:
          $ref: '#/components/schemas/TCOCloudProvider'
        numberOfVirtualMachines:
          type: integer
          description: Total number of Virtual Machines that are included for TCO assessment
          format: int32
          minimum: 0
        totalVirtualMachineSize:
          type: integer
          description: Total size of Virtual Machines in GB that are included for TCO assessment
          format: int64
          minimum: 0
        totalRecoveryPoints:
          type: integer
          description: Total number of Recovery Points that are included for TCO assessment
          format: int32
          minimum: 0
        totalInstantRestoreSnapshot:
          type: integer
          description: Total number of Instant Restore Snapshots that are included for TCO assessment
          format: int32
          minimum: 0
        dailyRateOfChange:
          type: integer
          description: This is the predicted rate of change that impacts the snapshot size and backup size
          format: int32
          minimum: 0
        replicatedSnapsPercentage:
          type: integer
          description: This is the total percentage of snapshots replicated that is included for TCO assessment
          format: int32
          minimum: 0
        nativeDiscountPercentage:
          type: integer
          description: This is the percentage of the discount that the customer gets with the cloud vendor
          format: int32
          minimum: 0
        commvaultDiscountPercentage:
          type: integer
          description: This is the percentage of the discount that the customer gets with Commvault
          format: int32
          minimum: 0
      required:
        - cloudProvider
        - numberOfVirtualMachines
        - totalVirtualMachineSize
        - totalRecoveryPoints
        - totalInstantRestoreSnapshot
        - dailyRateOfChange
        - replicatedSnapsPercentage
    TCOCostParameters:
      title: TCOCostParameters
      x-stoplight:
        id: nb1d7fvir5l8p
      type: object
      properties:
        primarySnapshotStorageCost:
          type: integer
          format: int64
          minimum: 0
        secondarySnapshotStorageCost:
          type: integer
          format: int64
          minimum: 0
        asrTotalVMEnvironment:
          type: integer
          format: int64
          minimum: 0
        primaryCloudStorageUsedCost:
          type: integer
          format: int64
          minimum: 0
        secondaryCloudStorageUsedCost:
          type: integer
          format: int64
          minimum: 0
        protectionCost:
          type: integer
          format: int64
          minimum: 0
        primaryInfraCost:
          type: integer
          format: int64
          minimum: 0
        secondaryInfraCost:
          type: integer
          format: int64
          minimum: 0
        dataTranmissionCost:
          type: integer
          format: int64
          minimum: 0
    TCOCalculateResponse:
      title: TCOCalculateResponse
      x-stoplight:
        id: bobq1018b3ijz
      type: object
      properties:
        commvault:
          $ref: '#/components/schemas/TCOCostParameters'
        native:
          $ref: '#/components/schemas/TCOCostParameters'
    ValidateVMRestoreReq:
      title: ValidateVMRestoreReq
      type: object
      description: VM restore validate request body
      properties:
        fromTime:
          type: string
          description: 'Restore window UTC from time. Valid Formats: yyyy-MM-ddTHH:mm:ss or yyyy-MM-ddTHH:mm:sszzz or yyyy-MM-dd'
          example: '2024-04-10T14:00:00'
        toTime:
          type: string
          description: 'Restore window UTC to time. Valid Formats: yyyy-MM-ddTHH:mm:ss or yyyy-MM-ddTHH:mm:sszzz or yyyy-MM-dd'
          example: '2024-04-11T14:00:00'
        backupSource:
          type: integer
          description: 'Backup source information from where you want to restore. 0 (Automatic), 1 (Snap Copy), 2 (Primary), 3 to N (Aux Copy)'
          format: int32
          example: 2
          default: 0
        accessNode:
          $ref: '#/components/schemas/IdName'
        accessNodeGroup:
          $ref: '#/components/schemas/IdName'
        notifyOnJobCompletion:
          type: boolean
          default: false
          description: Enable email notificaiton for job status. Defaults to false
    VMLabList:
      title: VMLabList
      type: object
      description: List of virtual labs
      properties:
        labs:
          type: array
          items:
            $ref: '#/components/schemas/VMLabSummary'
    VMLabSummary:
      title: VMLabSummary
      type: object
      description: Summary of virtual labs
      properties:
        name:
          type: string
          description: Name of virtual lab
        id:
          type: integer
          format: int32
          description: lab id
        state:
          $ref: '#/components/schemas/VMState'
        vmCount:
          type: integer
          format: int32
          description: Number of virtual machines present in virtual lab
        target:
          $ref: '#/components/schemas/IdName'
        expirationTime:
          type: integer
          format: int32
          description: Expiration time of virtual lab
    VMList:
      title: VMList
      type: object
      description: List of virtual machines
      properties:
        virtualMachines:
          type: array
          items:
            $ref: '#/components/schemas/VMSummary'
    VMSummary:
      title: VMSummary
      type: object
      description: Summary of the VMs listed in virtual lab
      properties:
        name:
          type: string
          description: Name of virtual machine
        state:
          $ref: '#/components/schemas/VMState'
        ipAddress:
          type: string
          description: IP address of virtual machine
        operatingSystem:
          type: string
          description: Operating system of virtual machine
        creator:
          type: string
          description: Creator of virtual machine
        expirationTime:
          type: integer
          format: int32
          description: Expiration time of virtual machine
        vmGUID:
          type: string
          description: GUID of virtual machine
        lab:
          $ref: '#/components/schemas/IdName'
    VMState:
      title: VMState
      type: string
      description: State of VirtualMachine
      enum:
        - STOPPED = 0
        - RUNNING = 1
        - SUSPENDED = 2
        - UNKNOWN = 3
        - ARCHIVED = 4
        - EXPIRED = 5
        - UNAVAILABLE = 6
        - CREATING = 101
        - CLONING = 102
        - CREATING_SNAPSHOT = 103
        - REVERTING_SNAPSHOT = 104
        - DELETING_SNAPSHOT = 105
        - STARTING = 106
        - STOPPING = 107
        - SUSPENDING = 108
        - RESTARTING = 109
        - DELETING = 110
        - RECOVERING = 111
        - RETRIEVING = 112
    VMDetails:
      title: VMDetails
      type: object
      properties:
        name:
          type: string
          description: Name of virtual machine
        state:
          $ref: '#/components/schemas/VMState'
        ipAddress:
          type: string
          description: IP address of virtual machine
        operatingSystem:
          type: string
          description: Operating system of virtual machine
        vendor:
          $ref: '#/components/schemas/VSVendor'
        expirationTime:
          type: integer
          format: int32
          description: Expiration time of virtual machine
        creator:
          type: string
          description: Creator of virtual machine
        description:
          type: string
          description: Description of virtual machine
        owners:
          type: array
          description: List of owners for virtual machine
          items:
            type: string
        numberOfCPUs:
          type: integer
          format: int32
          description: Number of CPUs in virtual machine
        memory:
          type: integer
          format: int64
          description: Memory size of virtual machine
        numberOfNICs:
          type: integer
          format: int32
          description: Number of network interface cards
        networks:
          type: array
          description: List of networks associated with virtual machine
          items:
            type: string
        disks:
          type: array
          description: List of the disks associated with virtual machine
          items:
            $ref: '#/components/schemas/VMDisk'
        isSnapshotSupported:
          type: boolean
          description: Whether the live mount is enabled or disabled
        lab:
          $ref: '#/components/schemas/IdName'
        vmGUID:
          type: string
          description: GUID of virtual machine
    VMDisk:
      title: VirtualMachineDisk
      type: object
      properties:
        label:
          type: string
          description: Label of disk
        diskSize:
          type: integer
          format: int64
          description: Size of disk associated with virtual machine
        isSystemDisk:
          type: boolean
          description: Whether the disk is system disk or not
    VMActionReq:
      title: VMActionReq
      type: object
      description: VMOperation request body
      properties:
        operation:
          $ref: '#/components/schemas/VMOperationEnum'
        virtualMachines:
          type: array
          items:
            $ref: '#/components/schemas/VMOperationObject'
    VMOperationObject:
      title: VMOperationObject
      type: object
      properties:
        GUID:
          description: GUID of virtual machine
          type: string
        owners:
          description: list of owners for the virtual machine
          type: array
          items:
            type: string
        creator:
          description: creator of virtual machine
          type: string
        snapOption:
          type: array
          items:
            $ref: '#/components/schemas/SnapshotOption'
    VMOperationEnum:
      title: VMOperationEnum
      type: string
      enum:
        - CREATE = 0
        - RESTART = 1
        - SHUTDOWN = 2
        - SNAPSHOT = 3
        - RESTORE_SNAP = 4
        - DELETE = 5
        - CLONE = 6
        - PAUSE = 7
        - POWERON = 10
        - EDIT = 11
        - VIEW_SNAPSHOTS = 12
        - DELETE_SNAP_VM = 15
        - RENEW_VM = 17
        - REFRESH_VM = 20
        - EDIT_OWNERS = 21
        - POWER_OFF = 29
        - EDIT_CREATOR = 30
        - REFRESH = 31
        - LIST_OWNERS = 32
        - CREATE_LAB = 34
    MultiCommCell:
      title: MultiCommCell
      type: object
      properties:
        id:
          type: integer
          format: int32
          x-terraform-set-key: true
        name:
          type: string
        aliasName:
          type: string
        GUID:
          type: string
    MultiCommCellInfoResp:
      type: object
      properties:
        commcells:
          type: array
          items:
            $ref: '#/components/schemas/MultiCommCell'
          nullable: true
    TaskListRequest:
      title: TaskListRequest
      type: object
      description: Request body for fetching schedules or policies
      properties:
        filter:
          $ref: '#/components/schemas/TaskFilter'
        entity:
          $ref: '#/components/schemas/TaskEntity'
    TaskFilter:
      type: object
      properties:
        schedules:
          type: boolean
          description: Set this to true for only schedules
        policy:
          type: boolean
          description: Set this to true for all schedule policies
        operationTypes:
          type: array
          description: List of operation filters
          items:
            type: string
            default: NONE
            enum:
              - NONE
              - BACKUP
              - RESTORE
              - DRBACKUP
              - AUX_COPY
              - REPORT
              - DATA_AGING
              - DOWNLOAD_UPDATES
              - INSTALL_UPDATES
              - SNAP_TO_TAPE
    TaskEntity:
      type: object
      description: select one of below option for filtering
      properties:
        subclientId:
          type: integer
          format: int32
          minimum: 0
          default: 0
        storagePolicyId:
          type: integer
          format: int32
          default: 0
          minimum: 0
        copyId:
          type: integer
          format: int32
          default: 0
          minimum: 0
        clientId:
          type: integer
          format: int32
          default: 0
          minimum: 0
        clientGroupId:
          type: integer
          format: int32
          default: 0
          minimum: 0
        applicationId:
          type: integer
          format: int32
          default: 0
          minimum: 0
        libraryId:
          type: integer
          format: int32
          default: 0
        backupsetId:
          type: integer
          format: int32
          default: 0
        instanceId:
          type: integer
          format: int32
          default: 0
        workflowId:
          type: integer
          format: int32
          default: 0
        trackingPolicyId:
          type: integer
          format: int32
          default: 0
    TaskListResponse:
      type: object
      description: List of schedules
      properties:
        taskDetail:
          type: array
          items:
            $ref: '#/components/schemas/TaskDetail'
    TaskDetail:
      type: object
      description: Details of a task
      properties:
        associations:
          type: array
          items:
            $ref: '#/components/schemas/TaskEntity'
        task:
          $ref: '#/components/schemas/TaskObject'
        subTasks:
          type: array
          items:
            $ref: '#/components/schemas/SubTaskDetail'
    TaskObject:
      type: object
      properties:
        taskType:
          type: integer
          format: int32
        policyType:
          type: integer
          format: int32
        taskName:
          type: string
        taskId:
          type: integer
          format: int32
    SubTaskDetail:
      type: object
      properties:
        subTask:
          $ref: '#/components/schemas/subTaskObject'
        taskOptions:
          $ref: '#/components/schemas/TaskOptions'
    subTaskObject:
      type: object
      properties:
        subTaskName:
          type: string
        subTaskType:
          type: integer
          format: int32
        operationType:
          type: integer
          format: int32
        options:
          $ref: '#/components/schemas/TaskOptions'
    TaskOptions:
      type: object
      properties:
        backupOpts:
          $ref: '#/components/schemas/BackupOptions'
    BackupOptions:
      type: object
      properties:
        backupLevel:
          type: integer
          format: int32
    SnapshotOption:
      title: SnapshotOption
      type: object
      properties:
        name:
          type: string
          description: Name of snapshot
        desc:
          type: string
          description: Description of snapshot
        id:
          type: string
          description: ID of snapshot
    VMSnapshotResp:
      title: VMSnapshotResp
      type: object
      properties:
        snapshots:
          type: array
          description: list of snapshots
          items:
            $ref: '#/components/schemas/VMSnapshot'
    VMSnapshot:
      title: VMSnapshot
      type: object
      properties:
        name:
          type: string
          description: name of snapshot
        desc:
          type: string
          description: snapshot description
        id:
          type: string
          description: snapshot ID
        creationTime:
          type: integer
          description: creation time of snapshot
          format: int32
        parentId:
          type: string
          description: parent ID of snapshot
    PSAType:
      title: PSAType
      type: string
      enum:
        - CONNECTWISE
        - AUTOTASK
    PSAReq:
      title: PSAReq
      type: object
      description: Request body for creating or updating PSA Entity
      properties:
        type:
          $ref: '#/components/schemas/PSAType'
        url:
          type: string
          description: PSA url
        companyName:
          type: string
          description: PSA company Name
        credential:
          $ref: '#/components/schemas/IdName'
      required:
        - type
        - url
        - companyName
        - credential
    AlertTypeOptions:
      title: AlertTypeOptions
      type: object
      description: Request body for enabling ticketing for given alert type options
      properties:
        alertTypeId:
          type: integer
          format: int64
          description: Alert type Id
        alertTypeName:
          type: string
          description: Alert type Name
        alertCriteriaId:
          type: integer
          format: int64
          description: Alert criteria Id
        alertCriteriaName:
          type: string
          description: Alert criteria Name
    PSATicketingReq:
      title: PSATicketingReq
      type: object
      description: Request body for enabling ticketing for given alert type options
      properties:
        type:
          $ref: '#/components/schemas/PSAType'
        enable:
          type: boolean
          description: Ticketing status for current PSA
        alerttypeOptions:
          type: array
          description: alert type list
          items:
            $ref: '#/components/schemas/AlertTypeOptions'
      required:
        - type
        - enable
    PSADetails:
      title: PSADetails
      type: object
      description: PSA Entity for Get Requests
      properties:
        type:
          $ref: '#/components/schemas/PSAType'
        url:
          type: string
          description: PSA url
        companyName:
          type: string
          description: PSA company Name
        credential:
          $ref: '#/components/schemas/IdName'
    PSACompanyStatusEnum:
      title: PSACompanyStatusEnum
      type: string
      enum:
        - IMPORTING
        - IMPORTED
        - DISCOVERED
        - FAILED
    PSADiscoverStatus:
      title: PSADiscoverStatus
      type: object
      properties:
        status:
          $ref: '#/components/schemas/PSACompanyStatusEnum'
        reason:
          type: string
          description: Reason for failure
          nullable: true

    PSADiscoveredCompany:
      title: DiscoveredCompanies
      type: object
      description: Discovered Company for the PSA
      properties:
        externalCompanyName:
          type: string
          description: PSA Company Name
        externalCompanyId:
          type: string
          description: PSA Company Id
        internalCompanyName:
          type: string
          description: Commvault Company Name
        internalCompanyId:
          type: string
          description: Commvault Company Id
        statusInfo:
          $ref: '#/components/schemas/PSADiscoverStatus'
        commcell:
          $ref: '#/components/schemas/IdName'

    PSAImportCompany:
      title: ImportCompany
      type: object
      description: Company to Import from the PSA
      properties:
        externalCompanyName:
          type: string
          description: PSA Company Name
        externalCompanyId:
          type: string
          description: PSA Company Id
      required:
        - externalCompanyName
        - externalCompanyId

    PSADiscoverCompanyReq:
      title: PSADiscoverCompany
      type: object
      description: DiscoverCompanies for the PSA
      properties:
        type:
          $ref: '#/components/schemas/PSAType'
      required:
        - type

    PSADiscoveredCompanies:
      title: PSADiscoveredCompanies
      type: object
      description: Discovered Companies for the PSA
      properties:
        type:
          $ref: '#/components/schemas/PSAType'
        companies:
          type: array
          description: company list
          items:
            $ref: '#/components/schemas/PSADiscoveredCompany'

    PSAImportCompaniesReq:
      title: PSAImportCompanies
      type: object
      description: Discovered Companies for the PSA
      properties:
        type:
          $ref: '#/components/schemas/PSAType'
        companies:
          type: array
          description: company list
          items:
            $ref: '#/components/schemas/PSAImportCompany'
      required:
        - companies


    ChangeCommServHostNameReq:
      title: ChangeCommServHostNameReq
      type: object
      properties:
        hostName:
          type: string
          description: New hostname for CommServ
    GetServerDomainResp:
      title: GetServerDomainResp
      type: object
      description: List of servers and respective domains
      properties:
        servers:
          type: array
          description: List of servers and respective domains
          items:
            $ref: '#/components/schemas/ServerDomainDetails'
    ServerDomainDetails:
      title: ServerDomainDetails
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: Id of the server
        name:
          type: string
          description: Name of the server
        domain:
          type: string
          description: Domain of the server
    ChangeServerDomainReq:
      title: ChangeServerDomainReq
      type: object
      properties:
        oldDomainName:
          type: string
          description: Current domain name of the servers that needs to be changed
        newDomainName:
          type: string
          description: New domain name for the servers
        servers:
          type: array
          description: List of servers that need domain name change
          items:
            $ref: '#/components/schemas/IdName'
        forceUpdateDatabase:
          type: boolean
          description: Update database even if servers are unreachable
  securitySchemes:
    token:
      type: apiKey
      name: Authtoken
      in: header
    bearerToken:
      type: http
      scheme: bearer
security:
  - token: []
  - bearerToken: []